{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","persistDerivation","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","persistAncestorDerivation","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","fieldIndex","findIndex","fieldinst","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","_slicedToArray","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","NORMAL","INVERSE","ALL","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","rowDiffset","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareJoinData","resp","_value__WEBPACK_IMPORTED_MODULE_2__","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","operation","_model$_derivation","criteriaFn","_constants__WEBPACK_IMPORTED_MODULE_4__","_derivation","_toConsumableArray","op","meta","criteria","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectHelper","selectFn","newRowDiffSet","lastInsertedValue","li","selectorHelperFn","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","checker","cloneWithAllFields","clonedDm","filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","fieldsSpace","values","v","some","every","propField","valueOf","cloneWithSelect","selectConfig","cloneConfig","cloned","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","sanitizeSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","_","fieldInSchema","getDerivationArguments","derivation","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","_selectionModel","_rejectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","_applyExistingOperati","_applyExistingOperati2","getRootGroupByModel","find","getRootDataModel","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","len","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","start","end","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_constants__WEBPACK_IMPORTED_MODULE_1__","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","_enums__WEBPACK_IMPORTED_MODULE_2__","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","defaultReducerName","getFieldArr","dimensions","getReducerObj","measures","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","reducerFn","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","defConfig","oDm","fieldConfig","normalizedProjField","from","trim","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","obj","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","set","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","default","makeEntry","sCon","_set","keys","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","slice","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","webpackPolyfill","deprecate","paths","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","shift","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","test","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","valueof","i0","value0","each","remove","clear","entries","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","objects","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","nearestSortingDetails","nearestSortDerivation","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","coord","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","AngleAxis","angle_axis_classCallCheck","_angleFn","_angleValues","customDomain","angleData","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","toCartesianCoordinates","rangePlot","_point$update","axisArr","listener_map_slicedToArray","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","transformedDataArr","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","prevData","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCell","geomCellAxes","projections","rowFields","columnFields","xAxes","yAxes","lock","unlock","units","1","getGroupByData","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","getDataDomain","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","colIndex","listenerInf","hasPlotSpan","_ref5","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","_layerDeps","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","stateStore","calculateDomainListener","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","newContext","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","facetField","geomCellKey","getCellKey","columnId","updateCells","facetKey","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","rawFormat","transposedColKeys","sortDmTemporalFields","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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SqX,kBAZK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI2hD,gCCASqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,gBAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,gBAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,cAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,gBAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCESqX,gBAVK,IAAItzD,MAAM,GAAGjE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI2hD,gCCR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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    persistAncestorDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n        persistAncestorDerivation(this, newDataModel);\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivation(sortedDm, DM_DERIVATIVES.SORT, config, sortingDetails);\n        persistAncestorDerivation(this, sortedDm);\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivation, persistAncestorDerivation } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        persistDerivation(currentDM, DM_DERIVATIVES.COMPOSE, null, derivations);\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistAncestorDerivation(dm, currentDM);\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n\n        newData.forEach((...params) => {\n            const key = this.idGetter ? this._idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n\n            stateProps[prop] = conf.value;\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const preset = propInfo[1].preset;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES } from 'muze-utils';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n\n            tickFormat\n        } = this.config();\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n\n        const smartTicks = newTickValues.map((val) => {\n            const text = tickFormat(val);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n\n        const { width, height } = this.smartTicks()[0];\n\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, key, context) => {\n    let resolvedVal;\n    if (propVal instanceof Function) {\n        resolvedVal = propVal(defaultVal, context);\n    } else if (propVal instanceof Array) {\n        resolvedVal = propVal;\n    } else {\n        resolvedVal = defaultVal;\n    }\n    return resolvedVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            const angleData = this._angleFn(this._domain);\n            angleData.forEach((v) => {\n                v.startAngle -= Math.PI / 2;\n                v.endAngle -= Math.PI / 2;\n            });\n            this._angleValues = angleData.reduce((values, d) => {\n                const key = d.data;\n                !values[key] && (values[key] = []);\n                values[key].push(d);\n                return values;\n            }, {});\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                const angleData = this._angleFn(domain);\n                angleData.forEach((v) => {\n                    v.startAngle -= Math.PI / 2;\n                    v.endAngle -= Math.PI / 2;\n                });\n                this._angleValues = angleData.reduce((values, d) => {\n                    values[d.data] = d;\n                    return values;\n                }, {});\n            }\n\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        const update = point.update = {\n            x: radius * Math.cos(angle) + xOffset,\n            y: radius * Math.sin(angle) + yOffset\n        };\n        if (rangePlot) {\n            update.x0 = radius * Math.cos(angle) + xOffset;\n            update.y0 = radius * Math.sin(angle) + yOffset;\n            update.x = radius0 * Math.cos(angle0) + xOffset;\n            update.y = radius0 * Math.sin(angle0) + yOffset;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform,\n    domainCalculator\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data.rowId) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.rowId) !== -1);\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        this._prevPieData = {};\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        const points = [];\n        const angleV = {};\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const uid = d.rowId;\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    radius: radiusAxis.getOuterRadius(d.radius),\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color: colorAxis.getColor(d.color),\n                    angle0: startAngle,\n                    angle: endAngle,\n                    startAngle,\n                    endAngle,\n                    startAngle0: startAngle,\n                    endAngle0: endAngle\n                },\n                data: d\n            }, i, data, this);\n            const color = resolvedEncodings.color;\n            points.push({\n                source: d.source,\n                index: i,\n                angle0: resolvedEncodings.angle0,\n                angle: resolvedEncodings.angle,\n                radius0: resolvedEncodings.radius0,\n                radius: resolvedEncodings.radius,\n                color,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                rowId: uid,\n                _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                    getPreviousPoint(pieIndex, i, this)\n            });\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.angle0 + Math.PI / 2)\n                .endAngle(d => d.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.radius)\n                .innerRadius(d => d.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                            .style('fill', d => d.color)\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, this._points, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            angle0: prevArc.angle,\n            angle: nextArc.angle0\n        };\n    } else if (!nextArc) {\n        return {\n            angle0: (endAngle - 90) * Math.PI * 2 / 360,\n            angle: (endAngle - 90) * Math.PI * 2 / 360\n        };\n    }\n    return {\n        angle0: (startAngle - 90) * Math.PI * 2 / 360,\n        angle: (startAngle - 90) * Math.PI * 2 / 360\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius: datum.outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', 'middle');\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const encoding = layerInst.config().encoding;\n        const axes = layerInst.axes();\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: 0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        const encoding = layerInst.config().encoding;\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: 0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        if (!isNaN(update.x) && !isNaN(update.y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y,\n                    width: resolvedEncodings.width,\n                    height: resolvedEncodings.height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    nearestSortingDetails\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context, geomCell, facetFields) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const sortingDetails = nearestSortingDetails(context.getGroupByData());\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[!axisType ? 'x' : 'y'];\n                        const typeOfField = field.subtype();\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND && !sortingDetails) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    domains[axisType][key].sort();\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        return sanitizedConfig;\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context, geomCell, facetFields) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const layers = context.resolver.matrixLayers();\n        const resolverAxes = context.resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        geomCell.axes({\n            radius: axesObj.radius,\n            angle: axesObj.angle,\n            angle0: axesObj.angle0,\n            color: geomCellAxes.color,\n            shape: geomCellAxes.shape,\n            size: geomCellAxes.size\n        });\n        [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n            const axesArr = resolverAxes[enc];\n            if (!axesArr[rowIndex]) {\n                axesArr[rowIndex] = [];\n            }\n            axesArr[rowIndex][columnIndex] = axesObj[enc];\n            const axisConfig = getObjProp(context.config.axes, enc) || {};\n\n            axesObj[enc].forEach((axis, i) => {\n                let userConfig = axisConfig;\n                if (axisConfig instanceof Function) {\n                    userConfig = axisConfig(rowIndex, columnIndex, {\n                        axisFields: [fieldInf[enc][i]],\n                        facetFields\n                    });\n                }\n                axis.config(userConfig);\n            });\n        });\n        geomCell.fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n                    });\n                });\n            });\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding;\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, nearestSortingDetails } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE,\n    CATEGORICAL\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        for (let i = 0, len = layers.length; i < len; i++) {\n            encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n        }\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facet\n * @param {Array} keys Array of the facet field values\n */\nexport const sortFacetFields = (facet, keys) => {\n    const subtype = facet.subtype();\n    const sortingDetails = nearestSortingDetails(facet.data());\n\n    if (subtype === CATEGORICAL && !sortingDetails) {\n        keys.sort();\n    }\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    let unionedDomain = domain1;\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        unionedDomain = domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    } else {\n        unionedDomain = unionDomain([domain, domain1], fieldType);\n    }\n    return unionedDomain;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const name = definition.name;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain.${this.metaInf().namespace}`);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues.sort()\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    keys.forEach((rKeys) => {\n        rKeys.forEach((key, idx) => {\n            rKeys[idx] = formatterList[idx](key);\n        });\n    });\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(rowFacets[0], firstLevelRowKeys);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(colFacets[0], firstLevelColumnKeys);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, context, geomCell, facetFields);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    (label) => {\n        const textCell = new cells.TextCell({}, { labelManager });\n        textCell.source(label);\n        return textCell;\n    }, headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`);\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n                                    ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(config.coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {},\n                angle: {},\n                angle0: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            // selectElement(this).style('height', `${height + borderWidth}px`);\n            // if (span > 1) {\n            // selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n            placeholder.setAvailableSpace(width, height * span);\n            // }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}