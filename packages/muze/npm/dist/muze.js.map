{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-mixin.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-mixin.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text-mixin.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/helper.js","webpack://muze/./packages/visual-layer/src/layers/point/point-mixin.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-mixin.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick-mixin.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/visual-layer/src/index.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/muze-firebolt/src/registry.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/enums/defaults.js","webpack://muze/./packages/visual-group/src/encoder/props.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","JSON","parse","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","type","getDimension","dimensionFields","_cachedDimension","Value","rawValue","_classCallCheck","formattedValue","getNumberFormattedVal","defineProperties","_value","configurable","writable","_formattedValue","_internalValue","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","start","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","formattedData","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","applyStandardSort","sortingDetails","fieldName","sortMeta","fieldInSchema","sortingFn","slice","f","Q","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","u","iterator","done","nMap","dataBuilder","colIdentifier","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortData","dataObj","filter","sDetial","groupSortingIdx","findIndex","standardSortingDetails","groupSortingDetails","detail","sortedGroupMap","row","nextMap","pop","tmpData","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","ReducerStore","TypeError","defReducer","entries","_this","be","reducer","_this2","__unregister","Function","reducerStore","naturalJoinFilter","commonSchemaArr","retainTuple","internalValue","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","description","displayName","Te","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","dataFormat","_this3","isInvalid","parsedDatum","getInvalidType","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Je","CategoricalParser","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","nt","DSVArr","schemaFields","unitSchema","firstRowHeader","columns","columnMajor","headerMap","h","schemaField","headIndex","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","stringify","inferColumns","rows","columnSet","column","width","pt","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","N","I","eof","eol","j","preformatBody","formatValue","formatRow","formatDate","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","test","convert","concat","formatBody","formatRows","csv","dsv","tsv","DSVStr","Auto","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","schemaFieldsName","converters","prepareSelectionData","rawData","resp","_iteratorNormalCompletion","wt","persistDerivations","sourceDm","model","operation","persistCurrentDerivation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","persistAncestorDerivation","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","selectHelper","clonedDm","selectFn","cachedStore","cloneProvider","getPartialFieldspace","formattedFieldsData","rawFieldsData","getKey","fn","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","cloneWithAllFields","clone","partialFieldspace","__calculateFieldspace","calculateFieldsConfig","modelFieldsConfig","getFieldsConfig","keyFn","dataModel","propModel","getData","fieldsConfig","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","present","every","select","saveChild","some","addDiffsetToClonedDm","selectConfig","cloneWithProject","projField","allFields","cloned","projectionSet","actualProjField","sanitizeUnitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","updateData","relation","defaultConfig","converterFn","converter","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","valueObjects","_cachedValueObjects","_","_dataFormat","applyExistingOperationOnModel","selectionModel","getDerivations","derivation","_selectionModel","params","groupByString","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","values","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref5","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","getNormalizedProFields","fieldConfig","normalizedProjField","constructor","search","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","en","_fieldspace","updateFields","fieldStoreName","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","cloneConfig","extraCloneDm","setOfRowDiffsets","setParent","_fieldConfig","fieldObj","def","removeChild","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","ids","nn","fill","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","Ee","reducerObj","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","cachedValueObjects","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","addField","addToNameSpace","isMutableAction","payload","getRootDataModel","getRootGroupByModel","find","addToPropNamespace","sourceNamespace","propagateImmutableActions","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","rowSplitDiffsetIterator","splitRowDiffset","dimensionMap","dimensionSet","clonedDMs","uniqueFields","commonFields","normalizedProjFieldSets","fieldSet","splitWithProject","projFieldSet","projFields","first","last","count","sd","std","Operators","compose","operations","currentDM","firstChild","derivations","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","version","Stats","enums","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cos","sin","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","POLAR","CARTESIAN","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","_toConsumableArray","objects","dataSelect","idFn","STRING","FUNCTION","HTMLElement","common_utils_typeof","checkExistence","nonExistentKeys","sanitizeIP","typeObj","htmlElem","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getExtremePoint","points","compareValue","minOrMax","extremePoint","minOrMaxVal","getMinPoint","getMaxPoint","getNearestValue","filterData","getWindow","cancelAnimFrame","cancelAnimationFrame","capitalizeFirst","txt","getMinDiff","uniqueVals","getQualifiedClassName","cls","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","_len","_key","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","getArraySum","total","isEqual","oldVal","newVal","arraysEqual","is","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","registerImmediateListener","_ref3","isHTMLElem","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","mergedSelection","exitSelection","getObjects","inst","interpolateArray","fitCount","linearInterpolate","atPoint","springFactor","tmp","angleToRadian","angle","replaceCSSPrefix","numberInterpolator","interpolateNumber","colorInterpolator","interpolateRgb","hslInterpolator","interpolateHslLong","transformColors","piecewiseInterpolator","hue2rgb","hslToRgb","rgbToHsv","hsvToRgb","hexToHsv","detectColor","col","assembleModelFromIdentifiers","fieldMap","_loop2","temp","cIdx","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","registerListeners","listenerMap","_len2","_key2","propListenerMap","namespace","mapObj","propType","listenerFn","listener","isValidValue","escapeHTML","htmlEscapes","&","<",">","\"","'","/","transposeArray","extendsClass","extendsFrom","found","concatModels","dataObj1","dataObj2","data1","data2","schema1","schema2","tuples1","tuples2","commonTuples","_loop3","row1","row2","dim1Values","dim2Values","dm1Key","dm2Key","commonSchema","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","temporalFields","filteredFields","_ref6","lookupWhat","lookupDetails","resolvable","lookupTarget","depArr","deps","nextAnimFrame","getValueParser","retrieveNearestGroupByReducers","_len3","measureFieldNames","_key3","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","nearestSortingDetails","nearestSortDerivation","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","sortCategoricalField","sortOrderType","_accessors","fn1","fn2","partition","mix","superclass","with","_with","_len4","mixins","_key4","mixin","componentRegistry","comps","reg","regObj","register","customKey","formalName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","appendElement","element1","element2","setElementAttrs","attrs","setAttrs","addClass","removeClass","setStyles","styles","createElements","clipElement","measurement","clipPathElement","getMousePos","boundingClientRect","getClientPoint","pos","clientPoint","tag","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","setContexts","contexts","propObj","contextMap","_didIteratorError","_iteratorError","_step","_iterator","depProps","err","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","_len5","_key5","_ref$takesMultiplePar","takesMultipleParams","prevVal","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","CLASSPREFIX","STACK","GROUP","IDENTITY","ANGLE","RADIUS","SIZE","COLOR","SHAPE","TEXT","OUTER_RADIUS_VALUE","TEXT_ANCHOR_MIDDLE","ENCODING","X0","Y0","RADIUS0","ANGLE0","ASCENDING","AGG_FN_SUM","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","SimpleLayer","DATA","CONFIG","MEASUREMENT","DOMAIN","MOUNT","props_defineProperty","_props","axes","metaInf","valueParser","coord","PROPS","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","defClassName","axisNamePadding","classPrefix","fixedBaseline","labels","rotation","smartTicks","orientation","numberOfTicks","show","showAxisName","showInnerTicks","showOuterTicks","xOffset","yOffset","changeTickOrientation","selectContainer","axisInstance","_smartTicks","renderConfig","labelManager","isSmartTicks","tickText","registerAnimationDoneHook","rotateAxis","instance","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","_config","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_mount","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","InterpolatorCls","_interpolator","getScaleValue","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","_getPrototypeOf2","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","rangeStops","newStopsLength","newRange","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","strategies","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","strategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","WIDTH","HEIGHT","MIN_UNIT_WIDTH","MIN_UNIT_HEIGHT","DIMENSIONS","MEASURES","PIVOT","FORMAT","HAS_DATA_UPDATED","ROWS","COLUMNS","COL","ROW","COLUMN","DETAIL","LAYERS","TRANSFORM","RETINAL","CELL","X_AXES","Y_AXES","ENTRY_CELLS","INITIALIZED","EXIT_CELLS","AXIS","UNIT","UPDATED","BEFORE_UPDATE","VALUE_MATRIX","FACET_HEADERS","ARC","BAR","LINE","POINT","PRIMARY","SECONDARY","BOTH","INTERACTION","GRID_LINES","GRID_BANDS","HEADER","FACET","DESCENDING","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","transformColor","colorAxis","styleType","intensity","stateColor","originalColor","colorInfo","applyInteractionStyle","selectionSet","interactionStyles","elements","getPlotElementsFromSet","interactionType","_d$meta","colorTransform","helpers_slicedToArray","retrieveEncodingInf","encoding","encodingNames","encodingInf","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","transformData","transformType","encodingFieldInf","xField","yField","xFieldType","yFieldType","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","transformedData","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getNormalizedData","transformedDataArr","encodingFieldsInf","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","animateGroup","groupTransition","groupAnimateStyle","effect","positionPoints","positioner","encodingTransform","getGroupSpan","getUnitWidth","getPlotMeasurement","dimensionalValues","fieldInfo","bandScale","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","timeDiffs","innerPadding","isAxisBandScale","axisPadding","groupPadding","renderLayer","render","throwback","parentNamespace","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransform","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","getMarkId","resolveEncodingValues","transformedValues","getColorMetaInf","colorInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","prevData","dataDidSet","layerNs","groupNs","BaseLayerMixin","_superclass","_class","base_mixin_classCallCheck","base_mixin_possibleConstructorReturn","base_mixin_getPrototypeOf","base_mixin_assertThisInitialized","getterSetters","alias","_points","_cachedData","_measurement","_graphicElems","base_mixin_inherits","base_mixin_createClass","_store","_this$metaInf2","_alias","enableCaching","_cacheEnabled","clearCaching","getTransformedData","calculateDomainFromData","isEmpty","getDataDomain","encodingType","_this$metaInf3","getNearestPoint","interaction","resolveTransformType","_transformType","_this$metaInf4","unitDom","cachePoint","pointMap","_pointMap","getIdentifiersFromData","_this$encodingFieldsI","_map2","base_mixin_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","hasPlotSpan","getPlotSpan","getPlotPadding","getPointsFromIdentifiers","getAllAttrs","filteredPoints","base_mixin_toConsumableArray","sizeVal","getTransformedDataFromIdentifiers","measureIndex","_identifiers$getData","identifierData","identifierSchema","_normalizedData","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","animationDone","encodingValue","retrieveEncodingFields","_transformedData","calculateDomain","getState","getListeners","getRenderProps","_ref4","_context$metaInf","unitRowIndex","unitColIndex","base_mixin_defineProperty","getQualifiedStateProps","_construct","userConf","shouldDrawAnchors","BaseLayer","drawLine","layer","connectNullData","curveInterpolatorFn","linepath","highlight","fade","focus","nearestPointThreshold","strokeOpacity","LineLayerMixin","line_mixin_classCallCheck","line_mixin_possibleConstructorReturn","line_mixin_getPrototypeOf","line_mixin_inherits","line_mixin_createClass","getDrawFn","translatePoints","xAxis","yAxis","isXDim","isYDim","xPx","yPx","getColor","resolvedEncodings","stroke","seriesClassName","qualifiedClassName","containerSelection","colorField","colorFieldIndex","stroke-opacity","getPathStyle","colorValFn","colorVal","searchRadius","_point$data$data","layerId","line_mixin_get","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayerMixin","area_mixin_classCallCheck","area_mixin_possibleConstructorReturn","area_mixin_getPrototypeOf","area_mixin_inherits","area_mixin_createClass","area_mixin_get","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","AreaLayer","stroke-width","stroke-linejoin","shape","states","fadeout","selected","ArcLayerMixin","arc_mixin_classCallCheck","arc_mixin_possibleConstructorReturn","arc_mixin_getPrototypeOf","_prevPieData","arc_mixin_inherits","arc_mixin_createClass","getDataFromEvent","dataPoint","_this$axes","radiusAxis","pieIndex","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","_this$config","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","ArcLayer","LineLayer","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_mixin_slicedToArray","TextLayerMixin","text_mixin_classCallCheck","text_mixin_possibleConstructorReturn","text_mixin_getPrototypeOf","text_mixin_inherits","text_mixin_createClass","getPointTranslator","text-anchor","TextLayer","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","prepareDrawingInf","shapeAxis","sizeAxis","getShape","getSize","layerEncoding","helper_defineProperty","_config$offset","offsetX","offsetY","helper_slicedToArray","measure","PointLayerMixin","point_mixin_classCallCheck","point_mixin_possibleConstructorReturn","point_mixin_getPrototypeOf","point_mixin_inherits","point_mixin_createClass","maxSize","generateDataPoints","point_mixin_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","point_mixin_slicedToArray","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","point_mixin_get","PointLayer","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","endPos","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayerMixin","bar_mixin_classCallCheck","bar_mixin_possibleConstructorReturn","bar_mixin_getPrototypeOf","_plotPadding","_plotSpan","bar_mixin_inherits","bar_mixin_createClass","bar_mixin_get","getTranslatedPoints","normalizedDataArr","bar_mixin_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","BarLayer","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayerMixin","tick_mixin_classCallCheck","tick_mixin_possibleConstructorReturn","tick_mixin_getPrototypeOf","tick_mixin_inherits","tick_mixin_createClass","drawTicks","TickLayer","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","_layerRegistry","getSerializedConf","mark","layerDef","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","propValue","layer_factory_toConsumableArray","getLayerInstance","layerRegistry","instances","layerObj","layerConstructor","getLayerClass","composeLayers","layerDefs","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","layer_registry","layers","helpers","commonHelpers","pointLayerHelpers","layerMixins","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","transformDataModels","dataModels","transformVal","getLayerFromDef","existingLayer","rowIndex","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","sanitizeLayerDef","sanitizedDefs","sConf","attachDataToLayers","transformedDataModels","dataSource","attachAxisToLayers","layerAxisIndex","axesObj","axisInf","axisIndex","getLayerAxisIndex","_layer$config","specificField","encodingField","fieldInst","getMembers","unionDomainFromLayers","axisFields","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","getNearestDimensionalValue","entryVal","getLayersBy","searchBy","removeLayersBy","createSideEffectGroup","createRenderPromise","_renderedPromise","_renderedResolve","getRadiusRange","radiusAxes","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","getValuesMap","_model$getData","fieldIndices","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","entryRowIds","exitRowIds","rowIdsObj","AXES","LAYERDEFS","TRANSFORMEDDATA","DATADOMAIN","FIELDS","LAYERAXISINDEX","IDFIELD","GRID_LINE_PARENT_GROUP_CLASS","GRID_BAND_PARENT_GROUP_CLASS","GRID_PARENT_GROUP","TICK","GRID_BAND","GRID_LINE","CONSOLIDATED","FRAGMENTED","FACET_BY_FIELDS","RETINAL_FIELDS","PARENT_ALIAS","CACHED_DATA","STORE","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","muze_firebolt_src_helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","mergeSelectionSets","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","behaviour","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","getUids","propagationSource","applicableSelectionSets","unionSets","entryExitSet","existingModel","aggFns","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","stPos","startPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","tooltip","svgContainer","nearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","SurrogateSideEffect","interactive","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort2","selection_box_helper_slicedToArray","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","displayFormat","table","tbody","elemData","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","defConf","contentConfig","reorderContainers","contentConf","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getKeyValue","isSelected","removeKey","keyObj","valueObj","margin-left","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","dataLen","retField","retIndex","retinalFieldValue","measuresArr","icon","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","defFormatter","nf","getTabularData","allMeasures","strategies_construct","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","len2","_fieldInf$name","strategies_strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","totalHeight","totalWidth","tooltips","boundBox","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","bandClass","lineClass","plotWidth","crossline_toConsumableArray","startPx","endPx","parentGroup","fadeFn","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","resetData","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerCls","depLayerEncoding","defaultSizeValue","commonName","groupId","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","convertToObj","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","cachedData","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","jsonData","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","_cachedValuesMap","enabledFn","sourceBehaviours","createSelectionSet","action_behaviour_map_defineProperty","ACTIONS","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","_dimensionMeasureMap","src_props_defineProperty","_PROPS","trackerClassName","arcLayerClassName","sideEffectClassName","local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","createFireboltInstance","interactions","fireboltDeps","getFireboltCls","getActionBehaviourMap","getBehaviourEffectMap","_firebolt","createRootContainers","initSideEffects","_rootSvg","class","_sideEffectGroup","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","instanceValues","visual_unit_toConsumableArray","layerdeps","_this$_dependencies","parentModel","REACTIVE_PROPS","dimValue","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","localNs","dataDomain","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","initStore","group_utils_defineProperty","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","getAxisKey","getCellKey","columnId","extractUnitConfig","unitConfig","getHeaderText","rowLength","headerCreator","fieldHeaders","TextCell","findInGroup","variable","channel","group_utils_this","facetType","projType","getAxisType","retriveDomainFromData","mutateAxesFromMap","cacheMaps","xAxes","yAxes","xAxisSet","yAxisSet","axisId","getEncoder","encoder","CartesianEncoder","layerConf","hasPolarEncodings","PolarEncoder","getHeaderAxisFrom","userAxisFromConfig","axisFrom","headerFrom","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","facets","projections","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","getFieldsFromSuppliedLayers","suppliedLayerConfig","encodingArr","group_utils_typeof","extractFields","facetsAndProjections","layerFields","flattenArray","sortFacetFields","facetNames","sortInfo","sortConfig","facet","facetSortConfig","getSchemaDef","removeExitCells","exitCells","qualifiedStateProps","placeholder","globalConfig","VisualEncoder","visual_encoder_classCallCheck","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","scaleMaps","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","rIdx","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","columnIndex","matrix_model_objectSpread","getMatrixModel","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","rowFields","columnFields","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","sortedFields","layerConfigArr","getLayerConfig","retinalConfig","axesCreators","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","facetFields","geomCellKey","geomCell","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","counter","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","groupedModel","resolvedData","newFieldsConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","autoGroupBy","layerConfig","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","_mutateAxesFromMap","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","_map4","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","units","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","_placeholderInfo","maps","matrix_resolver_toConsumableArray","getProjectionFields","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","_this$dependencies","_this$getAllFields","retContext","getRetinalFieldsDomain","getRetinalAxes","retinalEncoder","setCommonDomain","retinalAxes","updateVisualUnit","placeholders","bottomLeft","bottomRight","_this$dependencies2","showHeaders","_this$registry$cells","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","updateModel","dataTypeScaleMap","getAdjustedDomain","y1ratio","y2ratio","allSameSign","generateAxisFromMap","axisKey","groupAxes","currentAxes","commonAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getDefaultMark","colFieldType","rowFieldType","createRetinalAxis","fieldProps","getIndex","arrIndex","getLayerConfFromFields","colFields","userLayerConfig","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","resolverAxes","axesArr","userConfig","geomCellAxes","1","unitsArr","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","adjustedDomain","typeOfAxis","alignZeroLine","currentFieldName","sortingOrder","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","encodingObj","layerArray","serializedLayers","colField","colFieldName","rowField","configs","rowFieldName","defConfigs","layerConfigs","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","pieAxes","varInstances","encType","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","visual_group_local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","createEncoderInstance","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setRetinalAxisDomain","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createMatrixResolver","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","_context$registry","comp","storeInst","listenerInf","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","canvasAlias","rawVal","check","src_firebolt_helper_toConsumableArray","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","local_options_slicedToArray","arg1","arg2","local_options_typeof","titleConfig","subtitle","subtitleConfig","sub","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","options_slicedToArray","_ref2$","_auxConfig$reset","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","LAYER_DEF","DETAIL_FIELDS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","interactionRegistry","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","_i","_headerValues","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","default_registry_defineProperty","_COMPONENTS","SUBREGISTRIES","utils","Smartlabel","globalCache","defaultRegistry","globalRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","Components","VisualLayer","unitHelpers","unitEnums","Encoders","encoderHelpers","groupUtils","groupEnums","SideEffects","standards","Behaviours","pkg","operators"],"mappings":"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AVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,gBAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,gBAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,cAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,gBAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCESwW,gBAVK,IAAInrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,gCCRK6W,aAAS,IAAIxrD,MAAM,GAAG4W,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAxX,IAAIu1C,+BAESwW,eAAKK,cCALL,gB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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr(arr, schema, options) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    let headers = schemaFields;\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        headers = arr.splice(0, 1)[0];\n    }\n    // create a map of the headers\n    const headerMap = headers.reduce((acc, h, i) => (\n        Object.assign(acc, { [h]: i })\n    ), {});\n\n    arr.forEach((fields) => {\n        const field = [];\n        schemaFields.forEach((schemaField) => {\n            const headIndex = headerMap[schemaField];\n            field.push(fields[headIndex]);\n        });\n        return push(...field);\n    });\n    return [schemaFields, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[unitSchema];\n        });\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    const rawFieldsData = fields.map(field => field.data());\n\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, formattedFieldsData, rawFieldsData, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].internalValue;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].internalValue >= domain[field][0] &&\n                        fields[field].internalValue <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, schema, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.SORT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\(([\\d.]+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position|null if sort order is invalid\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        if (!sortOrderMap[sortOrder]) return null;\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nconst partition = (array, filterFn) => array.reduce((acc, v, i) => {\n    const pass = filterFn(v, i, array);\n\n    pass ? acc[0].push(v) : acc[1].push(v);\n    return acc;\n}, [[], []]);\n\nconst mix = superclass => ({\n    with: (...mixins) => mixins.reduce((cls, mixin) => mixin(cls), superclass)\n});\n\nconst componentRegistry = (comps) => {\n    const reg = Object.assign({}, comps);\n    const regObj = {\n        register: (def, customKey) => {\n            const key = customKey || def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n\n    return regObj;\n};\n\nexport {\n    componentRegistry,\n    mix,\n    partition,\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp, toArray } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitization: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                const paramsLen = params.length;\n                if (paramsLen) {\n                    const { takesMultipleParams = false } = meta || {};\n                    // If parameters are passed then it's a setter\n                    let val = takesMultipleParams ? params : params[0];\n\n                    if (meta) {\n                        let values;\n                        const prevVal = context.get(nsProp, subNamespace);\n                        const { sanitization, typeCheck, typeExpected } = meta;\n                        if (typeof sanitization === 'function') {\n                            // Sanitize if required\n                            val = sanitization(val, prevVal, holder);\n                        }\n\n                        // Checking if a setter is valid\n                        if (typeof typeCheck === 'function') {\n                            const typeCheckResult = typeCheck(val);\n\n                            if (typeCheckResult) {\n                                values = val;\n                            }\n                        } else if (typeof typeCheck === 'string' && typeCheck === 'constructor') {\n                            if (val && val.constructor.name === typeExpected) {\n                                values = val;\n                            }\n                        } else {\n                            values = val;\n                        }\n\n                        const preset = meta.preset;\n                        const oldValues = toArray(context.get(nsProp, subNamespace));\n                        preset && preset(values, holder);\n                        if (takesMultipleParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values && context.commit(nsProp, values, subNamespace);\n                    } else {\n                        context.commit(nsProp, val, subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, Array.isArray(conf.value));\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect,\n    partition,\n    mix,\n    componentRegistry\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0',\n    COLOR: 'color',\n    SHAPE: 'shape',\n    SIZE: 'size',\n    TEXT: 'text'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    },\n    encodingTransform: {},\n    encodingFieldsInf: {},\n    dependencies: {},\n    dataProps: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv, defaultValue } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, defaultValue(Number(color[3]), 1)];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv, defaultValue } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = Math.min(defaultValue(color[3], 0), 1);\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = Math.min(a + transformationArr[3] || 0, 1);\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps,\n    defaultValue\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transformColor = (colorAxis, datum, styleType, intensity) => {\n    const meta = datum.meta;\n    const stateColor = defaultValue(meta.stateColor[styleType], meta.originalColor[styleType]);\n    const colorInfo = colorAxis.transformColor(stateColor, intensity);\n\n    meta.stateColor[styleType] = colorInfo.hsla;\n    return colorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transformColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transformColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor[styleType];\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a})`;\n            }));\n        });\n    });\n};\n\nexport const retrieveEncodingInf = (encoding, fieldsConfig, encodingNames) => {\n    const encodingInf = {};\n\n    encodingNames\n        .forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n    return encodingInf;\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nexport const dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (colorInf, colorAxis) => ({\n    originalColor: Object.keys(colorInf).reduce((acc, key) => {\n        if (colorInf[key]) {\n            acc[key] = colorAxis.getHslArray(colorInf[key]);\n        }\n        return acc;\n    }, {}),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [prevData, data]) => {\n            context.dataDidSet([prevData, data]);\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer,\n    encodingFieldInfRetriever\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\nimport { BASE_LAYER } from '../enums/constants';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\nexport const BaseLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a\n     * layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor () {\n        super();\n\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.axes({});\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(this.localOptions()).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: this.getRenderProps(),\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = this.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BASE_LAYER, this);\n\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    static getterSetters () {\n        return props;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among\n     * multiple layers of same type if one layer has to be referred, alias is used. If no alias is given then\n     * `formalName` is set as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the\n     *          data // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BASE_LAYER);\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers.\n     * Identifiers are a set of field names and their corresponding values in an array.\n     * It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids,\n     * it returns all the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    /**\n     * Called when the layer datamodel is set.\n     *\n     * @param {Array} arr Old and new datamodel instance.\n     * @param {DataModel} arr[0] Previous datamodel instance.\n     * @param {DataModel} arr[1] Current datamodel instance.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    dataDidSet ([, data]) {\n        const config = this.config();\n\n        if (data && config) {\n            if (this._cacheEnabled) {\n                this._cachedData.push(data);\n            } else {\n                this._cachedData = [data];\n            }\n            const encodingValue = config.encoding;\n            if (encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = this.retrieveEncodingFields(encodingValue, this.coord(), data);\n                this.encodingFieldsInf(encodingFieldsInf);\n                this.resolveTransformType();\n                this._transformedData = this.getTransformedData(data, config,\n                    this.transformType(), encodingFieldsInf);\n                this._normalizedData = this.getNormalizedData(this._transformedData, fieldsConfig);\n                if (config.calculateDomain !== false) {\n                    const domain = this.calculateDomainFromData(this._normalizedData,\n                        this.encodingFieldsInf(), this.data().getFieldsConfig());\n                    this.domain(domain);\n                }\n            }\n        }\n        return this;\n    }\n\n    retrieveEncodingFields (encoding, coord, data) {\n        const fieldsConfig = data.getFieldsConfig();\n\n        return encodingFieldInfRetriever[coord](encoding, fieldsConfig);\n    }\n\n    static getRenderProps () {\n        return [`${layerNs[1]}.${PROPS.DATA}`, ...['x', 'y', 'radius'].map(type =>\n            `${groupNs}.domain.${type}`)];\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport { BaseLayerMixin } from './base-mixin';\nimport { BASE_LAYER } from '../enums/constants';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends mix(SimpleLayer).with(BaseLayerMixin) {\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return BASE_LAYER;\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport const LineLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of LineLayer.\n     *\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf({\n                    stroke: resolvedEncodings.color\n                }, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n};\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport const AreaLayerMixin = superclass => class extends superclass {\n\n    /** Default configuration of area layer\n     *\n     * @return {Object} Default configuration of layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const { x: xAxis, y: yAxis } = axes;\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const style = {\n                fill: color\n            };\n\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { AREA_LAYER } from '../../enums/constants';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from '../line/line-mixin';\nimport { AreaLayerMixin } from './area-mixin';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin, AreaLayerMixin) {\n    static formalName () {\n        return AREA_LAYER;\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\nexport const ArcLayerMixin = superclass => class extends superclass {\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n    * returns the default configuration of the layer\n    *\n    * @static\n    * @return {Object} Default configuration for arc layer\n    * @memberof ArcLayer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    getNearestPoint (x, y, config = {}) {\n        return this.getDataFromEvent(config.event);\n    }\n\n    getDataFromEvent (event) {\n        const dataPoint = selectElement(event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf({\n                        fill: color\n                    }, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n        } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n};\n\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { ArcLayerMixin } from './arc-mixin';\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends mix(BaseLayer).with(BaseLayerMixin, ArcLayerMixin) {\n    static formalName () {\n        return 'arc';\n    }\n}\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from './line-mixin';\nimport { LINE_LAYER } from '../../enums/constants';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin) {\n    static formalName () {\n        return LINE_LAYER;\n    }\n}\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf({\n                    fill: resolvedVal.color\n                }, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf({\n                    fill: resolvedEncodings.color\n                }, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport const TextLayerMixin = superclass => class extends superclass {\n    /**\n    * Returns the default configuration of the text layer\n    * @return {Object} Default configuration of the text layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n    * Renders the plot in the given container\n    * @param  {SVGElement} container SVGElement which will hold the plot\n    * @return {textLayer} Instance of text layer\n    */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { TextLayerMixin } from './text-mixin';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends mix(BaseLayer).with(BaseLayerMixin, TextLayerMixin) {\n    static formalName () {\n        return 'text';\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, 0, +1]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: {},\n        stroke: {\n            value: 'hsla(0,0%,0%,0)'\n        },\n        fill: {},\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    FieldType,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    getIndividualClassName,\n    resolveEncodingValues,\n    getColorMetaInf,\n    positionPoints\n} from '../../helpers';\n\nexport const prepareDrawingInf = ({ data, datum, i, layerInst, xPx, yPx }) => {\n    const axes = layerInst.axes();\n    const { shape: shapeAxis, color: colorAxis, size: sizeAxis } = axes;\n    let shape = shapeAxis.getShape(datum.shape);\n    let size = sizeAxis.getSize(datum.size);\n    let color = colorAxis.getColor(datum.color);\n    const resolvedEncodings = resolveEncodingValues({\n        values: {\n            x: xPx,\n            y: yPx,\n            color,\n            size,\n            shape,\n            data: datum\n        },\n        data: datum\n    }, i, data, layerInst);\n    const layerEncoding = layerInst.config().encoding;\n    const { rowId, source } = datum;\n    ({ shape, size, color } = resolvedEncodings);\n    const style = {\n        fill: color,\n        stroke: layerEncoding.stroke.value\n    };\n    const { x, y } = resolvedEncodings;\n    const pos = { x, y };\n    return {\n        enter: pos,\n        update: pos,\n        shape,\n        source,\n        rowId,\n        style,\n        meta: getColorMetaInf(style, colorAxis),\n        size\n    };\n};\n\nexport const pointTranslators = {\n    [COORD_TYPES.CARTESIAN]: (data, config, layerInst) => {\n        let points = [];\n        const encoding = layerInst.config().encoding;\n        const axes = layerInst.axes();\n        const { x, y } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = prepareDrawingInf({\n                    data,\n                    datum: d,\n                    i,\n                    layerInst,\n                    xPx,\n                    yPx\n                });\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n","import {\n    Voronoi,\n    Scales,\n    makeElement,\n    getQualifiedClassName,\n    selectElement\n} from 'muze-utils';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport {\n    attachDataToVoronoi,\n    getPlotMeasurement,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\nimport { pointTranslators } from './helper';\n\nexport const PointLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                    heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    };\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { POINT_LAYER } from '../../enums/constants';\nimport { PointLayerMixin } from './point-mixin';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends mix(BaseLayer).with(PointLayerMixin) {\n    static formalName () {\n        return POINT_LAYER;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        const style = {\n            fill: color\n        };\n\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp,\n    isSimpleObject\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst { MEASURE } = FieldType;\n\nexport const BarLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = Scales.band();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y, { event }) {\n        if (!this.data()) {\n            return null;\n        }\n        return this.getDataFromEvent(event);\n    }\n\n    getDataFromEvent (event) {\n        const dataPoint = selectElement(event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const values = dataPoint && dataPoint.source;\n            let identifiers = null;\n            if (values) {\n                identifiers = this.getIdentifiersFromData(values, dataPoint.rowId);\n            }\n            return {\n                dimensions: [dataPoint.update],\n                id: identifiers,\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { BAR_LAYER } from '../../enums/constants';\nimport { BarLayerMixin } from './bar-mixin';\nimport { BaseLayerMixin } from '../../base-layer/base-mixin';\n\nimport './styles.scss';\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends mix(BaseLayer).with(BaseLayerMixin, BarLayerMixin) {\n    static formalName () {\n        return BAR_LAYER;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedVal.color\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style,\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { x: xAxis, y: yAxis } = axes;\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedEncodings.color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style,\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(style, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport const TickLayerMixin = superclass => class extends superclass {\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'tick';\n    }\n\n    static drawFn () {\n        return drawTicks;\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n};\n","import { mix } from 'muze-utils';\nimport { PointLayerMixin } from '../point';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { TickLayerMixin } from './tick-mixin';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends mix(BaseLayer).with(BaseLayerMixin, PointLayerMixin, TickLayerMixin) {\n    static formalName () {\n        return 'tick';\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default (layers = DEFAULT_LAYERS) => {\n    const reg = Object.assign({}, layers);\n    const regObj = {\n        register: (def) => {\n            const key = def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import { AreaLayer, AreaLayerMixin } from './layers/area';\nimport { ArcLayer, ArcLayerMixin } from './layers/arc';\nimport { LineLayer, LineLayerMixin } from './layers/line';\nimport { TextLayer, TextLayerMixin } from './layers/text';\nimport { PointLayer, PointLayerMixin } from './layers/point';\nimport { BarLayer, BarLayerMixin } from './layers/bar';\nimport { TickLayer, TickLayerMixin } from './layers/tick';\nimport { SimpleLayer } from './simple-layer';\nimport { BaseLayer, BaseLayerMixin } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport layerFactory from './layer-factory';\nimport layerRegistry from './layer-registry';\nimport { ENCODING } from './enums/constants';\nimport * as pointLayerHelpers from './layers/point/helper';\nimport * as commonHelpers from './helpers';\nimport * as enums from './enums';\n\nconst helpers = Object.assign(commonHelpers, {\n    pointLayerHelpers\n});\n\nconst layerMixins = {\n    BarLayerMixin,\n    BaseLayerMixin,\n    LineLayerMixin,\n    AreaLayerMixin,\n    PointLayerMixin,\n    TextLayerMixin,\n    TickLayerMixin,\n    ArcLayerMixin\n};\n\nexport {\n    BaseLayer,\n    BarLayer,\n    LineLayer,\n    AreaLayer,\n    PointLayer,\n    ArcLayer,\n    TextLayer,\n    TickLayer,\n    layerFactory,\n    SimpleLayer,\n    layerRegistry,\n    LAYER_TYPES,\n    ENCODING,\n    helpers,\n    enums,\n    layerMixins\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = layers.sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]).filter(d => d !== undefined);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = this.mergeSelectionSets(behaviours);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n\n    mergeSelectionSets (behaviours) {\n        return unionSets(this, behaviours);\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '4px 0 4px 0',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n        const { classPrefix } = config;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            const mountHtmlTooltip = makeElement(mount, 'div', [1], `${classPrefix}-tooltip-html-container`);\n            mountHtmlTooltip.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, '', {\n                    update: (elem, elemData) => elem.attr('class', elemData.className)\n                });\n                const cells = makeElement(rows, 'span', d => d.data, `${classPrefix}-tooltip-content`);\n                cells.attr('class', `${classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block' // 'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\nconst FIRST_VALUE_MARGIN = '10px';\nconst SINGLE_DATA_MARGIN = 10;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (params) => {\n    const { field, value, classPrefix, margin, isSelected, removeKey } = params;\n\n    if (!removeKey) {\n        const keyObj = {\n            value: field,\n            className: `${classPrefix}-tooltip-key`\n        };\n        const valueObj = {\n            value,\n            className: `${classPrefix}-tooltip-value`\n        };\n        if (margin !== undefined) {\n            keyObj.style = {\n                'margin-left': `${margin}px`\n            };\n            valueObj.style = {\n                'margin-left': `${margin}px`\n            };\n        }\n\n        return ({\n            className: isSelected ? `${classPrefix}-tooltip-row ${classPrefix}-tooltip-selected-row`\n                : `${classPrefix}-tooltip-row`,\n            data: [keyObj, valueObj]\n        }\n        );\n    }\n    return ({\n        data: [{\n            className: '',\n            value,\n            style: {\n                'margin-left': FIRST_VALUE_MARGIN\n            }\n        }],\n        className: `${classPrefix}-tooltip-first`\n    });\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen, target } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const REF_VALUES_INDEX = 1;\n    const REF_KEYS_INDEX = 0;\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: colorAxis.getColor(retinalFieldValue),\n            shape: shapeAxis.getShape(retinalFieldValue),\n            size: sizeAxis.getSize(retinalFieldValue) * config.iconScale\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue({\n                field: displayName,\n                value: formattedRetinalValue,\n                classPrefix,\n                margin: SINGLE_DATA_MARGIN\n            }));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push({ data: [icon, formattedRetinalValue] }));\n            const selectedContext = target[REF_VALUES_INDEX][target[REF_KEYS_INDEX].indexOf(retField)];\n            const isSelected = selectedContext === retinalFieldValue;\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                const keyValue = getKeyValue({\n                    field: hasMultipleMeasures ? `${dName}${separator}` : formattedRetinalValue,\n                    value,\n                    classPrefix,\n                    margin: hasMultipleMeasures ? margin : undefined,\n                    isSelected\n                });\n                if (!hasMultipleMeasures) {\n                    keyValue.data = [icon, ...keyValue.data];\n                }\n                content.push(keyValue);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n                const margin = dataLen === 1 || Object.keys(retinalFields).length === 0\n                ? SINGLE_DATA_MARGIN : undefined;\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    const removeKey = values.length > 1;\n                    content.push(getKeyValue({\n                        field: `${displayName}${separator}`,\n                        value: formattedValue,\n                        classPrefix,\n                        margin,\n                        isSelected: undefined,\n                        removeKey\n                    }));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen,\n                            target: context.payload.target\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue({\n                                field: `${displayName}${separator}`,\n                                value: fn(valueArr[fieldsConfig[name].index]),\n                                classPrefix,\n                                margin: SINGLE_DATA_MARGIN\n                            }));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return ([{\n            data: values[0]\n        }]);\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","import { componentRegistry } from 'muze-utils';\nimport * as behaviours from './actions/behavioural';\nimport { physicalActions } from './actions/physical';\nimport * as sideEffects from './side-effects';\n\nconst convertToObj = (comps) => {\n    const obj = {};\n\n    for (const key in comps) {\n        const val = comps[key];\n\n        obj[val.formalName()] = val;\n    }\n    return obj;\n};\n\nexport const registry = {\n    behaviours: componentRegistry(convertToObj(behaviours)),\n    physicalActions: componentRegistry(physicalActions),\n    sideEffects: componentRegistry(convertToObj(sideEffects))\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange,\n    unionDomainFromLayers\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\nimport { REACTIVE_PROPS } from './enums';\n\nconst FORMAL_NAME = 'VisualUnit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((this.localOptions())).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getterSetters () {\n        return PROPS;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: (context) => {\n                    const domain = context.calculateDomainFromData();\n                    context.dataDomain(domain);\n                }\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n            this.createFireboltInstance();\n            return this;\n        }\n        return this._store;\n    }\n\n    createFireboltInstance () {\n        const { interactions } = this.registry();\n        const { fireboltDeps } = this._dependencies;\n        const cls = this.getFireboltCls();\n\n        this.firebolt(new cls(this, {\n            physical: Object.assign({}, interactions.physicalActions.get(), fireboltDeps.physicalActions),\n            behavioural: Object.assign({}, interactions.behaviours.get(), fireboltDeps.behaviouralActions),\n            physicalBehaviouralMap: this.getActionBehaviourMap()\n        }, Object.assign({}, interactions.sideEffects.get(), fireboltDeps.sideEffects), this.getBehaviourEffectMap()));\n\n        return this;\n    }\n\n    getFireboltCls () {\n        return UnitFireBolt;\n    }\n\n    getBehaviourEffectMap () {\n        return behaviourEffectMap;\n    }\n\n    getActionBehaviourMap () {\n        return actionBehaviourMap;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        this.createRootContainers(container);\n\n        setAxisRange(this);\n        this.renderLayers();\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    createRootContainers (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        return this;\n    }\n\n    renderLayers () {\n        const width = this.width();\n        const height = this.height();\n        const node = this._rootSvg.node();\n\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    dataDomain (...params) {\n        const { namespace } = this.metaInf();\n        const store = this.store();\n        const prop = `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${REACTIVE_PROPS.DOMAIN}`;\n        if (params.length) {\n            const domain = params[0];\n            store.commit(prop, domain, namespace);\n        }\n        return store.get(prop, namespace);\n    }\n\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n\n    calculateDomainFromData () {\n        const domain = unionDomainFromLayers(this.layers(), this.fields(), this._layerAxisIndex,\n            this.data().getFieldsConfig());\n        return domain;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig) => {\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    const fields = [].concat(...encodingArr.map(enc => Object.values(enc).map(d => (typeof d === 'object' ?\n        d.field : d))));\n    return [...new Set(fields.filter(d => d))];\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        facetNames.push(name);\n\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","/**\n * This file exports variables that are used as defaults for the crosstab group.\n */\nexport const DATA_UPDATE_COUNTER = 0;\n\nexport const DEFAULT_LAYER_TYPE = 'cartesian';\n\n","export const PROPS = {\n    layers: {},\n    data: {},\n    globalConfig: {}\n};\n","import { ERROR_MSG, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom, getFieldsFromSuppliedLayers } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\nimport { PROPS } from './props';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    constructor () {\n        generateGetterSetters(this, PROPS);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n\n    getProjectionFields (layers) {\n        return getFieldsFromSuppliedLayers(layers);\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const sortedFields = config.sort;\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    // Sort datamodel if user has sorted a field\n    const sortConfig = Object.keys(sortedFields).map(field => [field, sortedFields[field]]);\n    if (sortConfig.length) {\n        datamodel = datamodel.sort(sortConfig, { saveChild: true });\n    }\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const newFieldsConfig = groupedModel.getFieldsConfig();\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers).filter(field =>\n            getObjProp(newFieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    resolver.transformedData(groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig, datamodel.getSchema());\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.cells.GeomCell),\n        AxisCell: resolver.getCellDef(registry.cells.AxisCell),\n        BlankCell: resolver.getCellDef(registry.cells.BlankCell),\n        TextCell: resolver.getCellDef(registry.cells.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n    const { simpleEncoder } = encoders;\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n    simpleEncoder.data(groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {},\n    transformedData: {},\n    store: {}\n};\n","import { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        this._placeholderInfo = {};\n        generateGetterSetters(this, this.constructor.getterSetters());\n\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    static getterSetters () {\n        return RESOLVER_PROPS;\n    }\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    optionalProjections (config, layerConfig, schema) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        const encoder = this.encoder();\n        optionalProjections.push(...encoder.getProjectionFields(layerConfig, schema));\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry().cells;\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            interactions\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n        const { VisualUnit } = this.registry();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    interactions\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setRetinalAxisDomain (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.getRetinalAxes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n\n        this.axes(retinalAxes);\n\n        this.updateVisualUnit(config);\n\n        return this;\n    }\n\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const { TextCell, BlankCell } = this.registry().cells;\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    updateVisualUnit (retinalConfig) {\n        const retinalAxes = this.getRetinalAxes();\n\n        const { lifeCycleManager } = this.dependencies();\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(retinalConfig);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        this._placeholderInfo = computeMatrices(context, config);\n\n        return this._placeholderInfo;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.dataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.dataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = context.createEncoderInstance();\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setRetinalAxisDomain(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n    const { VisualUnit, layerRegistry } = context.registry();\n    const { base: BaseLayer } = layerRegistry;\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry({\n                    cells: value.cellRegistry,\n                    VisualUnit: value.VisualUnit\n                });\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup,\n    getEncoder\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            components,\n            componentSubRegistry,\n            interactions\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, this.constructor.getterSetters());\n        generateGetterSetters(this, this.constructor.localOptions());\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.createMatrixResolver();\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layers.get(),\n            cellRegistry: componentSubRegistry.cells.get(),\n            VisualUnit: components.VisualUnit,\n            interactions\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    static formalName () {\n        return 'VisualGroup';\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    static getterSetters () {\n        return PROPS;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n\n    createEncoderInstance () {\n        const layers = this.layers();\n\n        return getEncoder(layers);\n    }\n\n    createMatrixResolver () {\n        this.resolver(new MatrixResolver(this._dependencies));\n\n        return this;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].internalValue >= values[i][0] && fields[field].internalValue <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        const { interactions } = dependencies.registry;\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, interactions.behaviours.get(), legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([title, titleConfig]) => {\n                let t = title;\n                if (typeof title === 'string' || !title) {\n                    t = () => title;\n                }\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return [t, mergeRecursive(defConfig, titleConfig)];\n            }\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([subtitle, subtitleConfig]) => {\n                let sub = subtitle;\n                if (typeof subtitle === 'string' || !subtitle) {\n                    sub = () => subtitle;\n                }\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return [sub, mergeRecursive(defConfig, subtitleConfig)];\n            }\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: [null, null],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            takesMultipleParams: true,\n            sanitization: ([config, auxConfig = {}], oldConfig) => {\n                // Stores additional config, if passed\n                const { reset = false } = auxConfig;\n                let oldConf = {};\n\n                if (!reset) {\n                    oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                }\n\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return fixScrollBarConfig(newConf);\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\nimport { SIMPLE_CELL } from './constants';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    static formalName () {\n        return SIMPLE_CELL;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.AXIS_CELL;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.BLANK_CELL;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\nimport * as CONSTANTS from './constants';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    static formalName () {\n        return CONSTANTS.TEXT_CELL;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport * as CONSTANTS from './constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    static formalName () {\n        return CONSTANTS.GEOM_CELL;\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        register: (def) => {\n            const key = def.formalName();\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n    const interactionRegistry = canvas.registry().interactions;\n    const parser = getValueParser(invalidValues);\n\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    },\n                    registry: {\n                        interactions: interactionRegistry\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        const { target, className } = params.config;\n        this.component = params.component;\n        this.params = params;\n        this.target(target);\n        this.className(className);\n        this.position(params.config.position);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    const headerValues = Object.values(renderDetails.components.headers);\n    let sum = 0;\n    let messageWrapper = null;\n\n    for (const val of headerValues) {\n        sum += val.logicalSpace().height;\n    }\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height() - sum, width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG,\n            position: TOP\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent.updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const param = params[0];\n            const components = Object.assign({}, param.components);\n            const componentSubRegistry = Object.assign({}, param.componentSubRegistry);\n            const interactionRegistry = Object.assign({}, param.interactions);\n\n            this._registry = { components, componentSubRegistry, interactions: interactionRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\nimport { registry as interactionRegistry } from '@chartshq/muze-firebolt';\n\nexport const COMPONENTS = {\n    [VisualGroup.formalName()]: VisualGroup,\n    [VisualUnit.formalName()]: VisualUnit\n};\n\nexport const SUBREGISTRIES = {\n    cells: cellRegistry,\n    layers: layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\nconst componentRegistry = (components = COMPONENTS) => {\n    const reg = Object.assign({}, components);\n\n    return {\n        register: (cls) => {\n            const key = cls.formalName();\n            reg[key] = cls;\n            return componentRegistry;\n        },\n        get: () => reg\n    };\n};\n\nexport const registry = {\n    components: componentRegistry(COMPONENTS),\n    cells: cellRegistry(),\n    layers: layerRegistry(),\n    interactions: interactionRegistry\n};\n","import * as utils from 'muze-utils';\n\nimport { VisualUnit, helpers as unitHelpers, enums as unitEnums, UnitFireBolt } from '@chartshq/visual-unit';\nimport { VisualGroup, Encoders, encoderHelpers, groupUtils, enums as groupEnums } from '@chartshq/visual-group';\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect,\n    Firebolt\n} from '@chartshq/muze-firebolt';\nimport {\n    layerFactory,\n    BaseLayer,\n    LineLayer,\n    TextLayer,\n    TickLayer,\n    PointLayer,\n    helpers,\n    enums,\n    SimpleLayer,\n    AreaLayer,\n    ArcLayer,\n    layerMixins\n} from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { registry as globalRegistry, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\nconst {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    Store\n} = utils;\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = globalRegistry.components;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    overrideRegistry.forEach((def) => {\n        registry.register(def);\n    });\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, globalRegistry.components.get());\n    const componentSubRegistryDef = Object.assign({}, SUBREGISTRIES);\n\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop](globalRegistry[prop].get());\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry,\n            interactions: globalRegistry.interactions\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            overrideRegistry.forEach((def) => {\n                const prop = def.formalName();\n                if (prop in defaultRegistry) {\n                    components[prop] = def;\n                }\n            });\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nmuze.registry = globalRegistry;\n\nmuze.Components = {\n    VisualLayer: {\n        layers: {\n            BaseLayer,\n            LineLayer,\n            TextLayer,\n            TickLayer,\n            PointLayer,\n            SimpleLayer,\n            AreaLayer,\n            ArcLayer\n        },\n        helpers,\n        enums,\n        layerMixins\n    },\n    VisualUnit: {\n        cls: VisualUnit,\n        helpers: unitHelpers,\n        enums: unitEnums,\n        UnitFireBolt\n    },\n    VisualGroup: {\n        cls: VisualGroup,\n        Encoders,\n        encoderHelpers,\n        groupUtils,\n        enums: groupEnums\n    },\n    Canvas: {\n        cls: Canvas\n    },\n    Firebolt: {\n        cls: Firebolt\n    }\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = utils;\nmuze.Model = new Store().model.constructor;\n\nexport default muze;\n"],"sourceRoot":""}