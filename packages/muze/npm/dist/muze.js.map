{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/autoType.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/geo.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/geo-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/distance-factors.js","webpack://muze/webpack://DataModel/src/enums/distance-units.js","webpack://muze/webpack://DataModel/src/enums/error-messages.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/geo-bin-shapes.js","webpack://muze/webpack://DataModel/src/enums/geo-props.js","webpack://muze/webpack://DataModel/src/enums/geom-types.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned-geo/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/geo-field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/geometry/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/line-string/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/multi-line-string/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/multi-point/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/multi-polygon/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/point/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/geometry-parsers/polygon/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/geo/geometry/index.js","webpack://muze/webpack://DataModel/src/geo/index.js","webpack://muze/webpack://DataModel/src/geo/line-string/helper.js","webpack://muze/webpack://DataModel/src/geo/line-string/index.js","webpack://muze/webpack://DataModel/src/geo/multi-line-string/index.js","webpack://muze/webpack://DataModel/src/geo/multi-point/index.js","webpack://muze/webpack://DataModel/src/geo/multi-polygon/index.js","webpack://muze/webpack://DataModel/src/geo/point/index.js","webpack://muze/webpack://DataModel/src/geo/polygon/helper.js","webpack://muze/webpack://DataModel/src/geo/polygon/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/hexbin.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/geo.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/quick-select.js","webpack://muze/webpack://DataModel/src/utils/r-tree.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-mixin.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area-mixin.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-mixin.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text-mixin.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/helper.js","webpack://muze/./packages/visual-layer/src/layers/point/point-mixin.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-mixin.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick-mixin.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/visual-layer/src/index.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/muze-firebolt/src/registry.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/enums/defaults.js","webpack://muze/./packages/visual-group/src/encoder/props.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","autoType","number","trim","NaN","isNaN","test","Date","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","dsv","parse","parseRows","format","formatBody","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","inferColumns","rows","columnSet","row","column","pad","width","length","Array","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","formatYear","year","delimiter","reFormat","RegExp","DELIMITER","text","f","N","I","eof","eol","token","j","preformatBody","formatValue","formatRow","convert","customConverter","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","_autoType__WEBPACK_IMPORTED_MODULE_3__","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsv","START","END","BOTH","BOUNDARY_POINTS","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","GEOM_FIELD","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_geo_json__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","Auto","data","schema","options","converters","FlatJSON","DSVStr","DSVArr","GeoJSON","dataFormat","detectDataFormat","Error","arr","schemaFields","unitSchema","firstRowHeader","push","columnMajor","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","d3Dsv","_utils__WEBPACK_IMPORTED_MODULE_0__","_enums__WEBPACK_IMPORTED_MODULE_1__","isGeoField","obj","DimensionSubtype","GEO","prepareGeoFields","selectedSchema","selectedName","result","selectedData","lat","long","la","lo","Number","type","coordinates","isLatLong","coordinate","header","insertionIndex","schemaFieldsName","item","index","fields","ind","geometryRetriever","_defineProperty","_geometryRetriever","GeoProps","Feature","FeatureCollection","features","geometry","properties","arguments","geoField","getFeatures","idx","len","_schema$idx","subtype","feature","allProps","insertValues","fieldNames","fieldInf","props","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","args","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","Relation","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","uids","e","fmtFieldIdx","reduce","acc","next","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","set","_set$split$map","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","groupBy","persistDerivations","defaultReducer","reducerStore","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","Value","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","sanitizeUnitSchema","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","createFields","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","getRootDataModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","getRootGroupByModel","model","addToPropNamespace","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","binField","defConfig","shapeType","GEO_BIN_SHAPES","HEX","binFieldName","fieldsObj","binnedData","createBinnedGeoData","_field_creator__WEBPACK_IMPORTED_MODULE_7__","FieldType","DIMENSION","BINNED_GEO","binSize","_createBinnedFieldDat","createBinnedFieldData","bins","_binnedData","BINNED","serialize","getSchema","dimensionArr","reducerFn","FilteringMode","NORMAL","splitWithSelect","uniqueFields","commonFields","fieldConfig","allFields","normalizedProjFieldSets","fieldSet","getNormalizedProFields","splitWithProject","InvalidAwareTypes","AUTO","GEO_JSON","CATEGORICAL","TEMPORAL","earthRadius","UNITS","CENTIMETERS","DEGREES","FEET","INCHES","KILOMETERS","METERS","METRES","MILES","MILLIMETERS","NAUTICALMILES","RADIANS","YARDS","factors","DistanceUnits","_factors","GEO_ERR_MESSAGES","POLYGON_ERR_MESSAGES","isArray","hasMinimumPoints","hasValidLatLong","hasMinimumCoordinates","hasIdenticalPoints","hasMinimumFourPoints","MEASURE","INVERSE","ALL","GeomTypes","Polygon","Point","MultiPoint","LineString","MultiLineString","MultiPolygon","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","_geom_types__WEBPACK_IMPORTED_MODULE_6__","_geo_props__WEBPACK_IMPORTED_MODULE_7__","_distance_units__WEBPACK_IMPORTED_MODULE_8__","_geo_bin_shapes__WEBPACK_IMPORTED_MODULE_9__","MeasureSubtype","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_fields_geo_field__WEBPACK_IMPORTED_MODULE_2__","_stats__WEBPACK_IMPORTED_MODULE_3__","_enums__WEBPACK_IMPORTED_MODULE_4__","_utils__WEBPACK_IMPORTED_MODULE_5__","_constants__WEBPACK_IMPORTED_MODULE_6__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_7__","_package_json__WEBPACK_IMPORTED_MODULE_8__","Operators","compose","bin","select","project","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","hexbin","utils","geo","isSame","geoUnion","perimeter","nearestPoint","bounds","centroid","center","area","distance","isInBounds","includes","within","version","pkg","Stats","DateTimeFormatter","GeoField","createUnitFieldFromPartial","_fields__WEBPACK_IMPORTED_MODULE_1__","_fields_binned_geo__WEBPACK_IMPORTED_MODULE_2__","createUnitField","partialField","PartialField","ContinuousParser","Continuous","CategoricalParser","Categorical","TemporalParser","Temporal","BinnedParser","Binned","GeoParser","BinnedGeoField","dataColumn","headers","headersObj","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","getUniqueId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","_cachedBounds","Dimension","binsArr","hash","Set","domain","Measure","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","Field","_cachedDomain","calculateDataDomain","description","displayName","boundsArr","boundsFlattened","_field__WEBPACK_IMPORTED_MODULE_0__","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_geo_field__WEBPACK_IMPORTED_MODULE_7__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_11__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_12__","_parsers_geometry_parsers_geometry__WEBPACK_IMPORTED_MODULE_13__","_partial_field__WEBPACK_IMPORTED_MODULE_14__","unit","defAggFn","defaultReducerName","numberFormat","formatNumber","FieldParser","val","String","matched","parsedVal","parseFloat","geometryParsers","pointParser","polygonParser","lineParser","multiPolygonParser","multiPointParser","multiLineParser","_geometryParsers","checkLineStringCoordinates","_enums_error_messages__WEBPACK_IMPORTED_MODULE_0__","_point__WEBPACK_IMPORTED_MODULE_1__","_geo_line_string__WEBPACK_IMPORTED_MODULE_2__","coord","checkPointCoordinates","_line_string__WEBPACK_IMPORTED_MODULE_1__","_geo_multi_line_string__WEBPACK_IMPORTED_MODULE_2__","_geo_multi_point__WEBPACK_IMPORTED_MODULE_2__","_polygon__WEBPACK_IMPORTED_MODULE_0__","_enums_error_messages__WEBPACK_IMPORTED_MODULE_1__","_geo_multi_polygon__WEBPACK_IMPORTED_MODULE_2__","coordArr","checkPolygonCoordinates","pointPredicates","_utils_geo__WEBPACK_IMPORTED_MODULE_0__","_geo_point__WEBPACK_IMPORTED_MODULE_2__","every","latLongPredicates","error","keys","valid","polygonPredicates","checkLinearRing","_point__WEBPACK_IMPORTED_MODULE_0__","_geo_polygon__WEBPACK_IMPORTED_MODULE_2__","_dtf","nativeDate","getNativeDate","parser","_sanitize","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","parsedDatum","Geometry","getCoordinates","geometryMap","_geometryMap","distanceToLine","convertLength","isPointOnLineSegment","_constants_geo__WEBPACK_IMPORTED_MODULE_0__","_utils_helper__WEBPACK_IMPORTED_MODULE_1__","_utils_geo__WEBPACK_IMPORTED_MODULE_2__","_enums_distance_factors__WEBPACK_IMPORTED_MODULE_3__","dot","u","v","w","c1","c2","b2","Pb","originalUnit","finalUnit","radiansToLength","lengthToRadians","point","startPoint","endPoint","ignoreBoundary","x","y","x1","y1","x2","y2","dxl","dyl","returnData","dxc","_realCoordinates","lineStringData","excludeBoundary","lineCoords","_helper__WEBPACK_IMPORTED_MODULE_3__","pt","units","Infinity","line","lineData","some","multiPointData","output","mPointCoord","poly","polyData","polyCenterData","sanitizeConfig","_enums_geom_types__WEBPACK_IMPORTED_MODULE_0__","polygon","areaObj","tempArray","k","netArea","includeMap","prepareJoinData","resp","formattedValue","rawValue","updateFields","_ref3","fieldStoreName","_ref4","colIdentifier","collID","partialFieldMap","newFields","coll","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_derivation","_toConsumableArray","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","_selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","rowSplitDiffsetIterator","fieldStoreObj","splitRowDiffset","dimensionMap","dimensionSet","selectHelper","clonedDm","selectFn","iterator","selectorHelperFn","cloneWithAllFields","_selectHelper","clonedDMs","cloned","derivation","derivationFormula","addDiffsetToClonedDm","selectConfig","cloneWithSelect","cloneConfig","extraCloneDm","setOfRowDiffsets","cloneWithProject","projField","projectionSet","actualProjField","projFieldSet","projFields","extend2","validateUnitSchema","supportedMeasureSubTypes","supportedDimSubTypes","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","defaultConfig","converterFn","converter","_converterFn","_converterFn2","addGeometrySchemaField","nameSpace","valueObjects","rawFieldsData","formattedFieldsData","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","done","_ref2","err","fieldInSchema","getDerivationArguments","applyExistingOperationOnModel","dataModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","find","_parent","getPathToRootModel","path","getKey","rowId","filterPropagationModel","propModels","fns","filterByMeasure","checkUids","clonedModel","modelFieldsConfig","keyFn","dataObj","dimensions","dLen","indices","measures","fieldsSpace","valuesMap","internalValue","present","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref5","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","reverse","immutableActions","filterImmutableAction","criteriaModel","sourceNamespace","normalizedProjField","from","getNumberFormattedVal","require","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","measureField","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","bucketCreators","bucketCreatorFn","points","id","rtree","RTree","treeItems","coords","minX","minY","maxX","maxY","flat","bbox","potentialPoints","side","radius","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_constants__WEBPACK_IMPORTED_MODULE_4__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","getCommonSchema","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","isArrEqual","prepareDataHelper","addData","hashData","schemaName","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","getFieldArr","getReducerObj","defReducer","measureName","existingDataModel","sFieldArr","reducerObj","dbName","measureArr","hashMap","binnedGeoFieldArr","geoFieldArr","_value$schema","rowCount","geom","hexagon","rx","ry","cosines","sines","vertices","cellSide","_bbox$flat","_bbox$flat2","west","south","east","north","centerY","centerX","cellWidth","cellHeight","hexWidth","hexHeight","boxWidth","boxHeight","xInterval","yInterval","xSpan","xCount","xAdjust","yCount","yAdjust","hasOffsetY","angle","PI","results","isOdd","yCenter","hex","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","_hexbin__WEBPACK_IMPORTED_MODULE_15__","defSortFn","a1","b1","mergeSort","sortFn","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_constants__WEBPACK_IMPORTED_MODULE_1__","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","getSortFn","dataType","sortType","retFunc","groupData","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","applyStandardSort","sortMeta","isCallable","sortingFn","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","nMap","sDetial","groupSortingIdx","standardSortingDetails","groupSortingDetails","applyGroupSort","detail","sortedGroupMap","nextMap","shift","pop","_export__WEBPACK_IMPORTED_MODULE_0__","source","_dataFormat","_fieldStoreName","_fieldspace","joinWith","unionWith","differenceWith","_helper__WEBPACK_IMPORTED_MODULE_2__","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","monthsDef","H","extract","defaultNumberParser","toString","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","presentDate","presentYear","getFullYear","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","boundArray","sumX","sumY","centerPoint","boundsData","total","addX","addY","subX","subY","isValidLatitude","isValidLongitude","0","1","geoField1","geoField2","compare","geoField2Coords","geoField1Coords","geoField1Bounds","geoField2Bounds","isBoundsEqual","g","flattenArrayToSingleLevel","getMergedCoords","coordsArr","geomType","newGeoType","to","dLat","degreesToRadians","dLon","lat1","lat2","sin","geoFieldsCoordinates","referencePoint","pointNearest","minDistance","distanceFromCurrentPoint","distanceUnit","totalPerimeter","totLines","bound","coord1","coord2","boundCoordinates","insidePoly","inRing","ring","isInside","xi","yi","xj","yj","isObject","isString","uniqueValues","getTime","arr1","arr2","isArrayOfNums","geoTypes","isGeoJSON","geoType","radians","factor","degrees","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_geo__WEBPACK_IMPORTED_MODULE_4__","swap","tmp","defaultCompare","quickselect","left","right","quickselectStep","z","createNode","height","leaf","extend","distBBox","node","toBBox","destNode","calcBBox","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","findItem","items","equalsFn","multiSelect","stack","all","nodesToSearch","maxEntries","_maxEntries","_minEntries","clear","childBBox","insert","build","slice","splitRoot","tmpNode","insertSingleItem","goingUp","indexes","condense","N2","N1","right2","right3","level","minArea","minEnlargement","targetNode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","enlargement","isNode","insertPath","chooseSubtree","split","adjustParentBoxes","chooseSplitAxis","splitIndex","chooseSplitIndex","newNode","minOverlap","bbox1","bbox2","overlap","compareMinX","compareMinY","allDistMargin","leftBBox","rightBBox","margin","_i","siblings","ReducerStore","reducer","__unregister","has","getStore","configurable","writable","_formattedValue","_internalValue","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","_getWidthFn","contObj","_containerObj","svgText","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","resolve","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","bisector","ascendingComparator","ascendingBisect","bisectRight","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","each","remove","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","highVal","d1","low","high","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","rgbConvert","rgb","opacity","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","hcl2lab","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","cos","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","POLAR","CARTESIAN","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","triangles","e1","links","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","dataSelect","idFn","STRING","FUNCTION","HTMLElement","common_utils_typeof","random","checkExistence","nonExistentKeys","sanitizeIP","typeObj","htmlElem","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","easePoly","circleInOut","getExtremePoint","compareValue","minOrMax","extremePoint","minOrMaxVal","getMinPoint","getMaxPoint","getNearestValue","filterData","getWindow","cancelAnimFrame","cancelAnimationFrame","capitalizeFirst","txt","getMinDiff","uniqueVals","getQualifiedClassName","cls","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","getArraySum","isEqual","oldVal","newVal","arraysEqual","is","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","registerImmediateListener","isHTMLElem","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","mergedSelection","exitSelection","getObjects","inst","interpolateArray","fitCount","linearInterpolate","atPoint","springFactor","angleToRadian","replaceCSSPrefix","numberInterpolator","interpolateNumber","colorInterpolator","interpolateRgb","hslInterpolator","interpolateHslLong","transformColors","piecewiseInterpolator","hue2rgb","hslToRgb","rgbToHsv","hsvToRgb","hexToHsv","detectColor","col","assembleModelFromIdentifiers","fieldMap","_loop2","temp","cIdx","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","registerListeners","listenerMap","propListenerMap","namespace","mapObj","propType","listenerFn","listener","isValidValue","escapeHTML","htmlEscapes","&","<",">","\"","'","/","transposeArray","extendsClass","extendsFrom","found","concatModels","dataObj1","dataObj2","data1","data2","schema1","schema2","tuples1","tuples2","commonTuples","_loop3","row1","row2","dim1Values","dim2Values","dm1Key","dm2Key","commonSchema","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","Scales","scaleBand","getSmallestDiff","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","formatAs","temporalFields","filteredFields","_ref6","lookupWhat","lookupDetails","resolvable","lookupTarget","depArr","deps","nextAnimFrame","getValueParser","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","nearestSortingDetails","nearestSortDerivation","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","sortCategoricalField","sortOrderType","_accessors","fn1","fn2","partition","mix","superclass","with","_with","mixins","mixin","componentRegistry","comps","reg","regObj","register","customKey","formalName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","appendElement","element1","element2","setElementAttrs","attrs","setAttrs","addClass","removeClass","setStyles","styles","createElements","clipElement","measurement","clipPathElement","getMousePos","boundingClientRect","getClientPoint","pos","clientPoint","tag","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","setContexts","contexts","propObj","contextMap","depProps","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","removeSubNamespace","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","_ref$takesMultiplePar","takesMultipleParams","prevVal","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","CLASSPREFIX","STACK","GROUP","IDENTITY","ANGLE","RADIUS","SIZE","COLOR","SHAPE","TEXT","OUTER_RADIUS_VALUE","TEXT_ANCHOR_MIDDLE","ENCODING","X0","Y0","RADIUS0","ANGLE0","ASCENDING","AGG_FN_SUM","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","SimpleLayer","DATA","CONFIG","MEASUREMENT","DOMAIN","MOUNT","props_defineProperty","_props","axes","metaInf","valueParser","PROPS","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","defClassName","axisNamePadding","classPrefix","fixedBaseline","labels","rotation","smartTicks","orientation","numberOfTicks","show","showAxisName","showInnerTicks","showOuterTicks","xOffset","yOffset","changeTickOrientation","selectContainer","axisInstance","_smartTicks","renderConfig","labelManager","isSmartTicks","tickText","registerAnimationDoneHook","rotateAxis","instance","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","_config","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_mount","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","_getPrototypeOf","InterpolatorCls","_interpolator","getScaleValue","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","_getPrototypeOf2","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","rangeStops","newStopsLength","newRange","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","strategies","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","strategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","WIDTH","HEIGHT","MIN_UNIT_WIDTH","MIN_UNIT_HEIGHT","DIMENSIONS","MEASURES","PIVOT","FORMAT","HAS_DATA_UPDATED","ROWS","COLUMNS","COL","ROW","COLUMN","DETAIL","LAYERS","TRANSFORM","RETINAL","CELL","X_AXES","Y_AXES","ENTRY_CELLS","INITIALIZED","EXIT_CELLS","AXIS","UNIT","UPDATED","BEFORE_UPDATE","VALUE_MATRIX","FACET_HEADERS","ARC","BAR","LINE","POINT","PRIMARY","SECONDARY","INTERACTION","GRID_LINES","GRID_BANDS","HEADER","FACET","DESCENDING","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","isInvalid","getInvalidType","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","transformColor","colorAxis","styleType","intensity","stateColor","originalColor","colorInfo","applyInteractionStyle","selectionSet","interactionStyles","elements","getPlotElementsFromSet","interactionType","_d$meta","colorTransform","helpers_slicedToArray","retrieveEncodingInf","encoding","encodingNames","encodingInf","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","transformData","transformType","encodingFieldInf","xField","yField","xFieldType","yFieldType","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","transformedData","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","getNormalizedData","transformedDataArr","encodingFieldsInf","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","animateGroup","groupTransition","groupAnimateStyle","effect","positionPoints","positioner","encodingTransform","getGroupSpan","getUnitWidth","getPlotMeasurement","dimensionalValues","fieldInfo","bandScale","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","timeDiffs","innerPadding","isAxisBandScale","axisPadding","groupPadding","renderLayer","render","throwback","parentNamespace","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransform","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","getMarkId","resolveEncodingValues","transformedValues","getColorMetaInf","colorInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","prevData","dataDidSet","layerNs","groupNs","BaseLayerMixin","_superclass","_class","base_mixin_classCallCheck","base_mixin_possibleConstructorReturn","base_mixin_getPrototypeOf","base_mixin_assertThisInitialized","getterSetters","alias","_points","_cachedData","_measurement","_graphicElems","base_mixin_inherits","base_mixin_createClass","_store","_this$metaInf2","_alias","enableCaching","_cacheEnabled","clearCaching","getTransformedData","calculateDomainFromData","isEmpty","getDataDomain","encodingType","_this$metaInf3","getNearestPoint","interaction","resolveTransformType","_transformType","_this$metaInf4","unitDom","cachePoint","pointMap","_pointMap","getIdentifiersFromData","_this$encodingFieldsI","_map2","base_mixin_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","hasPlotSpan","getPlotSpan","getPlotPadding","getPointsFromIdentifiers","getAllAttrs","filteredPoints","base_mixin_toConsumableArray","sizeVal","getTransformedDataFromIdentifiers","measureIndex","_identifiers$getData","identifierData","identifierSchema","_normalizedData","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","animationDone","encodingValue","retrieveEncodingFields","_transformedData","calculateDomain","getState","getListeners","getRenderProps","_context$metaInf","unitRowIndex","unitColIndex","base_mixin_defineProperty","getQualifiedStateProps","_construct","userConf","shouldDrawAnchors","BaseLayer","drawLine","layer","connectNullData","curveInterpolatorFn","linepath","highlight","fade","focus","nearestPointThreshold","strokeOpacity","LineLayerMixin","line_mixin_classCallCheck","line_mixin_possibleConstructorReturn","line_mixin_getPrototypeOf","line_mixin_inherits","line_mixin_createClass","getDrawFn","translatePoints","xAxis","yAxis","isXDim","isYDim","xPx","yPx","getColor","resolvedEncodings","stroke","seriesClassName","qualifiedClassName","containerSelection","colorField","colorFieldIndex","stroke-opacity","getPathStyle","colorValFn","colorVal","searchRadius","_point$data$data","layerId","line_mixin_get","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayerMixin","area_mixin_classCallCheck","area_mixin_possibleConstructorReturn","area_mixin_getPrototypeOf","area_mixin_inherits","area_mixin_createClass","area_mixin_get","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","AreaLayer","stroke-width","stroke-linejoin","shape","states","fadeout","selected","ArcLayerMixin","arc_mixin_classCallCheck","arc_mixin_possibleConstructorReturn","arc_mixin_getPrototypeOf","_prevPieData","arc_mixin_inherits","arc_mixin_createClass","dataPoint","_this$axes","radiusAxis","pieIndex","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","_this$config","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","ArcLayer","LineLayer","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_mixin_slicedToArray","TextLayerMixin","text_mixin_classCallCheck","text_mixin_possibleConstructorReturn","text_mixin_getPrototypeOf","text_mixin_inherits","text_mixin_createClass","getPointTranslator","text-anchor","TextLayer","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","prepareDrawingInf","shapeAxis","sizeAxis","getShape","getSize","layerEncoding","helper_defineProperty","_config$offset","offsetX","offsetY","helper_slicedToArray","measure","PointLayerMixin","point_mixin_classCallCheck","point_mixin_possibleConstructorReturn","point_mixin_getPrototypeOf","point_mixin_inherits","point_mixin_createClass","maxSize","generateDataPoints","point_mixin_toConsumableArray","drawFn","_maxSize","_getPlotMeasurement2","point_mixin_slicedToArray","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","point_mixin_get","PointBaseLayer","PointLayer","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","endPos","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayerMixin","bar_mixin_classCallCheck","bar_mixin_possibleConstructorReturn","bar_mixin_getPrototypeOf","_plotPadding","_plotSpan","bar_mixin_inherits","bar_mixin_createClass","bar_mixin_get","getTranslatedPoints","normalizedDataArr","bar_mixin_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_mixin_toConsumableArray","p2","BarLayer","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","ySpan","x0Px","TickLayerMixin","tick_mixin_classCallCheck","tick_mixin_possibleConstructorReturn","tick_mixin_getPrototypeOf","tick_mixin_inherits","tick_mixin_createClass","drawTicks","TickLayer","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","_layerRegistry","getSerializedConf","mark","layerDef","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","propValue","layer_factory_toConsumableArray","getLayerInstance","layerRegistry","instances","layerObj","layerConstructor","getLayerClass","composeLayers","layerDefs","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","layer_registry","layers","helpers","commonHelpers","pointLayerHelpers","layerMixins","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","transformDataModels","dataModels","transformVal","getLayerFromDef","existingLayer","rowIndex","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","sanitizeLayerDef","sanitizedDefs","sConf","attachDataToLayers","transformedDataModels","dataSource","attachAxisToLayers","layerAxisIndex","axesObj","axisInf","axisIndex","getLayerAxisIndex","_layer$config","specificField","encodingField","fieldInst","getMembers","unionDomainFromLayers","axisFields","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","getNearestDimensionalValue","entryVal","getLayersBy","searchBy","removeLayersBy","createSideEffectGroup","createRenderPromise","_renderedPromise","_renderedResolve","getRadiusRange","radiusAxes","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","getValuesMap","_model$getData","fieldIndices","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","entryRowIds","exitRowIds","rowIdsObj","AXES","LAYERDEFS","TRANSFORMEDDATA","DATADOMAIN","FIELDS","LAYERAXISINDEX","IDFIELD","GRID_LINE_PARENT_GROUP_CLASS","GRID_BAND_PARENT_GROUP_CLASS","GRID_PARENT_GROUP","TICK","GRID_BAND","GRID_LINE","CONSOLIDATED","FRAGMENTED","FACET_BY_FIELDS","RETINAL_FIELDS","PARENT_ALIAS","CACHED_DATA","STORE","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","muze_firebolt_src_helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","stPos","startPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","tooltip","svgContainer","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","SurrogateSideEffect","interactive","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","x1DomainIndex","x2DomainIndex","_sort2","selection_box_helper_slicedToArray","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","arrowPos","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","displayFormat","table","tbody","elemData","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","defConf","contentConfig","reorderContainers","contentConf","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getKeyValue","isSelected","removeKey","keyObj","valueObj","margin-left","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","dataLen","retField","retIndex","retinalFieldValue","measuresArr","icon","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","defFormatter","nf","getTabularData","allMeasures","strategies_construct","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","len2","_fieldInf$name","strategies_strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","strategyObj","sanitizedConf","totalHeight","totalWidth","tooltips","boundBox","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","bandClass","lineClass","plotWidth","crossline_toConsumableArray","startPx","endPx","parentGroup","fadeFn","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","resetData","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerCls","depLayerEncoding","defaultSizeValue","commonName","groupId","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","convertToObj","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","cachedData","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","jsonData","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","_cachedValuesMap","enabledFn","sourceBehaviours","persistent","createSelectionSet","action_behaviour_map_defineProperty","ACTIONS","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","_dimensionMeasureMap","src_props_defineProperty","_PROPS","trackerClassName","arcLayerClassName","sideEffectClassName","local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","createFireboltInstance","interactions","fireboltDeps","getActionBehaviourMap","getBehaviourEffectMap","_firebolt","createRootContainers","initSideEffects","_rootSvg","class","_sideEffectGroup","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","instanceValues","visual_unit_toConsumableArray","layerdeps","_this$_dependencies","parentModel","REACTIVE_PROPS","dimValue","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","localNs","dataDomain","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","initStore","group_utils_defineProperty","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","getAxisKey","getCellKey","columnId","extractUnitConfig","unitConfig","getHeaderText","rowLength","headerCreator","fieldHeaders","TextCell","findInGroup","variable","channel","group_utils_this","facetType","projType","getAxisType","retriveDomainFromData","mutateAxesFromMap","cacheMaps","xAxes","yAxes","xAxisSet","yAxisSet","axisId","getEncoder","encoder","CartesianEncoder","layerConf","hasPolarEncodings","PolarEncoder","getHeaderAxisFrom","userAxisFromConfig","axisFrom","headerFrom","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","facets","projections","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","getFieldsFromSuppliedLayers","suppliedLayerConfig","encodingArr","extractFields","facetsAndProjections","layerFields","flattenArray","sortFacetFields","facetNames","sortInfo","sortConfig","facet","facetSortConfig","getSchemaDef","removeExitCells","exitCells","qualifiedStateProps","placeholder","globalConfig","VisualEncoder","visual_encoder_classCallCheck","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","scaleMaps","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","rIdx","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","columnIndex","matrix_model_objectSpread","getMatrixModel","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","rowFields","columnFields","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","sortedFields","layerConfigArr","getLayerConfig","retinalConfig","axesCreators","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","facetFields","geomCellKey","geomCell","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","counter","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","groupedModel","resolvedData","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","autoGroupBy","layerConfig","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","_mutateAxesFromMap","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","_map4","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","_placeholderInfo","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","_this$dependencies","_this$getAllFields","retContext","getRetinalFieldsDomain","getRetinalAxes","retinalEncoder","setCommonDomain","retinalAxes","updateVisualUnit","placeholders","bottomLeft","bottomRight","_this$dependencies2","showHeaders","_this$registry$cells","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","updateModel","dataTypeScaleMap","getAdjustedDomain","y1ratio","y2ratio","allSameSign","generateAxisFromMap","axisKey","groupAxes","currentAxes","commonAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getDefaultMark","colFieldType","rowFieldType","createRetinalAxis","fieldProps","getIndex","arrIndex","getLayerConfFromFields","colFields","userLayerConfig","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","resolverAxes","axesArr","userConfig","geomCellAxes","unitsArr","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","adjustedDomain","typeOfAxis","alignZeroLine","currentFieldName","sortingOrder","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","encodingObj","layerArray","serializedLayers","colField","colFieldName","rowField","configs","rowFieldName","defConfigs","layerConfigs","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","pieAxes","varInstances","encType","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","visual_group_local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","createEncoderInstance","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setRetinalAxisDomain","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createMatrixResolver","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","_context$registry","comp","storeInst","listenerInf","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","canvasAlias","rawVal","check","src_firebolt_helper_toConsumableArray","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","LAYER_DEF","DETAIL_FIELDS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","_logicalSpace","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","_className","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","maxLines","minCharacters","minText","_minTextSpace","smartSpace","verticalAlign","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","COMPONENTS","default_registry_defineProperty","_COMPONENTS","SUBREGISTRIES","interactionRegistry","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","local_options_slicedToArray","arg1","arg2","local_options_typeof","titleConfig","subtitle","subtitleConfig","sub","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","options_slicedToArray","_ref2$","_auxConfig$reset","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","resolveTitleSubTitleContent","rawContent","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","_headerValues","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","Smartlabel","globalCache","defaultRegistry","globalRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","Components","VisualLayer","enums","unitHelpers","unitEnums","Encoders","encoderHelpers","groupUtils","groupEnums","SideEffects","standards","Behaviours","operators"],"mappings":"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sEACAzC,IAAIs8D,+BAESwW,cAAKK,aCZTA,YAAS,IAAIxyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,+BAESwW,cAAKK,aCALL,cAZK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,gCCESwW,cAZK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,gCCESwW,cAZK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,gCCESwW,gBAZK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,gCCESwW,gBAZK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,gCCESwW,kBAZK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIs8D,gCCASwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,gBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,gBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,gBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,gBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCRK6W,aAAS,IAAIxyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,+BAESwW,eAAKK,cCALL,gBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,eAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,iBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,cAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIs8D,gCCESwW,iBAVK,IAAInyE,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,m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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows} from \"./tsv\";\nexport {default as autoType} from \"./autoType\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export const START = 'start';\nexport const END = 'end';\nexport const BOTH = 'both';\n\nexport const BOUNDARY_POINTS = {\n    START: 'start',\n    END: 'end',\n    BOTH: 'both'\n};\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n\nexport const GEOM_FIELD = 'geometry';\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport GeoJSON from './geo-json';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Array} schema - The schema for input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr, GeoJSON };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, schema, options) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        arr.splice(0, 1)[0];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [schemaFields, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\nimport { DimensionSubtype } from '../enums';\n\n/**\n * This function takes the schema field passed and checks if has the subtype field\n * which ensure the data to be geo data\n *\n * @param {Object} obj any object\n * @return {boolean} Checks if a field is geoField or not\n */\nconst isGeoField = obj => obj.subtype === DimensionSubtype.GEO;\n\n/**\n * This function takes the schema field passed and checks if has the delimiter field\n * which ensure the data is provided in lat long form\n *\n * @param {Object} obj any object\n * @return {boolean} Checks the format of geo Data\n */\nconst isLatLong = obj => !!obj.delimiter;\n\n/**\n * There are three formats of data:\n * 1. lon-lat 2. data having type and coordinate fields\n * 3. geo fields of schema have lat long fields\n * All the three types are processed and changed as per\n * required type and returned from here\n *\n * @param {Object} selectedSchema the selected index of input schema\n * @param {Object} data the selected data\n * @param {string} selectedName the selected index of field names array.\n * @return {Array.<Object>} single entity of geo data with type and coordinates\n * [{ type: 'Point', coordinates: [23, 24] }]]\n */\nconst prepareGeoFields = (selectedSchema, data, selectedName) => {\n    let result = null;\n    const selectedData = data[selectedName];\n    const { delimiter, lat, long } = selectedSchema;\n    let la;\n    let lo;\n    if ('lat' in selectedSchema && 'long' in selectedSchema) {\n        la = +data[lat];\n        lo = +data[long];\n        if (!(Number.isNaN(la) || Number.isNaN(lo))) {\n            result = { type: 'Point', coordinates: [lo, la] };\n        }\n    } else if (selectedData && isLatLong(selectedSchema) && selectedData.includes(delimiter)) {\n        const coordinate = selectedData.split(delimiter);\n        result = { type: 'Point', coordinates: [+coordinate[0], +coordinate[1]] };\n    } else if (selectedData && 'type' in selectedData && 'coordinates' in selectedData) {\n        result = selectedData;\n    }\n\n    return result;\n};\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @param {Array.<Object>} schema - The input schema.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item, index) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema, ind) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n\n            // separate logic for geo Fields\n            fields[insertionIndex] = isGeoField(schema[ind])\n                    ? prepareGeoFields(schema[ind], arr[index], unitSchema)\n                    : item[unitSchema];\n        });\n        push(...fields);\n    });\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import { columnMajor } from '../utils';\nimport { GeoProps } from '../enums/geo-props';\nimport { GEOM_FIELD } from '../constants';\nimport { DimensionSubtype } from '../enums';\n\nconst GEOM_DEFAULT = 'geom_default';\n\n/**\n * Returns all the geometry objects and their properties in an array based on the type of the geometry.\n */\nconst geometryRetriever = {\n    [GeoProps.Feature]: obj => [obj],\n    [GeoProps.FeatureCollection]: obj => obj.features,\n    [GEOM_DEFAULT]: (obj) => {\n        const { type, coordinates } = obj;\n\n        return [{\n            geometry: {\n                type,\n                coordinates\n            },\n            properties: {}\n        }];\n    }\n};\n\n/**\n * Retrieves all the feature objects from a featureCollection or any feature object in an array.\n *\n * @return {Array} Array of features\n */\nconst getFeatures = (obj) => {\n    const { type } = obj;\n    const retriever = geometryRetriever[type] || geometryRetriever[GEOM_DEFAULT];\n\n    return retriever(obj);\n};\n\n/**\n * Inserts the values of the fields in an array and returns the index of the last field.\n *\n * @param {Array} fieldNames Array of field names\n * @param {Object} fieldInf Information about fields\n * @param {Array} fieldInf.fields Fields array\n * @param {Object} fieldInf.props Properties of each geometry\n * @param {Array} fieldInf.header Field names\n * @param {number} index Index of the field\n *\n * @return {number} Index of the last field.\n */\nconst insertValues = (fieldNames, fieldInf, index) => {\n    let insertionIndex;\n    const { fields, props, header } = fieldInf;\n\n    fieldNames.forEach((unitSchema) => {\n        if (unitSchema in header) {\n            insertionIndex = header[unitSchema];\n        } else {\n            header[unitSchema] = index++;\n            insertionIndex = index - 1;\n        }\n        fields[insertionIndex] = props[unitSchema];\n    });\n\n    return index;\n};\n/**\n * Parses and converts data formatted in GeoJSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in GeoJSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n *  {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"geometry\": {\n *          \"type\": \"Point\",\n *          \"coordinates\": [-2.960847, 53.430828]\n *         },\n *         \"properties\": {\n *           \"name\": \"Anfield\",\n *           \"amenity\": \"Football Stadium\"\n *         }\n *       }\n *     ]\n *  }\n *\n *  // Output data\n *  [\n *      ['country', 'population', 'geometry'],\n *      [ ['India'], [1200000000], [{ type: 'Point', coordinates: [-2.960847, 53.430828] }] ]\n *  ]\n */\nconst GeoJSON = (obj, schema = []) => {\n    let i = 0;\n    let geoField;\n\n    const header = {};\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = [];\n    const features = getFeatures(obj);\n\n    for (let idx = 0, len = schema.length; idx < len; idx++) {\n        const { name, subtype } = schema[idx];\n        schemaFieldsName.push(name);\n        if (name === GEOM_FIELD && subtype === DimensionSubtype.GEO) {\n            geoField = name;\n        }\n    }\n\n    !geoField && schemaFieldsName.push(GEOM_FIELD);\n    features.forEach((feature) => {\n        const fields = [];\n        const { geometry, properties } = feature;\n        const allProps = Object.assign({}, properties, { geometry });\n\n        i = insertValues(schemaFieldsName, { fields, props: allProps, header }, i);\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n};\n\nexport default GeoJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData, createBinnedGeoData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\nimport { GEO_BIN_SHAPES } from './enums/geo-bin-shapes';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} fieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (fieldName, config = {}) {\n        let binField;\n        const defConfig = {\n            shapeType: GEO_BIN_SHAPES.HEX\n        };\n        config = Object.assign(defConfig, config);\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[fieldName]) {\n            throw new Error(`Field ${fieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${fieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const field = this.getFieldspace().fieldsObj()[fieldName];\n\n        const subtype = field.subtype();\n\n        if (subtype === DimensionSubtype.GEO) {\n            const binnedData = createBinnedGeoData(field, this._rowDiffset, config);\n            binField = createFields([binnedData], [\n                {\n                    name: binFieldName,\n                    type: FieldType.DIMENSION,\n                    subtype: DimensionSubtype.BINNED_GEO,\n                    shapeType: config.shapeType,\n                    binSize: config.binSize\n                }], [binFieldName])[0];\n        } else {\n            const { binnedData, bins } = createBinnedFieldData(field, this._rowDiffset, config);\n\n            binField = createFields([binnedData], [\n                {\n                    name: binFieldName,\n                    type: FieldType.DIMENSION,\n                    subtype: DimensionSubtype.BINNED,\n                    bins\n                }], [binFieldName])[0];\n        }\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { fieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    GEO_JSON: 'GeoJSON',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned',\n    BINNED_GEO: 'binnedgeo'\n};\n\nexport default DimensionSubtype;\n","import DistanceUnits from './distance-units';\n\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport const earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport const UNITS = {\n    CENTIMETERS: 'centimeters',\n    DEGREES: 'degrees',\n    FEET: 'feet',\n    INCHES: 'inches',\n    KILOMETERS: 'kilometers',\n    METERS: 'meters',\n    METRES: 'metres',\n    MILES: 'miles',\n    MILLIMETERS: 'millimeters',\n    NAUTICALMILES: 'nauticalmiles',\n    RADIANS: 'radians',\n    YARDS: 'yards',\n};\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport const factors = {\n    [DistanceUnits.CENTIMETERS]: earthRadius * 100,\n    [DistanceUnits.DEGREES]: earthRadius / 111325,\n    [DistanceUnits.FEET]: earthRadius * 3.28084,\n    [DistanceUnits.INCHES]: earthRadius * 39.370,\n    [DistanceUnits.KILOMETERS]: earthRadius / 1000,\n    [DistanceUnits.METERS]: earthRadius,\n    [DistanceUnits.METRES]: earthRadius,\n    [DistanceUnits.MILES]: earthRadius / 1609.344,\n    [DistanceUnits.MILLIMETERS]: earthRadius * 1000,\n    [DistanceUnits.NAUTICALMILES]: earthRadius / 1852,\n    [DistanceUnits.RADIANS]: 1,\n    [DistanceUnits.YARDS]: earthRadius / 1.0936,\n};\n","const DistanceUnits = {\n    CENTIMETERS: 'centimeters',\n    DEGREES: 'degrees',\n    FEET: 'feet',\n    INCHES: 'inches',\n    KILOMETERS: 'kilometers',\n    METERS: 'meters',\n    METRES: 'metres',\n    MILES: 'miles',\n    MILLIMETERS: 'millimeters',\n    NAUTICALMILES: 'nauticalmiles',\n    RADIANS: 'radians',\n    YARDS: 'yards',\n};\n\nexport default DistanceUnits;\n","export const GEO_ERR_MESSAGES = {\n    isArray: 'Coordinates must be an array',\n    hasMinimumPoints: 'Coordinates must have atleast two points',\n    hasValidLatLong: 'Latitude and longitude must have valid values'\n};\n\nexport const POLYGON_ERR_MESSAGES = {\n    hasMinimumCoordinates: 'Polygon coordinates should contain atleast one array',\n    hasIdenticalPoints: 'The first point and last point of polygon coordinates should be identical',\n    hasMinimumFourPoints: 'Polygon coordinates should minimum four points'\n};\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","export const GEO_BIN_SHAPES = {\n    HEX: 'hex'\n};\n","/**\n * This object contains the additional properties in geojson.\n */\nexport const GeoProps = {\n    /**\n     * A Feature object contains a geometry object which has the coordinates array of the geographical region.\n     * https://tools.ietf.org/html/rfc7946#section-3.2\n     */\n    Feature: 'Feature',\n    /**\n     * A FeatureCollection object contains an array of feature objects.\n     * https://tools.ietf.org/html/rfc7946#section-3.3\n     */\n    FeatureCollection: 'FeatureCollection'\n};\n","/**\n * GeomTypes enum defines the geometry types available in geojson. Each geometry has a coordinates array which contains\n * the latitude and longitudinal positions of the geometry.\n */\nexport const GeomTypes = {\n    Polygon: 'Polygon',\n    Point: 'Point',\n    MultiPoint: 'MultiPoint',\n    LineString: 'LineString',\n    MultiLineString: 'MultiLineString',\n    MultiPolygon: 'MultiPolygon'\n};\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\nexport { GeomTypes } from './geom-types';\nexport { GeoProps } from './geo-props';\nexport { default as DistanceUnits } from './distance-units';\nexport { GEO_BIN_SHAPES } from './geo-bin-shapes';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union,\n  hexbin\n} from './operator';\nimport GeoField from './fields/geo-field';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport {\n    DateTimeFormatter,\n    isSame,\n    geoUnion,\n    perimeter,\n    nearestPoint,\n    bounds,\n    centroid,\n    center,\n    area,\n    distance,\n    isInBounds,\n    includes,\n    within\n} from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES, ROW_ID } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union,\n    hexbin\n};\n\nconst utils = {\n    geo: {\n        isSame,\n        geoUnion,\n        perimeter,\n        nearestPoint,\n        bounds,\n        centroid,\n        center,\n        area,\n        distance,\n        isInBounds,\n        includes,\n        within\n    }\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    ROW_ID,\n    InvalidAwareTypes,\n    utils,\n    version,\n    GeoField\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    GeoField,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    GeoParser,\n    PartialField\n} from './fields';\nimport BinnedGeoField from './fields/binned-geo';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nconst createUnitField = (data, schema) => {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.GEO:\n            partialField = new PartialField(schema.name, data, schema, new GeoParser(schema));\n            return new GeoField(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED_GEO:\n            partialField = new PartialField(schema.name, data, schema, new GeoParser(schema));\n            return new BinnedGeoField(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n};\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial (partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        case DimensionSubtype.GEO:\n            return new GeoField(partialField, rowDiffset);\n        case DimensionSubtype.BINNED_GEO:\n            return new BinnedGeoField(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields (dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import GeoField from '../geo-field';\nimport { DimensionSubtype } from '../../enums';\n\n/**\n * Represents binned geo field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class BinnedGeoField extends GeoField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedBounds = null;\n    }\n\n    subtype () {\n        return DimensionSubtype.BINNED_GEO;\n    }\n\n    shapeType () {\n        return this.partialField.schema.shapeType;\n    }\n\n    binSize () {\n        return this.partialField.schema.binSize;\n    }\n}\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Dimension from '../dimension';\nimport { bounds } from '../../utils/geo';\nimport InvalidAwareTypes from '../../invalid-aware-types';\nimport { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * Represents geo field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class GeoField extends Dimension {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedBounds = null;\n    }\n\n    /**\n     * Gets the coordinates of all the geofields.\n     * @return {Array} coordinates\n     */\n    getCoordinates () {\n        const coordinates = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            coordinates.push(datum.getCoordinates());\n        });\n\n        return coordinates;\n    }\n\n    /**\n     * Caches and returns the bounds for the geo field.\n     * @return {Array} Result of this.bounds\n     *\n     * @public\n     */\n    calculateDataDomain () {\n        if (!this._cachedBounds) {\n            this._cachedBounds = this.bounds();\n        }\n        return this._cachedBounds;\n    }\n\n    /**\n     * Returns bounds for all of the geo fields.\n     * @return {Array} Array of bounds\n     *\n     * @public\n     */\n    bounds () {\n        if (this._cachedBounds) {\n            return this._cachedBounds;\n        }\n\n        const boundsArr = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n\n            if (!InvalidAwareTypes.isInvalid(datum)) {\n                boundsArr.push(datum.bounds());\n            }\n        });\n\n        const boundsFlattened = [].concat(...boundsArr);\n        this._cachedBounds = bounds(boundsFlattened);\n        return this._cachedBounds;\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as GeoField } from './geo-field';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as GeoParser } from './parsers/geometry-parsers/geometry';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../../field-parser';\nimport { geometryParsers } from '..';\nimport InvalidAwareTypes from '../../../../invalid-aware-types';\n\n/**\n * An abstract GeoParser class which parses the geo data values and creates the geom instance.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class GeoParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n    }\n\n    /**\n     * Parses a single value of a field and returns the geom instance.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the geom instance.\n     */\n    parse (val) {\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            const { type } = val;\n\n            return geometryParsers[type](val);\n        }\n        return InvalidAwareTypes.getInvalidType(val);\n    }\n}\n","import { GeomTypes } from '../../../enums/geom-types';\nimport { pointParser } from './point';\nimport { polygonParser } from './polygon';\nimport { multiPolygonParser } from './multi-polygon';\nimport { lineParser } from './line-string';\nimport { multiPointParser } from './multi-point';\nimport { multiLineParser } from './multi-line-string';\n\n/**\n * All types of geometry parsers.\n */\nexport const geometryParsers = {\n    [GeomTypes.Point]: pointParser,\n    [GeomTypes.Polygon]: polygonParser,\n    [GeomTypes.LineString]: lineParser,\n    [GeomTypes.MultiPolygon]: multiPolygonParser,\n    [GeomTypes.MultiPoint]: multiPointParser,\n    [GeomTypes.MultiLineString]: multiLineParser\n};\n","import { GEO_ERR_MESSAGES } from '../../../../enums/error-messages';\nimport { checkPointCoordinates } from '../point';\nimport LineString from '../../../../geo/line-string';\n\n/**\n * Checks the line string coordinates and throws if any invalid values are given.\n *\n * @param {Array} coordinates Array of coordinates.\n */\nexport const checkLineStringCoordinates = (coordinates) => {\n    if (!Array.isArray(coordinates)) {\n        throw new Error(GEO_ERR_MESSAGES.isArray);\n    }\n    if (!(coordinates.length > 1)) {\n        throw new Error(GEO_ERR_MESSAGES.hasMinimumPoints);\n    }\n\n    coordinates.forEach((coord) => {\n        checkPointCoordinates(coord);\n    });\n\n    return true;\n};\n\n/**\n * Returns a new LineString instance if the coordinates are valid. Throws error if coordinates are invalid or\n * the structure is not proper.\n *\n * @param {Object} val\n * @param {string} val.type Type of geometry\n * @param {Array} val.coordinates Coordinates array.\n *\n * @return {LineString} Instance of LineString.\n */\nexport const lineParser = (val) => {\n    const coordinates = val.coordinates;\n\n    checkLineStringCoordinates(coordinates);\n\n    return new LineString(val);\n};\n","import { GEO_ERR_MESSAGES } from '../../../../enums/error-messages';\nimport { checkLineStringCoordinates } from '../line-string';\nimport MultiLineString from '../../../../geo/multi-line-string';\n\n/**\n * Returns a new MultiLineString instance if the coordinates are valid. Throws error if coordinates are invalid or\n * the structure is not proper.\n *\n * @param {Object} val\n * @param {string} val.type Type of geometry\n * @param {Array} val.coordinates Coordinates array.\n *\n * @return {MultiLineString} Instance of MultiLineString.\n */\nexport const multiLineParser = (val) => {\n    const coordinates = val.coordinates;\n\n    if (!Array.isArray(coordinates)) {\n        throw new Error(GEO_ERR_MESSAGES.isArray);\n    }\n\n    coordinates.forEach((coord) => {\n        checkLineStringCoordinates(coord);\n    });\n\n    return new MultiLineString(val);\n};\n","import { GEO_ERR_MESSAGES } from '../../../../enums/error-messages';\nimport { checkPointCoordinates } from '../point';\nimport MultiPoint from '../../../../geo/multi-point';\n\n/**\n * Returns a new MultiPoint instance if the coordinates are valid. Throws error if coordinates are invalid or\n * the structure is not proper.\n *\n * @param {Object} val\n * @param {string} val.type Type of geometry\n * @param {Array} val.coordinates Coordinates array.\n *\n * @return {MultiPoint} Instance of MultiPoint.\n */\nexport const multiPointParser = (val) => {\n    const coordinates = val.coordinates;\n\n    if (!Array.isArray(coordinates)) {\n        throw new Error(GEO_ERR_MESSAGES.isArray);\n    }\n\n    coordinates.forEach((coord) => {\n        checkPointCoordinates(coord);\n    });\n\n    return new MultiPoint(val);\n};\n","import { checkPolygonCoordinates } from '../polygon';\nimport { GEO_ERR_MESSAGES } from '../../../../enums/error-messages';\nimport MultiPolygon from '../../../../geo/multi-polygon';\n\n/**\n * Returns a new MultiPolygon instance if the coordinates are valid. Throws error if coordinates are invalid or\n * the structure is not proper.\n *\n * @param {Object} val\n * @param {string} val.type Type of geometry\n * @param {Array} val.coordinates Coordinates array.\n *\n * @return {MultiPolygon} Instance of multipolygon.\n */\nexport const multiPolygonParser = (val) => {\n    const { coordinates } = val;\n\n    if (!Array.isArray(coordinates)) {\n        throw new Error(GEO_ERR_MESSAGES.isArray);\n    }\n\n    coordinates.forEach((coordArr) => {\n        checkPolygonCoordinates(coordArr);\n    });\n\n    return new MultiPolygon(val);\n};\n","import { latLongPredicates } from '../../../../utils/geo';\nimport { GEO_ERR_MESSAGES } from '../../../../enums/error-messages';\nimport Point from '../../../../geo/point';\n\nexport const pointPredicates = {\n    isArray: coordinates => Array.isArray(coordinates),\n    hasMinimumPoints: coordinates => coordinates.length >= 2,\n    hasValidLatLong: (coordinates) => {\n        const hasValidLatLong = coordinates.every((coord, index) => typeof coord === 'number' &&\n            latLongPredicates[index](coord));\n        return hasValidLatLong;\n    }\n};\n\nexport const checkPointCoordinates = (coordinates) => {\n    let error;\n\n    const isValid = Object.keys(pointPredicates).every((key) => {\n        const valid = pointPredicates[key](coordinates);\n        if (!valid) {\n            error = GEO_ERR_MESSAGES[key];\n        }\n        return valid;\n    });\n\n    if (!isValid) {\n        throw new Error(error);\n    }\n\n    return true;\n};\n\n/**\n * Returns a new point instance if the coordinates are valid. Throws error if coordinates are invalid or the structure\n * is not proper.\n *\n * @param {Object} val\n * @param {string} val.type Type of geometry\n * @param {Array} val.coordinates Coordinates array.\n *\n * @return {Point} Instance of point.\n */\nexport const pointParser = (val) => {\n    const coordinates = val.coordinates;\n\n    checkPointCoordinates(coordinates);\n\n    return new Point(val);\n};\n","import { checkPointCoordinates } from '../point';\nimport { POLYGON_ERR_MESSAGES, GEO_ERR_MESSAGES } from '../../../../enums/error-messages';\nimport Polygon from '../../../../geo/polygon';\n\nexport const polygonPredicates = {\n    hasIdenticalPoints: (coordinates) => {\n        const len = coordinates.length;\n        return `${coordinates[0]}` === `${coordinates[len - 1]}`;\n    },\n    hasMinimumFourPoints: coordinates => coordinates.length >= 4\n};\n\n/**\n * Checks the coordinates of a linear ring in a polygon and throws error if any invalid values are given.\n *\n * @param {Array} coordinates Array of coordinates.\n */\nexport const checkLinearRing = (coordinates) => {\n    let error;\n\n    coordinates.forEach((coord) => {\n        checkPointCoordinates(coord);\n    });\n\n    const isValid = Object.keys(polygonPredicates).every((key) => {\n        const valid = polygonPredicates[key](coordinates);\n        if (!valid) {\n            error = POLYGON_ERR_MESSAGES[key];\n        }\n        return valid;\n    });\n\n    if (!isValid) {\n        throw new Error(error);\n    }\n\n    return true;\n};\n\nexport const checkPolygonCoordinates = (coordinates) => {\n    if (!Array.isArray(coordinates)) {\n        throw new Error(GEO_ERR_MESSAGES.isArray);\n    }\n    if (!coordinates.length) {\n        throw new Error(POLYGON_ERR_MESSAGES.hasMinimumCoordinates);\n    }\n    coordinates.forEach((coordArr) => {\n        checkLinearRing(coordArr);\n    });\n    return true;\n};\n\nexport const polygonParser = (val) => {\n    const coordinates = val.coordinates;\n\n    checkPolygonCoordinates(coordinates);\n\n    return new Polygon(val);\n};\n\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n}\n\n","/**\n * Represents Geometry.\n *\n * @public\n * @class\n */\nexport default class Geometry {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} value - Value type value\n     * @param {Array} value.coordinates - The coordinates of the geometry\n     * @param {string} value.type - The coordinates of the geometry\n     */\n    constructor (value) {\n        const { type, coordinates } = value;\n        this._cachedBounds = null;\n        this.type = type;\n        this.coordinates = coordinates;\n    }\n\n    /**\n     * Get co-ordinates of the geometry.\n     *\n     * @public\n     * @abstract\n     * @return {Array} coordinates of geometry\n     */\n    getCoordinates () {\n        return this.coordinates;\n    }\n\n    /**\n     * Get bounds box of the geometry.\n     *\n     * @public\n     * @abstract\n     */\n    bounds () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Get center of the geometry.\n     *\n     * @public\n     * @abstract\n     */\n    center () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Get area of the geometry.\n     *\n     * @public\n     * @abstract\n     */\n    area () {\n        throw new Error('Not yet implemented');\n    }\n\n\n    /**\n     * includes a point or not in the geometry.\n     *\n     * @public\n     * @abstract\n     */\n    includes () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Get the type and coordinates for a geometry\n     * @return {Object} type and coordinates for a geometry\n     */\n    serialize () {\n        return {\n            type: this.type,\n            coordinates: this.getCoordinates(),\n        };\n    }\n\n    /**\n     * Get distance of the geometry.\n     *\n     * @public\n     * @abstract\n     */\n    distance () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { GeomTypes } from '../enums';\nimport Point from './point';\nimport Polygon from './polygon';\nimport LineString from './line-string';\nimport MultiPolygon from './multi-polygon';\nimport MultiPoint from './multi-point';\nimport MultiLineString from './multi-line-string';\n\n/**\n * All types of geometries\n */\nexport const geometryMap = {\n    [GeomTypes.Point]: Point,\n    [GeomTypes.Polygon]: Polygon,\n    [GeomTypes.LineString]: LineString,\n    [GeomTypes.MultiPolygon]: MultiPolygon,\n    [GeomTypes.MultiPoint]: MultiPoint,\n    [GeomTypes.MultiLineString]: MultiLineString\n};\n","import { BOUNDARY_POINTS } from '../../constants/geo';\nimport { radiansToLength, lengthToRadians } from '../../utils/helper';\nimport { distance } from '../../utils/geo';\nimport { UNITS } from '../../enums/distance-factors';\n\nconst dot = (u, v) => (u[0] * v[0] + u[1] * v[1]);\n\n/**\n * Returns the distance between a point P on a segment AB.\n *\n * @private\n * @param {Array<number>} p external point\n * @param {Array<number>} a first segment point\n * @param {Array<number>} b second segment point\n * @param {Object} [options={}] Optional parameters\n * @returns {number} distance\n */\nexport const distanceToLine = (p, a, b) => {\n    const v = [b[0] - a[0], b[1] - a[1]];\n    const w = [p[0] - a[0], p[1] - a[1]];\n    const c1 = dot(w, v);\n    if (c1 <= 0) { return distance(p, a, UNITS.DEGREES); }\n    const c2 = dot(v, v);\n    if (c2 <= c1) { return distance(p, b, UNITS.DEGREES); }\n    const b2 = c1 / c2;\n    const Pb = [a[0] + (b2 * v[0]), a[1] + (b2 * v[1])];\n    return distance(p, Pb, UNITS.DEGREES);\n};\n\n/**\n* Converts a length to the requested unit.\n* Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n*\n* @param {number} length to be converted\n* @param {Units} [originalUnit='kilometers'] of the length\n* @param {Units} [finalUnit='kilometers'] returned unit\n* @returns {number} the converted length\n*/\nexport const convertLength = (length, originalUnit = UNITS.KILOMETERS, finalUnit = UNITS.KILOMETERS) => {\n    if (length < 0) {\n        throw new Error('length must be a positive number');\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n};\n\n/**\n * component logic to check if point lies on a line\n *\n * @private\n * @param {Object} params params for the operation\n * @param {Position} startPoint coord pair of start of line\n * @param {Position} endPoint coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @param {boolean|string} ignoreBoundary whether the point is allowed to fall on the line ends.\n * If true which end to ignore.\n * @return {boolean} true/false\n */\nexport const isPointOnLineSegment = (params) => {\n    const { point, startPoint, endPoint, ignoreBoundary } = params;\n    const x = point[0];\n    const y = point[1];\n    const x1 = startPoint[0];\n    const y1 = startPoint[1];\n    const x2 = endPoint[0];\n    const y2 = endPoint[1];\n    const dxc = point[0] - x1;\n    const dyc = point[1] - y1;\n    const dxl = x2 - x1;\n    const dyl = y2 - y1;\n    const cross = dxc * dyl - dyc * dxl;\n    let returnData = false;\n\n    if (cross !== 0) {\n        returnData = false;\n    } else if (!ignoreBoundary) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            returnData = dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n        }\n        returnData = dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n    } else if (ignoreBoundary === BOUNDARY_POINTS.START) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            returnData = dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n        } else {\n            returnData = dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n        }\n    } else if (ignoreBoundary === BOUNDARY_POINTS.END) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            returnData = dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n        } else {\n            returnData = dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n        }\n    } else if (ignoreBoundary === BOUNDARY_POINTS.BOTH) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            returnData = dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n        } else {\n            returnData = dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n        }\n    }\n    return returnData;\n};\n","import Geometry from '../geometry';\nimport { GeomTypes } from '../../enums/geom-types';\nimport { bounds, center } from '../../utils/geo';\nimport { distanceToLine, convertLength, isPointOnLineSegment } from './helper';\nimport Point from '../point';\nimport { BOUNDARY_POINTS } from '../../constants/geo';\nimport { UNITS } from '../../enums/distance-factors';\n\n/**\n * Represents LineString.\n *\n * @public\n * @class\n */\nexport default class LineString extends Geometry {\n    /**\n     * Initialize a new instance of LineString.\n     *\n     * @public\n     * @param {Object} value - Value type value\n     * @param {Array} value.coordinates - The coordinates of the lineString\n     * @param {string} value.type - The coordinates of the lineString\n     */\n    constructor (value) {\n        super(value);\n        this._realCoordinates = value.coordinates;\n        this.coordinates = value.coordinates.map(coordinate => new Point({\n            type: GeomTypes.Point,\n            coordinates: coordinate\n        }));\n    }\n\n    /**\n     * Get co-ordinates of the lineString.\n     *\n     * @public\n     * @return {Array} array of points\n     */\n    getCoordinates () {\n        return this._realCoordinates;\n    }\n\n    /**\n     * Get bounds box of the lineString.\n     *\n     * @public\n     * @param {Array} coordinates coordinates of the lineString\n     * @return {Array} an array of format [[minX, minY],[maxX, maxY]]\n    */\n    bounds () {\n        let boundsArr = this._cachedBounds;\n\n        if (!boundsArr) {\n            const lineStringData = this.coordinates.map(point => point.coordinates);\n            boundsArr = this._cachedBounds = bounds(lineStringData);\n        }\n\n        return boundsArr;\n    }\n\n    /**\n     * Returns true if a point is on a line. Accepts a optional parameter to ignore the\n     * start and end vertices of the linestring.\n     *\n     * @name includes\n     * @param {Array.<number>} point point Coordinates of form [x, y]\n     * @param {boolean} excludeBoundary whether to ignore the start and end vertices.\n     * @return {boolean} true/false\n     */\n    includes(point, excludeBoundary) {\n        const lineCoords = this.getCoordinates();\n\n        for (let i = 0; i < lineCoords.length - 1; i++) {\n            let ignoreBoundary = '';\n            if (excludeBoundary) {\n                if (i === 0) { ignoreBoundary = BOUNDARY_POINTS.START; }\n                if (i === lineCoords.length - 2) { ignoreBoundary = BOUNDARY_POINTS.END; }\n                if (i === 0 && i + 1 === lineCoords.length - 1) { ignoreBoundary = BOUNDARY_POINTS.BOTH; }\n            }\n            if (isPointOnLineSegment({\n                startPoint: lineCoords[i],\n                endPoint: lineCoords[i + 1],\n                point,\n                ignoreBoundary,\n            })) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n     /** Get area of the line string.\n     *\n     * @public\n     * @return {number} area of the line string\n     */\n    area () {\n        return 0;\n    }\n\n    /**\n     * Get center of the line string.\n     *\n     * @public\n     * @return {Array} center of the bounds\n     */\n    center () {\n        return center(this._realCoordinates);\n    }\n\n    /**\n     * Returns the minimum distance between from a point\n     * minimum distance between the point and any segment of the `LineString`.\n     *\n     * @name distance\n     * @param {Array<number>} pt Coordinates\n     * @param {string} units can be anything supported\n     * (ex: degrees, radians, miles, or kilometers)\n     * @returns {number} distance between point and line\n     */\n    distance (pt, units = UNITS.KILOMETERS) {\n        // validation\n        if (!pt && !Array.isArray(pt)) { throw new Error('Enter valid point.'); }\n        let distance = Infinity;\n        for (let i = 1; i < this._realCoordinates.length; i++) {\n            const a = this._realCoordinates[i - 1];\n            const b = this._realCoordinates[i];\n            const d = distanceToLine(pt, a, b);\n            if (d < distance) { distance = d; }\n        }\n        return convertLength(distance, UNITS.DEGREES, units);\n    }\n}\n","import Geometry from '../geometry';\nimport LineString from '../line-string';\nimport { bounds, center } from '../../utils/geo';\nimport { GeomTypes } from '../../enums/geom-types';\n\n/**\n * Represents MultiLineString.\n *\n * @public\n * @class\n */\nexport default class MultiLineString extends Geometry {\n    /**\n     * Initialize a new instance of MultiLineString.\n     *\n     * @public\n     * @param {Object} value - Value type value\n     * @param {Array} value.coordinates - The coordinates of the multiLineString\n     * @param {string} value.type - The coordinates of the multiLineString\n     */\n    constructor (value) {\n        super(value);\n        this._realCoordinates = value.coordinates;\n        this.coordinates = value.coordinates.map(coordinate => new LineString({\n            type: GeomTypes.LineString,\n            coordinates: coordinate\n        }));\n    }\n\n    /**\n     * Get co-ordinates of the multiLineString.\n     *\n     * @public\n     * @return {Array} an array of LineString\n     */\n    getCoordinates () {\n        return this._realCoordinates;\n    }\n\n\n    /**\n     * Get bounds box of the multiLineString.\n     *\n     * @public\n     * @param {Array} coordinates coordinates of the multiLineString\n     * @return {Array} an array of format [[minX, minY],[maxX, maxY]]\n    */\n    bounds () {\n        let boundsArr = this._cachedBounds;\n\n        if (!boundsArr) {\n            const lineData = this.coordinates.map(line => line.bounds());\n            const data = lineData.flat(1);\n            boundsArr = this._cachedBounds = bounds(data);\n        }\n\n        return boundsArr;\n    }\n\n    /**\n     * Returns true if a point is on a line. Accepts a optional parameter to ignore the\n     * start and end vertices of the line string.\n     *\n     * @name includes\n     * @param {Array.<number>} point point Coordinates of form [x, y]\n     * @param {boolean} excludeBoundary whether to ignore the start and end vertices.\n     * @return {boolean} true/false\n     */\n    includes (point, excludeBoundary) {\n        return this.coordinates.some(line => line.includes(point, excludeBoundary));\n    }\n\n    /**\n     * Get area of the multi line string.\n     *\n     * @public\n     * @return {number} area of the multi line string\n     */\n    area () {\n        return 0;\n    }\n\n    /**\n     * Get center of the multi line string.\n     *\n     * @public\n     * @return {Array} center of the center\n     */\n    center () {\n        const lineData = this.coordinates.map(line => line.center());\n        return center(lineData);\n    }\n}\n","import Geometry from '../geometry';\nimport Point from '../point';\nimport { bounds, center } from '../../utils/geo';\nimport { GeomTypes } from '../../enums/geom-types';\n\n/**\n * Represents MultiPoint.\n *\n * @public\n * @class\n */\nexport default class MultiPoint extends Geometry {\n    /**\n     * Initialize a new instance of MultiPoint.\n     *\n     * @public\n     * @param {Object} value - Value type value\n     * @param {Array} value.coordinates - The coordinates of the multiPoint\n     * @param {string} value.type - The coordinates of the multiPoint\n     */\n    constructor (value) {\n        super(value);\n        this._realCoordinates = value.coordinates;\n        this.coordinates = value.coordinates.map(coordinate => new Point({\n            type: GeomTypes.Point,\n            coordinates: coordinate\n        }));\n    }\n\n    /**\n     * Get co-ordinates of the multiPoint.\n     *\n     * @public\n     * @return {Array} array of coordinates\n     */\n    getCoordinates () {\n        return this._realCoordinates;\n    }\n\n    /**\n     * Get bounds box of the multiPoint.\n     *\n     * @public\n     * @param {Array} coordinates coordinates of the multiPoint\n     * @return {Array} an array of format [[minX, minY],[maxX, maxY]]\n    */\n    bounds () {\n        let boundsArr = this._cachedBounds;\n\n        if (!boundsArr) {\n            const multiPointData = this.coordinates.map(point => point.coordinates);\n            boundsArr = this._cachedBounds = bounds(multiPointData);\n        }\n\n        return boundsArr;\n    }\n\n    /**\n     * Get area of the multi point.\n     *\n     * @public\n     * @return {number} area of the multi point\n     */\n    area () {\n        return 0;\n    }\n\n    /**\n     * Get center of the multiPoint.\n     *\n     * @public\n     * @return {Array} center of the bounds\n     */\n    center () {\n        return center(this._realCoordinates);\n    }\n\n    /**\n     * Returns true if a point is in multiline.\n     *\n     * @name includes\n     * @param {Array.<number>} point point Coordinates of form [x, y]\n     * @return {boolean} true/false\n     */\n    includes (point) {\n        let output = false;\n        const mPointCoord = this.getCoordinates();\n        for (let i = 0; i < mPointCoord.length; i++) {\n            if (mPointCoord[i][0] === point[0] && mPointCoord[i][1] === point[1]) {\n                output = true;\n                break;\n            }\n        }\n        return output;\n    }\n}\n","import Geometry from '../geometry';\nimport Polygon from '../polygon';\nimport MultiPoint from '../multi-point';\nimport { bounds } from '../../utils/geo';\nimport { GeomTypes } from '../../enums/geom-types';\n\n/**\n * Represents MultiPolygon.\n *\n * @public\n * @class\n */\nexport default class MultiPolygon extends Geometry {\n    /**\n     * Initialize a new instance of MultiPolygon.\n     *\n     * @public\n     * @param {Object} value - Value type value\n     * @param {Array} value.coordinates - The coordinates of the multiPolygon\n     * @param {string} value.type - The coordinates of the multiPolygon\n     */\n    constructor (value) {\n        super(value);\n        this._realCoordinates = value.coordinates;\n        this.coordinates = value.coordinates.map(coordinate => new Polygon({\n            type: GeomTypes.Polygon,\n            coordinates: coordinate\n        }));\n    }\n\n    /**\n     * Get co-ordinates of the multiPolygon.\n     *\n     * @public\n     * @return {Array} array of Polygons\n     */\n    getCoordinates () {\n        return this._realCoordinates;\n    }\n\n    /**\n     * Get bounds box of the multi polygon.\n     *\n     * @public\n     * @return {Array} an array of format [[minX, minY],[maxX, maxY]]\n    */\n    bounds () {\n        let boundsArr = this._cachedBounds;\n\n        if (!boundsArr) {\n            const polyData = this.coordinates.map(poly => poly.bounds());\n            const data = polyData.flat(1);\n            boundsArr = this._cachedBounds = bounds(data);\n        }\n        return boundsArr;\n    }\n\n    /**\n     * Get area of the multi polygon.\n     *\n     * @public\n     * @return {number} area of the multi polygon\n     */\n    area () {\n        const polyAreaData = this.coordinates.map(poly => poly.area());\n        return polyAreaData.reduce((a, b) => a + b, 0);\n    }\n\n    /**\n     * Get center of the multi polygon.\n     *\n     * @public\n     * @return {number} center of the multi polygon\n     */\n    center () {\n        const polyCenterData = this.coordinates.map(poly => poly.center());\n        const multiPoint = new MultiPoint({\n            type: GeomTypes.MultiPoint,\n            coordinates: polyCenterData\n        });\n        return multiPoint.center();\n    }\n\n    /**\n     * Returns true if a point is on one of the polygons in multi-polygons.\n     * Accepts a optional parameter to ignore the boundaries of multi polygon\n     *\n     * @name includes\n     * @param {Array.<number>} point point Coordinates of form [x, y]\n     * @param {boolean} excludeBoundary whether to ignore boundaries.\n     * @return {boolean} true/false\n     */\n    includes (point, excludeBoundary) {\n        return this.coordinates.some(poly => poly.includes(point, excludeBoundary));\n    }\n}\n","import Geometry from '../geometry';\nimport { bounds, distance } from '../../utils/geo';\nimport { UNITS } from '../../enums/distance-factors';\n\n/**\n * Represents Point.\n *\n * @public\n * @class\n */\nexport default class Point extends Geometry {\n    /**\n     * Get co-ordinates of the point.\n     *\n     * @public\n     * @return {Array} coordinates of the Point\n     */\n    getCoordinates () {\n        return this.coordinates;\n    }\n\n    /**\n     * Get bounds box of the point.\n     *\n     * @public\n     * @param {Array} coordinates coordinates of the point\n     * @return {Array} an array of format [[minX, minY],[maxX, maxY]]\n    */\n    bounds () {\n        let boundsArr = this._cachedBounds;\n\n        if (!boundsArr) {\n            boundsArr = this._cachedBounds = bounds([this.coordinates]);\n        }\n\n        return boundsArr;\n    }\n    /**\n     * Returns true if a point is in a point.\n     *\n     * @name includes\n     * @param {Array.<number>} point point Coordinates of form [x, y]\n     * @return {boolean} true/false\n     */\n    includes (point) {\n        return this.coordinates[0] === point[0] && this.coordinates[1] === point[1];\n    }\n\n    /**\n     * Get area of the point.\n     *\n     * @public\n     * @return {number} area of the point\n     */\n    area () {\n        return 0;\n    }\n\n\n    /**\n     * Get center of the point.\n     *\n     * @public\n     * @return {Array} the point\n     */\n    center () {\n        return this.coordinates;\n    }\n\n    /**\n     * Returns the minimum distance between from a point\n     *\n     * @name distance\n     * @param {Array<number>} pt Coordinates\n     * @param {string} units can be anything supported\n     * (ex: degrees, radians, miles, or kilometers)\n     * @returns {number} distance between point and point\n     */\n    distance (pt, units = UNITS.KILOMETERS) {\n        // validation\n        if (!pt && !Array.isArray(pt)) { throw new Error('Enter valid point.'); }\n        return distance(pt, this.getCoordinates(), units);\n    }\n}\n","import { GeomTypes } from '../../enums/geom-types';\nimport LineString from '../line-string';\n\n/**\n * sanitize the config of the coordinate to change it to\n * an array of line strings\n * @param {Array} value array of original values\n * @return {Array} array of Line Strings\n */\nexport const sanitizeConfig = (value) => {\n    const coordinates = [];\n    const type = GeomTypes.LineString;\n\n    for (let i = 0; i < value.length; i++) {\n        coordinates[i] = [];\n        for (let j = 0; j < value[i].length - 1; j++) {\n            coordinates[i].push(new LineString({\n                type, coordinates: [value[i][j], value[i][j + 1]]\n            }));\n        }\n    }\n    return coordinates;\n};\n","import Geometry from '../geometry';\nimport { bounds, area, center, includes } from '../../utils/geo';\nimport { sanitizeConfig } from './helper';\n/**\n * Represents Polygon.\n * Coordinates of a Polygon are an array of linear ring coordinate arrays.\n * The first element in the array represents the exterior ring.\n * Any subsequent elements represent interior rings (or holes).\n * https://tools.ietf.org/html/rfc7946#section-3.1.6\n * @public\n * @class\n */\nexport default class Polygon extends Geometry {\n    /**\n     * Initialize a new instance of Polygon.\n     *\n     * @public\n     * @param {Object} value - Value type value\n     * @param {Array} value.coordinates - The coordinates of the polygon\n     * @param {string} value.type - The coordinates of the polygon\n     */\n    constructor (value) {\n        super(value);\n        this._realCoordinates = value.coordinates;\n        this.coordinates = sanitizeConfig(value.coordinates);\n    }\n\n    /**\n     * Get co-ordinates of the polygon.\n     *\n     * @public\n     * @return {Array} array of line strings\n     */\n    getCoordinates () {\n        return this._realCoordinates;\n    }\n\n    /**\n     * Get bounds box of the polygon.\n     *\n     * @public\n     * @return {Array} an array of format [[minX, minY],[maxX, maxY]]\n    */\n    bounds () {\n        let boundsArr = this._cachedBounds;\n\n        if (!boundsArr) {\n            const polygon = this.coordinates.map(poly => poly.map(line => line.bounds()));\n            const data = polygon.flat(1).flat(1);\n            boundsArr = this._cachedBounds = bounds(data);\n        }\n\n        return boundsArr;\n    }\n\n    /**\n     * Get area of the Polygon.\n     *\n     * @public\n     * @return {number} the area of the polygon\n     */\n    area () {\n        const areaObj = [];\n        let tempArray;\n        const coordinates = this._realCoordinates;\n        for (let i = 0, l = coordinates.length; i < l; i++) {\n            tempArray = [];\n            for (let j = 0, k = coordinates[i].length; j < k; j++) {\n                tempArray.push(coordinates[i][j]);\n            }\n            areaObj.push(area(tempArray));\n        }\n        let netArea = 0;\n        for (let m = 0, n = areaObj.length; m < n; m++) {\n            if (m === 0) {\n                netArea = areaObj[m];\n            } else {\n                netArea -= areaObj[m];\n            }\n        }\n        return netArea;\n    }\n\n    /**\n     * Get center of the Polygon.\n     *\n     * @public\n     * @return {Array} center of the Polygon\n     */\n    center () {\n        return center(this._realCoordinates[0]);\n    }\n\n    /**\n     * Returns true if a point is in a polygon. Accepts an optional parameter to ignore the\n     * start and end vertices of the polygon.\n     *\n     * @name includes\n     * @param {Array.<number>} point point Coordinates of form [x, y]\n     * @param {boolean} excludeBoundary whether to ignore the Boundary coordinates.\n     * @return {boolean} true/false\n     */\n    includes(point, excludeBoundary) {\n        let result = false;\n        const polyCoords = this.getCoordinates();\n        const includeMap = polyCoords.map(poly => includes(poly, point, excludeBoundary));\n        if (includeMap[0] && includeMap.filter(i => i).length === 1) {\n            result = true;\n        }\n        return result;\n    }\n}\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS, GEOM_FIELD, ROW_ID } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\nimport Geometry from './geo/geometry';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const cachedValueObjects = clonedDm.getPartialFieldspace()._cachedValueObjects;\n\n    const selectorHelperFn = index => selectFn(\n        cachedValueObjects[index],\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).sort().forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO,\n        DimensionSubtype.BINNED_GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (!supportedDimSubTypes.includes(subtype)) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (!supportedMeasureSubTypes.includes(subtype)) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nconst addGeometrySchemaField = (schema, dataHeader) => {\n    if (schema.length !== dataHeader.length && dataHeader.includes(GEOM_FIELD)) {\n        schema.push({ name: GEOM_FIELD, type: FieldType.DIMENSION, subtype: DimensionSubtype.GEO });\n    }\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, schema, options);\n    addGeometrySchemaField(schema, header);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.SORT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nconst getKey = (arr, data, fn, rowId) => {\n    let key = fn(arr, data, 0, rowId);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i, rowId)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const checkUids = config.checkUids !== undefined ? config.checkUids : true;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => (checkUids ? d in modelFieldsConfig || d === ROW_ID : d in modelFieldsConfig));\n\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d => fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure()).filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => {\n                const val = row[arr[idx]];\n\n                return val instanceof Geometry ? val.bounds() : val;\n            };\n\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx, rowId) => {\n                const val = fields[arr[idx]].internalValue;\n                const hash = val instanceof Geometry ? val.bounds() : val;\n                return arr[idx] === ROW_ID ? rowId : hash;\n            };\n\n            return data.length ? (fields, i) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn, i)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].internalValue >= domain[field][0] &&\n                        fields[field].internalValue <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select((fields, i) => fns.every(fn => fn(fields, i)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select((fields, i) => fns.some(fn => fn(fields, i)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria, {\n            checkUids: rootGroupByModel && propagateInterpolatedValues\n        });\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { includes, bounds } from '../utils/geo';\nimport RTree from '../utils/r-tree';\nimport { GeomTypes } from '../enums';\nimport { GEO_BIN_SHAPES } from '../enums/geo-bin-shapes';\nimport { hexbin } from './hexbin';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n\nconst bucketCreators = {\n    [GEO_BIN_SHAPES.HEX]: hexbin\n};\n\nexport const createBinnedGeoData = (field, rowDiffset, config) => {\n    let { buckets } = config;\n    const { binSize, shapeType, units } = config;\n    const { data } = field.partialField;\n\n    if (!buckets) {\n        const bucketCreatorFn = bucketCreators[shapeType];\n\n        if (shapeType in bucketCreators) {\n            buckets = bucketCreatorFn(field.bounds(), binSize, { units });\n        } else {\n            throw new Error('Unsupported shape for binning');\n        }\n    }\n\n    const binnedData = [];\n    const points = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = data[i];\n        if (!(datum instanceof InvalidAwareTypes)) {\n            points.push({\n                geometry: datum,\n                id: i\n            });\n        }\n        binnedData[i] = null;\n    });\n\n    const rtree = new RTree(6);\n\n    const treeItems = points.map((item) => {\n        const coords = item.geometry.center();\n        return {\n            minX: coords[0],\n            minY: coords[1],\n            maxX: coords[0],\n            maxY: coords[1],\n            id: item.id\n        };\n    });\n\n    rtree.load(treeItems);\n    const { Polygon } = GeomTypes;\n\n    buckets.forEach((poly) => {\n        const coordinates = poly.coordinates.flat();\n        const bbox = bounds(coordinates).flat();\n        const potentialPoints = rtree.search({ minX: bbox[0], minY: bbox[1], maxX: bbox[2], maxY: bbox[3] });\n\n        potentialPoints.forEach((pt) => {\n            if (includes(coordinates, [pt.minX, pt.minY])) {\n                binnedData[pt.id] = {\n                    center: poly.center,\n                    side: poly.side,\n                    radius: poly.radius,\n                    type: Polygon,\n                    coordinates: poly.coordinates\n                };\n            }\n        });\n    });\n\n    return binnedData;\n};\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType, DimensionSubtype } from '../enums';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    const binnedGeoFieldArr = [];\n    const geoFieldArr = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n            const { type, subtype } = value.schema();\n\n            switch (type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                if (subtype === DimensionSubtype.BINNED_GEO) {\n                    binnedGeoFieldArr.push(key);\n                } else if (subtype === DimensionSubtype.GEO) {\n                    geoFieldArr.push(key);\n                } else {\n                    dimensionArr.push(key);\n                }\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        geoFieldArr.forEach((_) => {\n            const val = fieldStoreObj[_].partialField.data[i];\n            hash = `${hash}-${val instanceof InvalidAwareTypes ? null : val.bounds()}`;\n        });\n        binnedGeoFieldArr.forEach((_) => {\n            const geom = fieldStoreObj[_].partialField.data[i];\n\n            hash = `${hash}-${geom instanceof InvalidAwareTypes ? null : geom.center()}`;\n        });\n\n        geoFieldArr.forEach((_) => {\n            const geom = fieldStoreObj[_].partialField.data[i];\n\n            hash = `${hash}-${geom instanceof InvalidAwareTypes ? null : geom.bounds()}`;\n        });\n\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            geoFieldArr.forEach((_) => {\n                const val = fieldStoreObj[_].partialField.data[i];\n                data[rowCount][_] = val instanceof InvalidAwareTypes ? null : val.serialize();\n            });\n            binnedGeoFieldArr.forEach((_) => {\n                const geom = fieldStoreObj[_].partialField.data[i];\n                data[rowCount][_] = geom instanceof InvalidAwareTypes ? geom.value() :\n                    fieldStoreObj[_].partialField.data[i].serialize();\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { distance } from '../utils/geo';\n\n/**\n * Creates hexagon\n *\n * @private\n * @param {Array<number>} center of the hexagon\n * @param {number} rx half hexagon width\n * @param {number} ry half hexagon height\n * @param {Object} properties passed to each hexagon\n * @param {Array<number>} cosines precomputed\n * @param {Array<number>} sines precomputed\n * @returns {Feature<Polygon>} hexagon\n */\nconst hexagon = (center, rx, ry, cosines, sines) => {\n    const vertices = [];\n    for (let i = 0; i < 6; i++) {\n        const x = center[0] + rx * cosines[i];\n        const y = center[1] + ry * sines[i];\n        vertices.push([x, y]);\n    }\n    const radius = distance(center, vertices[0], 'kilometers');\n    // first and last vertex must be the same\n    vertices.push(vertices[0].slice());\n    return {\n        coordinates: [vertices],\n        center,\n        radius\n    };\n};\n\n/**\n * Takes a bounding box and the diameter of the cell and returns an array of flat-topped\n * hexagons or triangles aligned in an \"odd-q\" vertical grid as\n * described in [Hexagonal Grids]\n *\n * @name hexbin\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide length of the side of the the hexagons or triangles, in units.\n * It will also coincide with the radius of the circumcircle of the hexagons.\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cell size, can be degrees, radians, miles,\n * or kilometers\n * @param {Object} [options.properties={}] passed to each hexagon or triangle of the grid\n * @param {Feature<Polygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created\n * only inside it.\n * @param {boolean} [options.triangles=false] whether to return as triangles instead of hexagons\n * @returns {FeatureCollection<Polygon>} a hexagonal grid\n * @example\n * var bbox = [-96,31,-84,40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var bins = hexbin(bbox, cellSide, options);\n */\nexport const hexbin = (bbox, cellSide, options) => {\n    const [west, south, east, north] = bbox.flat();\n    const centerY = (south + north) / 2;\n    const centerX = (west + east) / 2;\n    const xFraction = cellSide * 2 / (distance([west, centerY], [east, centerY], options.units));\n    const cellWidth = xFraction * (east - west);\n    const yFraction = cellSide * 2 / (distance([centerX, south], [centerX, north], options.units));\n    const cellHeight = yFraction * (north - south);\n    const radius = cellWidth / 2;\n\n    const hexWidth = radius * 2;\n    const hexHeight = Math.sqrt(3) / 2 * cellHeight;\n\n    const boxWidth = east - west;\n    const boxHeight = north - south;\n\n    const xInterval = 3 / 4 * hexWidth;\n    const yInterval = hexHeight;\n\n    // adjust boxWidth so all hexagons will be inside the bbox\n    const xSpan = (boxWidth - hexWidth) / (hexWidth - radius / 2);\n    const xCount = Math.floor(xSpan);\n\n    const xAdjust = ((xCount * xInterval - radius / 2) - boxWidth) / 2 - radius / 2 + xInterval / 2;\n\n    // adjust boxHeight so all hexagons will be inside the bbox\n    const yCount = Math.floor((boxHeight - hexHeight) / hexHeight);\n\n    let yAdjust = (boxHeight - yCount * hexHeight) / 2;\n\n    const hasOffsetY = yCount * hexHeight - boxHeight > hexHeight / 2;\n    if (hasOffsetY) {\n        yAdjust -= hexHeight / 4;\n    }\n\n    const cosines = [];\n    const sines = [];\n    for (let i = 0; i < 6; i++) {\n        const angle = 2 * Math.PI / 6 * i;\n        cosines.push(Math.cos(angle));\n        sines.push(Math.sin(angle));\n    }\n\n    const results = [];\n    for (let x = 0; x <= xCount; x++) {\n        for (let y = 0; y <= yCount; y++) {\n            const isOdd = x % 2 === 1;\n            if (y === 0 && isOdd) continue;\n            if (y === 0 && hasOffsetY) continue;\n\n            const xCenter = x * xInterval + west - xAdjust;\n            let yCenter = y * yInterval + south + yAdjust;\n\n            if (isOdd) {\n                yCenter -= hexHeight / 2;\n            }\n\n            const hex = hexagon(\n                [xCenter, yCenter],\n                cellWidth / 2,\n                cellHeight / 2,\n                cosines,\n                sines\n            );\n\n            results.push(hex);\n        }\n    }\n\n    return results;\n};\n\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\nexport { hexbin } from './hexbin';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import {\n    isArrEqual,\n    flattenArrayToSingleLevel,\n    radiansToLength,\n    degreesToRadians\n} from './helper';\nimport { geometryMap } from '../geo';\nimport { GeomTypes, DistanceUnits } from '../enums';\n\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @return {boolean} inRing\n */\nconst inRing = (pt, ring, ignoreBoundary) => {\n    try {\n        let isInside = false;\n        if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) {\n            ring = ring.slice(0, ring.length - 1);\n        }\n        for (let i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n            const xi = ring[i][0];\n            const yi = ring[i][1];\n            const xj = ring[j][0];\n            const yj = ring[j][1];\n            const onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n                ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n            if (onBoundary) {\n                return !ignoreBoundary;\n            }\n            const intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n                (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n            if (intersect) {\n                isInside = !isInside;\n            }\n        }\n        return isInside;\n    } catch (err) {\n        throw new Error('Wrong input for polygon');\n    }\n};\n\n/**\n * Takes a set of coordinates, returns the geographical boundaries from all the coordinates in the data.\n *\n * @name bounds\n * @param {Array} coordinates any GeoJSON type array\n * @return {Array} [\n [lon, lat], // Represents the longitude and latitude of the southwest point.\n [lon, lat] // Represents the longitude and latitude of the northeast point.\n]\n*/\nexport const bounds = (coordinates) => {\n    let boundArray = [[Infinity, Infinity], [-Infinity, -Infinity]];\n    Array.isArray(coordinates) && coordinates.forEach((coordinate) => {\n        if (boundArray[0][0] > coordinate[0]) { boundArray[0][0] = coordinate[0]; }\n        if (boundArray[0][1] > coordinate[1]) { boundArray[0][1] = coordinate[1]; }\n        if (boundArray[1][0] < coordinate[0]) { boundArray[1][0] = coordinate[0]; }\n        if (boundArray[1][1] < coordinate[1]) { boundArray[1][1] = coordinate[1]; }\n    });\n    return boundArray;\n};\n\n/**\n * Takes an array of points and returns the centroid\n *\n * @name centroid\n * @param {Array} points an array of points\n * @return {Array} the centroid\n */\nexport const centroid = (points) => {\n    let sumX = 0;\n    let sumY = 0;\n    let count = points.length;\n    for (let i in points) {\n        sumX = +points[i][0];\n        sumY = +points[i][1];\n    }\n    return count ? ([\n        Math.round((sumX / count) * 100) / 100,\n        Math.round((sumY / count) * 100) / 100\n    ]) : [0, 0];\n};\n\n/**\n * Takes an array of points and returns the center\n *\n * @name center\n * @param {Array} points an array of points\n * @return {Array} the center\n */\nexport const center = (points) => {\n    let centerPoint = [0, 0];\n    if (points[0] && points[0].length === 2) {\n        const boundsData = bounds(points);\n        const x = (boundsData[0][0] + boundsData[1][0]) / 2;\n        const y = (boundsData[0][1] + boundsData[1][1]) / 2;\n        centerPoint = [x, y];\n    }\n    return centerPoint;\n};\n\n/**\n * Get area of the Polygon.\n *\n * @param {Array} vertices the coordinates of the area\n * @return {number} the are of the polygon with the given coordinates\n */\nexport const area = (vertices) => {\n    let total = 0;\n    let addX;\n    let addY;\n    let subX;\n    let subY;\n    for (let i = 0, l = vertices.length; i < l; i++) {\n        addX = vertices[i][0];\n        addY = vertices[i === vertices.length - 1 ? 0 : i + 1][1];\n        subX = vertices[i === vertices.length - 1 ? 0 : i + 1][0];\n        subY = vertices[i][1];\n\n        total += (addX * addY * 0.5);\n        total -= (subX * subY * 0.5);\n    }\n    return Math.round(Math.abs(total) * 100) / 100;\n};\n\nexport const isValidLatitude = val => val >= -90 && val <= 90;\nexport const isValidLongitude = val => val >= -180 && val <= 180;\n\nexport const latLongPredicates = {\n    0: isValidLongitude,\n    1: isValidLatitude\n};\n\n/**\n * Compares two geoShapes for equality\n * First bounds of both shapes and checked, if they match, coordinates are matched.\n * @param {Object} geoField1 Instance of first geoField\n * @param {Object} geoField2 Instance of second geoField\n * @return {boolean} Returns true if both shapes are same, false otherwise.\n */\nconst compare = (geoField1, geoField2) => {\n    let geoField1Coords;\n    let geoField2Coords;\n    const geoField1Bounds = geoField1.bounds();\n    const geoField2Bounds = geoField2.bounds();\n    const isBoundsEqual = geoField1Bounds.every((g, index) => isArrEqual(g, geoField2Bounds[index]));\n\n    if (!isBoundsEqual) return false;\n    // Flatten coordinates only if bounds are equal\n    geoField1Coords = flattenArrayToSingleLevel(geoField1.getCoordinates());\n    geoField2Coords = flattenArrayToSingleLevel(geoField2.getCoordinates());\n\n    switch (geoField1.type) {\n    case GeomTypes.Point:\n        return isBoundsEqual;\n    case GeomTypes.MultiPoint:\n    case GeomTypes.LineString:\n    case GeomTypes.MultiLineString:\n    case GeomTypes.Polygon:\n    case GeomTypes.MultiPolygon:\n        return isBoundsEqual ?\n            geoField1Coords.every((g, i) => isArrEqual(g, geoField2Coords[i])) : false;\n    default:\n        return false;\n    }\n};\n\n/**\n * Checks if two geoShapes are equal\n * @param {Object} geoField1 first geo shape\n * @param {Object} geoField2 second geo shape\n * @return {boolean} true if shapes are equal, false otherwise\n */\nexport const isSame = (geoField1, geoField2) => {\n    if (!geoField1 || !geoField2) return false;\n\n    const type1 = geoField1.type;\n    const type2 = geoField2.type;\n\n    if (type1 !== type2) return false;\n    return compare(geoField1, geoField2);\n};\n\n/**\n * Merges two coordinates of same geometry type\n * @param {Array} coordsArr Coordinates of shapes\n * @param {string} type Geometry type\n * @return {Array} Returns the combined coordinates\n */\nconst getMergedCoords = (coordsArr, type) => {\n    switch (type) {\n    case GeomTypes.Point:\n    case GeomTypes.LineString:\n    case GeomTypes.Polygon:\n        return [].concat(coordsArr);\n    case GeomTypes.MultiPoint:\n    case GeomTypes.MultiLineString:\n    case GeomTypes.MultiPolygon:\n        return [].concat(...coordsArr);\n    default:\n        throw new Error('Invalid Geometry Type');\n    }\n};\n\n/**\n * Combines two geometries of the same type\n * @param {Object} geoField1 first geo shape\n * @param {Object} geoField2 second geo shape\n * @return {Object} Returns the new combined geometry shape instance\n */\nexport const geoUnion = (...geometry) => {\n    if (geometry.some(geom => !geom) || geometry.length < 2) {\n        throw new Error('One or more geometry fields missing');\n    }\n    if (geometry.some(geom => geom.type !== geometry[0].type)) {\n        throw new Error('All geometries must be of the same type');\n    }\n    const geomType = geometry[0].type;\n    let newGeoType = geomType;\n\n    // If geomType is point/lineString/polygon, we need to return a multiPoint/multiLineString/multiPolygon\n    if ([GeomTypes.Point, GeomTypes.LineString, GeomTypes.Polygon].includes(geomType)) {\n        newGeoType = `Multi${geomType}`;\n    }\n    // Prepare data for combined geometry\n    const data = {\n        type: newGeoType,\n        coordinates: getMergedCoords(geometry.map(geom => geom.getCoordinates()), geomType)\n    };\n\n    // Prepare and return the geometry\n    return new geometryMap[newGeoType](data);\n};\n\n/**\n * Calculates the distance between two points in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Array.<Number>} from origin point\n * @param {Array.<Number>} to destination point\n * @param {string} units can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * const from = [-75.343, 39.984];\n * const to = [-75.534, 39.123];\n * const unit = 'miles';\n *\n */\nexport const distance = (from, to, unit) => {\n    const dLat = degreesToRadians((to[1] - from[1]));\n    const dLon = degreesToRadians((to[0] - from[0]));\n    const lat1 = degreesToRadians(from[1]);\n    const lat2 = degreesToRadians(to[1]);\n\n    const a = Math.sin(dLat / 2) ** 2 + Math.sin(dLon / 2) ** 2\n    * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), unit);\n};\n\n/**\n * Finds out the nearest point to a given coordinate\n * @param {Object} geoFieldsCoordinates Array of coordinates\n * @param {Array} referencePoint Coordinate Array for which nearestPoint has to be found in [lon, lat]\n * @return {Array} nearestPoint - Returns the nearestPoint in [lon, lat]\n */\nexport const nearestPoint = (geoFieldsCoordinates, referencePoint) => {\n    let pointNearest;\n    // Initially take the first point as the nearestPoint\n    let minDistance = distance(geoFieldsCoordinates[0], referencePoint, DistanceUnits.DEGREES);\n    pointNearest = geoFieldsCoordinates[0];\n\n    for (let i = 1, len = geoFieldsCoordinates.length; i < len; i++) {\n        // Iterate through other points and find the nearest point\n        const distanceFromCurrentPoint = distance(geoFieldsCoordinates[i], referencePoint, DistanceUnits.DEGREES);\n\n        if (distanceFromCurrentPoint < minDistance) {\n            minDistance = distanceFromCurrentPoint;\n            pointNearest = geoFieldsCoordinates[i];\n        }\n    }\n    return pointNearest;\n};\n\n/**\n * Calculates perimeter of a given shape from the coordinates\n * @param {Array} coordinates Array of coordinates\n * @param {string} distanceUnit - Unit to be used to calculate perimeter\n * @return {number} Returns the perimeter of the shape rounded to 2 decimal places\n */\nexport const perimeter = (coordinates, distanceUnit) => {\n    const noOfLines = coordinates.length;\n    let totalPerimeter = 0;\n\n    // Calculate distance between each coordinates\n    for (let i = 0, totLines = noOfLines - 1; i < totLines; i++) {\n        const lineLength = distance(coordinates[i], coordinates[i + 1], distanceUnit);\n        totalPerimeter += lineLength;\n    }\n    return totalPerimeter;\n};\n\n/**\n * inBounds\n *\n * @private\n * @param {Array.<number>} pt point [x,y]\n * @param {Array.<number>} bound bound coordinates [[left coords], [right coords]\n * @return {boolean} true/false if point is inside bounds\n */\nexport const isInBounds = (pt, bound) =>\n    bound[0][0] <= pt[0] && bound[0][1] <= pt[1] &&\n    bound[1][0] >= pt[0] && bound[1][1] >= pt[1];\n\n/**\n * Takes whether a coordinates lies in the coordinates of a polygon\n *\n * @name has\n * @param {Array.<number>} coord1 input polygon\n * @param {Array.<number>} coord2 input point\n * @param {boolean} excludeBoundary True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @return {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var coord2 = [-77, 44];\n * var coord1 = [\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ];\n *\n * returns true;\n */\nexport const includes = (coord1, coord2, excludeBoundary) => {\n    if (!(Array.isArray(coord1) && Array.isArray(coord2))) {\n        throw new Error('Wrong input for polygon');\n    }\n    const boundCoordinates = bounds(coord1);\n    let insidePoly = false;\n\n    // Quick elimination if point is not inside bounds\n    if ((boundCoordinates\n        && isInBounds(coord2, boundCoordinates))\n        && inRing(coord2, coord1, !!excludeBoundary)) {\n        insidePoly = true;\n    }\n    return insidePoly;\n};\n\n/**\n * Takes which of a set of coordinates fall in the coordinates of a polygon\n *\n * @name within\n * @param {Array.<number>} points input point\n * @param {Array.<number>} polygon input polygon\n * @returns {Array.<number>} points that land within at least one polygon\n * @example\n * points = [\n *     [-46.6318, -23.5523],\n *     [-46.6246, -23.5325],\n *     [-46.6062, -23.5513],\n *     [-46.663, -23.554],\n *     [-46.643, -23.557]\n * ];\n *\n * polygon = [\n *     [-46.653,-23.543],\n *     [-46.634,-23.5346],\n *     [-46.613,-23.543],\n *     [-46.614,-23.559],\n *     [-46.631,-23.567],\n *     [-46.653,-23.560],\n *     [-46.653,-23.543]\n * ];\n */\nexport const within = (points, polygon) => {\n    if (!Array.isArray(points) || !Array.isArray(polygon)) {\n        throw new Error('Wrong input');\n    }\n\n    const result = [];\n\n    points.map((point) => {\n        if (includes(polygon, point, false)) {\n            result.push(point);\n        }\n        return point;\n    });\n    return result;\n};\n","import { DataFormat } from '../enums';\nimport { GeoProps } from '../enums/geo-props';\nimport { GeomTypes } from '../enums/geom-types';\nimport { factors } from '../enums/distance-factors';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * Checks whether all the elements of an array are numbers.\n * @param {Array} arr - Input Array\n *\n * @return {boolean} Returns true if all the values are numbers, false otherwise.\n */\nexport function isArrayOfNums(arr) {\n    return arr.every(val => typeof (val) === 'number');\n}\n\n/**\n * Recursive function to flatten a nested array till all the elements are array of numbers.\n * @param {Array} arr - Input Array.\n * @param {Array} result - Resultant flat array.\n *\n * @return {Array} Returns an array with each element being an array of numbers.\n * @input For the following array\n * [\n *  [\n *      [\n *          [100, 12],\n *          [110, 11]\n *      ],\n *      [\n *          [120, 13],\n *          [130, 10]\n *      ]\n *  ]\n * ]\n * @output The following will be returned\n * [[100, 12], [110, 11], [120, 13], [130, 10]]\n */\nexport const flattenArrayToSingleLevel = (arr, result = []) => {\n    for (let i = 0, length = arr.length; i < length; i++) {\n        const value = arr[i];\n        if (isArray(value) && !isArrayOfNums(value)) {\n            flattenArrayToSingleLevel(value, result);\n        } else {\n            result.push(value);\n        }\n    }\n    return result;\n};\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\nconst geoTypes = [...Object.values(GeoProps), ...Object.values(GeomTypes)];\n\n/**\n * Returns if an object is a geojson object or not.\n *\n * @param {Object} data Data object.\n *\n * @return {boolean} Whether the object is geojson or not.\n */\nconst isGeoJSON = (data) => {\n    if (data instanceof Object) {\n        const type = data.type;\n\n        return geoTypes.some(geoType => type === geoType);\n    }\n    return false;\n};\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    } else if (isGeoJSON(data)) {\n        return DataFormat.GEO_JSON;\n    }\n\n    return null;\n};\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometers.\n * @return {number} distance\n */\nexport const radiansToLength = (radians, units) => {\n    const factor = factors[units];\n    if (!factor) { throw new Error(`${units} units is invalid`); }\n    return Math.round(radians * factor * 100) / 100;\n};\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @return {number} angle in radians\n */\nexport const degreesToRadians = (degrees) => {\n    const radians = degrees % 360;\n    return radians * Math.PI / 180;\n};\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} units=\"kilometers\" can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport const lengthToRadians = (distance, units) => {\n    const factor = factors[units];\n    if (!factor) { throw new Error(`${units} units is invalid`); }\n    return distance / factor;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport {\n  isSame,\n  geoUnion,\n  perimeter,\n  nearestPoint,\n  bounds,\n  centroid,\n  center,\n  area,\n  distance,\n  isInBounds,\n  includes,\n  within\n} from './geo';\nexport * from './helper';\n","const swap = (arr, i, j) => {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n};\n\nconst defaultCompare = (a, b) => {\n    if (a > b) {\n        return -1;\n    }\n    return a > b ? 1 : 0;\n};\n\nconst quickselectStep = (arr, k, left, right, compare) => {\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n};\n\n/**\n * Rearranges items so that all items in the [left, k] are the smallest. The k-th element will have the\n * (k - left + 1)-th smallest value in [left, right].\n * array: the array to partially sort (in place)\n * k: middle index for partial sorting (as defined above)\n * left: left index of the range to sort (0 by default)\n * right: right index (last index of the array by default)\n * compareFn: compare function\n *\n * Ref: https://github.com/mourner/quickselect\n * Example:\n * var arr = [65, 28, 59, 33, 21, 56, 22, 95, 50, 12, 90, 53, 28, 77, 39];\n * quickselect(arr, 8);\n * arr is [39, 28, 28, 33, 21, 12, 22, 50, 53, 56, 59, 65, 90, 77, 95]\n *                                         ^^ middle index\n * @param {Array} arr the array to partially sort (in place)\n * @param {Number} k middle index for partial sorting (as defined above)\n * @param {Number} left left index of the range to sort (0 by default)\n * @param {Number} right right index (last index of the array by default)\n * @param {Function} compare compare function\n */\nconst quickselect = (arr, k, left, right, compare) => {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n};\n\nexport default quickselect;\n","import quickselect from './quick-select';\n\nconst createNode = children => ({\n    children,\n    height: 1,\n    leaf: true,\n    minX: Infinity,\n    minY: Infinity,\n    maxX: -Infinity,\n    maxY: -Infinity\n});\n\nconst extend = (a, b) => {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n};\n\n// min bounding rectangle of node children from k to p-1\nconst distBBox = (node, k, p, toBBox, destNode) => {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n};\n\n// calculate node's bbox from bboxes of its children\nconst calcBBox = (node, toBBox) => {\n    distBBox(node, 0, node.children.length, toBBox, node);\n};\n\nconst compareNodeMinX = (a, b) => a.minX - b.minX;\nconst compareNodeMinY = (a, b) => a.minY - b.minY;\n\nconst bboxArea = a => (a.maxX - a.minX) * (a.maxY - a.minY);\n\nconst bboxMargin = a => (a.maxX - a.minX) + (a.maxY - a.minY);\n\nconst enlargedArea = (a, b) => (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n\nconst intersectionArea = (a, b) => {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n};\n\nconst contains = (a, b) => a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n\nconst intersects = (a, b) => b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n\nconst findItem = (item, items, equalsFn) => {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n};\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nconst multiSelect = (arr, left, right, n, compare) => {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n};\n\nconst all = (node, result) => {\n    const nodesToSearch = [];\n    while (node) {\n        if (node.leaf) result.push(...node.children);\n        else nodesToSearch.push(...node.children);\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nexport default class RTree {\n    constructor (maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all () {\n        return all(this.data, []);\n    }\n\n    search (bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (const child of node.children) {\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    load (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this.build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this.splitRoot(this.data, node);\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this.insertSingleItem(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert (item) {\n        if (item) this.insertSingleItem(item, this.data.height - 1);\n        return this;\n    }\n\n    clear () {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove (item, equalsFn) {\n        if (!item) return this;\n\n        let i;\n        let parent;\n        let goingUp;\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this.condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toJSON () { return this.data; }\n\n    fromJSON (data) {\n        this.data = data;\n        return this;\n    }\n\n    toBBox (item) { return item; }\n\n    compareMinX (a, b) { return a.minX - b.minX; }\n    compareMinY (a, b) { return a.minY - b.minY; }\n\n    build (items, left, right, height) {\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / (M ** (height - 1)));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this.build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    chooseSubtree (bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (const child of node.children) {\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    insertSingleItem (item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this.chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this.split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this.adjustParentBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    split (insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this.chooseSplitAxis(node, m, M);\n\n        const splitIndex = this.chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this.splitRoot(node, newNode);\n    }\n\n    splitRoot (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    chooseSplitIndex (node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    chooseSplitAxis (node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this.allDistMargin(node, m, M, compareMinX);\n        const yMargin = this.allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    allDistMargin (node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    adjustParentBoxes (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    condense (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n                } else this.clear();\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\(([\\d.]+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position|null if sort order is invalid\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        if (!sortOrderMap[sortOrder]) return null;\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nconst partition = (array, filterFn) => array.reduce((acc, v, i) => {\n    const pass = filterFn(v, i, array);\n\n    pass ? acc[0].push(v) : acc[1].push(v);\n    return acc;\n}, [[], []]);\n\nconst mix = superclass => ({\n    with: (...mixins) => mixins.reduce((cls, mixin) => mixin(cls), superclass)\n});\n\nconst componentRegistry = (comps) => {\n    const reg = Object.assign({}, comps);\n    const regObj = {\n        register: (def, customKey) => {\n            const key = customKey || def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n\n    return regObj;\n};\n\nexport {\n    componentRegistry,\n    mix,\n    partition,\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp, toArray } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitization: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                const paramsLen = params.length;\n                if (paramsLen) {\n                    const { takesMultipleParams = false } = meta || {};\n                    // If parameters are passed then it's a setter\n                    let val = takesMultipleParams ? params : params[0];\n\n                    if (meta) {\n                        let values;\n                        const prevVal = context.get(nsProp, subNamespace);\n                        const { sanitization, typeCheck, typeExpected } = meta;\n                        if (typeof sanitization === 'function') {\n                            // Sanitize if required\n                            val = sanitization(val, prevVal, holder);\n                        }\n\n                        // Checking if a setter is valid\n                        if (typeof typeCheck === 'function') {\n                            const typeCheckResult = typeCheck(val);\n\n                            if (typeCheckResult) {\n                                values = val;\n                            }\n                        } else if (typeof typeCheck === 'string' && typeCheck === 'constructor') {\n                            if (val && val.constructor.name === typeExpected) {\n                                values = val;\n                            }\n                        } else {\n                            values = val;\n                        }\n\n                        const preset = meta.preset;\n                        const oldValues = toArray(context.get(nsProp, subNamespace));\n                        preset && preset(values, holder);\n                        if (takesMultipleParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values && context.commit(nsProp, values, subNamespace);\n                    } else {\n                        context.commit(nsProp, val, subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, Array.isArray(conf.value));\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect,\n    partition,\n    mix,\n    componentRegistry\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0',\n    COLOR: 'color',\n    SHAPE: 'shape',\n    SIZE: 'size',\n    TEXT: 'text'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    },\n    encodingTransform: {},\n    encodingFieldsInf: {},\n    dependencies: {},\n    dataProps: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv, defaultValue } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, defaultValue(Number(color[3]), 1)];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv, defaultValue } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = Math.min(defaultValue(color[3], 0), 1);\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = Math.min(a + transformationArr[3] || 0, 1);\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps,\n    defaultValue\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transformColor = (colorAxis, datum, styleType, intensity) => {\n    const meta = datum.meta;\n    const stateColor = defaultValue(meta.stateColor[styleType], meta.originalColor[styleType]);\n    const colorInfo = colorAxis.transformColor(stateColor, intensity);\n\n    meta.stateColor[styleType] = colorInfo.hsla;\n    return colorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transformColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transformColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor[styleType];\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a})`;\n            }));\n        });\n    });\n};\n\nexport const retrieveEncodingInf = (encoding, fieldsConfig, encodingNames) => {\n    const encodingInf = {};\n\n    encodingNames\n        .forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n    return encodingInf;\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const fields = [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT];\n        return retrieveEncodingInf(encoding, fieldsConfig, fields);\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nexport const dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (colorInf, colorAxis) => ({\n    originalColor: Object.keys(colorInf).reduce((acc, key) => {\n        if (colorInf[key]) {\n            acc[key] = colorAxis.getHslArray(colorInf[key]);\n        }\n        return acc;\n    }, {}),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [prevData, data]) => {\n            context.dataDidSet([prevData, data]);\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer,\n    encodingFieldInfRetriever\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\nimport { BASE_LAYER } from '../enums/constants';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\nexport const BaseLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a\n     * layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor () {\n        super();\n\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.axes({});\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(this.localOptions()).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: this.getRenderProps(),\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = this.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BASE_LAYER, this);\n\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    static getterSetters () {\n        return props;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among\n     * multiple layers of same type if one layer has to be referred, alias is used. If no alias is given then\n     * `formalName` is set as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the\n     *          data // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BASE_LAYER);\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers.\n     * Identifiers are a set of field names and their corresponding values in an array.\n     * It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids,\n     * it returns all the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    /**\n     * Called when the layer datamodel is set.\n     *\n     * @param {Array} arr Old and new datamodel instance.\n     * @param {DataModel} arr[0] Previous datamodel instance.\n     * @param {DataModel} arr[1] Current datamodel instance.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    dataDidSet ([, data]) {\n        const config = this.config();\n\n        if (data && config) {\n            if (this._cacheEnabled) {\n                this._cachedData.push(data);\n            } else {\n                this._cachedData = [data];\n            }\n            const encodingValue = config.encoding;\n            if (encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = this.retrieveEncodingFields(encodingValue, this.coord(), data);\n                this.encodingFieldsInf(encodingFieldsInf);\n                this.resolveTransformType();\n                this._transformedData = this.getTransformedData(data, config,\n                    this.transformType(), encodingFieldsInf);\n                this._normalizedData = this.getNormalizedData(this._transformedData, fieldsConfig);\n                if (config.calculateDomain !== false) {\n                    const domain = this.calculateDomainFromData(this._normalizedData,\n                        this.encodingFieldsInf(), this.data().getFieldsConfig());\n                    this.domain(domain);\n                }\n            }\n        }\n        return this;\n    }\n\n    retrieveEncodingFields (encoding, coord, data) {\n        const fieldsConfig = data.getFieldsConfig();\n\n        return encodingFieldInfRetriever[coord](encoding, fieldsConfig);\n    }\n\n    static getRenderProps () {\n        return [`${layerNs[1]}.${PROPS.DATA}`, ...['x', 'y', 'radius'].map(type =>\n            `${groupNs}.domain.${type}`)];\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport { BaseLayerMixin } from './base-mixin';\nimport { BASE_LAYER } from '../enums/constants';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends mix(SimpleLayer).with(BaseLayerMixin) {\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return BASE_LAYER;\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport const LineLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of LineLayer.\n     *\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf({\n                    stroke: resolvedEncodings.color\n                }, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n};\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport const AreaLayerMixin = superclass => class extends superclass {\n\n    /** Default configuration of area layer\n     *\n     * @return {Object} Default configuration of layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const { x: xAxis, y: yAxis } = axes;\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const style = {\n                fill: color\n            };\n\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { AREA_LAYER } from '../../enums/constants';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from '../line/line-mixin';\nimport { AreaLayerMixin } from './area-mixin';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin, AreaLayerMixin) {\n    static formalName () {\n        return AREA_LAYER;\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\nexport const ArcLayerMixin = superclass => class extends superclass {\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n    * returns the default configuration of the layer\n    *\n    * @static\n    * @return {Object} Default configuration for arc layer\n    * @memberof ArcLayer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf({\n                        fill: color\n                    }, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n        } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n};\n\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { ArcLayerMixin } from './arc-mixin';\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends mix(BaseLayer).with(BaseLayerMixin, ArcLayerMixin) {\n    static formalName () {\n        return 'arc';\n    }\n}\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { LineLayerMixin } from './line-mixin';\nimport { LINE_LAYER } from '../../enums/constants';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends mix(BaseLayer).with(BaseLayerMixin, LineLayerMixin) {\n    static formalName () {\n        return LINE_LAYER;\n    }\n}\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf({\n                    fill: resolvedVal.color\n                }, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf({\n                    fill: resolvedEncodings.color\n                }, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport const TextLayerMixin = superclass => class extends superclass {\n    /**\n    * Returns the default configuration of the text layer\n    * @return {Object} Default configuration of the text layer\n    */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n    * Renders the plot in the given container\n    * @param  {SVGElement} container SVGElement which will hold the plot\n    * @return {textLayer} Instance of text layer\n    */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n};\n\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer, BaseLayerMixin } from '../../base-layer';\nimport { TextLayerMixin } from './text-mixin';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends mix(BaseLayer).with(BaseLayerMixin, TextLayerMixin) {\n    static formalName () {\n        return 'text';\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, 0, +1]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: {},\n        stroke: {\n            value: 'hsla(0,0%,0%,0)'\n        },\n        fill: {},\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    FieldType,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    getIndividualClassName,\n    resolveEncodingValues,\n    getColorMetaInf,\n    positionPoints\n} from '../../helpers';\n\nexport const prepareDrawingInf = ({ data, datum, i, layerInst, xPx, yPx }) => {\n    const axes = layerInst.axes();\n    const { shape: shapeAxis, color: colorAxis, size: sizeAxis } = axes;\n    let shape = shapeAxis.getShape(datum.shape);\n    let size = sizeAxis.getSize(datum.size);\n    let color = colorAxis.getColor(datum.color);\n    const resolvedEncodings = resolveEncodingValues({\n        values: {\n            x: xPx,\n            y: yPx,\n            color,\n            size,\n            shape,\n            data: datum\n        },\n        data: datum\n    }, i, data, layerInst);\n    const layerEncoding = layerInst.config().encoding;\n    const { rowId, source } = datum;\n    ({ shape, size, color } = resolvedEncodings);\n    const style = {\n        fill: color,\n        stroke: layerEncoding.stroke.value\n    };\n    const { x, y } = resolvedEncodings;\n    const pos = { x, y };\n    return {\n        enter: pos,\n        update: pos,\n        shape,\n        source,\n        rowId,\n        style,\n        meta: getColorMetaInf(style, colorAxis),\n        size\n    };\n};\n\nexport const pointTranslators = {\n    [COORD_TYPES.CARTESIAN]: (data, config, layerInst) => {\n        let points = [];\n        const encoding = layerInst.config().encoding;\n        const axes = layerInst.axes();\n        const { x, y } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = prepareDrawingInf({\n                    data,\n                    datum: d,\n                    i,\n                    layerInst,\n                    xPx,\n                    yPx\n                });\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n","import {\n    Voronoi,\n    Scales,\n    makeElement,\n    getQualifiedClassName,\n    selectElement\n} from 'muze-utils';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport {\n    attachDataToVoronoi,\n    getPlotMeasurement,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\nimport { pointTranslators } from './helper';\n\nexport const PointLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = super.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                    heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    };\n","import {\n    mix\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { POINT_LAYER } from '../../enums/constants';\nimport { PointLayerMixin } from './point-mixin';\n\nclass PointBaseLayer extends BaseLayer {\n\n}\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends mix(PointBaseLayer).with(PointLayerMixin) {\n    static formalName () {\n        return POINT_LAYER;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        const style = {\n            fill: color\n        };\n\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst { MEASURE } = FieldType;\n\nexport const BarLayerMixin = superclass => class extends superclass {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = Scales.band();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n};\n\n","import { mix } from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { BAR_LAYER } from '../../enums/constants';\nimport { BarLayerMixin } from './bar-mixin';\nimport { BaseLayerMixin } from '../../base-layer/base-mixin';\n\nimport './styles.scss';\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends mix(BaseLayer).with(BaseLayerMixin, BarLayerMixin) {\n    static formalName () {\n        return BAR_LAYER;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedVal.color\n            };\n\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style,\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(style, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { x: xAxis, y: yAxis } = axes;\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n            const style = {\n                stroke: resolvedEncodings.color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style,\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(style, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport const TickLayerMixin = superclass => class extends superclass {\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'tick';\n    }\n\n    static drawFn () {\n        return drawTicks;\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n    * Generates an array of objects containing x, y, width and height of the points from the data\n    * @param  {Array.<Array>} data Data Array\n    * @param  {Object} encoding  Config\n    * @param  {Object} axes     Axes object\n    * @return {Array.<Object>}  Array of points\n    */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n};\n","import { mix } from 'muze-utils';\nimport { PointLayerMixin } from '../point';\nimport { BaseLayerMixin, BaseLayer } from '../../base-layer';\nimport { TickLayerMixin } from './tick-mixin';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends mix(BaseLayer).with(BaseLayerMixin, PointLayerMixin, TickLayerMixin) {\n    static formalName () {\n        return 'tick';\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default (layers = DEFAULT_LAYERS) => {\n    const reg = Object.assign({}, layers);\n    const regObj = {\n        register: (def) => {\n            const key = def.formalName();\n\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import { AreaLayer, AreaLayerMixin } from './layers/area';\nimport { ArcLayer, ArcLayerMixin } from './layers/arc';\nimport { LineLayer, LineLayerMixin } from './layers/line';\nimport { TextLayer, TextLayerMixin } from './layers/text';\nimport { PointLayer, PointLayerMixin } from './layers/point';\nimport { BarLayer, BarLayerMixin } from './layers/bar';\nimport { TickLayer, TickLayerMixin } from './layers/tick';\nimport { SimpleLayer } from './simple-layer';\nimport { BaseLayer, BaseLayerMixin } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport layerFactory from './layer-factory';\nimport layerRegistry from './layer-registry';\nimport { ENCODING } from './enums/constants';\nimport * as pointLayerHelpers from './layers/point/helper';\nimport * as commonHelpers from './helpers';\nimport * as enums from './enums';\n\nconst helpers = Object.assign(commonHelpers, {\n    pointLayerHelpers\n});\n\nconst layerMixins = {\n    BarLayerMixin,\n    BaseLayerMixin,\n    LineLayerMixin,\n    AreaLayerMixin,\n    PointLayerMixin,\n    TextLayerMixin,\n    TickLayerMixin,\n    ArcLayerMixin\n};\n\nexport {\n    BaseLayer,\n    BarLayer,\n    LineLayer,\n    AreaLayer,\n    PointLayer,\n    ArcLayer,\n    TextLayer,\n    TickLayer,\n    layerFactory,\n    SimpleLayer,\n    layerRegistry,\n    LAYER_TYPES,\n    ENCODING,\n    helpers,\n    enums,\n    layerMixins\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = layers.sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]).filter(d => d !== undefined);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '4px 0 4px 0',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n        const { classPrefix } = config;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            const mountHtmlTooltip = makeElement(mount, 'div', [1], `${classPrefix}-tooltip-html-container`);\n            mountHtmlTooltip.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, '', {\n                    update: (elem, elemData) => elem.attr('class', elemData.className)\n                });\n                const cells = makeElement(rows, 'span', d => d.data, `${classPrefix}-tooltip-content`);\n                cells.attr('class', `${classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block' // 'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\nconst FIRST_VALUE_MARGIN = '10px';\nconst SINGLE_DATA_MARGIN = 10;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (params) => {\n    const { field, value, classPrefix, margin, isSelected, removeKey } = params;\n\n    if (!removeKey) {\n        const keyObj = {\n            value: field,\n            className: `${classPrefix}-tooltip-key`\n        };\n        const valueObj = {\n            value,\n            className: `${classPrefix}-tooltip-value`\n        };\n        if (margin !== undefined) {\n            keyObj.style = {\n                'margin-left': `${margin}px`\n            };\n            valueObj.style = {\n                'margin-left': `${margin}px`\n            };\n        }\n\n        return ({\n            className: isSelected ? `${classPrefix}-tooltip-row ${classPrefix}-tooltip-selected-row`\n                : `${classPrefix}-tooltip-row`,\n            data: [keyObj, valueObj]\n        }\n        );\n    }\n    return ({\n        data: [{\n            className: '',\n            value,\n            style: {\n                'margin-left': FIRST_VALUE_MARGIN\n            }\n        }],\n        className: `${classPrefix}-tooltip-first`\n    });\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen, target } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const REF_VALUES_INDEX = 1;\n    const REF_KEYS_INDEX = 0;\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: colorAxis.getColor(retinalFieldValue),\n            shape: shapeAxis.getShape(retinalFieldValue),\n            size: sizeAxis.getSize(retinalFieldValue) * config.iconScale\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue({\n                field: displayName,\n                value: formattedRetinalValue,\n                classPrefix,\n                margin: SINGLE_DATA_MARGIN\n            }));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push({ data: [icon, formattedRetinalValue] }));\n            const selectedContext = target[REF_VALUES_INDEX][target[REF_KEYS_INDEX].indexOf(retField)];\n            const isSelected = selectedContext === retinalFieldValue;\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                const keyValue = getKeyValue({\n                    field: hasMultipleMeasures ? `${dName}${separator}` : formattedRetinalValue,\n                    value,\n                    classPrefix,\n                    margin: hasMultipleMeasures ? margin : undefined,\n                    isSelected\n                });\n                if (!hasMultipleMeasures) {\n                    keyValue.data = [icon, ...keyValue.data];\n                }\n                content.push(keyValue);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n                const margin = dataLen === 1 || Object.keys(retinalFields).length === 0\n                ? SINGLE_DATA_MARGIN : undefined;\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    const removeKey = values.length > 1;\n                    content.push(getKeyValue({\n                        field: `${displayName}${separator}`,\n                        value: formattedValue,\n                        classPrefix,\n                        margin,\n                        isSelected: undefined,\n                        removeKey\n                    }));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen,\n                            target: context.payload.target\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue({\n                                field: `${displayName}${separator}`,\n                                value: fn(valueArr[fieldsConfig[name].index]),\n                                classPrefix,\n                                margin: SINGLE_DATA_MARGIN\n                            }));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return ([{\n            data: values[0]\n        }]);\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","import { componentRegistry } from 'muze-utils';\nimport * as behaviours from './actions/behavioural';\nimport { physicalActions } from './actions/physical';\nimport * as sideEffects from './side-effects';\n\nconst convertToObj = (comps) => {\n    const obj = {};\n\n    for (const key in comps) {\n        const val = comps[key];\n\n        obj[val.formalName()] = val;\n    }\n    return obj;\n};\n\nexport const registry = {\n    behaviours: componentRegistry(convertToObj(behaviours)),\n    physicalActions: componentRegistry(physicalActions),\n    sideEffects: componentRegistry(convertToObj(sideEffects))\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange,\n    unionDomainFromLayers\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\nimport { REACTIVE_PROPS } from './enums';\n\nconst FORMAL_NAME = 'VisualUnit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, this.constructor.getterSetters());\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((this.localOptions())).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getterSetters () {\n        return PROPS;\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: (context) => {\n                    const domain = context.calculateDomainFromData();\n                    context.dataDomain(domain);\n                }\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, this.constructor.localOptions(), store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n            this.createFireboltInstance();\n            return this;\n        }\n        return this._store;\n    }\n\n    createFireboltInstance () {\n        const { interactions } = this.registry();\n        const { fireboltDeps } = this._dependencies;\n\n        this.firebolt(new UnitFireBolt(this, {\n            physical: Object.assign({}, interactions.physicalActions.get(), fireboltDeps.physicalActions),\n            behavioural: Object.assign({}, interactions.behaviours.get(), fireboltDeps.behaviouralActions),\n            physicalBehaviouralMap: this.getActionBehaviourMap()\n        }, Object.assign({}, interactions.sideEffects.get(), fireboltDeps.sideEffects), this.getBehaviourEffectMap()));\n\n        return this;\n    }\n\n    getBehaviourEffectMap () {\n        return behaviourEffectMap;\n    }\n\n    getActionBehaviourMap () {\n        return actionBehaviourMap;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        this.createRootContainers(container);\n\n        setAxisRange(this);\n        this.renderLayers();\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    createRootContainers (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        return this;\n    }\n\n    renderLayers () {\n        const width = this.width();\n        const height = this.height();\n        const node = this._rootSvg.node();\n\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    dataDomain (...params) {\n        const { namespace } = this.metaInf();\n        const store = this.store();\n        const prop = `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${REACTIVE_PROPS.DOMAIN}`;\n        if (params.length) {\n            const domain = params[0];\n            store.commit(prop, domain, namespace);\n        }\n        return store.get(prop, namespace);\n    }\n\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n\n    calculateDomainFromData () {\n        const domain = unionDomainFromLayers(this.layers(), this.fields(), this._layerAxisIndex,\n            this.data().getFieldsConfig());\n        return domain;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        facetNames.push(name);\n\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","/**\n * This file exports variables that are used as defaults for the crosstab group.\n */\nexport const DATA_UPDATE_COUNTER = 0;\n\nexport const DEFAULT_LAYER_TYPE = 'cartesian';\n\n","export const PROPS = {\n    layers: {},\n    data: {},\n    globalConfig: {}\n};\n","import { ERROR_MSG, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\nimport { PROPS } from './props';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    constructor () {\n        generateGetterSetters(this, PROPS);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const sortedFields = config.sort;\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    // Sort datamodel if user has sorted a field\n    const sortConfig = Object.keys(sortedFields).map(field => [field, sortedFields[field]]);\n    if (sortConfig.length) {\n        datamodel = datamodel.sort(sortConfig, { saveChild: true });\n    }\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    resolver.transformedData(groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.cells.GeomCell),\n        AxisCell: resolver.getCellDef(registry.cells.AxisCell),\n        BlankCell: resolver.getCellDef(registry.cells.BlankCell),\n        TextCell: resolver.getCellDef(registry.cells.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n    const { simpleEncoder } = encoders;\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n    simpleEncoder.data(groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {},\n    transformedData: {},\n    store: {}\n};\n","import { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        this._placeholderInfo = {};\n        generateGetterSetters(this, this.constructor.getterSetters());\n\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    static getterSetters () {\n        return RESOLVER_PROPS;\n    }\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry().cells;\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            interactions\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n        const { VisualUnit } = this.registry();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    interactions\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setRetinalAxisDomain (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.getRetinalAxes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n\n        this.axes(retinalAxes);\n\n        this.updateVisualUnit(config);\n\n        return this;\n    }\n\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const { TextCell, BlankCell } = this.registry().cells;\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    updateVisualUnit (retinalConfig) {\n        const retinalAxes = this.getRetinalAxes();\n\n        const { lifeCycleManager } = this.dependencies();\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(retinalConfig);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        this._placeholderInfo = computeMatrices(context, config);\n\n        return this._placeholderInfo;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.dataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.dataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = context.createEncoderInstance();\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setRetinalAxisDomain(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n    const { VisualUnit, layerRegistry } = context.registry();\n    const { base: BaseLayer } = layerRegistry;\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry({\n                    cells: value.cellRegistry,\n                    VisualUnit: value.VisualUnit\n                });\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup,\n    getEncoder\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            components,\n            componentSubRegistry,\n            interactions\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, this.constructor.getterSetters());\n        generateGetterSetters(this, this.constructor.localOptions());\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.createMatrixResolver();\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layers.get(),\n            cellRegistry: componentSubRegistry.cells.get(),\n            VisualUnit: components.VisualUnit,\n            interactions\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    static formalName () {\n        return 'VisualGroup';\n    }\n\n    static localOptions () {\n        return localOptions;\n    }\n    static getterSetters () {\n        return PROPS;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n\n    createEncoderInstance () {\n        const layers = this.layers();\n\n        return getEncoder(layers);\n    }\n\n    createMatrixResolver () {\n        this.resolver(new MatrixResolver(this._dependencies));\n\n        return this;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].internalValue >= values[i][0] && fields[field].internalValue <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        const { interactions } = dependencies.registry;\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, interactions.behaviours.get(), legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\nimport { SIMPLE_CELL } from './constants';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    static formalName () {\n        return SIMPLE_CELL;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.AXIS_CELL;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\nimport * as CONSTANTS from './constants';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    static formalName () {\n        return CONSTANTS.BLANK_CELL;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\nimport * as CONSTANTS from './constants';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    static formalName () {\n        return CONSTANTS.TEXT_CELL;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport * as CONSTANTS from './constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    static formalName () {\n        return CONSTANTS.GEOM_CELL;\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        register: (def) => {\n            const key = def.formalName();\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\nimport { registry as interactionRegistry } from '@chartshq/muze-firebolt';\n\nexport const COMPONENTS = {\n    [VisualGroup.formalName()]: VisualGroup,\n    [VisualUnit.formalName()]: VisualUnit\n};\n\nexport const SUBREGISTRIES = {\n    cells: cellRegistry,\n    layers: layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\nconst componentRegistry = (components = COMPONENTS) => {\n    const reg = Object.assign({}, components);\n\n    return {\n        register: (cls) => {\n            const key = cls.formalName();\n            reg[key] = cls;\n            return componentRegistry;\n        },\n        get: () => reg\n    };\n};\n\nexport const registry = {\n    components: componentRegistry(COMPONENTS),\n    cells: cellRegistry(),\n    layers: layerRegistry(),\n    interactions: interactionRegistry\n};\n","import { mergeRecursive, CommonProps } from 'muze-utils';\nimport { registry } from './default-registry';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([title, titleConfig]) => {\n                let t = title;\n                if (typeof title === 'string' || !title) {\n                    t = () => title;\n                }\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return [t, mergeRecursive(defConfig, titleConfig)];\n            }\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            takesMultipleParams: true,\n            typeCheck: ([arg1, arg2]) => typeof arg1 === 'function' && typeof arg2 === 'object',\n            sanitization: ([subtitle, subtitleConfig]) => {\n                let sub = subtitle;\n                if (typeof subtitle === 'string' || !subtitle) {\n                    sub = () => subtitle;\n                }\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return [sub, mergeRecursive(defConfig, subtitleConfig)];\n            }\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: [null, null],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            takesMultipleParams: true,\n            sanitization: ([config, auxConfig = {}], oldConfig) => {\n                // Stores additional config, if passed\n                const { reset = false } = auxConfig;\n                let oldConf = {};\n\n                if (!reset) {\n                    oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                }\n\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                const newConf = mergeRecursive(defConfig, config);\n                return fixScrollBarConfig(newConf);\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n    const interactionRegistry = canvas.registry().interactions;\n    const parser = getValueParser(invalidValues);\n\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    },\n                    registry: {\n                        interactions: interactionRegistry\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        const { target, className } = params.config;\n        this.component = params.component;\n        this.params = params;\n        this.target(target);\n        this.className(className);\n        this.position(params.config.position);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    const headerValues = Object.values(renderDetails.components.headers);\n    let sum = 0;\n    let messageWrapper = null;\n\n    for (const val of headerValues) {\n        sum += val.logicalSpace().height;\n    }\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height() - sum, width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG,\n            position: TOP\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent.updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const param = params[0];\n            const components = Object.assign({}, param.components);\n            const componentSubRegistry = Object.assign({}, param.componentSubRegistry);\n            const interactionRegistry = Object.assign({}, param.interactions);\n\n            this._registry = { components, componentSubRegistry, interactions: interactionRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import * as utils from 'muze-utils';\n\nimport { VisualUnit, helpers as unitHelpers, enums as unitEnums, UnitFireBolt } from '@chartshq/visual-unit';\nimport { VisualGroup, Encoders, encoderHelpers, groupUtils, enums as groupEnums } from '@chartshq/visual-group';\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport {\n    layerFactory,\n    BaseLayer,\n    LineLayer,\n    TextLayer,\n    TickLayer,\n    PointLayer,\n    helpers,\n    enums,\n    SimpleLayer,\n    AreaLayer,\n    ArcLayer,\n    layerMixins\n} from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { registry as globalRegistry, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\nconst {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    Store\n} = utils;\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = globalRegistry.components;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    overrideRegistry.forEach((def) => {\n        registry.register(def);\n    });\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, globalRegistry.components.get());\n    const componentSubRegistryDef = Object.assign({}, SUBREGISTRIES);\n\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop](globalRegistry[prop].get());\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry,\n            interactions: globalRegistry.interactions\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            overrideRegistry.forEach((def) => {\n                const prop = def.formalName();\n                if (prop in defaultRegistry) {\n                    components[prop] = def;\n                }\n            });\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry, layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nmuze.registry = globalRegistry;\n\nmuze.Components = {\n    VisualLayer: {\n        layers: {\n            BaseLayer,\n            LineLayer,\n            TextLayer,\n            TickLayer,\n            PointLayer,\n            SimpleLayer,\n            AreaLayer,\n            ArcLayer\n        },\n        helpers,\n        enums,\n        layerMixins\n    },\n    VisualUnit: {\n        cls: VisualUnit,\n        helpers: unitHelpers,\n        enums: unitEnums,\n        UnitFireBolt\n    },\n    VisualGroup: {\n        cls: VisualGroup,\n        Encoders,\n        encoderHelpers,\n        groupUtils,\n        enums: groupEnums\n    }\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = utils;\nmuze.Model = new Store().model.constructor;\n\nexport default muze;\n"],"sourceRoot":""}