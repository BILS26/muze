{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","I","C","iterator","u","next","done","return","TypeError","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","reducer_store_ReducerStore","entries","_this","ve","reducer","_this2","__unregister","delete","Function","reducer_store","ge","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","je","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Ve","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","$e","dataFormat","Qe","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","it","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","ct","fieldSeparator","dsv","dsv_arr","ft","insertionIndex","lt","converters","FlatJSON","DSVStr","DSVArr","resp","helper_persistDerivation","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","cloneWithAllFields","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","propModel","select","fn","saveChild","helper_cloneWithSelect","selectFn","selectConfig","cloneConfig","cloned","helper_selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","helper_cloneWithProject","projField","allFields","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","st","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","derivation","_selectionModel","params","groupByString","_rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","Dt","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","std","Operators","compose","operations","currentDM","firstChild","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","package_0","Ht","Rt","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","count","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","objects","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","_len","_key","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","_len2","_key2","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len4","measureFieldNames","_key4","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","fieldObj","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","_objectSpread","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","_data","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","matrixInstance","getDataDomain","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","colIndex","listenerInf","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","_layerDeps","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","layerInst","resolvable","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","rKeys","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","facetField","geomCellKey","getCellKey","columnId","geomCell","updateCells","facetKey","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","rawFormat","transposedColKeys","sortDmTemporalFields","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","_this$config2","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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A1T,IAAIixC,gCCAS8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,gBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,gBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,gBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,gBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCRKmX,aAAS,IAAIxnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,+BAES8W,eAAKK,cCALL,gBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,eAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,iBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,cAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCES8W,iBAVK,IAAInnD,MAAM,GAAG8S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA1T,IAAIixC,gCCRS6W,yCAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICA5E4Y,aAAOR,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAEjF6Y,aAAOT,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAEvFv/C,UAAIu/C,sBAEO8Y,yBAAA,SAASx3D,IAClBA,EAAI,GAAKA,EAAI,KAAGA,GAAK4K,KAAK6N,MAAMzY,IACpC,IAAIy3D,GAAK7sD,KAAKsoB,IAAIlzB,EAAI,IAItB,OAHAb,UAAE0yB,EAAI,IAAM7xB,EAAI,IAChBb,UAAE4B,EAAI,IAAM,IAAM02D,GAClBt4D,UAAEJ,EAAI,GAAM,GAAM04D,GACXt4D,UAAI,ICbL88C,YACKrxC,KAAKkyC,GACLlyC,KAAKkyC,GCFlB,SAASia,aAAKzuD,OACZ,IAAI/H,EAAI+H,MAAMG,OACd,OAAO,SAASzI,GACd,OAAOsI,MAAMsC,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAIjb,EAAI,EAAGqK,KAAK6N,MAAMzY,EAAIO,OAI7Cw2D,0CAAK9W,8BAAO,qgDAEhByX,cAAQX,aAAK9W,8BAAO,qgDAEpB0X,gBAAUZ,aAAK9W,8BAAO,qgDAEtB2X,eAASb,aAAK9W,8BAAO,qgDCfnB4X,sBAAwB,YACxBC,qBAAuB,cACvBC,sBAAwB,eACxBC,uBAAyB,aACzBC,uBAAyB,YACzBC,sBAAwB,cACxBC,uBAAyB,eACzBC,wBAA0B,aCHxBC,iBAHXC,OAAQ,UCKGC,cALXC,WAAY,YACZC,cAAe,cACfC,eAAgB,iBCHTv2C,gBAAQvS,MAAMhP,UAAUuhB,MCApBw2C,qBAAA,SAAS1zB,GACtB,OAAOA,GCELuE,SAAM,EACNuD,WAAQ,EACR6rB,YAAS,EACT9rB,UAAO,EACP+rB,QAAU,KAEd,SAASnX,WAAWzc,GAClB,MAAO,cAAgBA,EAAI,IAAO,MAGpC,SAAS0c,WAAWp3C,GAClB,MAAO,gBAAkBA,EAAI,IAAO,IAiBtC,SAASuuD,WACP,OAAQ/xD,KAAKgyD,OAGf,SAASC,UAAKC,OAAQjpB,OACpB,IAAIkpB,iBACAC,WAAa,KACb3Q,WAAa,KACb4Q,cAAgB,KAChBC,cAAgB,EAChBC,cAAgB,EAChBC,YAAc,EACd5pB,EAAIspB,SAAWzvB,UAAOyvB,SAAWnsB,WAAQ,EAAI,EAC7C7H,EAAIg0B,SAAWnsB,WAAQmsB,SAAWlsB,WAAQ,IAAM,IAChDgW,UAAYkW,SAAWzvB,UAAOyvB,SAAWL,YAASlX,WAAaC,WAEnE,SAASqX,KAAKx1B,SACZ,IAAI9d,OAAuB,MAAdyzC,WAAsBnpB,MAAMpC,MAAQoC,MAAMpC,MAAMt/B,MAAM0hC,MAAOkpB,eAAiBlpB,MAAMlyB,SAAYq7C,WACzGryD,OAAuB,MAAd0hD,WAAsBxY,MAAMwY,WAAaxY,MAAMwY,WAAWl6C,MAAM0hC,MAAOkpB,eAAiBvgC,qBAAY6vB,WAC7GgR,QAAU5uD,KAAK6Q,IAAI49C,cAAe,GAAKE,YACvCjxD,MAAQ0nC,MAAM1nC,QACdmxD,QAAUnxD,MAAM,GAAK,GACrBoxD,QAAUpxD,MAAMA,MAAMG,OAAS,GAAK,GACpC8gC,UAAYyG,MAAMG,UA/B1B,SAASwpB,YAAO3pB,OACd,IAAI+Z,OAASn/C,KAAK6Q,IAAI,EAAGu0B,MAAMG,YAAc,GAAK,EAElD,OADIH,MAAMz+B,UAASw4C,OAASn/C,KAAK2G,MAAMw4C,SAChC,SAAS3qD,GACd,OAAQ4wC,MAAM5wC,GAAK2qD,SAVvB,SAAS7c,YAAO8C,OACd,OAAO,SAAS5wC,GACd,OAAQ4wC,MAAM5wC,MAmCqC4wC,MAAMC,QACrD2pB,UAAYp2B,QAAQo2B,UAAYp2B,QAAQo2B,YAAcp2B,QACtD7Y,KAAOivC,UAAUC,UAAU,WAAW/nD,MAAM,OAC5CgoD,KAAOF,UAAUC,UAAU,SAAS/nD,KAAK4T,OAAQsqB,OAAOniB,QACxDksC,SAAWD,KAAKE,OAChBC,UAAYH,KAAKI,QAAQn+B,OAAO,KAAKo+B,KAAK,QAAS,QACnDC,KAAON,KAAK7zC,OAAO,QACnB7e,KAAO0yD,KAAK7zC,OAAO,QAEvB0E,KAAOA,KAAKha,MAAMga,KAAKuvC,QAAQG,OAAO,OAAQ,SACzCF,KAAK,QAAS,UACdA,KAAK,SAAU,SAEpBL,KAAOA,KAAKnpD,MAAMspD,WAElBG,KAAOA,KAAKzpD,MAAMspD,UAAUl+B,OAAO,QAC9Bo+B,KAAK,SAAU,QACfA,KAAKl1B,EAAI,IAAK0K,EAAI0pB,gBAEvBjyD,KAAOA,KAAKuJ,MAAMspD,UAAUl+B,OAAO,QAC9Bo+B,KAAK,OAAQ,QACbA,KAAKl1B,EAAG0K,EAAI6pB,SACZW,KAAK,KAAMlB,SAAWzvB,SAAM,MAAQyvB,SAAWL,YAAS,SAAW,WACnE/3B,MAAM,YAAau4B,eAEpB51B,UAAYo2B,YACdjvC,KAAOA,KAAK2vC,WAAW92B,SACvBs2B,KAAOA,KAAKQ,WAAW92B,SACvB42B,KAAOA,KAAKE,WAAW92B,SACvBp8B,KAAOA,KAAKkzD,WAAW92B,SAEvBu2B,SAAWA,SAASO,WAAW92B,SAC1B22B,KAAK,UAAWtB,SAChBsB,KAAK,YAAa,SAAS/6D,GAAK,OAAO+I,SAAS/I,EAAImqC,SAASnqC,IAAM2jD,UAAU3jD,GAAK2H,KAAKwzD,aAAa,eAEzGN,UACKE,KAAK,UAAWtB,SAChBsB,KAAK,YAAa,SAAS/6D,GAAK,IAAI0B,EAAIiG,KAAKshC,WAAW0wB,OAAQ,OAAOhW,UAAUjiD,GAAKqH,SAASrH,EAAIA,EAAE1B,IAAM0B,EAAIyoC,SAASnqC,OAG/H26D,SAAStrB,SAET9jB,KACKwvC,KAAK,IAAKlB,SAAWnsB,WAAQmsB,QAAUlsB,WAClC,IAAM4C,EAAI2pB,cAAgB,IAAMG,OAAS,QAAUC,OAAS,IAAM/pB,EAAI2pB,cACtE,IAAMG,OAAS,IAAM9pB,EAAI2pB,cAAgB,QAAUI,OAAS,IAAM/pB,EAAI2pB,eAEhFQ,KACKK,KAAK,UAAW,GAChBA,KAAK,YAAa,SAAS/6D,GAAK,OAAO2jD,UAAUxZ,SAASnqC,MAE/Dg7D,KACKD,KAAKl1B,EAAI,IAAK0K,EAAI0pB,eAEvBjyD,KACK+yD,KAAKl1B,EAAG0K,EAAI6pB,SACZpyD,KAAKN,QAEV8yD,UAAU9+C,OAAOg+C,UACZqB,KAAK,OAAQ,QACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,cACpBA,KAAK,cAAelB,SAAWlsB,WAAQ,QAAUksB,SAAWnsB,UAAO,MAAQ,UAEhF8sB,UACKprB,KAAK,WAAaznC,KAAKgyD,OAASxvB,WA2CvC,OAxCAyvB,KAAKhpB,MAAQ,SAAS9nB,GACpB,OAAO/b,UAAU1D,QAAUunC,MAAQ9nB,EAAG8wC,MAAQhpB,OAGhDgpB,KAAKI,cAAgB,SAASlxC,GAC5B,OAAO/b,UAAU1D,QAAU2wD,cAAgBlxC,EAAG8wC,MAAQI,eAGxDJ,KAAKprB,MAAQ,WACX,OAAOsrB,cAAgB/2C,gBAAMljB,KAAKkN,WAAY6sD,MAGhDA,KAAKE,cAAgB,SAAShxC,GAC5B,OAAO/b,UAAU1D,QAAUywD,cAAqB,MAALhxC,KAAiB/F,gBAAMljB,KAAKipB,GAAI8wC,MAAQE,cAAc/2C,SAGnG62C,KAAKG,WAAa,SAASjxC,GACzB,OAAO/b,UAAU1D,QAAU0wD,WAAkB,MAALjxC,EAAY,KAAO/F,gBAAMljB,KAAKipB,GAAI8wC,MAAQG,YAAcA,WAAWh3C,SAG7G62C,KAAKxQ,WAAa,SAAStgC,GACzB,OAAO/b,UAAU1D,QAAU+/C,WAAatgC,EAAG8wC,MAAQxQ,YAGrDwQ,KAAKwB,SAAW,SAAStyC,GACvB,OAAO/b,UAAU1D,QAAU4wD,cAAgBC,eAAiBpxC,EAAG8wC,MAAQK,eAGzEL,KAAKK,cAAgB,SAASnxC,GAC5B,OAAO/b,UAAU1D,QAAU4wD,eAAiBnxC,EAAG8wC,MAAQK,eAGzDL,KAAKM,cAAgB,SAASpxC,GAC5B,OAAO/b,UAAU1D,QAAU6wD,eAAiBpxC,EAAG8wC,MAAQM,eAGzDN,KAAKO,YAAc,SAASrxC,GAC1B,OAAO/b,UAAU1D,QAAU8wD,aAAerxC,EAAG8wC,MAAQO,aAGhDP,KClKT,IAAIyB,GAAK7vD,KAAKkyC,GACV4d,IAAM,EAAID,GAEVE,WAAaD,IADH,KAGd,SAASE,OACP7zD,KAAK8zD,IAAM9zD,KAAK+zD,IAChB/zD,KAAKg0D,IAAMh0D,KAAKi0D,IAAM,KACtBj0D,KAAKmhB,EAAI,GAGX,SAASyC,YACP,OAAO,IAAIiwC,KAGbA,KAAKh6D,UAAY+pB,UAAK/pB,WACpBgsB,YAAaguC,KACbK,OAAQ,SAAAA,OAASh2B,EAAG16B,GAClBxD,KAAKmhB,GAAK,KAAOnhB,KAAK8zD,IAAM9zD,KAAKg0D,KAAO91B,GAAK,KAAOl+B,KAAK+zD,IAAM/zD,KAAKi0D,KAAOzwD,IAE7E2wD,UAAW,SAAAA,YACQ,OAAbn0D,KAAKg0D,MACPh0D,KAAKg0D,IAAMh0D,KAAK8zD,IAAK9zD,KAAKi0D,IAAMj0D,KAAK+zD,IACrC/zD,KAAKmhB,GAAK,MAGdizC,OAAQ,SAAAA,OAASl2B,EAAG16B,GAClBxD,KAAKmhB,GAAK,KAAOnhB,KAAKg0D,KAAO91B,GAAK,KAAOl+B,KAAKi0D,KAAOzwD,IAEvD6wD,iBAAkB,SAAAA,iBAASxS,GAAIyS,GAAIp2B,EAAG16B,GACpCxD,KAAKmhB,GAAK,MAAQ0gC,GAAM,MAAQyS,GAAM,KAAOt0D,KAAKg0D,KAAO91B,GAAK,KAAOl+B,KAAKi0D,KAAOzwD,IAEnF+wD,cAAe,SAAAA,cAAS1S,GAAIyS,GAAIE,GAAIC,GAAIv2B,EAAG16B,GACzCxD,KAAKmhB,GAAK,MAAQ0gC,GAAM,MAAQyS,GAAM,MAAQE,GAAM,MAAQC,GAAM,KAAOz0D,KAAKg0D,KAAO91B,GAAK,KAAOl+B,KAAKi0D,KAAOzwD,IAE/GkxD,MAAO,SAAAA,MAAS7S,GAAIyS,GAAIE,GAAIC,GAAI57D,GAC9BgpD,IAAMA,GAAIyS,IAAMA,GAAIE,IAAMA,GAAIC,IAAMA,GAAI57D,GAAKA,EAC7C,IAAI+oD,GAAK5hD,KAAKg0D,IACVW,GAAK30D,KAAKi0D,IACVW,IAAMJ,GAAK3S,GACXgT,IAAMJ,GAAKH,GACXQ,IAAMlT,GAAKC,GACXkT,IAAMJ,GAAKL,GACXU,MAAQF,IAAMA,IAAMC,IAAMA,IAG9B,GAAIl8D,EAAI,EAAG,MAAM,IAAIkX,MAAM,oBAAsBlX,GAGjD,GAAiB,OAAbmH,KAAKg0D,IACPh0D,KAAKmhB,GAAK,KAAOnhB,KAAKg0D,IAAMnS,IAAM,KAAO7hD,KAAKi0D,IAAMK,SAIjD,GAAMU,MApDD,KAyDL,GAAMnxD,KAAKsoB,IAAI4oC,IAAMH,IAAMC,IAAMC,KAzD5B,MAyDgDj8D,EAKrD,CACH,IAAIo8D,IAAMT,GAAK5S,GACXsT,IAAMT,GAAKE,GACXQ,MAAQP,IAAMA,IAAMC,IAAMA,IAC1BO,MAAQH,IAAMA,IAAMC,IAAMA,IAC1BG,IAAMxxD,KAAK8Q,KAAKwgD,OAChBG,IAAMzxD,KAAK8Q,KAAKqgD,OAChBh9D,EAAIa,EAAIgL,KAAKkwC,KAAK2f,GAAK7vD,KAAK0xD,MAAMJ,MAAQH,MAAQI,QAAU,EAAIC,IAAMC,OAAS,GAC/EE,IAAMx9D,EAAIs9D,IACVG,IAAMz9D,EAAIq9D,IAGVxxD,KAAKsoB,IAAIqpC,IAAM,GA1EX,OA2ENx1D,KAAKmhB,GAAK,KAAO0gC,GAAK2T,IAAMV,KAAO,KAAOR,GAAKkB,IAAMT,MAGvD/0D,KAAKmhB,GAAK,IAAMtoB,EAAI,IAAMA,EAAI,WAAak8D,IAAME,IAAMH,IAAMI,KAAQ,KAAOl1D,KAAKg0D,IAAMnS,GAAK4T,IAAMb,KAAO,KAAO50D,KAAKi0D,IAAMK,GAAKmB,IAAMZ,UApBtI70D,KAAKmhB,GAAK,KAAOnhB,KAAKg0D,IAAMnS,IAAM,KAAO7hD,KAAKi0D,IAAMK,WAuBxDoB,IAAK,SAAAA,IAASx3B,EAAG16B,EAAG3K,EAAG88D,GAAI1kD,GAAI2kD,KAC7B13B,GAAKA,EAAG16B,GAAKA,EACb,IAAIqyD,IADYh9D,GAAKA,GACRgL,KAAK8yC,IAAIgf,IAClBG,GAAKj9D,EAAIgL,KAAK+yC,IAAI+e,IAClB/T,GAAK1jB,EAAI23B,GACTlB,GAAKnxD,EAAIsyD,GACTC,GAAK,EAAIH,IACTI,GAAKJ,IAAMD,GAAK1kD,GAAKA,GAAK0kD,GAG9B,GAAI98D,EAAI,EAAG,MAAM,IAAIkX,MAAM,oBAAsBlX,GAGhC,OAAbmH,KAAKg0D,IACPh0D,KAAKmhB,GAAK,IAAMygC,GAAK,IAAM+S,IAIpB9wD,KAAKsoB,IAAInsB,KAAKg0D,IAAMpS,IAnGnB,MAmGoC/9C,KAAKsoB,IAAInsB,KAAKi0D,IAAMU,IAnGxD,QAoGR30D,KAAKmhB,GAAK,IAAMygC,GAAK,IAAM+S,IAIxB97D,IAGDm9D,GAAK,IAAGA,GAAKA,GAAKrC,IAAMA,KAGxBqC,GAAKpC,WACP5zD,KAAKmhB,GAAK,IAAMtoB,EAAI,IAAMA,EAAI,QAAUk9D,GAAK,KAAO73B,EAAI23B,IAAM,KAAOryD,EAAIsyD,IAAM,IAAMj9D,EAAI,IAAMA,EAAI,QAAUk9D,GAAK,KAAO/1D,KAAKg0D,IAAMpS,IAAM,KAAO5hD,KAAKi0D,IAAMU,IAIrJqB,GAnHC,OAoHRh2D,KAAKmhB,GAAK,IAAMtoB,EAAI,IAAMA,EAAI,SAAWm9D,IAAMtC,IAAO,IAAMqC,GAAK,KAAO/1D,KAAKg0D,IAAM91B,EAAIrlC,EAAIgL,KAAK8yC,IAAI1lC,KAAO,KAAOjR,KAAKi0D,IAAMzwD,EAAI3K,EAAIgL,KAAK+yC,IAAI3lC,QAGlJglD,KAAM,SAAAA,KAAS/3B,EAAG16B,EAAG0jD,EAAGp8B,GACtB9qB,KAAKmhB,GAAK,KAAOnhB,KAAK8zD,IAAM9zD,KAAKg0D,KAAO91B,GAAK,KAAOl+B,KAAK+zD,IAAM/zD,KAAKi0D,KAAOzwD,GAAK,MAAQ0jD,EAAK,MAAQp8B,EAAK,KAAQo8B,EAAK,KAEzH5kD,SAAU,SAAAA,WACR,OAAOtC,KAAKmhB,IAIDyC,uBCjIAsyC,sBAAA,SAASh4B,GACtB,OAAO,SAASua,WACd,OAAOva,ICFA/R,IAAMtoB,KAAKsoB,IACXirB,MAAQvzC,KAAKuzC,MACbT,IAAM9yC,KAAK8yC,IACXjiC,SAAM7Q,KAAK6Q,IACXD,SAAM5Q,KAAK4Q,IACXmiC,IAAM/yC,KAAK+yC,IACXjiC,UAAO9Q,KAAK8Q,KAEZm9C,aAAU,MACV4B,QAAK7vD,KAAKkyC,GACVogB,OAASzC,QAAK,EACdC,SAAM,EAAID,QAMd,SAAS0C,KAAKl4B,GACnB,OAAOA,GAAK,EAAIi4B,OAASj4B,IAAM,GAAKi4B,OAAStyD,KAAKuyD,KAAKl4B,GCdzD,SAASm4B,eAAeh+D,GACtB,OAAOA,EAAEi+D,YAGX,SAASC,eAAel+D,GACtB,OAAOA,EAAEm+D,YAGX,SAASC,cAAcp+D,GACrB,OAAOA,EAAEq+D,WAGX,SAASC,YAAYt+D,GACnB,OAAOA,EAAEu+D,SAGX,SAASC,YAAYx+D,GACnB,OAAOA,GAAKA,EAAEy+D,SAYhB,SAASC,eAAenV,GAAI+S,GAAI9S,GAAIyS,GAAIxqB,GAAIktB,GAAIjB,IAC9C,IAAIjB,IAAMlT,GAAKC,GACXkT,IAAMJ,GAAKL,GACX/iD,IAAMwkD,GAAKiB,IAAMA,IAAMriD,UAAKmgD,IAAMA,IAAMC,IAAMA,KAC9CkC,GAAK1lD,GAAKwjD,IACVmC,IAAM3lD,GAAKujD,IACXqC,IAAMvV,GAAKqV,GACXG,IAAMzC,GAAKuC,GACXG,IAAMxV,GAAKoV,GACXK,IAAMhD,GAAK4C,GACXK,KAAOJ,IAAME,KAAO,EACpBG,KAAOJ,IAAME,KAAO,EACpBzB,GAAKwB,IAAMF,IACXrB,GAAKwB,IAAMF,IACXK,GAAK5B,GAAKA,GAAKC,GAAKA,GACpBj9D,EAAIixC,GAAKktB,GACT1f,EAAI6f,IAAMG,IAAMD,IAAMD,IACtB/+D,GAAKy9D,GAAK,GAAK,EAAI,GAAKnhD,UAAKD,SAAI,EAAG7b,EAAIA,EAAI4+D,GAAKngB,EAAIA,IACrDogB,KAAOpgB,EAAIwe,GAAKD,GAAKx9D,GAAKo/D,GAC1BE,MAAQrgB,EAAIue,GAAKC,GAAKz9D,GAAKo/D,GAC3BG,KAAOtgB,EAAIwe,GAAKD,GAAKx9D,GAAKo/D,GAC1BI,MAAQvgB,EAAIue,GAAKC,GAAKz9D,GAAKo/D,GAC3BK,IAAMJ,IAAMH,IACZQ,IAAMJ,IAAMH,IACZQ,IAAMJ,IAAML,IACZU,IAAMJ,IAAML,IAMhB,OAFIM,IAAMA,IAAMC,IAAMA,IAAMC,IAAMA,IAAMC,IAAMA,MAAKP,IAAME,IAAKD,IAAME,MAGlEK,GAAIR,IACJS,GAAIR,IACJ7C,KAAMmC,GACNlC,KAAMmC,GACNC,IAAKO,KAAO5tB,GAAKjxC,EAAI,GACrBu+D,IAAKO,KAAO7tB,GAAKjxC,EAAI,ICtEzB,SAASu/D,OAAO37B,SACdz8B,KAAKw8B,SAAWC,QAGlB27B,OAAOv+D,WACLw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,WACH14D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,GAAI,MAC/F,KAAK,EAAGxD,KAAKy4D,OAAS,EACtB,QAASz4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,MAKxB,IAAAo1D,aAAA,SAASn8B,SACtB,OAAO,IAAI27B,OAAO37B,UC7Bb,SAASyB,QAAEnkC,GAChB,OAAOA,EAAE,GAGJ,SAASyJ,QAAEzJ,GAChB,OAAOA,EAAE,GCAI,IAAA8+D,SAAA,WACb,IAAI36B,EAAI46B,QACJt1D,EAAIu1D,QACJC,QAAUvgB,uBAAS,GACnBhc,QAAU,KACVw8B,MAAQC,aACRtb,OAAS,KAEb,SAASyV,KAAKtoD,MACZ,IAAIhT,EAEAM,EAEA8gE,OAHA3/D,EAAIuR,KAAKrJ,OAET03D,UAAW,EAKf,IAFe,MAAX38B,UAAiBmhB,OAASqb,MAAME,OAASv1C,aAExC7rB,EAAI,EAAGA,GAAKyB,IAAKzB,IACdA,EAAIyB,GAAKw/D,QAAQ3gE,EAAI0S,KAAKhT,GAAIA,EAAGgT,SAAWquD,YAC5CA,UAAYA,UAAUxb,OAAO4a,YAC5B5a,OAAO8a,WAEVU,UAAUxb,OAAO+a,OAAOz6B,EAAE7lC,EAAGN,EAAGgT,OAAQvH,EAAEnL,EAAGN,EAAGgT,OAGtD,GAAIouD,OAAQ,OAAOvb,OAAS,KAAMub,OAAS,IAAM,KAuBnD,OApBA9F,KAAKn1B,EAAI,SAAS/c,GAChB,OAAO/b,UAAU1D,QAAUw8B,EAAiB,mBAAN/c,EAAmBA,EAAIs3B,uBAAUt3B,GAAIkyC,MAAQn1B,GAGrFm1B,KAAK7vD,EAAI,SAAS2d,GAChB,OAAO/b,UAAU1D,QAAU8B,EAAiB,mBAAN2d,EAAmBA,EAAIs3B,uBAAUt3B,GAAIkyC,MAAQ7vD,GAGrF6vD,KAAK2F,QAAU,SAAS73C,GACtB,OAAO/b,UAAU1D,QAAUs3D,QAAuB,mBAAN73C,EAAmBA,EAAIs3B,wBAAWt3B,GAAIkyC,MAAQ2F,SAG5F3F,KAAK4F,MAAQ,SAAS93C,GACpB,OAAO/b,UAAU1D,QAAUu3D,MAAQ93C,EAAc,MAAXsb,UAAoBmhB,OAASqb,MAAMx8B,UAAW42B,MAAQ4F,OAG9F5F,KAAK52B,QAAU,SAAStb,GACtB,OAAO/b,UAAU1D,QAAe,MAALyf,EAAYsb,QAAUmhB,OAAS,KAAOA,OAASqb,MAAMx8B,QAAUtb,GAAIkyC,MAAQ52B,SAGjG42B,MC/CMgG,SAAA,WACb,IAAIzX,GAAKkX,QACLjX,GAAK,KACL8S,GAAKlc,sBAAS,GACd6b,GAAKyE,QACLC,QAAUvgB,uBAAS,GACnBhc,QAAU,KACVw8B,MAAQC,aACRtb,OAAS,KAEb,SAAS0b,KAAKvuD,MACZ,IAAIhT,EACAojB,EACAytB,EAEAvwC,EAEA8gE,OAHA3/D,EAAIuR,KAAKrJ,OAET03D,UAAW,EAEXG,IAAM,IAAI1wD,MAAMrP,GAChBggE,IAAM,IAAI3wD,MAAMrP,GAIpB,IAFe,MAAXijC,UAAiBmhB,OAASqb,MAAME,OAASv1C,aAExC7rB,EAAI,EAAGA,GAAKyB,IAAKzB,EAAG,CACvB,KAAMA,EAAIyB,GAAKw/D,QAAQ3gE,EAAI0S,KAAKhT,GAAIA,EAAGgT,SAAWquD,SAChD,GAAIA,UAAYA,SACdj+C,EAAIpjB,EACJ6lD,OAAOya,YACPza,OAAO4a,gBACF,CAGL,IAFA5a,OAAO8a,UACP9a,OAAO4a,YACF5vB,EAAI7wC,EAAI,EAAG6wC,GAAKztB,IAAKytB,EACxBgV,OAAO+a,MAAMY,IAAI3wB,GAAI4wB,IAAI5wB,IAE3BgV,OAAO8a,UACP9a,OAAO2a,UAGPa,WACFG,IAAIxhE,IAAM6pD,GAAGvpD,EAAGN,EAAGgT,MAAOyuD,IAAIzhE,IAAM48D,GAAGt8D,EAAGN,EAAGgT,MAC7C6yC,OAAO+a,MAAM9W,IAAMA,GAAGxpD,EAAGN,EAAGgT,MAAQwuD,IAAIxhE,GAAIu8D,IAAMA,GAAGj8D,EAAGN,EAAGgT,MAAQyuD,IAAIzhE,KAI3E,GAAIohE,OAAQ,OAAOvb,OAAS,KAAMub,OAAS,IAAM,KAGnD,SAASM,WACP,OAAOpG,WAAO2F,QAAQA,SAASC,MAAMA,OAAOx8B,QAAQA,SAoDtD,OAjDA68B,KAAKp7B,EAAI,SAAS/c,GAChB,OAAO/b,UAAU1D,QAAUkgD,GAAkB,mBAANzgC,EAAmBA,EAAIs3B,uBAAUt3B,GAAI0gC,GAAK,KAAMyX,MAAQ1X,IAGjG0X,KAAK1X,GAAK,SAASzgC,GACjB,OAAO/b,UAAU1D,QAAUkgD,GAAkB,mBAANzgC,EAAmBA,EAAIs3B,uBAAUt3B,GAAIm4C,MAAQ1X,IAGtF0X,KAAKzX,GAAK,SAAS1gC,GACjB,OAAO/b,UAAU1D,QAAUmgD,GAAU,MAAL1gC,EAAY,KAAoB,mBAANA,EAAmBA,EAAIs3B,uBAAUt3B,GAAIm4C,MAAQzX,IAGzGyX,KAAK91D,EAAI,SAAS2d,GAChB,OAAO/b,UAAU1D,QAAUizD,GAAkB,mBAANxzC,EAAmBA,EAAIs3B,uBAAUt3B,GAAImzC,GAAK,KAAMgF,MAAQ3E,IAGjG2E,KAAK3E,GAAK,SAASxzC,GACjB,OAAO/b,UAAU1D,QAAUizD,GAAkB,mBAANxzC,EAAmBA,EAAIs3B,uBAAUt3B,GAAIm4C,MAAQ3E,IAGtF2E,KAAKhF,GAAK,SAASnzC,GACjB,OAAO/b,UAAU1D,QAAU4yD,GAAU,MAALnzC,EAAY,KAAoB,mBAANA,EAAmBA,EAAIs3B,uBAAUt3B,GAAIm4C,MAAQhF,IAGzGgF,KAAKI,OACLJ,KAAKK,OAAS,WACZ,OAAOF,WAAWv7B,EAAE0jB,IAAIp+C,EAAEmxD,KAG5B2E,KAAKM,OAAS,WACZ,OAAOH,WAAWv7B,EAAE0jB,IAAIp+C,EAAE8wD,KAG5BgF,KAAKO,OAAS,WACZ,OAAOJ,WAAWv7B,EAAE2jB,IAAIr+C,EAAEmxD,KAG5B2E,KAAKN,QAAU,SAAS73C,GACtB,OAAO/b,UAAU1D,QAAUs3D,QAAuB,mBAAN73C,EAAmBA,EAAIs3B,wBAAWt3B,GAAIm4C,MAAQN,SAG5FM,KAAKL,MAAQ,SAAS93C,GACpB,OAAO/b,UAAU1D,QAAUu3D,MAAQ93C,EAAc,MAAXsb,UAAoBmhB,OAASqb,MAAMx8B,UAAW68B,MAAQL,OAG9FK,KAAK78B,QAAU,SAAStb,GACtB,OAAO/b,UAAU1D,QAAe,MAALyf,EAAYsb,QAAUmhB,OAAS,KAAOA,OAASqb,MAAMx8B,QAAUtb,GAAIm4C,MAAQ78B,SAGjG68B,MC3GMQ,eAAA,SAAS3/D,EAAGiJ,GACzB,OAAOA,EAAIjJ,GAAK,EAAIiJ,EAAIjJ,EAAI,EAAIiJ,GAAKjJ,EAAI,EAAIwrC,KCDhCo0B,sBAAA,SAAS1hE,GACtB,OAAOA,GCCsB2hE,YAAYd,cAE3C,SAASe,OAAOhB,OACdj5D,KAAKk6D,OAASjB,MAqBD,SAASe,YAAYf,OAElC,SAASkB,OAAO19B,SACd,OAAO,IAAIw9B,OAAOhB,MAAMx8B,UAK1B,OAFA09B,OAAOD,OAASjB,MAETkB,OA1BTF,OAAOpgE,WACLw+D,UAAW,SAAAA,YACTr4D,KAAKk6D,OAAO7B,aAEdE,QAAS,SAAAA,UACPv4D,KAAKk6D,OAAO3B,WAEdC,UAAW,SAAAA,YACTx4D,KAAKk6D,OAAO1B,aAEdE,QAAS,SAAAA,UACP14D,KAAKk6D,OAAOxB,WAEdC,MAAO,SAAAA,MAASx+D,EAAGtB,GACjBmH,KAAKk6D,OAAOvB,MAAM9/D,EAAIgL,KAAK+yC,IAAIz8C,GAAItB,GAAKgL,KAAK8yC,IAAIx8C,MCNtC,IChBJihB,yBAAQvS,MAAMhP,UAAUuhB,MCEpB,IAAAg/C,eACbC,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAI5hC,EAAIgL,KAAK8Q,KAAK8lB,KAAOi5B,SACzBj3B,QAAQy3B,OAAOr7D,EAAG,GAClB4jC,QAAQi5B,IAAI,EAAG,EAAG78D,EAAG,EAAG86D,YCNb2G,cACbD,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAI5hC,EAAIgL,KAAK8Q,KAAK8lB,KAAO,GAAK,EAC9BgC,QAAQy3B,QAAQ,EAAIr7D,GAAIA,GACxB4jC,QAAQ23B,QAAQv7D,GAAIA,GACpB4jC,QAAQ23B,QAAQv7D,GAAI,EAAIA,GACxB4jC,QAAQ23B,OAAOv7D,GAAI,EAAIA,GACvB4jC,QAAQ23B,OAAOv7D,GAAIA,GACnB4jC,QAAQ23B,OAAO,EAAIv7D,GAAIA,GACvB4jC,QAAQ23B,OAAO,EAAIv7D,EAAGA,GACtB4jC,QAAQ23B,OAAOv7D,EAAGA,GAClB4jC,QAAQ23B,OAAOv7D,EAAG,EAAIA,GACtB4jC,QAAQ23B,QAAQv7D,EAAG,EAAIA,GACvB4jC,QAAQ23B,QAAQv7D,EAAGA,GACnB4jC,QAAQ23B,QAAQ,EAAIv7D,EAAGA,GACvB4jC,QAAQ03B,cCfRoG,MAAQ12D,KAAK8Q,KAAK,EAAI,GACtB6lD,QAAkB,EAARD,MAECE,SACbJ,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAIj3B,EAAIK,KAAK8Q,KAAK8lB,KAAO+/B,SACrBt8B,EAAI16B,EAAI+2D,MACZ99B,QAAQy3B,OAAO,GAAI1wD,GACnBi5B,QAAQ23B,OAAOl2B,EAAG,GAClBzB,QAAQ23B,OAAO,EAAG5wD,GAClBi5B,QAAQ23B,QAAQl2B,EAAG,GACnBzB,QAAQ03B,cCRRuG,GAAK72D,KAAK+yC,IAAI8c,QAAK,IAAM7vD,KAAK+yC,IAAI,EAAI8c,QAAK,IAC3CiH,GAAK92D,KAAK+yC,IAAI+c,SAAM,IAAM+G,GAC1BE,IAAM/2D,KAAK8yC,IAAIgd,SAAM,IAAM+G,GAEhBG,MACbR,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAI5hC,EAAIgL,KAAK8Q,KAPR,kBAOa8lB,MACdyD,EAAIy8B,GAAK9hE,EACT2K,EAAIo3D,GAAK/hE,EACb4jC,QAAQy3B,OAAO,GAAIr7D,GACnB4jC,QAAQ23B,OAAOl2B,EAAG16B,GAClB,IAAK,IAAIzL,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,IAAIoC,EAAIw5D,SAAM57D,EAAI,EACdK,EAAIyL,KAAK8yC,IAAIx8C,GACbH,EAAI6J,KAAK+yC,IAAIz8C,GACjBsiC,QAAQ23B,OAAOp6D,EAAInB,GAAIT,EAAIS,GAC3B4jC,QAAQ23B,OAAOh8D,EAAI8lC,EAAIlkC,EAAIwJ,EAAGxJ,EAAIkkC,EAAI9lC,EAAIoL,GAE5Ci5B,QAAQ03B,cCrBG2G,QACbT,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAIysB,EAAIrjD,KAAK8Q,KAAK8lB,MACdyD,GAAKgpB,EAAI,EACbzqB,QAAQw5B,KAAK/3B,EAAGA,EAAGgpB,EAAGA,KCJtB6T,MAAQl3D,KAAK8Q,KAAK,GAEPqmD,UACbX,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAIj3B,GAAKK,KAAK8Q,KAAK8lB,MAAgB,EAARsgC,QAC3Bt+B,QAAQy3B,OAAO,EAAO,EAAJ1wD,GAClBi5B,QAAQ23B,QAAQ2G,MAAQv3D,GAAIA,GAC5Bi5B,QAAQ23B,OAAO2G,MAAQv3D,GAAIA,GAC3Bi5B,QAAQ03B,cCPRn6D,MAAI6J,KAAK8Q,KAAK,GAAK,EACnBi0B,MAAI,EAAI/kC,KAAK8Q,KAAK,IAClBxa,MAAkB,GAAbyuC,MAAI,EAAI,GAEFqyB,KACbZ,KAAM,SAAAA,KAAS59B,QAAShC,MACtB,IAAI5hC,EAAIgL,KAAK8Q,KAAK8lB,KAAOtgC,OACrBynD,GAAK/oD,EAAI,EACT87D,GAAK97D,EAAI+vC,MACTiZ,GAAKD,GACL0S,GAAKz7D,EAAI+vC,MAAI/vC,EACb27D,IAAM3S,GACN4S,GAAKH,GACT73B,QAAQy3B,OAAOtS,GAAI+S,IACnBl4B,QAAQ23B,OAAOvS,GAAIyS,IACnB73B,QAAQ23B,OAAOI,GAAIC,IACnBh4B,QAAQ23B,QAjBJ,GAiBexS,GAAK5nD,MAAI26D,GAAI36D,MAAI4nD,IAjBhC,GAiByC+S,IAC7Cl4B,QAAQ23B,QAlBJ,GAkBevS,GAAK7nD,MAAIs6D,GAAIt6D,MAAI6nD,IAlBhC,GAkByCyS,IAC7C73B,QAAQ23B,QAnBJ,GAmBeI,GAAKx6D,MAAIy6D,GAAIz6D,MAAIw6D,IAnBhC,GAmByCC,IAC7Ch4B,QAAQ23B,QApBJ,GAoBexS,GAAK5nD,MAAI26D,IApBxB,GAoBgCA,GAAK36D,MAAI4nD,IAC7CnlB,QAAQ23B,QArBJ,GAqBevS,GAAK7nD,MAAIs6D,IArBxB,GAqBgCA,GAAKt6D,MAAI6nD,IAC7CplB,QAAQ23B,QAtBJ,GAsBeI,GAAKx6D,MAAIy6D,IAtBxB,GAsBgCA,GAAKz6D,MAAIw6D,IAC7C/3B,QAAQ03B,cCvBG+G,KAAA,aCAR,SAASvC,OAAMwC,KAAMj9B,EAAG16B,GAC7B23D,KAAK3+B,SAAS+3B,eACX,EAAI4G,KAAKrH,IAAMqH,KAAKnH,KAAO,GAC3B,EAAImH,KAAKpH,IAAMoH,KAAKlH,KAAO,GAC3BkH,KAAKrH,IAAM,EAAIqH,KAAKnH,KAAO,GAC3BmH,KAAKpH,IAAM,EAAIoH,KAAKlH,KAAO,GAC3BkH,KAAKrH,IAAM,EAAIqH,KAAKnH,IAAM91B,GAAK,GAC/Bi9B,KAAKpH,IAAM,EAAIoH,KAAKlH,IAAMzwD,GAAK,GAI7B,SAAS43D,MAAM3+B,SACpBz8B,KAAKw8B,SAAWC,QAGlB2+B,MAAMvhE,WACJw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAChBh0D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMtuB,IACtB3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EAAGE,OAAM34D,KAAMA,KAAKg0D,IAAKh0D,KAAKi0D,KACnC,KAAK,EAAGj0D,KAAKw8B,SAAS43B,OAAOp0D,KAAKg0D,IAAKh0D,KAAKi0D,MAE1Cj0D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,GAAI,MAC/F,KAAK,EAAGxD,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKw8B,SAAS43B,QAAQ,EAAIp0D,KAAK8zD,IAAM9zD,KAAKg0D,KAAO,GAAI,EAAIh0D,KAAK+zD,IAAM/zD,KAAKi0D,KAAO,GACzG,QAAS0E,OAAM34D,KAAMk+B,EAAG16B,GAE1BxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAM91B,EAChCl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMzwD,ICzCpC,SAAS63D,YAAY5+B,SACnBz8B,KAAKw8B,SAAWC,QAGlB4+B,YAAYxhE,WACVw+D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAAMt7D,KAAKu7D,IAAMv7D,KAAKw7D,IACjDx7D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAMz7D,KAAK07D,IAAM17D,KAAK27D,IAAMh2B,IACvD3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EACHz4D,KAAKw8B,SAAS03B,OAAOl0D,KAAKs7D,IAAKt7D,KAAKy7D,KACpCz7D,KAAKw8B,SAAS23B,YACd,MAEF,KAAK,EACHn0D,KAAKw8B,SAAS03B,QAAQl0D,KAAKs7D,IAAM,EAAIt7D,KAAKu7D,KAAO,GAAIv7D,KAAKy7D,IAAM,EAAIz7D,KAAK07D,KAAO,GAChF17D,KAAKw8B,SAAS43B,QAAQp0D,KAAKu7D,IAAM,EAAIv7D,KAAKs7D,KAAO,GAAIt7D,KAAK07D,IAAM,EAAI17D,KAAKy7D,KAAO,GAChFz7D,KAAKw8B,SAAS23B,YACd,MAEF,KAAK,EACHn0D,KAAK24D,MAAM34D,KAAKs7D,IAAKt7D,KAAKy7D,KAC1Bz7D,KAAK24D,MAAM34D,KAAKu7D,IAAKv7D,KAAK07D,KAC1B17D,KAAK24D,MAAM34D,KAAKw7D,IAAKx7D,KAAK27D,OAKhChD,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs7D,IAAMp9B,EAAGl+B,KAAKy7D,IAAMj4D,EAAG,MACrD,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAKu7D,IAAMr9B,EAAGl+B,KAAK07D,IAAMl4D,EAAG,MACrD,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAKw7D,IAAMt9B,EAAGl+B,KAAK27D,IAAMn4D,EAAGxD,KAAKw8B,SAAS03B,QAAQl0D,KAAK8zD,IAAM,EAAI9zD,KAAKg0D,IAAM91B,GAAK,GAAIl+B,KAAK+zD,IAAM,EAAI/zD,KAAKi0D,IAAMzwD,GAAK,GAAI,MACjJ,QAASm1D,OAAM34D,KAAMk+B,EAAG16B,GAE1BxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAM91B,EAChCl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMzwD,IC3CpC,SAASo4D,UAAUn/B,SACjBz8B,KAAKw8B,SAAWC,QAGlBm/B,UAAU/hE,WACRw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAChBh0D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMtuB,IACtB3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,WACH14D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,IAAI7W,IAAM5hD,KAAK8zD,IAAM,EAAI9zD,KAAKg0D,IAAM91B,GAAK,EAAGy2B,IAAM30D,KAAK+zD,IAAM,EAAI/zD,KAAKi0D,IAAMzwD,GAAK,EAAGxD,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOxS,GAAI+S,IAAM30D,KAAKw8B,SAAS03B,OAAOtS,GAAI+S,IAAK,MACvL,KAAK,EAAG30D,KAAKy4D,OAAS,EACtB,QAASE,OAAM34D,KAAMk+B,EAAG16B,GAE1BxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAM91B,EAChCl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMzwD,IC9BpC,SAASq4D,OAAOp/B,QAASq/B,MACvB97D,KAAK+7D,OAAS,IAAIX,MAAM3+B,SACxBz8B,KAAKg8D,MAAQF,KAGfD,OAAOhiE,WACL2+D,UAAW,SAAAA,YACTx4D,KAAKi8D,MACLj8D,KAAKk8D,MACLl8D,KAAK+7D,OAAOvD,aAEdE,QAAS,SAAAA,UACP,IAAIx6B,EAAIl+B,KAAKi8D,GACTz4D,EAAIxD,KAAKk8D,GACT/gD,EAAI+iB,EAAEx8B,OAAS,EAEnB,GAAIyZ,EAAI,EAQN,IAPA,IAKIliB,EALA2oD,GAAK1jB,EAAE,GACPy2B,GAAKnxD,EAAE,GACPqyD,GAAK33B,EAAE/iB,GAAKymC,GACZkU,GAAKtyD,EAAE2X,GAAKw5C,GACZ58D,GAAK,IAGAA,GAAKojB,GACZliB,EAAIlB,EAAIojB,EACRnb,KAAK+7D,OAAOpD,MACV34D,KAAKg8D,MAAQ99B,EAAEnmC,IAAM,EAAIiI,KAAKg8D,QAAUpa,GAAK3oD,EAAI48D,IACjD71D,KAAKg8D,MAAQx4D,EAAEzL,IAAM,EAAIiI,KAAKg8D,QAAUrH,GAAK17D,EAAI68D,KAKvD91D,KAAKi8D,GAAKj8D,KAAKk8D,GAAK,KACpBl8D,KAAK+7D,OAAOrD,WAEdC,MAAO,SAAAA,MAASz6B,EAAG16B,GACjBxD,KAAKi8D,GAAG/1D,MAAMg4B,GACdl+B,KAAKk8D,GAAGh2D,MAAM1C,MAIH,SAAU24D,OAAOL,MAE9B,SAASM,OAAO3/B,SACd,OAAgB,IAATq/B,KAAa,IAAIV,MAAM3+B,SAAW,IAAIo/B,OAAOp/B,QAASq/B,MAO/D,OAJAM,OAAON,KAAO,SAASA,MACrB,OAAOK,QAAQL,OAGVM,QAVM,CAWZ,KCvDI,SAASzD,eAAMwC,KAAMj9B,EAAG16B,GAC7B23D,KAAK3+B,SAAS+3B,cACZ4G,KAAKnH,IAAMmH,KAAKkB,IAAMlB,KAAKG,IAAMH,KAAKrH,KACtCqH,KAAKlH,IAAMkH,KAAKkB,IAAMlB,KAAKM,IAAMN,KAAKpH,KACtCoH,KAAKG,IAAMH,KAAKkB,IAAMlB,KAAKnH,IAAM91B,GACjCi9B,KAAKM,IAAMN,KAAKkB,IAAMlB,KAAKlH,IAAMzwD,GACjC23D,KAAKG,IACLH,KAAKM,KAIF,SAASa,SAAS7/B,QAAS8/B,SAChCv8D,KAAKw8B,SAAWC,QAChBz8B,KAAKq8D,IAAM,EAAIE,SAAW,EAG5BD,SAASziE,WACPw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAC3Bt7D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAM91B,IACjC3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKw8B,SAAS43B,OAAOp0D,KAAKs7D,IAAKt7D,KAAKy7D,KAAM,MAClD,KAAK,EAAG9C,eAAM34D,KAAMA,KAAKg0D,IAAKh0D,KAAKi0D,MAEjCj0D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,GAAI,MAC/F,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAKg0D,IAAM91B,EAAGl+B,KAAKi0D,IAAMzwD,EAAG,MACrD,KAAK,EAAGxD,KAAKy4D,OAAS,EACtB,QAASE,eAAM34D,KAAMk+B,EAAG16B,GAE1BxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAMh0D,KAAKs7D,IAAKt7D,KAAKs7D,IAAMp9B,EACrDl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMj0D,KAAKy7D,IAAKz7D,KAAKy7D,IAAMj4D,KAI1C,SAAU24D,OAAOI,SAE9B,SAASC,SAAS//B,SAChB,OAAO,IAAI6/B,SAAS7/B,QAAS8/B,SAO/B,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GCzDI,SAASC,eAAehgC,QAAS8/B,SACtCv8D,KAAKw8B,SAAWC,QAChBz8B,KAAKq8D,IAAM,EAAIE,SAAW,EAG5BE,eAAe5iE,WACbw+D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAAMt7D,KAAKu7D,IAAMv7D,KAAKw7D,IAAMx7D,KAAK08D,IAC5D18D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAMz7D,KAAK07D,IAAM17D,KAAK27D,IAAM37D,KAAK28D,IAAMh3B,IAClE3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EACHz4D,KAAKw8B,SAAS03B,OAAOl0D,KAAKu7D,IAAKv7D,KAAK07D,KACpC17D,KAAKw8B,SAAS23B,YACd,MAEF,KAAK,EACHn0D,KAAKw8B,SAAS43B,OAAOp0D,KAAKu7D,IAAKv7D,KAAK07D,KACpC17D,KAAKw8B,SAAS23B,YACd,MAEF,KAAK,EACHn0D,KAAK24D,MAAM34D,KAAKu7D,IAAKv7D,KAAK07D,KAC1B17D,KAAK24D,MAAM34D,KAAKw7D,IAAKx7D,KAAK27D,KAC1B37D,KAAK24D,MAAM34D,KAAK08D,IAAK18D,KAAK28D,OAKhChE,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKu7D,IAAMr9B,EAAGl+B,KAAK07D,IAAMl4D,EAAG,MACrD,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAKw8B,SAAS03B,OAAOl0D,KAAKw7D,IAAMt9B,EAAGl+B,KAAK27D,IAAMn4D,GAAI,MAC3E,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAK08D,IAAMx+B,EAAGl+B,KAAK28D,IAAMn5D,EAAG,MACrD,QAASm1D,eAAM34D,KAAMk+B,EAAG16B,GAE1BxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAMh0D,KAAKs7D,IAAKt7D,KAAKs7D,IAAMp9B,EACrDl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMj0D,KAAKy7D,IAAKz7D,KAAKy7D,IAAMj4D,KAI1C,SAAU24D,OAAOI,SAE9B,SAASC,SAAS//B,SAChB,OAAO,IAAIggC,eAAehgC,QAAS8/B,SAOrC,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GC1DI,SAASI,aAAangC,QAAS8/B,SACpCv8D,KAAKw8B,SAAWC,QAChBz8B,KAAKq8D,IAAM,EAAIE,SAAW,EAG5BK,aAAa/iE,WACXw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAC3Bt7D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAM91B,IACjC3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,WACH14D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOp0D,KAAKs7D,IAAKt7D,KAAKy7D,KAAOz7D,KAAKw8B,SAAS03B,OAAOl0D,KAAKs7D,IAAKt7D,KAAKy7D,KAAM,MAC3H,KAAK,EAAGz7D,KAAKy4D,OAAS,EACtB,QAASE,eAAM34D,KAAMk+B,EAAG16B,GAE1BxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAMh0D,KAAKs7D,IAAKt7D,KAAKs7D,IAAMp9B,EACrDl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMj0D,KAAKy7D,IAAKz7D,KAAKy7D,IAAMj4D,KAI1C,SAAU24D,OAAOI,SAE9B,SAASC,SAAS//B,SAChB,OAAO,IAAImgC,aAAangC,QAAS8/B,SAOnC,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GC7CI,SAAS7D,iBAAMwC,KAAMj9B,EAAG16B,GAC7B,IAAIq+C,GAAKsZ,KAAKnH,IACVM,GAAK6G,KAAKlH,IACVO,GAAK2G,KAAKG,IACV7G,GAAK0G,KAAKM,IAEd,GAAIN,KAAK0B,OAAS/K,aAAS,CACzB,IAAI33D,EAAI,EAAIghE,KAAK2B,QAAU,EAAI3B,KAAK0B,OAAS1B,KAAK4B,OAAS5B,KAAK6B,QAC5DxjE,EAAI,EAAI2hE,KAAK0B,QAAU1B,KAAK0B,OAAS1B,KAAK4B,QAC9Clb,IAAMA,GAAK1nD,EAAIghE,KAAKrH,IAAMqH,KAAK6B,QAAU7B,KAAKG,IAAMH,KAAK2B,SAAWtjE,EACpE86D,IAAMA,GAAKn6D,EAAIghE,KAAKpH,IAAMoH,KAAK6B,QAAU7B,KAAKM,IAAMN,KAAK2B,SAAWtjE,EAGtE,GAAI2hE,KAAK8B,OAASnL,aAAS,CACzB,IAAI1uD,EAAI,EAAI+3D,KAAK+B,QAAU,EAAI/B,KAAK8B,OAAS9B,KAAK4B,OAAS5B,KAAK6B,QAC5D7kE,EAAI,EAAIgjE,KAAK8B,QAAU9B,KAAK8B,OAAS9B,KAAK4B,QAC9CvI,IAAMA,GAAKpxD,EAAI+3D,KAAKnH,IAAMmH,KAAK+B,QAAUh/B,EAAIi9B,KAAK6B,SAAW7kE,EAC7Ds8D,IAAMA,GAAKrxD,EAAI+3D,KAAKlH,IAAMkH,KAAK+B,QAAU15D,EAAI23D,KAAK6B,SAAW7kE,EAG/DgjE,KAAK3+B,SAAS+3B,cAAc1S,GAAIyS,GAAIE,GAAIC,GAAI0G,KAAKG,IAAKH,KAAKM,KAG7D,SAAS0B,WAAW1gC,QAAS2gC,OAC3Bp9D,KAAKw8B,SAAWC,QAChBz8B,KAAKq9D,OAASD,MAGhBD,WAAWtjE,WACTw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAC3Bt7D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAM91B,IACjC3lC,KAAK68D,OAAS78D,KAAK+8D,OAAS/8D,KAAKi9D,OACjCj9D,KAAK88D,QAAU98D,KAAKg9D,QAAUh9D,KAAKk9D,QACnCl9D,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKw8B,SAAS43B,OAAOp0D,KAAKs7D,IAAKt7D,KAAKy7D,KAAM,MAClD,KAAK,EAAGz7D,KAAK24D,MAAM34D,KAAKs7D,IAAKt7D,KAAKy7D,MAEhCz7D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAGjB,GAFA06B,GAAKA,EAAG16B,GAAKA,EAETxD,KAAKy4D,OAAQ,CACf,IAAI6E,IAAMt9D,KAAKs7D,IAAMp9B,EACjBq/B,IAAMv9D,KAAKy7D,IAAMj4D,EACrBxD,KAAKi9D,OAASp5D,KAAK8Q,KAAK3U,KAAKk9D,QAAUr5D,KAAKgR,IAAIyoD,IAAMA,IAAMC,IAAMA,IAAKv9D,KAAKq9D,SAG9E,OAAQr9D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,GAAI,MAC/F,KAAK,EAAGxD,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EACtB,QAASE,iBAAM34D,KAAMk+B,EAAG16B,GAG1BxD,KAAK68D,OAAS78D,KAAK+8D,OAAQ/8D,KAAK+8D,OAAS/8D,KAAKi9D,OAC9Cj9D,KAAK88D,QAAU98D,KAAKg9D,QAASh9D,KAAKg9D,QAAUh9D,KAAKk9D,QACjDl9D,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAMh0D,KAAKs7D,IAAKt7D,KAAKs7D,IAAMp9B,EACrDl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMj0D,KAAKy7D,IAAKz7D,KAAKy7D,IAAMj4D,IAI1C,IAAAg6D,iBAAA,SAAUrB,OAAOiB,OAE9B,SAASK,WAAWhhC,SAClB,OAAO2gC,MAAQ,IAAID,WAAW1gC,QAAS2gC,OAAS,IAAId,SAAS7/B,QAAS,GAOxE,OAJAghC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,WAVM,CAWZ,ICnFH,SAASC,iBAAiBjhC,QAAS2gC,OACjCp9D,KAAKw8B,SAAWC,QAChBz8B,KAAKq9D,OAASD,MAGhBM,iBAAiB7jE,WACfw+D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAAMt7D,KAAKu7D,IAAMv7D,KAAKw7D,IAAMx7D,KAAK08D,IAC5D18D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAMz7D,KAAK07D,IAAM17D,KAAK27D,IAAM37D,KAAK28D,IAAMh3B,IAClE3lC,KAAK68D,OAAS78D,KAAK+8D,OAAS/8D,KAAKi9D,OACjCj9D,KAAK88D,QAAU98D,KAAKg9D,QAAUh9D,KAAKk9D,QACnCl9D,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EACHz4D,KAAKw8B,SAAS03B,OAAOl0D,KAAKu7D,IAAKv7D,KAAK07D,KACpC17D,KAAKw8B,SAAS23B,YACd,MAEF,KAAK,EACHn0D,KAAKw8B,SAAS43B,OAAOp0D,KAAKu7D,IAAKv7D,KAAK07D,KACpC17D,KAAKw8B,SAAS23B,YACd,MAEF,KAAK,EACHn0D,KAAK24D,MAAM34D,KAAKu7D,IAAKv7D,KAAK07D,KAC1B17D,KAAK24D,MAAM34D,KAAKw7D,IAAKx7D,KAAK27D,KAC1B37D,KAAK24D,MAAM34D,KAAK08D,IAAK18D,KAAK28D,OAKhChE,MAAO,SAAAA,MAASz6B,EAAG16B,GAGjB,GAFA06B,GAAKA,EAAG16B,GAAKA,EAETxD,KAAKy4D,OAAQ,CACf,IAAI6E,IAAMt9D,KAAKs7D,IAAMp9B,EACjBq/B,IAAMv9D,KAAKy7D,IAAMj4D,EACrBxD,KAAKi9D,OAASp5D,KAAK8Q,KAAK3U,KAAKk9D,QAAUr5D,KAAKgR,IAAIyoD,IAAMA,IAAMC,IAAMA,IAAKv9D,KAAKq9D,SAG9E,OAAQr9D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKu7D,IAAMr9B,EAAGl+B,KAAK07D,IAAMl4D,EAAG,MACrD,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAKw8B,SAAS03B,OAAOl0D,KAAKw7D,IAAMt9B,EAAGl+B,KAAK27D,IAAMn4D,GAAI,MAC3E,KAAK,EAAGxD,KAAKy4D,OAAS,EAAGz4D,KAAK08D,IAAMx+B,EAAGl+B,KAAK28D,IAAMn5D,EAAG,MACrD,QAASm1D,iBAAM34D,KAAMk+B,EAAG16B,GAG1BxD,KAAK68D,OAAS78D,KAAK+8D,OAAQ/8D,KAAK+8D,OAAS/8D,KAAKi9D,OAC9Cj9D,KAAK88D,QAAU98D,KAAKg9D,QAASh9D,KAAKg9D,QAAUh9D,KAAKk9D,QACjDl9D,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAMh0D,KAAKs7D,IAAKt7D,KAAKs7D,IAAMp9B,EACrDl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMj0D,KAAKy7D,IAAKz7D,KAAKy7D,IAAMj4D,KAI1C,SAAU24D,OAAOiB,OAE9B,SAASK,WAAWhhC,SAClB,OAAO2gC,MAAQ,IAAIM,iBAAiBjhC,QAAS2gC,OAAS,IAAIX,eAAehgC,QAAS,GAOpF,OAJAghC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,YAVM,CAWZ,ICtEH,SAASE,eAAelhC,QAAS2gC,OAC/Bp9D,KAAKw8B,SAAWC,QAChBz8B,KAAKq9D,OAASD,MAGhBO,eAAe9jE,WACbw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAAMh0D,KAAKs7D,IAC3Bt7D,KAAK+zD,IAAM/zD,KAAKi0D,IAAMj0D,KAAKy7D,IAAM91B,IACjC3lC,KAAK68D,OAAS78D,KAAK+8D,OAAS/8D,KAAKi9D,OACjCj9D,KAAK88D,QAAU98D,KAAKg9D,QAAUh9D,KAAKk9D,QACnCl9D,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,WACH14D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GAGjB,GAFA06B,GAAKA,EAAG16B,GAAKA,EAETxD,KAAKy4D,OAAQ,CACf,IAAI6E,IAAMt9D,KAAKs7D,IAAMp9B,EACjBq/B,IAAMv9D,KAAKy7D,IAAMj4D,EACrBxD,KAAKi9D,OAASp5D,KAAK8Q,KAAK3U,KAAKk9D,QAAUr5D,KAAKgR,IAAIyoD,IAAMA,IAAMC,IAAMA,IAAKv9D,KAAKq9D,SAG9E,OAAQr9D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOp0D,KAAKs7D,IAAKt7D,KAAKy7D,KAAOz7D,KAAKw8B,SAAS03B,OAAOl0D,KAAKs7D,IAAKt7D,KAAKy7D,KAAM,MAC3H,KAAK,EAAGz7D,KAAKy4D,OAAS,EACtB,QAASE,iBAAM34D,KAAMk+B,EAAG16B,GAG1BxD,KAAK68D,OAAS78D,KAAK+8D,OAAQ/8D,KAAK+8D,OAAS/8D,KAAKi9D,OAC9Cj9D,KAAK88D,QAAU98D,KAAKg9D,QAASh9D,KAAKg9D,QAAUh9D,KAAKk9D,QACjDl9D,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAMh0D,KAAKs7D,IAAKt7D,KAAKs7D,IAAMp9B,EACrDl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMj0D,KAAKy7D,IAAKz7D,KAAKy7D,IAAMj4D,KAI1C,SAAU24D,OAAOiB,OAE9B,SAASK,WAAWhhC,SAClB,OAAO2gC,MAAQ,IAAIO,eAAelhC,QAAS2gC,OAAS,IAAIR,aAAangC,QAAS,GAOhF,OAJAghC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,YAVM,CAWZ,IC3DH,SAASG,aAAanhC,SACpBz8B,KAAKw8B,SAAWC,QAGlBmhC,aAAa/jE,WACXw+D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTx4D,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACH14D,KAAKy4D,QAAQz4D,KAAKw8B,SAAS23B,aAEjCwE,MAAO,SAAAA,MAASz6B,EAAG16B,GACjB06B,GAAKA,EAAG16B,GAAKA,EACTxD,KAAKy4D,OAAQz4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,IACpCxD,KAAKy4D,OAAS,EAAGz4D,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,MClBlD,SAASm7C,cAAKzgB,GACZ,OAAOA,EAAI,GAAK,EAAI,EAOtB,SAAS2/B,OAAO1C,KAAM3G,GAAIC,IACxB,IAAIqJ,GAAK3C,KAAKnH,IAAMmH,KAAKrH,IACrBiK,GAAKvJ,GAAK2G,KAAKnH,IACfgK,IAAM7C,KAAKlH,IAAMkH,KAAKpH,MAAQ+J,IAAMC,GAAK,IAAM,GAC/C5uC,IAAMslC,GAAK0G,KAAKlH,MAAQ8J,IAAMD,GAAK,IAAM,GACzC/jE,GAAKikE,GAAKD,GAAK5uC,GAAK2uC,KAAOA,GAAKC,IACpC,OAAQpf,cAAKqf,IAAMrf,cAAKxvB,KAAOtrB,KAAK4Q,IAAI5Q,KAAKsoB,IAAI6xC,IAAKn6D,KAAKsoB,IAAIgD,IAAK,GAAMtrB,KAAKsoB,IAAIpyB,KAAO,EAI5F,SAASkkE,OAAO9C,KAAMliE,GACpB,IAAI6xB,EAAIqwC,KAAKnH,IAAMmH,KAAKrH,IACxB,OAAOhpC,GAAK,GAAKqwC,KAAKlH,IAAMkH,KAAKpH,KAAOjpC,EAAI7xB,GAAK,EAAIA,EAMvD,SAAS0/D,eAAMwC,KAAM/kB,GAAIC,IACvB,IAAIuL,GAAKuZ,KAAKrH,IACVa,GAAKwG,KAAKpH,IACVlS,GAAKsZ,KAAKnH,IACVM,GAAK6G,KAAKlH,IACV4B,IAAMhU,GAAKD,IAAM,EACrBuZ,KAAK3+B,SAAS+3B,cAAc3S,GAAKiU,GAAIlB,GAAKkB,GAAKzf,GAAIyL,GAAKgU,GAAIvB,GAAKuB,GAAKxf,GAAIwL,GAAIyS,IAGhF,SAAS4J,UAAUzhC,SACjBz8B,KAAKw8B,SAAWC,QA0ClB,SAAS0hC,UAAU1hC,SACjBz8B,KAAKw8B,SAAW,IAAI4hC,eAAe3hC,SAOrC,SAAS2hC,eAAe3hC,SACtBz8B,KAAKw8B,SAAWC,QCvFlB,SAAS4hC,QAAQ5hC,SACfz8B,KAAKw8B,SAAWC,QA2ClB,SAAS6hC,cAAcpgC,GACrB,IAAInmC,EAEAI,EADAqB,EAAI0kC,EAAEx8B,OAAS,EAEfvH,EAAI,IAAI0O,MAAMrP,GACd4J,EAAI,IAAIyF,MAAMrP,GACdX,EAAI,IAAIgQ,MAAMrP,GAElB,IADAW,EAAE,GAAK,EAAGiJ,EAAE,GAAK,EAAGvK,EAAE,GAAKqlC,EAAE,GAAK,EAAIA,EAAE,GACnCnmC,EAAI,EAAGA,EAAIyB,EAAI,IAAKzB,EAAGoC,EAAEpC,GAAK,EAAGqL,EAAErL,GAAK,EAAGc,EAAEd,GAAK,EAAImmC,EAAEnmC,GAAK,EAAImmC,EAAEnmC,EAAI,GAE5E,IADAoC,EAAEX,EAAI,GAAK,EAAG4J,EAAE5J,EAAI,GAAK,EAAGX,EAAEW,EAAI,GAAK,EAAI0kC,EAAE1kC,EAAI,GAAK0kC,EAAE1kC,GACnDzB,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGI,EAAIgC,EAAEpC,GAAKqL,EAAErL,EAAI,GAAIqL,EAAErL,IAAMI,EAAGU,EAAEd,IAAMI,EAAIU,EAAEd,EAAI,GAE1E,IADAoC,EAAEX,EAAI,GAAKX,EAAEW,EAAI,GAAK4J,EAAE5J,EAAI,GACvBzB,EAAIyB,EAAI,EAAGzB,GAAK,IAAKA,EAAGoC,EAAEpC,IAAMc,EAAEd,GAAKoC,EAAEpC,EAAI,IAAMqL,EAAErL,GAE1D,IADAqL,EAAE5J,EAAI,IAAM0kC,EAAE1kC,GAAKW,EAAEX,EAAI,IAAM,EAC1BzB,EAAI,EAAGA,EAAIyB,EAAI,IAAKzB,EAAGqL,EAAErL,GAAK,EAAImmC,EAAEnmC,EAAI,GAAKoC,EAAEpC,EAAI,GACxD,OAAQoC,EAAGiJ,GDpBb86D,UAAUrkE,WACRw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAK8zD,IAAM9zD,KAAKg0D,IAChBh0D,KAAK+zD,IAAM/zD,KAAKi0D,IAChBj0D,KAAKu+D,IAAM54B,IACX3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQ14D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKw8B,SAAS43B,OAAOp0D,KAAKg0D,IAAKh0D,KAAKi0D,KAAM,MAClD,KAAK,EAAG0E,eAAM34D,KAAMA,KAAKu+D,IAAKN,OAAOj+D,KAAMA,KAAKu+D,OAE9Cv+D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACzEn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,OAExBK,MAAO,SAAAA,MAASz6B,EAAG16B,GACjB,IAAI6yC,GAAK1Q,IAGT,GADQniC,GAAKA,GAAb06B,GAAKA,KACKl+B,KAAKg0D,KAAOxwD,IAAMxD,KAAKi0D,IAAjC,CACA,OAAQj0D,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,GAAI,MAC/F,KAAK,EAAGxD,KAAKy4D,OAAS,EAAG,MACzB,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGE,eAAM34D,KAAMi+D,OAAOj+D,KAAMq2C,GAAKwnB,OAAO79D,KAAMk+B,EAAG16B,IAAK6yC,IAAK,MACjF,QAASsiB,eAAM34D,KAAMA,KAAKu+D,IAAKloB,GAAKwnB,OAAO79D,KAAMk+B,EAAG16B,IAGtDxD,KAAK8zD,IAAM9zD,KAAKg0D,IAAKh0D,KAAKg0D,IAAM91B,EAChCl+B,KAAK+zD,IAAM/zD,KAAKi0D,IAAKj0D,KAAKi0D,IAAMzwD,EAChCxD,KAAKu+D,IAAMloB,OAQd8nB,UAAUtkE,UAAYpB,OAAOY,OAAO6kE,UAAUrkE,YAAY8+D,MAAQ,SAASz6B,EAAG16B,GAC7E06D,UAAUrkE,UAAU8+D,MAAMzgE,KAAK8H,KAAMwD,EAAG06B,IAO1CkgC,eAAevkE,WACbq6D,OAAQ,SAAAA,OAASh2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAO1wD,EAAG06B,IACjDi2B,UAAW,SAAAA,YAAan0D,KAAKw8B,SAAS23B,aACtCC,OAAQ,SAAAA,OAASl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS43B,OAAO5wD,EAAG06B,IACjDq2B,cAAe,SAAAA,cAAS1S,GAAIyS,GAAIE,GAAIC,GAAIv2B,EAAG16B,GAAKxD,KAAKw8B,SAAS+3B,cAAcD,GAAIzS,GAAI4S,GAAID,GAAIhxD,EAAG06B,KC1FjGmgC,QAAQxkE,WACNw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAKi8D,MACLj8D,KAAKk8D,OAEPxD,QAAS,SAAAA,UACP,IAAIx6B,EAAIl+B,KAAKi8D,GACTz4D,EAAIxD,KAAKk8D,GACT1iE,EAAI0kC,EAAEx8B,OAEV,GAAIlI,EAEF,GADAwG,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAE,GAAI16B,EAAE,IAAMxD,KAAKw8B,SAAS03B,OAAOh2B,EAAE,GAAI16B,EAAE,IACnE,IAANhK,EACFwG,KAAKw8B,SAAS43B,OAAOl2B,EAAE,GAAI16B,EAAE,SAI7B,IAFA,IAAIg7D,GAAKF,cAAcpgC,GACnBugC,GAAKH,cAAc96D,GACd+jC,GAAK,EAAG6X,GAAK,EAAGA,GAAK5lD,IAAK+tC,KAAM6X,GACvCp/C,KAAKw8B,SAAS+3B,cAAciK,GAAG,GAAGj3B,IAAKk3B,GAAG,GAAGl3B,IAAKi3B,GAAG,GAAGj3B,IAAKk3B,GAAG,GAAGl3B,IAAKrJ,EAAEkhB,IAAK57C,EAAE47C,MAKnFp/C,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAAqB,IAAN9+D,IAAUwG,KAAKw8B,SAAS23B,YAC/Dn0D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,MACtBt4D,KAAKi8D,GAAKj8D,KAAKk8D,GAAK,MAEtBvD,MAAO,SAAAA,MAASz6B,EAAG16B,GACjBxD,KAAKi8D,GAAG/1D,MAAMg4B,GACdl+B,KAAKk8D,GAAGh2D,MAAM1C,KCvClB,SAASk7D,KAAKjiC,QAASxjC,GACrB+G,KAAKw8B,SAAWC,QAChBz8B,KAAK2+D,GAAK1lE,EAGZylE,KAAK7kE,WACHw+D,UAAW,SAAAA,YACTr4D,KAAKs4D,MAAQ,GAEfC,QAAS,SAAAA,UACPv4D,KAAKs4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTx4D,KAAKi8D,GAAKj8D,KAAKk8D,GAAKv2B,IACpB3lC,KAAKy4D,OAAS,GAEhBC,QAAS,SAAAA,UACH,EAAI14D,KAAK2+D,IAAM3+D,KAAK2+D,GAAK,GAAqB,IAAhB3+D,KAAKy4D,QAAcz4D,KAAKw8B,SAAS43B,OAAOp0D,KAAKi8D,GAAIj8D,KAAKk8D,KACpFl8D,KAAKs4D,OAAyB,IAAft4D,KAAKs4D,OAA+B,IAAhBt4D,KAAKy4D,SAAez4D,KAAKw8B,SAAS23B,YACrEn0D,KAAKs4D,OAAS,IAAGt4D,KAAK2+D,GAAK,EAAI3+D,KAAK2+D,GAAI3+D,KAAKs4D,MAAQ,EAAIt4D,KAAKs4D,QAEpEK,MAAO,SAAAA,MAASz6B,EAAG16B,GAEjB,OADA06B,GAAKA,EAAG16B,GAAKA,EACLxD,KAAKy4D,QACX,KAAK,EAAGz4D,KAAKy4D,OAAS,EAAGz4D,KAAKs4D,MAAQt4D,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,GAAKxD,KAAKw8B,SAAS03B,OAAOh2B,EAAG16B,GAAI,MAC/F,KAAK,EAAGxD,KAAKy4D,OAAS,EACtB,QACE,GAAIz4D,KAAK2+D,IAAM,EACb3+D,KAAKw8B,SAAS43B,OAAOp0D,KAAKi8D,GAAIz4D,GAC9BxD,KAAKw8B,SAAS43B,OAAOl2B,EAAG16B,OACnB,CACL,IAAIq+C,GAAK7hD,KAAKi8D,IAAM,EAAIj8D,KAAK2+D,IAAMzgC,EAAIl+B,KAAK2+D,GAC5C3+D,KAAKw8B,SAAS43B,OAAOvS,GAAI7hD,KAAKk8D,IAC9Bl8D,KAAKw8B,SAAS43B,OAAOvS,GAAIr+C,IAK/BxD,KAAKi8D,GAAK/9B,EAAGl+B,KAAKk8D,GAAK14D,IAIZ,IAAAo7D,WAAA,SAASniC,SACtB,OAAO,IAAIiiC,KAAKjiC,QAAS,KAGpB,SAASoiC,WAAWpiC,SACzB,OAAO,IAAIiiC,KAAKjiC,QAAS,GAGpB,SAASqiC,UAAUriC,SACxB,OAAO,IAAIiiC,KAAKjiC,QAAS,GCnDZ,IAAAsiC,KAAA,SAASC,OAAQl4C,OAC9B,IAAOttB,EAAIwlE,OAAOt9D,QAAU,EAC5B,IAAK,IAAWyZ,EAAG6iD,GAA2BxkE,EAArCzB,EAAI,EAAUo3B,GAAK6vC,OAAOl4C,MAAM,IAAQ3uB,EAAIg3B,GAAGztB,OAAQ3J,EAAIyB,IAAKzB,EAEvE,IADAimE,GAAK7uC,GAAIA,GAAK6vC,OAAOl4C,MAAM/uB,IACtBojB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EACnBgU,GAAGhU,GAAG,IAAMgU,GAAGhU,GAAG,GAAK7G,MAAM0pD,GAAG7iD,GAAG,IAAM6iD,GAAG7iD,GAAG,GAAK6iD,GAAG7iD,GAAG,ICLjD8jD,WAAA,SAASD,QAEtB,IADA,IAAIxlE,EAAIwlE,OAAOt9D,OAAQlJ,EAAI,IAAIqQ,MAAMrP,KAC5BA,GAAK,GAAGhB,EAAEgB,GAAKA,EACxB,OAAOhB,GCET,SAAS0mE,WAAW7mE,EAAGiB,KACrB,OAAOjB,EAAEiB,KAGI,ICPA6lE,gBAAA,SAASH,QACtB,IAAII,KAAOJ,OAAO/2D,IAAIgM,eACtB,OAAO8qD,WAAKC,QAAQzrD,KAAK,SAASpZ,EAAGiJ,GAAK,OAAOg8D,KAAKjlE,GAAKilE,KAAKh8D,MAG3D,SAAS6Q,cAAI+qD,QAElB,IADA,IAAsCt2D,EAAlC1O,EAAI,EAAGjC,GAAK,EAAGyB,EAAIwlE,OAAOt9D,SACrB3J,EAAIyB,IAAOkP,GAAKs2D,OAAOjnE,GAAG,MAAIiC,GAAK0O,GAC5C,OAAO1O,ECFF,SAASqlE,WAAWpmE,GACzB,QAASA,GAAK,IAAM,EAAIA,EAAIA,EAAIA,GAAKA,GAAK,GAAKA,EAAIA,EAAI,GAAK,GCPzC,SAASkjE,OAAOliE,GAGnC,SAASqlE,OAAOrmE,GACd,OAAO4K,KAAKgR,IAAI5b,EAAGgB,GAKrB,OARAA,GAAKA,EAMLqlE,OAAOhgB,SAAW6c,OAEXmD,QATY,CAFN,GAcO,SAASnD,OAAOliE,GAGpC,SAASslE,QAAQtmE,GACf,OAAO,EAAI4K,KAAKgR,IAAI,EAAI5b,EAAGgB,GAK7B,OARAA,GAAKA,EAMLslE,QAAQjgB,SAAW6c,OAEZoD,QATa,CAdP,GAAf,IA0BWC,UAAa,SAASrD,OAAOliE,GAGtC,SAASulE,UAAUvmE,GACjB,QAASA,GAAK,IAAM,EAAI4K,KAAKgR,IAAI5b,EAAGgB,GAAK,EAAI4J,KAAKgR,IAAI,EAAI5b,EAAGgB,IAAM,EAKrE,OARAA,GAAKA,EAMLulE,UAAUlgB,SAAW6c,OAEdqD,UATe,CA1BT,GCAN37D,KAAKkyC,GCAd,IAAI7kC,GAAK,EAAI,GACTuuD,GAAK,EAAI,GACTC,GAAK,EAAI,GACTC,GAAK,IACLC,GAAK,EAAI,GACTC,GAAK,GAAK,GACVC,GAAK,MACLC,GAAK,GAAK,GACVC,GAAK,GAAK,GACVC,GAAK,EAAI/uD,GAAKA,GAMX,SAASgvD,UAAUjnE,GACxB,OAAQA,GAAKA,GAAKiY,GAAK+uD,GAAKhnE,EAAIA,EAAIA,EAAIymE,GAAKO,IAAMhnE,GAAKwmE,IAAMxmE,EAAI0mE,GAAK1mE,EAAI4mE,GAAKI,IAAMhnE,GAAK2mE,IAAM3mE,EAAI6mE,GAAKG,IAAMhnE,GAAK8mE,IAAM9mE,EAAI+mE,ICd5G,SAAS7D,OAAOniE,GAGnC,SAASmmE,OAAOlnE,GACd,OAAOA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,GAKhC,OARAA,GAAKA,EAMLmmE,OAAOC,UAAYjE,OAEZgE,QATY,CAFL,SAcM,SAAShE,OAAOniE,GAGpC,SAASqmE,QAAQpnE,GACf,QAASA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,GAAK,EAKvC,OARAA,GAAKA,EAMLqmE,QAAQD,UAAYjE,OAEbkE,QATa,CAdN,SAAhB,IA0BWC,UAAa,SAASnE,OAAOniE,GAGtC,SAASsmE,UAAUrnE,GACjB,QAASA,GAAK,GAAK,EAAIA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,IAAMf,GAAK,GAAKA,IAAMe,EAAI,GAAKf,EAAIe,GAAK,GAAK,EAK7F,OARAA,GAAKA,EAMLsmE,UAAUF,UAAYjE,OAEfmE,UATe,CA1BR,SCAZ3M,YAAM,EAAI9vD,KAAKkyC,GAiBRwqB,YAba,SAASpE,OAAOhiE,EAAGJ,GACzC,IAAIC,EAAI6J,KAAKuyD,KAAK,GAAKj8D,EAAI0J,KAAK6Q,IAAI,EAAGva,MAAQJ,GAAK45D,aAEpD,SAAS6M,UAAUvnE,GACjB,OAAOkB,EAAI0J,KAAKgR,IAAI,EAAG,KAAO5b,GAAK4K,KAAK+yC,KAAK58C,EAAIf,GAAKc,GAMxD,OAHAymE,UAAUC,UAAY,SAAStmE,GAAK,OAAOgiE,OAAOhiE,EAAGJ,EAAI45D,cACzD6M,UAAUE,OAAS,SAAS3mE,GAAK,OAAOoiE,OAAOhiE,EAAGJ,IAE3CymE,UAVe,CAHR,EACH,IAeY,SAASrE,OAAOhiE,EAAGJ,GAC1C,IAAIC,EAAI6J,KAAKuyD,KAAK,GAAKj8D,EAAI0J,KAAK6Q,IAAI,EAAGva,MAAQJ,GAAK45D,aAEpD,SAAS4M,WAAWtnE,GAClB,OAAO,EAAIkB,EAAI0J,KAAKgR,IAAI,GAAI,IAAM5b,GAAKA,IAAM4K,KAAK+yC,KAAK39C,EAAIe,GAAKD,GAMlE,OAHAwmE,WAAWE,UAAY,SAAStmE,GAAK,OAAOgiE,OAAOhiE,EAAGJ,EAAI45D,cAC1D4M,WAAWG,OAAS,SAAS3mE,GAAK,OAAOoiE,OAAOhiE,EAAGJ,IAE5CwmE,WAVgB,CAhBT,EACH,KCFEI,yBD8BY,SAASxE,OAAOhiE,EAAGJ,GAC5C,IAAIC,EAAI6J,KAAKuyD,KAAK,GAAKj8D,EAAI0J,KAAK6Q,IAAI,EAAGva,MAAQJ,GAAK45D,aAEpD,SAASiN,aAAa3nE,GACpB,QAASA,EAAQ,EAAJA,EAAQ,GAAK,EACpBkB,EAAI0J,KAAKgR,IAAI,EAAG,GAAK5b,GAAK4K,KAAK+yC,KAAK58C,EAAIf,GAAKc,GAC7C,EAAII,EAAI0J,KAAKgR,IAAI,GAAI,GAAK5b,GAAK4K,KAAK+yC,KAAK58C,EAAIf,GAAKc,IAAM,EAMhE,OAHA6mE,aAAaH,UAAY,SAAStmE,GAAK,OAAOgiE,OAAOhiE,EAAGJ,EAAI45D,cAC5DiN,aAAaF,OAAS,SAAS3mE,GAAK,OAAOoiE,OAAOhiE,EAAGJ,IAE9C6mE,aAZkB,CA7BX,EACH,ICFE,SAAS1iC,GACtB,OAAO,WACL,OAAOA,KCFJ,SAASA,YAAE7lC,GAChB,OAAOA,EAAE,GAGJ,SAASmL,YAAEnL,GAChB,OAAOA,EAAE,GCLX,SAASwoE,eACP7gE,KAAKmhB,EAAI,KAGJ,SAAS2/C,aAAalwC,MAC3BA,KAAKy2B,EACLz2B,KAAKpjB,EACLojB,KAAKo1B,EACLp1B,KAAKmwC,EACLnwC,KAAKpuB,EACLouB,KAAK5V,EAAI,KAuLX,SAASgmD,mBAAmBC,KAAMrwC,MAChC,IAAI72B,EAAI62B,KACJipB,EAAIjpB,KAAKmwC,EACTx6C,OAASxsB,EAAEstD,EAEX9gC,OACEA,OAAOy/B,IAAMjsD,EAAGwsB,OAAOy/B,EAAInM,EAC1BtzB,OAAOw6C,EAAIlnB,EAEhBonB,KAAK9/C,EAAI04B,EAGXA,EAAEwN,EAAI9gC,OACNxsB,EAAEstD,EAAIxN,EACN9/C,EAAEgnE,EAAIlnB,EAAEmM,EACJjsD,EAAEgnE,IAAGhnE,EAAEgnE,EAAE1Z,EAAIttD,GACjB8/C,EAAEmM,EAAIjsD,EAGR,SAASmnE,oBAAoBD,KAAMrwC,MACjC,IAAI72B,EAAI62B,KACJipB,EAAIjpB,KAAKo1B,EACTz/B,OAASxsB,EAAEstD,EAEX9gC,OACEA,OAAOy/B,IAAMjsD,EAAGwsB,OAAOy/B,EAAInM,EAC1BtzB,OAAOw6C,EAAIlnB,EAEhBonB,KAAK9/C,EAAI04B,EAGXA,EAAEwN,EAAI9gC,OACNxsB,EAAEstD,EAAIxN,EACN9/C,EAAEisD,EAAInM,EAAEknB,EACJhnE,EAAEisD,IAAGjsD,EAAEisD,EAAEqB,EAAIttD,GACjB8/C,EAAEknB,EAAIhnE,EAGR,SAASonE,cAAcvwC,MACrB,KAAOA,KAAKo1B,GAAGp1B,KAAOA,KAAKo1B,EAC3B,OAAOp1B,KA5NTiwC,aAAahnE,WACXgsB,YAAag7C,aAEbvN,OAAQ,SAAAA,OAAS8N,MAAOxwC,MACtB,IAAIrK,OAAQ86C,QAASC,MAErB,GAAIF,MAAO,CAKT,GAJAxwC,KAAKpuB,EAAI4+D,MACTxwC,KAAK5V,EAAIomD,MAAMpmD,EACXomD,MAAMpmD,IAAGomD,MAAMpmD,EAAExY,EAAIouB,MACzBwwC,MAAMpmD,EAAI4V,KACNwwC,MAAML,EAAG,CAEX,IADAK,MAAQA,MAAML,EACPK,MAAMpb,GAAGob,MAAQA,MAAMpb,EAC9Bob,MAAMpb,EAAIp1B,UAEVwwC,MAAML,EAAInwC,KAEZrK,OAAS66C,WACAphE,KAAKmhB,GACdigD,MAAQD,cAAcnhE,KAAKmhB,GAC3ByP,KAAKpuB,EAAI,KACTouB,KAAK5V,EAAIomD,MACTA,MAAM5+D,EAAI4+D,MAAMpb,EAAIp1B,KACpBrK,OAAS66C,QAETxwC,KAAKpuB,EAAIouB,KAAK5V,EAAI,KAClBhb,KAAKmhB,EAAIyP,KACTrK,OAAS,MAOX,IALAqK,KAAKo1B,EAAIp1B,KAAKmwC,EAAI,KAClBnwC,KAAKy2B,EAAI9gC,OACTqK,KAAKpjB,GAAI,EAET4zD,MAAQxwC,KACDrK,QAAUA,OAAO/Y,GAElB+Y,UADJ86C,QAAU96C,OAAO8gC,GACMrB,GACrBsb,MAAQD,QAAQN,IACHO,MAAM9zD,GACjB+Y,OAAO/Y,EAAI8zD,MAAM9zD,GAAI,EACrB6zD,QAAQ7zD,GAAI,EACZ4zD,MAAQC,UAEJD,QAAU76C,OAAOw6C,IACnBC,mBAAmBhhE,KAAMumB,QAEzBA,QADA66C,MAAQ76C,QACO8gC,GAEjB9gC,OAAO/Y,GAAI,EACX6zD,QAAQ7zD,GAAI,EACZ0zD,oBAAoBlhE,KAAMqhE,WAG5BC,MAAQD,QAAQrb,IACHsb,MAAM9zD,GACjB+Y,OAAO/Y,EAAI8zD,MAAM9zD,GAAI,EACrB6zD,QAAQ7zD,GAAI,EACZ4zD,MAAQC,UAEJD,QAAU76C,OAAOy/B,IACnBkb,oBAAoBlhE,KAAMumB,QAE1BA,QADA66C,MAAQ76C,QACO8gC,GAEjB9gC,OAAO/Y,GAAI,EACX6zD,QAAQ7zD,GAAI,EACZwzD,mBAAmBhhE,KAAMqhE,UAG7B96C,OAAS66C,MAAM/Z,EAEjBrnD,KAAKmhB,EAAE3T,GAAI,GAGbk6B,OAAQ,SAAAA,OAAS9W,MACXA,KAAK5V,IAAG4V,KAAK5V,EAAExY,EAAIouB,KAAKpuB,GACxBouB,KAAKpuB,IAAGouB,KAAKpuB,EAAEwY,EAAI4V,KAAK5V,GAC5B4V,KAAK5V,EAAI4V,KAAKpuB,EAAI,KAElB,IACI8jB,QAGA3Y,KACAmlC,IALAvsB,OAASqK,KAAKy2B,EAEdthB,KAAOnV,KAAKo1B,EACZhgB,MAAQpV,KAAKmwC,EAsCjB,GAhCKpzD,KAFAo4B,KACKC,MACEm7B,cAAcn7B,OADFD,KADNC,MAIdzf,OACEA,OAAOy/B,IAAMp1B,KAAMrK,OAAOy/B,EAAIr4C,KAC7B4Y,OAAOw6C,EAAIpzD,KAEhB3N,KAAKmhB,EAAIxT,KAGPo4B,MAAQC,OACV8M,IAAMnlC,KAAKH,EACXG,KAAKH,EAAIojB,KAAKpjB,EACdG,KAAKq4C,EAAIjgB,KACTA,KAAKshB,EAAI15C,KACLA,OAASq4B,OACXzf,OAAS5Y,KAAK05C,EACd15C,KAAK05C,EAAIz2B,KAAKy2B,EACdz2B,KAAOjjB,KAAKozD,EACZx6C,OAAOy/B,EAAIp1B,KACXjjB,KAAKozD,EAAI/6B,MACTA,MAAMqhB,EAAI15C,OAEVA,KAAK05C,EAAI9gC,OACTA,OAAS5Y,KACTijB,KAAOjjB,KAAKozD,KAGdjuB,IAAMliB,KAAKpjB,EACXojB,KAAOjjB,MAGLijB,OAAMA,KAAKy2B,EAAI9gC,SACfusB,IACJ,GAAIliB,MAAQA,KAAKpjB,EAAKojB,KAAKpjB,GAAI,MAA/B,CAEA,EAAG,CACD,GAAIojB,OAAS5wB,KAAKmhB,EAAG,MACrB,GAAIyP,OAASrK,OAAOy/B,GAQlB,IAPA1/B,QAAUC,OAAOw6C,GACLvzD,IACV8Y,QAAQ9Y,GAAI,EACZ+Y,OAAO/Y,GAAI,EACXwzD,mBAAmBhhE,KAAMumB,QACzBD,QAAUC,OAAOw6C,GAEdz6C,QAAQ0/B,GAAK1/B,QAAQ0/B,EAAEx4C,GACpB8Y,QAAQy6C,GAAKz6C,QAAQy6C,EAAEvzD,EAAI,CAC5B8Y,QAAQy6C,GAAMz6C,QAAQy6C,EAAEvzD,IAC3B8Y,QAAQ0/B,EAAEx4C,GAAI,EACd8Y,QAAQ9Y,GAAI,EACZ0zD,oBAAoBlhE,KAAMsmB,SAC1BA,QAAUC,OAAOw6C,GAEnBz6C,QAAQ9Y,EAAI+Y,OAAO/Y,EACnB+Y,OAAO/Y,EAAI8Y,QAAQy6C,EAAEvzD,GAAI,EACzBwzD,mBAAmBhhE,KAAMumB,QACzBqK,KAAO5wB,KAAKmhB,EACZ,YAUF,IAPAmF,QAAUC,OAAOy/B,GACLx4C,IACV8Y,QAAQ9Y,GAAI,EACZ+Y,OAAO/Y,GAAI,EACX0zD,oBAAoBlhE,KAAMumB,QAC1BD,QAAUC,OAAOy/B,GAEd1/B,QAAQ0/B,GAAK1/B,QAAQ0/B,EAAEx4C,GACtB8Y,QAAQy6C,GAAKz6C,QAAQy6C,EAAEvzD,EAAI,CAC1B8Y,QAAQ0/B,GAAM1/B,QAAQ0/B,EAAEx4C,IAC3B8Y,QAAQy6C,EAAEvzD,GAAI,EACd8Y,QAAQ9Y,GAAI,EACZwzD,mBAAmBhhE,KAAMsmB,SACzBA,QAAUC,OAAOy/B,GAEnB1/B,QAAQ9Y,EAAI+Y,OAAO/Y,EACnB+Y,OAAO/Y,EAAI8Y,QAAQ0/B,EAAEx4C,GAAI,EACzB0zD,oBAAoBlhE,KAAMumB,QAC1BqK,KAAO5wB,KAAKmhB,EACZ,MAGJmF,QAAQ9Y,GAAI,EACZojB,KAAOrK,OACPA,OAASA,OAAO8gC,SACRz2B,KAAKpjB,GAEXojB,OAAMA,KAAKpjB,GAAI,MA+CRqzD,kCC1OR,SAASU,WAAWx7B,KAAMC,MAAOgS,GAAIC,IAC1C,IAAIvlB,MAAQ,KAAM,MACdzwB,MAAQiwB,cAAMhsB,KAAKwsB,MAAQ,EAO/B,OANAA,KAAKqT,KAAOA,KACZrT,KAAKsT,MAAQA,MACTgS,IAAIwpB,WAAW9uC,KAAMqT,KAAMC,MAAOgS,IAClCC,IAAIupB,WAAW9uC,KAAMsT,MAAOD,KAAMkS,IACtCwpB,cAAM17B,KAAK9jC,OAAOy/D,UAAUx7D,KAAKjE,OACjCw/D,cAAMz7B,MAAM/jC,OAAOy/D,UAAUx7D,KAAKjE,OAC3BywB,KAGF,SAASivC,iBAAiB57B,KAAMiS,GAAIC,IACzC,IAAIvlB,MAAQslB,GAAIC,IAEhB,OADAvlB,KAAKqT,KAAOA,KACLrT,KAGF,SAAS8uC,WAAW9uC,KAAMqT,KAAMC,MAAO47B,QACvClvC,KAAK,IAAOA,KAAK,GAIXA,KAAKqT,OAASC,MACvBtT,KAAK,GAAKkvC,OAEVlvC,KAAK,GAAKkvC,QANVlvC,KAAK,GAAKkvC,OACVlvC,KAAKqT,KAAOA,KACZrT,KAAKsT,MAAQA,OASjB,SAAS67B,SAASnvC,KAAMkvB,GAAI+S,GAAI9S,GAAIyS,IAClC,IAUIz7D,EAVAsB,EAAIu4B,KAAK,GACTtvB,EAAIsvB,KAAK,GACTovC,GAAK3nE,EAAE,GACP4nE,GAAK5nE,EAAE,GAGPi8C,GAAK,EACLC,GAAK,EACLwf,GAJKzyD,EAAE,GAIG0+D,GACVhM,GAJK1yD,EAAE,GAIG2+D,GAId,GADAlpE,EAAI+oD,GAAKkgB,GACJjM,MAAMh9D,EAAI,GAAf,CAEA,GADAA,GAAKg9D,GACDA,GAAK,EAAG,CACV,GAAIh9D,EAAIu9C,GAAI,OACRv9C,EAAIw9C,KAAIA,GAAKx9C,QACZ,GAAIg9D,GAAK,EAAG,CACjB,GAAIh9D,EAAIw9C,GAAI,OACRx9C,EAAIu9C,KAAIA,GAAKv9C,GAInB,GADAA,EAAIgpD,GAAKigB,GACJjM,MAAMh9D,EAAI,GAAf,CAEA,GADAA,GAAKg9D,GACDA,GAAK,EAAG,CACV,GAAIh9D,EAAIw9C,GAAI,OACRx9C,EAAIu9C,KAAIA,GAAKv9C,QACZ,GAAIg9D,GAAK,EAAG,CACjB,GAAIh9D,EAAIu9C,GAAI,OACRv9C,EAAIw9C,KAAIA,GAAKx9C,GAInB,GADAA,EAAI87D,GAAKoN,GACJjM,MAAMj9D,EAAI,GAAf,CAEA,GADAA,GAAKi9D,GACDA,GAAK,EAAG,CACV,GAAIj9D,EAAIu9C,GAAI,OACRv9C,EAAIw9C,KAAIA,GAAKx9C,QACZ,GAAIi9D,GAAK,EAAG,CACjB,GAAIj9D,EAAIw9C,GAAI,OACRx9C,EAAIu9C,KAAIA,GAAKv9C,GAInB,GADAA,EAAIy7D,GAAKyN,GACJjM,MAAMj9D,EAAI,GAAf,CAEA,GADAA,GAAKi9D,GACDA,GAAK,EAAG,CACV,GAAIj9D,EAAIw9C,GAAI,OACRx9C,EAAIu9C,KAAIA,GAAKv9C,QACZ,GAAIi9D,GAAK,EAAG,CACjB,GAAIj9D,EAAIu9C,GAAI,OACRv9C,EAAIw9C,KAAIA,GAAKx9C,GAGnB,QAAMu9C,GAAK,GAAQC,GAAK,KAEpBD,GAAK,IAAG1jB,KAAK,IAAMovC,GAAK1rB,GAAKyf,GAAIkM,GAAK3rB,GAAK0f,KAC3Czf,GAAK,IAAG3jB,KAAK,IAAMovC,GAAKzrB,GAAKwf,GAAIkM,GAAK1rB,GAAKyf,MACxC,OAGT,SAASkM,YAAYtvC,KAAMkvB,GAAI+S,GAAI9S,GAAIyS,IACrC,IAAIrc,GAAKvlB,KAAK,GACd,GAAIulB,GAAI,OAAO,EAEf,IASIgqB,GACAC,GAVAlqB,GAAKtlB,KAAK,GACVqT,KAAOrT,KAAKqT,KACZC,MAAQtT,KAAKsT,MACbm8B,GAAKp8B,KAAK,GACVq8B,GAAKr8B,KAAK,GACVs8B,GAAKr8B,MAAM,GACXs8B,GAAKt8B,MAAM,GACXu8B,IAAMJ,GAAKE,IAAM,EACjBG,IAAMJ,GAAKE,IAAM,EAIrB,GAAIA,KAAOF,GAAI,CACb,GAAIG,GAAK3gB,IAAM2gB,IAAM1gB,GAAI,OACzB,GAAIsgB,GAAKE,GAAI,CACX,GAAKrqB,IACA,GAAIA,GAAG,IAAMsc,GAAI,YADbtc,IAAMuqB,GAAI5N,IAEnB1c,IAAMsqB,GAAIjO,QACL,CACL,GAAKtc,IACA,GAAIA,GAAG,GAAK2c,GAAI,YADZ3c,IAAMuqB,GAAIjO,IAEnBrc,IAAMsqB,GAAI5N,UAKZ,GADAuN,GAAKM,IADLP,IAAME,GAAKE,KAAOC,GAAKF,KACRG,GACXN,IAAM,GAAKA,GAAK,EAClB,GAAIE,GAAKE,GAAI,CACX,GAAKrqB,IACA,GAAIA,GAAG,IAAMsc,GAAI,YADbtc,KAAO2c,GAAKuN,IAAMD,GAAItN,IAE/B1c,KAAOqc,GAAK4N,IAAMD,GAAI3N,QACjB,CACL,GAAKtc,IACA,GAAIA,GAAG,GAAK2c,GAAI,YADZ3c,KAAOsc,GAAK4N,IAAMD,GAAI3N,IAE/Brc,KAAO0c,GAAKuN,IAAMD,GAAItN,SAGxB,GAAIyN,GAAKE,GAAI,CACX,GAAKtqB,IACA,GAAIA,GAAG,IAAM6J,GAAI,YADb7J,IAAM4J,GAAIqgB,GAAKrgB,GAAKsgB,IAE7BjqB,IAAM4J,GAAIogB,GAAKpgB,GAAKqgB,QACf,CACL,GAAKlqB,IACA,GAAIA,GAAG,GAAK4J,GAAI,YADZ5J,IAAM6J,GAAIogB,GAAKpgB,GAAKqgB,IAE7BjqB,IAAM2J,GAAIqgB,GAAKrgB,GAAKsgB,IAO1B,OAFAxvC,KAAK,GAAKslB,GACVtlB,KAAK,GAAKulB,IACH,EC9IT,SAASwqB,kBAAkBC,KAAMhwC,MAC/B,IAAIiwC,KAAOD,KAAKC,KACZC,GAAKlwC,KAAKqT,KACV88B,GAAKnwC,KAAKsT,MAEd,OADI28B,OAASE,KAAIA,GAAKD,GAAIA,GAAKD,MAC3BE,GAAWh/D,KAAKuzC,MAAMyrB,GAAG,GAAKD,GAAG,GAAIC,GAAG,GAAKD,GAAG,KAChDD,OAASC,IAAIA,GAAKlwC,KAAK,GAAImwC,GAAKnwC,KAAK,KACpCkwC,GAAKlwC,KAAK,GAAImwC,GAAKnwC,KAAK,IACtB7uB,KAAKuzC,MAAMwrB,GAAG,GAAKC,GAAG,GAAIA,GAAG,GAAKD,GAAG,KAGvC,SAASE,kBAAkBJ,KAAMhwC,MACtC,OAAOA,OAAOA,KAAKqT,OAAS28B,KAAKC,OAG5B,SAASI,gBAAgBL,KAAMhwC,MACpC,OAAOA,OAAOA,KAAKqT,OAAS28B,KAAKC,OCvBnC,IAEWK,YAFPC,cAaG,SAASC,aAAaxN,KAC3B,IAAIyN,KAAOzN,IAAIlzD,EACX4gE,KAAO1N,IAAI16C,EAEf,GAAKmoD,MAASC,KAAd,CAEA,IAAIC,MAAQF,KAAKR,KACbW,MAAQ5N,IAAIiN,KACZY,MAAQH,KAAKT,KAEjB,GAAIU,QAAUE,MAAd,CAEA,IAAIC,GAAKF,MAAM,GACXG,GAAKH,MAAM,GACXxB,GAAKuB,MAAM,GAAKG,GAChBzB,GAAKsB,MAAM,GAAKI,GAChBvL,GAAKqL,MAAM,GAAKC,GAChBrL,GAAKoL,MAAM,GAAKE,GAEhBprE,EAAI,GAAKypE,GAAK3J,GAAK4J,GAAK7J,IAC5B,KAAI7/D,IAAMqrE,kBAAV,CAEA,IAAIC,GAAK7B,GAAKA,GAAKC,GAAKA,GACpB6B,GAAK1L,GAAKA,GAAKC,GAAKA,GACpBj6B,GAAKi6B,GAAKwL,GAAK5B,GAAK6B,IAAMvrE,EAC1BmL,GAAKs+D,GAAK8B,GAAK1L,GAAKyL,IAAMtrE,EAE1BwrE,OAASZ,WAAWj7C,OAAS,IApCnC,SAAS87C,SACPhD,aAAa9gE,MACbA,KAAKk+B,EACLl+B,KAAKwD,EACLxD,KAAK01D,IACL11D,KAAK2iE,KACL3iE,KAAKm4D,GAAK,MA+BV0L,OAAOnO,IAAMA,IACbmO,OAAOlB,KAAOW,MACdO,OAAO3lC,EAAIA,EAAIslC,GACfK,OAAOrgE,GAAKqgE,OAAO1L,GAAK30D,EAAIigE,IAAM5/D,KAAK8Q,KAAKupB,EAAIA,EAAI16B,EAAIA,GAExDkyD,IAAImO,OAASA,OAKb,IAHA,IAAIE,OAAS,KACTnzC,KAAOozC,QAAQ7iD,EAEZyP,MACL,GAAIizC,OAAOrgE,EAAIotB,KAAKptB,GAAMqgE,OAAOrgE,IAAMotB,KAAKptB,GAAKqgE,OAAO3lC,GAAKtN,KAAKsN,EAAI,CACpE,IAAItN,KAAKo1B,EACJ,CAAE+d,OAASnzC,KAAKpuB,EAAG,MADZouB,KAAOA,KAAKo1B,MAEnB,CACL,IAAIp1B,KAAKmwC,EACJ,CAAEgD,OAASnzC,KAAM,MADVA,KAAOA,KAAKmwC,EAK5BiD,QAAQ1Q,OAAOyQ,OAAQF,QAClBE,SAAQf,YAAca,WAGtB,SAASI,aAAavO,KAC3B,IAAImO,OAASnO,IAAImO,OACbA,SACGA,OAAOrhE,IAAGwgE,YAAca,OAAO7oD,GACpCgpD,QAAQt8B,OAAOm8B,QACfZ,WAAW/8D,KAAK29D,QAChB/C,aAAa+C,QACbnO,IAAImO,OAAS,MCrEjB,IAAIK,aASJ,SAASC,YAAYxB,MACnB,IAAIyB,MAAQF,UAAUl8C,OAAS,IARjC,SAASq8C,QACPvD,aAAa9gE,MACbA,KAAK0yB,KACL1yB,KAAK2iE,KACL3iE,KAAK6jE,OAAS,MAMd,OADAO,MAAMzB,KAAOA,KACNyB,MAGT,SAASE,YAAYF,OACnBH,aAAaG,OACbG,QAAQ78B,OAAO08B,OACfF,UAAUh+D,KAAKk+D,OACftD,aAAasD,OAGR,SAASI,YAAYJ,OAC1B,IAAIP,OAASO,MAAMP,OACf3lC,EAAI2lC,OAAO3lC,EACX16B,EAAIqgE,OAAO1L,GACXyJ,QAAU1jC,EAAG16B,GACby/C,SAAWmhB,MAAM5hE,EACjBmL,KAAOy2D,MAAMppD,EACbypD,cAAgBL,OAEpBE,YAAYF,OAGZ,IADA,IAAIjB,KAAOlgB,SACJkgB,KAAKU,QACLhgE,KAAKsoB,IAAI+R,EAAIilC,KAAKU,OAAO3lC,GAAK4zB,iBAC9BjuD,KAAKsoB,IAAI3oB,EAAI2/D,KAAKU,OAAO1L,IAAMrG,iBACpC7O,SAAWkgB,KAAK3gE,EAChBiiE,aAAah9D,QAAQ07D,MACrBmB,YAAYnB,MACZA,KAAOlgB,SAGTwhB,aAAah9D,QAAQ07D,MACrBc,aAAad,MAGb,IADA,IAAIC,KAAOz1D,KACJy1D,KAAKS,QACLhgE,KAAKsoB,IAAI+R,EAAIklC,KAAKS,OAAO3lC,GAAK4zB,iBAC9BjuD,KAAKsoB,IAAI3oB,EAAI4/D,KAAKS,OAAO1L,IAAMrG,iBACpCnkD,KAAOy1D,KAAKpoD,EACZypD,aAAav+D,KAAKk9D,MAClBkB,YAAYlB,MACZA,KAAOz1D,KAGT82D,aAAav+D,KAAKk9D,MAClBa,aAAab,MAEb,IACIsB,KADAC,MAAQF,aAAa/iE,OAEzB,IAAKgjE,KAAO,EAAGA,KAAOC,QAASD,KAC7BtB,KAAOqB,aAAaC,MACpBvB,KAAOsB,aAAaC,KAAO,GAC3BlD,WAAW4B,KAAK1wC,KAAMywC,KAAKR,KAAMS,KAAKT,KAAMf,QAG9CuB,KAAOsB,aAAa,IACpBrB,KAAOqB,aAAaE,MAAQ,IACvBjyC,KAAO6uC,WAAW4B,KAAKR,KAAMS,KAAKT,KAAM,KAAMf,QAEnDsB,aAAaC,MACbD,aAAaE,MAGR,SAASwB,SAASjC,MASvB,IARA,IAEIQ,KACAC,KACAyB,IACAC,IALA5mC,EAAIykC,KAAK,GACToC,UAAYpC,KAAK,GAKjB/xC,KAAO2zC,QAAQpjD,EAEZyP,MAEL,IADAi0C,IAAMG,eAAep0C,KAAMm0C,WAAa7mC,GAC9B4zB,gBAASlhC,KAAOA,KAAKo1B,MAAQ,CAErC,MADA8e,IAAM5mC,EAAI+mC,gBAAgBr0C,KAAMm0C,YACtBjT,iBAMH,CACD+S,KAAO/S,iBACTqR,KAAOvyC,KAAKpuB,EACZ4gE,KAAOxyC,MACEk0C,KAAOhT,iBAChBqR,KAAOvyC,KACPwyC,KAAOxyC,KAAK5V,GAEZmoD,KAAOC,KAAOxyC,KAEhB,MAfA,IAAKA,KAAKmwC,EAAG,CACXoC,KAAOvyC,KACP,MAEFA,KAAOA,KAAKmwC,GFhGb,SAASmE,WAAWvC,MACzB,OAAOlB,cAAMkB,KAAK1gE,QAChB0gE,KAAMA,KACNjB,cE6GFwD,CAAWvC,MACX,IAAIwC,OAAShB,YAAYxB,MAGzB,GAFA4B,QAAQjR,OAAO6P,KAAMgC,QAEhBhC,MAASC,KAAd,CAEA,GAAID,OAASC,KAOX,OANAa,aAAad,MACbC,KAAOe,YAAYhB,KAAKR,MACxB4B,QAAQjR,OAAO6R,OAAQ/B,MACvB+B,OAAOzyC,KAAO0wC,KAAK1wC,KAAO6uC,WAAW4B,KAAKR,KAAMwC,OAAOxC,MACvDO,aAAaC,WACbD,aAAaE,MAIf,GAAKA,KAAL,CAMAa,aAAad,MACbc,aAAab,MAEb,IAAIC,MAAQF,KAAKR,KACbb,GAAKuB,MAAM,GACXtB,GAAKsB,MAAM,GACXG,GAAKb,KAAK,GAAKb,GACf2B,GAAKd,KAAK,GAAKZ,GACfwB,MAAQH,KAAKT,KACbzK,GAAKqL,MAAM,GAAKzB,GAChB3J,GAAKoL,MAAM,GAAKxB,GAChB1pE,EAAI,GAAKmrE,GAAKrL,GAAKsL,GAAKvL,IACxBkN,GAAK5B,GAAKA,GAAKC,GAAKA,GACpBG,GAAK1L,GAAKA,GAAKC,GAAKA,GACpByJ,SAAWzJ,GAAKiN,GAAK3B,GAAKG,IAAMvrE,EAAIypE,IAAK0B,GAAKI,GAAK1L,GAAKkN,IAAM/sE,EAAI0pE,IAEtEP,WAAW4B,KAAK1wC,KAAM2wC,MAAOE,MAAO3B,QACpCuD,OAAOzyC,KAAO6uC,WAAW8B,MAAOV,KAAM,KAAMf,QAC5CwB,KAAK1wC,KAAO6uC,WAAWoB,KAAMY,MAAO,KAAM3B,QAC1CsB,aAAaC,MACbD,aAAaE,WAzBX+B,OAAOzyC,KAAO6uC,WAAW4B,KAAKR,KAAMwC,OAAOxC,OA4B/C,SAASqC,eAAetP,IAAKqP,WAC3B,IAAIpC,KAAOjN,IAAIiN,KACX0C,MAAQ1C,KAAK,GACb2C,MAAQ3C,KAAK,GACb4C,KAAOD,MAAQP,UAEnB,IAAKQ,KAAM,OAAOF,MAElB,IAAIlC,KAAOzN,IAAIlzD,EACf,IAAK2gE,KAAM,OAAQliB,IAGnB,IAAIukB,OADJ7C,KAAOQ,KAAKR,MACK,GACb8C,MAAQ9C,KAAK,GACb+C,MAAQD,MAAQV,UAEpB,IAAKW,MAAO,OAAOF,MAEnB,IAAIG,GAAKH,MAAQH,MACbO,KAAO,EAAIL,KAAO,EAAIG,MACtBtiE,EAAIuiE,GAAKD,MAEb,OAAIE,OAAexiE,EAAIS,KAAK8Q,KAAKvR,EAAIA,EAAI,EAAIwiE,MAAQD,GAAKA,KAAO,EAAID,OAASD,MAAQC,MAAQ,EAAIJ,MAAQC,KAAO,KAAOK,KAAOP,OAEvHA,MAAQG,OAAS,EAG3B,SAASP,gBAAgBvP,IAAKqP,WAC5B,IAAI3B,KAAO1N,IAAI16C,EACf,GAAIooD,KAAM,OAAO4B,eAAe5B,KAAM2B,WACtC,IAAIpC,KAAOjN,IAAIiN,KACf,OAAOA,KAAK,KAAOoC,UAAYpC,KAAK,GAAK1hB,ICzLpC,IAEIsjB,QACA9C,cACAuC,QACA9xC,cALA4/B,gBAAU,KACV4R,iBAAW,MAMtB,SAASmC,aAAa1rE,EAAGiJ,EAAGhL,GAC1B,OAAQ+B,EAAE,GAAK/B,EAAE,KAAOgL,EAAE,GAAKjJ,EAAE,KAAOA,EAAE,GAAKiJ,EAAE,KAAOhL,EAAE,GAAK+B,EAAE,IAGnE,SAAS2rE,cAAc3rE,EAAGiJ,GACxB,OAAOA,EAAE,GAAKjJ,EAAE,IACTiJ,EAAE,GAAKjJ,EAAE,GAGH,SAAS4rE,QAAQC,MAAOC,QACrC,IACI/nC,EACA16B,EACAqgE,OAHAlB,KAAOqD,MAAMzyD,KAAKuyD,eAAe99C,MAUrC,IALAkK,iBACAuvC,cAAQ,IAAI54D,MAAMm9D,MAAMtkE,QACxB6iE,QAAU,IAAI1D,iBACdmD,QAAU,IAAInD,mBAIZ,GADAgD,OAASb,YACLL,QAAUkB,QAAUlB,KAAK,GAAKkB,OAAOrgE,GAAMm/D,KAAK,KAAOkB,OAAOrgE,GAAKm/D,KAAK,GAAKkB,OAAO3lC,GAClFykC,KAAK,KAAOzkC,GAAKykC,KAAK,KAAOn/D,IAC/BohE,SAASjC,MACTzkC,EAAIykC,KAAK,GAAIn/D,EAAIm/D,KAAK,IAExBA,KAAOqD,MAAMh+C,UACR,KAAI67C,OAGT,MAFAW,YAAYX,OAAOnO,KAQvB,GHrBK,SAASwQ,oBACd,IAAK,IAA6BxD,KAAMhB,UAAWvmD,EAAGhjB,EAA7CJ,EAAI,EAAGyB,EAAIioE,cAAM//D,OAA+B3J,EAAIyB,IAAKzB,EAChE,IAAK2qE,KAAOjB,cAAM1pE,MAAQI,GAAKupE,UAAYgB,KAAKhB,WAAWhgE,QAAS,CAClE,IAAIO,MAAQ,IAAI4G,MAAM1Q,GAClBiuC,MAAQ,IAAIv9B,MAAM1Q,GACtB,IAAKgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAAGlZ,MAAMkZ,GAAKA,EAAGirB,MAAMjrB,GAAKsnD,kBAAkBC,KAAMxwC,cAAMwvC,UAAUvmD,KAEzF,IADAlZ,MAAMsR,KAAK,SAASxb,EAAGojB,GAAK,OAAOirB,MAAMjrB,GAAKirB,MAAMruC,KAC/CojB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAAGirB,MAAMjrB,GAAKumD,UAAUz/D,MAAMkZ,IACnD,IAAKA,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAAGumD,UAAUvmD,GAAKirB,MAAMjrB,IGWjD+qD,GAEID,OAAQ,CACV,IAAIrkB,IAAMqkB,OAAO,GAAG,GAChBtR,IAAMsR,OAAO,GAAG,GAChBpkB,IAAMokB,OAAO,GAAG,GAChB3R,IAAM2R,OAAO,GAAG,IJqGjB,SAASE,UAAUvkB,GAAI+S,GAAI9S,GAAIyS,IAIpC,IAHA,IACI5hC,KADA36B,EAAIm6B,cAAMxwB,OAGP3J,KACAiqE,YAAYtvC,KAAOR,cAAMn6B,GAAI6pD,GAAI+S,GAAI9S,GAAIyS,KACtCuN,SAASnvC,KAAMkvB,GAAI+S,GAAI9S,GAAIyS,MAC1BzwD,KAAKsoB,IAAIuG,KAAK,GAAG,GAAKA,KAAK,GAAG,IAAMo/B,iBAClCjuD,KAAKsoB,IAAIuG,KAAK,GAAG,GAAKA,KAAK,GAAG,IAAMo/B,yBACtC5/B,cAAMn6B,GI7GfouE,CAAUvkB,GAAI+S,GAAI9S,GAAIyS,IHbnB,SAAS8R,UAAUxkB,GAAI+S,GAAI9S,GAAIyS,IACpC,IACI+R,MACA3D,KACAC,KACA2D,UACA5E,UACA6E,WACA9oE,MACA+oE,OACAC,OACAh6D,IACAi6D,KACAC,KAZAC,OAASnF,cAAM//D,OAafmlE,OAAQ,EAEZ,IAAKR,MAAQ,EAAGA,MAAQO,SAAUP,MAChC,GAAI3D,KAAOjB,cAAM4E,OAAQ,CAMvB,IALA1D,KAAOD,KAAKC,KAEZ2D,WADA5E,UAAYgB,KAAKhB,WACKhgE,OAGf4kE,aACAp0C,cAAMwvC,UAAU4E,aACnB5E,UAAUp6D,OAAOg/D,UAAW,GAMhC,IADAA,UAAY,EAAGC,WAAa7E,UAAUhgE,OAC/B4kE,UAAYC,YACyCG,MAA1Dj6D,IAAMs2D,gBAAgBL,KAAMxwC,cAAMwvC,UAAU4E,cAAyB,GAAIK,KAAOl6D,IAAI,GACP+5D,QAA7E/oE,MAAQqlE,kBAAkBJ,KAAMxwC,cAAMwvC,YAAY4E,UAAYC,eAA8B,GAAIE,OAAShpE,MAAM,IAC3GoG,KAAKsoB,IAAIu6C,KAAOF,QAAU1U,iBAAWjuD,KAAKsoB,IAAIw6C,KAAOF,QAAU3U,mBACjE4P,UAAUp6D,OAAOg/D,UAAW,EAAGp0C,cAAMhsB,KAAKy7D,iBAAiBgB,KAAMl2D,IAC7D5I,KAAKsoB,IAAIu6C,KAAO9kB,IAAMkQ,iBAAWwC,GAAKqS,KAAO7U,iBAAWlQ,GAAI/9C,KAAKsoB,IAAIq6C,OAAS5kB,IAAMkQ,gBAAU2U,OAASnS,IACrGzwD,KAAKsoB,IAAIw6C,KAAOrS,IAAMxC,iBAAWjQ,GAAK6kB,KAAO5U,iBAAWjuD,KAAKsoB,IAAIs6C,OAASnS,IAAMxC,gBAAU0U,OAAS3kB,GAAIyS,IACvGzwD,KAAKsoB,IAAIu6C,KAAO7kB,IAAMiQ,iBAAW6U,KAAOhS,GAAK7C,iBAAWjQ,GAAIh+C,KAAKsoB,IAAIq6C,OAAS3kB,IAAMiQ,gBAAU2U,OAAS9R,IACvG9wD,KAAKsoB,IAAIw6C,KAAOhS,IAAM7C,iBAAW4U,KAAO9kB,GAAKkQ,iBAAWjuD,KAAKsoB,IAAIs6C,OAAS9R,IAAM7C,gBAAU0U,OAAS5kB,GAAI+S,IACvG,OAAS,KACb4R,YAIFA,aAAYM,OAAQ,GAM5B,GAAIA,MAAO,CACT,IAAIhR,GAAIC,GAAI2B,GAAIqP,GAAK7lB,IAErB,IAAKolB,MAAQ,EAAGQ,MAAQ,KAAMR,MAAQO,SAAUP,OAC1C3D,KAAOjB,cAAM4E,UAIf5O,IAFA5B,IADA8M,KAAOD,KAAKC,MACF,GAAK/gB,IAELiU,IADVC,GAAK6M,KAAK,GAAKhO,IACKmB,IACXgR,KAAIA,GAAKrP,GAAIoP,MAAQnE,MAIlC,GAAImE,MAAO,CACT,IAAIE,KAAOnlB,GAAI+S,IAAKqS,KAAOplB,GAAI0S,IAAK2S,KAAOplB,GAAIyS,IAAK4S,KAAOrlB,GAAI8S,IAC/DkS,MAAMnF,UAAUx7D,KACdgsB,cAAMhsB,KAAKy7D,iBAAiBgB,KAAOkE,MAAMlE,KAAMoE,IAAKC,MAAQ,EAC5D90C,cAAMhsB,KAAKy7D,iBAAiBgB,KAAMqE,IAAKC,MAAQ,EAC/C/0C,cAAMhsB,KAAKy7D,iBAAiBgB,KAAMsE,IAAKC,MAAQ,EAC/Ch1C,cAAMhsB,KAAKy7D,iBAAiBgB,KAAMuE,IAAKH,MAAQ,IAMrD,IAAKV,MAAQ,EAAGA,MAAQO,SAAUP,OAC5B3D,KAAOjB,cAAM4E,UACV3D,KAAKhB,UAAUhgE,eACX+/D,cAAM4E,QGjEjBD,CAAUxkB,GAAI+S,GAAI9S,GAAIyS,IAGxBt0D,KAAKkyB,MAAQA,cACblyB,KAAKyhE,MAAQA,cAEb8C,QACAP,QACA9xC,cACAuvC,cAAQ,KAGVsE,QAAQlsE,WACNgsB,YAAakgD,QAEboB,SAAU,SAAAA,WACR,IAAIj1C,MAAQlyB,KAAKkyB,MAEjB,OAAOlyB,KAAKyhE,MAAMx5D,IAAI,SAASy6D,MAC7B,IAAI0E,QAAU1E,KAAKhB,UAAUz5D,IAAI,SAASlQ,GAAK,OAAO+qE,kBAAkBJ,KAAMxwC,MAAMn6B,MAEpF,OADAqvE,QAAQr8D,KAAO23D,KAAKC,KAAK53D,KAClBq8D,WAIXC,UAAW,SAAAA,YACT,IAAIA,aACAn1C,MAAQlyB,KAAKkyB,MAsBjB,OApBAlyB,KAAKyhE,MAAM34D,QAAQ,SAAS45D,KAAM3qE,GAChC,GAAMI,GAAKupE,UAAYgB,KAAKhB,WAAWhgE,OASvC,IARA,IACIggE,UAEAvpE,EACA6lE,GAJA2E,KAAOD,KAAKC,KAEZxnD,GAAK,EAGLmsD,GAAKp1C,MAAMwvC,UAAUvpE,EAAI,IACzBg3B,GAAKm4C,GAAGvhC,OAAS48B,KAAO2E,GAAGthC,MAAQshC,GAAGvhC,OAEjC5qB,EAAIhjB,GACX6lE,GAAK7uC,GAELA,IADAm4C,GAAKp1C,MAAMwvC,UAAUvmD,KACb4qB,OAAS48B,KAAO2E,GAAGthC,MAAQshC,GAAGvhC,KAClCi4B,IAAM7uC,IAAMp3B,EAAIimE,GAAG/7D,OAASlK,EAAIo3B,GAAGltB,OAAS4jE,aAAalD,KAAM3E,GAAI7uC,IAAM,GAC3Ek4C,UAAUnhE,MAAMy8D,KAAK53D,KAAMizD,GAAGjzD,KAAMokB,GAAGpkB,SAKtCs8D,WAGTE,MAAO,SAAAA,QACL,OAAOvnE,KAAKkyB,MAAMne,OAAO,SAAS2e,MAChC,OAAOA,KAAKsT,QACX/9B,IAAI,SAASyqB,MACd,OACEhO,OAAQgO,KAAKqT,KAAKh7B,KAClB2yC,OAAQhrB,KAAKsT,MAAMj7B,SAKzBqgB,KAAM,SAAAA,KAAS8S,EAAG16B,EAAGgkE,QAInB,IAHA,IAAiBjgC,GAAkDm7B,KAA/DvH,KAAOn7D,KAAUo/C,GAAK+b,KAAKsM,QAAU,EAAGjuE,EAAI2hE,KAAKsG,MAAM//D,SAGlDghE,KAAOvH,KAAKsG,MAAMriB,MAAM,KAAMA,IAAM5lD,EAAG,OAAO,KACvD,IAAIq8D,GAAK33B,EAAIwkC,KAAKC,KAAK,GAAI7M,GAAKtyD,EAAIk/D,KAAKC,KAAK,GAAIlL,GAAK5B,GAAKA,GAAKC,GAAKA,GAGtE,GACE4M,KAAOvH,KAAKsG,MAAMl6B,GAAK6X,IAAKA,GAAK,KACjCsjB,KAAKhB,UAAU54D,QAAQ,SAAS7O,GAC9B,IAAIy4B,KAAOyoC,KAAKjpC,MAAMj4B,GAAIyO,EAAIgqB,KAAKqT,KACnC,GAAKr9B,IAAMg6D,KAAKC,MAASj6D,IAAQA,EAAIgqB,KAAKsT,OAA1C,CACA,IAAI0hC,GAAKxpC,EAAIx1B,EAAE,GAAIi/D,GAAKnkE,EAAIkF,EAAE,GAAIwvC,GAAKwvB,GAAKA,GAAKC,GAAKA,GAClDzvB,GAAKuf,KAAIA,GAAKvf,GAAIkH,GAAK12C,EAAEzG,gBAEjB,OAAPm9C,IAIT,OAFA+b,KAAKsM,OAASlgC,GAEG,MAAVigC,QAAkB/P,IAAM+P,OAASA,OAAS9E,KAAKC,KAAO,OCvIlD,IAAAiF,YAAA,WACb,IAAI1pC,EAAI46B,YACJt1D,EAAIu1D,YACJkN,OAAS,KAEb,SAAS4B,QAAQ98D,MACf,OAAO,IAAIg7D,QAAQh7D,KAAK9C,IAAI,SAAS5P,EAAGN,GACtC,IAAIiC,GAAK6J,KAAK2G,MAAM0zB,EAAE7lC,EAAGN,EAAGgT,MAAQ+mD,iBAAWA,gBAASjuD,KAAK2G,MAAMhH,EAAEnL,EAAGN,EAAGgT,MAAQ+mD,iBAAWA,iBAG9F,OAFA93D,EAAEiI,MAAQlK,EACViC,EAAE+Q,KAAO1S,EACF2B,IACLisE,QA+BN,OA5BA4B,QAAQV,SAAW,SAASp8D,MAC1B,OAAO88D,QAAQ98D,MAAMo8D,YAGvBU,QAAQN,MAAQ,SAASx8D,MACvB,OAAO88D,QAAQ98D,MAAMw8D,SAGvBM,QAAQR,UAAY,SAASt8D,MAC3B,OAAO88D,QAAQ98D,MAAMs8D,aAGvBQ,QAAQ3pC,EAAI,SAAS/c,GACnB,OAAO/b,UAAU1D,QAAUw8B,EAAiB,mBAAN/c,EAAmBA,EAAIs3B,yBAAUt3B,GAAI0mD,SAAW3pC,GAGxF2pC,QAAQrkE,EAAI,SAAS2d,GACnB,OAAO/b,UAAU1D,QAAU8B,EAAiB,mBAAN2d,EAAmBA,EAAIs3B,yBAAUt3B,GAAI0mD,SAAWrkE,GAGxFqkE,QAAQ5B,OAAS,SAAS9kD,GACxB,OAAO/b,UAAU1D,QAAUukE,OAAc,MAAL9kD,EAAY,QAAUA,EAAE,GAAG,IAAKA,EAAE,GAAG,MAAOA,EAAE,GAAG,IAAKA,EAAE,GAAG,KAAM0mD,SAAW5B,UAAYA,OAAO,GAAG,GAAIA,OAAO,GAAG,KAAMA,OAAO,GAAG,GAAIA,OAAO,GAAG,MAGpL4B,QAAQptC,KAAO,SAAStZ,GACtB,OAAO/b,UAAU1D,QAAUukE,OAAc,MAAL9kD,EAAY,OAAS,EAAG,KAAMA,EAAE,IAAKA,EAAE,KAAM0mD,SAAW5B,SAAWA,OAAO,GAAG,GAAKA,OAAO,GAAG,GAAIA,OAAO,GAAG,GAAKA,OAAO,GAAG,KAGxJ4B,kXCmMMC,gCAtOX,SAAAA,UAAaC,yJAAUh8D,CAAA/L,KAAA8nE,WACnB9nE,KAAKgoE,aAAe,IAAI71D,IACxBnS,KAAKioE,YAAc,IAAI91D,IACvBnS,KAAKkoE,MAAQ,GACbloE,KAAKmoE,WAAa,IAAIh2D,IACtBnS,KAAKooE,UAAY,IAAIj2D,IACrBnS,KAAKqoE,UAAYN,iQAWfO,SAAS,IAgBPpnE,IAhBOgU,MAAAlV,KACLuoE,UAAY,IAAIp2D,IAChBq2D,SAAW,IAAIr2D,IACfs2D,QAAU,IAAIt2D,IACdu2D,cAAgB,IAAIv2D,IACpBw2D,YAAc3oE,KAAKioE,YAEzBK,QAAQx/D,QAAQ,WACZ,IAAMxP,IAAM4b,MAAK6yD,SAAW7yD,MAAKmzD,UAAL9gE,MAAA2N,MAAI9P,WAApBA,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACPqjE,QAAQl2D,IAAIjZ,KAGbovE,cAAcxiE,KAAK5M,IAAnB8L,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAFAqjE,QAAQj2D,IAAIlZ,IAAZ8L,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,MASR,IADA,IAAI6P,QAAUwzD,QAAQxzD,UACf/T,IAAM+T,QAAQtH,OAAO3U,OACnB2vE,YAAYp2D,IAAIrR,IAAI,IAGrBynE,YAAYn2D,IAAItR,IAAI,GAAIA,IAAI,IAF5BqnE,UAAU/1D,IAAItR,IAAI,GAAIA,IAAI,IAOlC,IADA+T,QAAU0zD,YAAY1zD,UACf/T,IAAM+T,QAAQtH,OAAO3U,OACnByvE,QAAQl2D,IAAIrR,IAAI,KACjBsnE,SAASh2D,IAAItR,IAAI,GAAIA,IAAI,IAMjC,IADA+T,QAAUyzD,cAAczzD,UACjB/T,IAAM+T,QAAQtH,OAAO3U,OACxBwvE,SAASh2D,IAAItR,IAAI,GAAIA,IAAI,IAG7B,IAAM0nE,aAAe,IAAId,UAAU9nE,KAAKqoE,WAMxC,OALAO,aAAaX,YAAcU,YAC3BC,aAAaZ,aAAehoE,KAAKgoE,aACjCY,aAAaT,WAAaI,UAC1BK,aAAaR,UAAYI,SAElBI,mDAWHv8D,UACJ,IAAIw8D,YACA3nE,IACE4nE,YAAc,IAAI32D,IAClBpH,KAAO,IAAIoH,IAGjB,OAAQnS,KAAKkoE,OACb,IAAK,QACDW,YAAc7oE,KAAKmoE,WACnB,MACJ,IAAK,OACDU,YAAc7oE,KAAKooE,UACnB,MACJ,QACIS,YAAc7oE,KAAKioE,YAKvB,IAFA,IAAMhzD,QAAU4zD,YAAY5zD,UAErB/T,IAAM+T,QAAQtH,OAAO3U,OACxB8vE,YAAYt2D,IAAItR,IAAI,GAAImL,SAASnL,IAAI,KACrC6J,KAAKyH,IAAItR,IAAI,GAAIA,IAAI,IAGzB,IAAM0nE,aAAe,IAAId,UAAU9nE,KAAKqoE,WAKxC,OAJAO,aAAaX,YAAcl9D,KAC3B69D,aAAaZ,aAAec,YAC5B9oE,KAAKkoE,MAAQ,GAENU,mDAYP,OADA5oE,KAAKkoE,MAAQ,QACNloE,yCAWP,OADAA,KAAKkoE,MAAQ,OACNloE,yCAUJ09C,QACH,IAEIx8C,IACA+T,QAHE8zD,cAAgB,IAAI52D,IACpB62D,WAAa,IAAI72D,IAMvB,IADA8C,QAAUjV,KAAKioE,YAAYhzD,UACpB/T,IAAM+T,QAAQtH,OAAO3U,OACnBgH,KAAKooE,UAAU71D,IAAIrR,IAAI,MACxB8nE,WAAWx2D,IAAItR,IAAI,GAAIA,IAAI,IAC3B6nE,cAAcv2D,IAAItR,IAAI,GAAIlB,KAAKgoE,aAAapvE,IAAIsI,IAAI,MAM5D,IADA+T,QAAUyoC,OAAOuqB,YAAYhzD,UACtB/T,IAAM+T,QAAQtH,OAAO3U,OAClBgwE,WAAWz2D,IAAIrR,IAAI,KAAOw8C,OAAO0qB,UAAU71D,IAAIrR,IAAI,MACrD8nE,WAAWx2D,IAAItR,IAAI,GAAIA,IAAI,IAC3B6nE,cAAcv2D,IAAItR,IAAI,GAAIw8C,OAAOsqB,aAAapvE,IAAIsI,IAAI,MAI9D,IAAM0nE,aAAe,IAAId,UAAU9nE,KAAKqoE,WAIxC,OAHAO,aAAaX,YAAce,WAC3BJ,aAAaZ,aAAee,cAErBH,+CAGLzpD,IAIF,IAHA,IAAIje,IACE+T,QAAUjV,KAAKgoE,aAAa/yD,UAE3B/T,IAAM+T,QAAQtH,OAAO3U,OACxBmmB,GAAGje,IAAI,GAAIlB,KAAKioE,YAAYrvE,IAAIsI,IAAI,IAAKA,IAAI,oCAIhDie,IAKD,IAJA,IACIje,IADE+nE,QAAU,IAAI92D,IAEd8C,QAAUjV,KAAKgoE,aAAa/yD,UAE3B/T,IAAM+T,QAAQtH,OAAO3U,OACxBiwE,QAAQz2D,IAAItR,IAAI,GAAIie,GAAGje,IAAI,GAAIlB,KAAKioE,YAAYrvE,IAAIsI,IAAI,IAAKA,IAAI,KAErE,IAAM0nE,aAAe,IAAId,UAAU9nE,KAAKqoE,WAIxC,OAHAO,aAAaX,YAAcjoE,KAAKioE,YAChCW,aAAaZ,aAAeiB,QAErBL,qDAIP,IAAIC,YAEJ,OAAQ7oE,KAAKkoE,OACb,IAAK,QACDW,YAAc7oE,KAAKmoE,WACnB,MACJ,IAAK,OACDU,YAAc7oE,KAAKooE,UACnB,MACJ,QACIS,YAAc7oE,KAAKioE,YAKvB,OAFAY,YAAYlhC,QAEL3nC,qDAcP,IAJA,IACIkB,IADEgoE,WAEAvqD,OAAS3e,KAAKgoE,aAAarpD,SAE1Bzd,IAAMyd,OAAOhR,OAAO3U,OACvBkwE,QAAQhjE,KAAKhF,KAEjB,OAAOgoE,yBC5OR,8lEC+DCx8D,kBAAsB7O,oBAAtB6O,kBAGF4iB,gBAFc33B,OAAOwxE,YAEJ,SAAjB75C,eAAkBpnB,KAEpB,GAAmB,WAAfkhE,oBAAOlhE,KAAkB,CACzB,GAAY,OAARA,IAAgB,OAAO,EAE3B,GAAc,oBADNzP,OAAOoB,UAAUyI,SAASpK,KAAKgQ,KAEnC,MAA8E,YAAtEA,IAAI2d,YAAYvjB,WAAW+F,MAAM,4BAA8B,GAG/E,OAAO,IAQPiC,YAAc,SAAdA,cAAc,YAAAqR,QAAY,IAAI/b,MAAO2K,WAAvBoR,OAAmC9X,KAAK2G,MAAsB,IAAhB3G,KAAK4G,YAO/DmT,MAAQ,SAARA,MAASplB,GACX,IACIkQ,EADEk1C,UAEN,IAAK,IAAMtkD,OAAOd,OACPsB,eAAe5B,KAAKM,EAAGc,OAC1BoP,EAAIlQ,EAAEc,KACNskD,OAAOtkD,KAAOg2B,eAAe5mB,GAAKkV,MAAMlV,GAAKA,GAGrD,OAAOk1C,QAoBLyrB,mBACO,SAAAC,QAACxjE,KAAMoC,KACZ,GAAmB,WAAfkhE,oBAAOlhE,KACP,OAAO6H,MAAM,iCAGjB,IAAMw5D,gBAjBS,SAAjBC,eAAkB1jE,KAAMoC,KAC1B,IAAMqhE,mBAON,OANAzjE,KAAKgD,QAAQ,SAACxP,KACNA,OAAO4O,KAGXqhE,gBAAgBrjE,KAAK5M,OAElBiwE,gBASqBC,CAAe1jE,KAAMoC,KAC7C,OAAIqhE,gBAAgB7nE,OACTqO,MAAK,+BAAA4L,OAAgC4tD,gBAAgBxmE,KAAK,QAE9DmF,KAiBTuhE,OAAS,SAATA,OAAU1+D,KAAMO,OAAP,OAAiBzH,KAAK6Q,IAALnN,MAAA1D,KAAI6lE,mBAAQ3+D,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEiT,YAQtDq+D,OAAS,SAATA,OAAU5+D,KAAMO,OAAP,OAAiBzH,KAAK4Q,IAALlN,MAAA1D,KAAI6lE,mBAAQ3+D,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEiT,YAUtDs+D,+BAAoB,SAApBA,kBAAqB7+D,KAAMnC,OAAQihE,WAAc,IAAAp1C,KAC/C1d,OACE+yD,UAEN,OADA/+D,KAAOA,KAAK,aAAclC,MAAQkC,MAAQA,MAClC8+D,WACR,KAAKE,gCAAiB3rE,YAClB2Y,QAAS0d,SAAG9Y,OAAHpU,MAAAktB,KAAAi1C,mBAAa3+D,KAAK9C,IAAI,SAAAmJ,KAAG,OAAIA,IAAInJ,IAAI,SAAA5P,GAAC,OAAIA,EAAEuQ,OAAO,MAAKmL,OAAO,SAAA1b,GAAC,YAAUiV,IAANjV,QAC7E,MACJ,QACI,IADJ,IAAA2xE,MAAA,SAAAA,MACajyE,EAAO0Q,KACZ,IAAM2I,IAAMrG,KAAKhT,GAFzBkyE,QAAAC,eAGiCthE,OAHjC,GAGeuhE,OAHfF,QAAA,GAGuBG,OAHvBH,QAAA,GAIcI,KAAOj5D,IAAI2C,OAAO,SAAA1b,GAAC,OAAKic,MAAMjc,EAAE8xE,WAChCx/D,KAAOyG,IAAI2C,OAAO,SAAA1b,GAAC,OAAKic,MAAMjc,EAAE+xE,WACtC,GAAIC,KAAK3oE,QAAUiJ,KAAKjJ,OAAQ,CAC5B,IAAM4oE,SAAWX,OAAOU,KAAMF,QACxBI,UAAYZ,OAAOh/D,KAAMy/D,QACzBI,SAAWf,OAAOY,KAAMF,QACxBM,UAAYhB,OAAO9+D,KAAMy/D,QAC/BN,OAAO5jE,MAAMrC,KAAK4Q,IAAI61D,SAAUC,WAAY1mE,KAAK6Q,IAAI81D,SAAUC,eAV9D1yE,EAAI,EAAG0Q,IAAMsC,KAAKrJ,OAAQ3J,EAAI0Q,IAAK1Q,IAAKiyE,MAAxCjyE,GAaTgf,OAAS+yD,OAAOpoE,QAAUmC,KAAK4Q,IAALlN,MAAA1D,KAAI6lE,mBAAQI,OAAO7hE,IAAI,SAAA5P,GAAC,OAAIA,EAAE,OAAMwL,KAAK6Q,IAALnN,MAAA1D,KAAI6lE,mBAAQI,OAAO7hE,IAAI,SAAA5P,GAAC,OAAIA,EAAE,WAGhG,OAAO0e,QASL2zD,yBAAc,SAAdA,YAAeC,QAASd,WAC1B,IAGoDe,MAHhD7zD,WACJ4zD,QAAUA,QAAQ52D,OAAO,SAAA82D,KAAG,OAAIA,KAAOA,IAAInpE,UAC/BA,SAEJqV,OADA8yD,YAAcE,gCAAiB3rE,aACtBwsE,UAAGjvD,OAAHpU,MAAAqjE,MAAAlB,mBAAaiB,WAEZ9mE,KAAK4Q,IAALlN,MAAA1D,KAAI6lE,mBAAQiB,QAAQ1iE,IAAI,SAAA5P,GAAC,OAAIA,EAAE,OAAMwL,KAAK6Q,IAALnN,MAAA1D,KAAI6lE,mBAAQiB,QAAQ1iE,IAAI,SAAA5P,GAAC,OAAIA,EAAE,SAItF,OAAO0e,QAGL+zD,WACFjH,OAAQkH,cACRC,MAAOC,aACPxQ,QAASyQ,QACTpQ,OAAQqQ,OACRtQ,KAAMuQ,KACNnQ,IAAKoQ,IACLrQ,SAAUsQ,UAGRC,SACFC,MAAOC,WACPC,OAAQC,UACRpzB,OCjOG,SAASA,kBAAOt/C,GACrB,OAAQA,GDiON2yE,QAASC,WACTC,KAAMC,UACNC,KAAMC,UACNpI,OE7NG,SAASqI,YAAYjzE,GAC1B,QAASA,GAAK,IAAM,EAAI,EAAI4K,KAAK8Q,KAAK,EAAI1b,EAAIA,GAAK4K,KAAK8Q,KAAK,GAAK1b,GAAK,GAAKA,GAAK,GAAK,IFgRxD+wC,+BAAoB,SAApBA,kBAAqB54B,IAAKpY,MAAOkxC,MAS7D,IARA,IAIIz4B,IACA24B,GALAC,IAAM,EAENC,KADWl5B,IAAI1P,OACC,EAMb2oC,IAAMC,MACT74B,IAAM5N,KAAK6N,OAAO24B,IAAMC,MAAQ,GAChCF,GAAKvmC,KAAKsoB,IAAI/a,IAAIK,KAAOzY,OACpB6K,KAAKsoB,IAAI/a,IAAIK,IAAM,GAAKzY,QAEnBoxC,GACNC,IAAM54B,IAAM,EAEZ64B,KAAO74B,IAIf,IAAKy4B,KACD,OAAOI,KAGX,IAAMH,QAAU/4B,IAAIk5B,MACpB,OAAIH,UAAYnxC,MACLsxC,KACAH,QAAUnxC,MACJ,IAATsxC,KAAqBA,KACT,SAATJ,KAAkBI,KAAO,EAAIA,KAEpCA,OAASl5B,IAAI1P,OAAS,EAAY4oC,KACtB,SAATJ,KAAkBI,KAAOA,KAAO,GAGrC6hC,gBAAkB,SAAlBA,gBAAmBphE,KAAMzR,KAC3B,IAAM8yE,WAAarhE,KAAKgJ,OAAO,SAAA1b,GAAC,MAAiB,iBAANA,IAC3C,OAAO+zE,WAAWpiC,+BAAkBoiC,WAAY9yE,OAO9C+yE,UAAY,SAAZA,YAAY,OAAM10E,QA6DQ20E,uBAvDJ78C,sBAEG88C,qBAqDyB,SAAxBD,sBAAyBE,IAAK3zC,GAAI6nB,QAE9D,OADA8rB,IAAMA,IAAIlsE,QAAQ,OAAQ,KACnB,GAAAqb,OAAI+kC,OAAJ,KAAA/kC,OAAc6wD,KAAd,GAAA7wD,OAAwB+kC,OAAxB,KAAA/kC,OAAkC6wD,IAAlC,KAAA7wD,OAAyCkd,OAYnB4zC,aAAe,SAAfA,aAAgBrlE,MAAOpO,OACpD,YAAqB,IAAVoO,OAA2C,WAAjBgiE,oBAAOhiE,SAAuBA,MACxDpO,MAEJoO,OAmDLslE,eAAiB,SAAjBA,eAAkBxkE,IAAKiX,IACzB,IAAK,IAAM7lB,OAAO4O,IACVzP,OAAOqB,eAAe5B,KAAKgQ,IAAK5O,MAChC6lB,GAAG7lB,IAAK4O,MAUaykE,gCAK7B,SAAAA,UAAwB,IAAX5hE,KAAW3F,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAAAwnE,4BAAA5sE,KAAA2sE,SACpB3sE,KAAK6sE,SAAWhF,cAAU3pC,EAAE,SAAA7lC,GAAC,OAAIA,EAAE6lC,IAAG16B,EAAE,SAAAnL,GAAC,OAAIA,EAAEmL,IAC/CxD,KAAK+K,KAAKA,+EAQRA,OAIF,OAHIA,QACA/K,KAAK8sE,WAAa9sE,KAAK6sE,SAAS9hE,QAE7B/K,uCAULk+B,EAAG16B,EAAGgkE,QACR,OAAOxnE,KAAK8sE,WAAW1hD,KAAK8S,EAAG16B,EAAGgkE,uBAIpCuF,uBAAyB,SAAzBA,uBAA0BC,aAAc7tD,GAAIsd,SAC9C,IAAInjC,IAAM0zE,aAAa1zE,IACjB2zE,UAAYD,aAAaC,UAC3BA,YACCxwC,QAAQywC,WAAWD,aAAexwC,QAAQywC,WAAWD,eACjD3zE,MACDA,IAAMb,OAAOqN,KAAK22B,QAAQywC,WAAWD,YAAYvrE,QAErD+6B,QAAQywC,WAAWD,WAAW3zE,KAAO6lB,KAErC7lB,IAAMb,OAAOqN,KAAK22B,QAAQywC,YAAYxrE,OACtC+6B,QAAQywC,WAAW5zE,KAAO6lB,KAW5BguD,WAAa,SAAbA,WAAcjlE,KAChB,QAAYoF,IAARpF,KAA6B,OAARA,IACrB,OAAOA,IAFwB,IAInC,IAAImf,OAASnf,IAJsBklE,KAAAhoE,UAAA1D,OAAXkH,OAAW,IAAAC,MAAAukE,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXzkE,OAAWykE,KAAA,GAAAjoE,UAAAioE,MAKnC,IAAK,IAAIt1E,EAAI,EAAG0Q,IAAMG,OAAOlH,OAAQ3J,EAAI0Q,WAEtB6E,KADf+Z,OAASA,OAAOze,OAAO7Q,MACgB,OAAXsvB,QAFctvB,KAM9C,OAAOsvB,QAYLimD,8BAMF,SAAAA,MAAa1gE,QAAQggE,4BAAA5sE,KAAAstE,OAEjBttE,KAAK6c,MAAQ2a,mBAAMn+B,OAAOuT,QAC1B5M,KAAKktE,iGAWL,OAAOltE,KAAK6c,MAAM+P,kDAUd2gD,SAAUv0E,OAEdgH,KAAK6c,MAAMwX,KAAKk5C,SAAUv0E,6EAWoBw0E,UAAWC,SAAU72C,aAAgC,IAAnBo2C,aAAmB5nE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC/FkvB,MAAQk5C,UACP3kE,MAAMuB,QAAQojE,aACfl5C,OAASk5C,YAEb,IAAMruD,GAAKnf,KAAK6c,MAAMlP,KAAK2mB,MAAOm5C,SAAU72C,aAE5C,OADAm2C,uBAAuBC,aAAc7tD,GAAInf,MAClCA,iFAU2CwtE,UAAWC,SAAU72C,aAAgC,IAAnBo2C,aAAmB5nE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACnGkvB,MAAQk5C,UACP3kE,MAAMuB,QAAQojE,aACfl5C,OAASk5C,YAEb,IAAMruD,GAAKnf,KAAK6c,MAAM6wD,GAAGp5C,MAAOm5C,SAAU72C,aAE1C,OADAm2C,uBAAuBC,aAAc7tD,GAAInf,MAClCA,qCAUNutE,UACD,OAAOvtE,KAAK6c,MAAMwX,KAAKk5C,oDAWjBA,SAAUE,UAChB,OAAOztE,KAAK6c,MAAM8wD,eAAeJ,SAAUE,gDAGvCF,SAAUv0E,OAEd,OADAgH,KAAK6c,MAAMmY,OAAOu4C,SAAUv0E,OACrBgH,6DAKP,OADAvH,OAAOkmB,OAAO3e,KAAKktE,YAAYpkE,QAAQ,SAAAqW,IAAE,OAAIA,OACtCnf,uDAGqB,IAAnBgtE,aAAmB5nE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACpB6nE,UAAmBD,aAAnBC,UAAW3zE,IAAQ0zE,aAAR1zE,IACbk3B,UAAYxwB,KAAKktE,WAAWD,WAClC,GAAI3zE,IAAK,CACL,IAAM6lB,GAAKguD,WAAW38C,UAAWl3B,KACjC6lB,IAAMA,UAEN1mB,OAAOkmB,OAAO6R,WAAW1nB,QAAQ,SAAAqW,IAAE,OAAIA,OACvCnf,KAAKktE,WAAWD,cAEpB,OAAOjtE,kBAUT4tE,aAAe,SAAfA,aAAgB1sE,KAClB,IAAMkQ,IAAMlQ,IAAIoB,WAAW+F,MAAM,eACjC,OAAK+I,IAKE/P,SAAS+P,IAAI,GAAI,IAHb,MAyBTy8D,wBAAa,SAAbA,WAAcC,OAAQnnE,QAASkW,OAA6B,IAC1DkxD,KADoCf,aAAsB5nE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAExDuD,MAAQkU,OAASA,iBAAiB2a,mBAAQ3a,MAAQ2a,mBAAMn+B,WACxD20E,cACN,IAAK,IAAM35C,QAAQ1tB,QACf,MAAO7M,eAAe5B,KAAKyO,QAAS0tB,MAAO,CAEvC,IAAM45C,cADNF,KAAOpnE,QAAQ0tB,OACUlX,MAAO4wD,KAAK5wD,KAAK8wD,YACtCC,mBAAa,EACXjB,UAAYD,aAAaC,UAE3BiB,cADAjB,UACa,GAAAtxD,OAAMsxD,UAAN,KAAAtxD,OAAmB0Y,MAEhBA,KAGpB25C,WAAW35C,MAAQ05C,KAAK/0E,OACJ,IAAhBi1E,cACAH,OAAOz5C,MAAS,SAACoI,QAAStf,KAAMgxD,QAAhB,OAA2B,WAAe,IACtD,IAAIjtE,IACAktE,UAFkDC,MAAAjpE,UAAA1D,OAAXmgB,OAAW,IAAAhZ,MAAAwlE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXzsD,OAAWysD,OAAAlpE,UAAAkpE,OAGtD,IAAMC,UAAY1sD,OAAOngB,OACnB8sE,QAAU7lE,MAAM0rB,KAAK85C,QAC3B,GAAII,UAAW,CAEX,IAAME,aAAetxD,MAAQA,KAAKsxD,aAClCvtE,IAAM2gB,OACN,IAAMlD,UACN,GAAIxB,KAAM,CACN,IAAK,IAAIplB,EAAI,EAAGA,EAAIw2E,UAAWx2E,IAAK,CAChCmJ,IAAM2gB,OAAO9pB,GACb,IAAM22E,aAAevxD,KAAKuxD,eAAiBD,aAAetxD,KAAKuxD,aAAa32E,GACxEolB,KAAKuxD,cACHC,UAAYxxD,KAAKwxD,YAAcF,aAAetxD,KAAKwxD,UAAU52E,GAAKolB,KAAKwxD,WAM7E,GALID,cAAwC,mBAAjBA,eAEvBxtE,IAAMwtE,aAAaxtE,IAAKstE,QAASV,SAGjCa,UAEA,GAAyB,mBAAdA,UAA0B,CACjC,IAAIC,aAAezxD,KAAKyxD,aACpBA,cAAgBH,eAChBG,aAAeA,aAAa72E,IAG5Bq2E,UADAQ,eAGY,EAGZD,UAAUztE,OAASktE,WACnBzvD,OAAOzY,KAAKhF,UAEb,GAAyB,iBAAdytE,WACd,GAAkB,gBAAdA,UAA6B,CAC7B,IAAMC,cAAeH,aAAetxD,KAAKyxD,aAAa72E,GAClDolB,KAAKyxD,aACL1tE,KAAQA,IAAI2kB,YAAYvtB,OAASs2E,eACjCjwD,OAAOzY,KAAKhF,WAKpByd,OAAOzY,KAAKhF,UAGhByd,OAAOzY,KAAKhF,KAGpB,IAAM2tE,OAAS1xD,KAAK0xD,OACdC,UAAYryC,QAAQpI,KAAK85C,QAC/BU,QAAUA,OAAOlwD,OAAO,GAAImvD,QACxBW,cACAK,UAAUhmE,QAAQ,SAAC9P,MAAOjB,QACJuV,IAAdqR,OAAO5mB,KACP4mB,OAAO5mB,GAAKiB,SAIxB2lB,OAAOjd,QAAU+6B,QAAQpI,KAAK85C,OAAQM,aAAe9vD,OAASA,OAAO,SAErE8d,QAAQpI,KAAK85C,OAAQM,aAAevtE,IAAMA,IAAI,IAElD,OAAO4sE,OAGX,OAAOrxC,QAAQpI,KAAK85C,SAtER,CAuEbxlE,MAAOolE,KAAK5wD,KAAM+wD,gBAKjC,QAA+B5gE,IAA3B0/D,aAAaC,UACbtkE,MAAMqsB,OAAOg5C,gBACV,CACH,IAAMf,WAAYD,aAAaC,UAC/BtkE,MAAMqsB,OAAOi4C,WAAWe,YAG5B,OAAQF,OAAQnlE,QASdomE,sBAAwB,SAAxBA,sBAAyBtyC,QAASnI,OACpC77B,OAAOwc,QAAQqf,OAAOxrB,QAAQ,SAACkmE,UAC3B,IAAM36C,KAAO26C,SAAS,GAChBC,YAAcD,SAAS,GAAGC,YAC1BhuE,OAAS+tE,SAAS,GAAGvC,aACrBiC,aAAeM,SAAS,GAAGN,aAC3B70E,UAAY4iC,QAAQ5W,YAAYhsB,UAChCpB,OAAOqB,eAAe5B,KAAK2B,UAAWw6B,QACpCpzB,SACAw7B,QAAO,IAAA9gB,OAAK0Y,OAAUpzB,QAE1Bw7B,QAAQpI,MAAQ,WACZ,GAAIjvB,UAAO1D,OAAQ,CACf,IAAI1I,MAAKoM,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GAIT,OAHIspE,eACA11E,MAAQ01E,aAAajyC,QAADr3B,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,KAEpB6pE,cAAgBA,YAAYj2E,OACrByjC,QAAO,IAAA9gB,OAAK0Y,QAEvBoI,QAAO,IAAA9gB,OAAK0Y,OAAUr7B,MACfyjC,SACT,OAAOA,QAAO,IAAA9gB,OAAK0Y,YAwC/B66C,qBAAU,SAAVA,QAAUr0E,MAAI,OAAI,SAACs0E,OAAQC,QAC7B,MAAa,UAATv0E,OACKs0E,QAlBO,SAAdE,YAAe1kE,KAAMC,MACvB,GAAID,KAAKjJ,SAAWkJ,KAAKlJ,OAAU,OAAO,EAC1C,IAAK,IAAI3J,EAAI4S,KAAKjJ,OAAQ3J,GAAK,EAAGA,IAC9B,GAAI4S,KAAK5S,KAAO6S,KAAK7S,GAAM,OAAO,EAGtC,OAAO,EAeIs3E,CAAYF,OAAQC,QACX,WAATv0E,KACApC,OAAO62E,GAAGH,OAAQC,QACpBD,SAAWC,SAqBlBG,WACFC,eAAgB,0BASdC,eAAiB,SAAjBA,eAAkB/qD,OAAQgrD,MAC5B,IAAK,IAAMr7C,QAAQq7C,KACXpgD,eAAe5K,OAAO2P,QAAU/E,eAAeogD,KAAKr7C,OACpDo7C,eAAe/qD,OAAO2P,MAAOq7C,KAAKr7C,OAC3Bq7C,KAAKr7C,gBAAiB57B,QAAUi3E,KAAKr7C,MAAMxO,cAAgBptB,QAClEisB,OAAO2P,SACPo7C,eAAe/qD,OAAO2P,MAAOq7C,KAAKr7C,QAElC3P,OAAO2P,MAAQq7C,KAAKr7C,MAG5B,OAAO3P,QAaLirD,6BAAkB,SAAlBA,gBAAmBC,IAAKC,UAAW9kE,KAAM+kE,MAC3C,IAAIjd,UAAY+c,KGh6BL,SAASG,WAAYD,MAChC,OAAO,IAAIhI,qBAAUgI,MH+5BEC,CAAWD,MAK5BE,iBAHNnd,UAAYA,UAAU9nD,KAAKA,OAEHooD,QAAQn+B,OAAO66C,WACTjmE,MAAMipD,WAE9Bod,cAAgBpd,UAAUI,OAGhC,OAFAgd,cAAcC,aAAapnE,QAAQ,SAAAqnE,MAAI,OAAIA,KAAKzoC,WAChDuoC,cAAcvoC,SACPsoC,iBAqDL9f,0BAAe,SAAfA,eAAe,OAAMlT,WAMrBozB,gCAAqB,SAArBA,qBAAqB,OAAMC,YAwB3BC,mCAAwB,SAAxBA,wBAAwB,OAAMvzB,qBAsBpC,IA8BMwzB,SAAW,SAAXA,SAAY13E,EAAGm8C,EAAG5xC,GAAa,IAAVjJ,EAAUiL,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAAN,EAC3BvM,GAAKA,EAAGm8C,GAAKA,EAAG5xC,GAAKA,EAAGjJ,GAAKA,EAC7BtB,GAAK,IAAKm8C,GAAK,IAAK5xC,GAAK,IACzB,IAEI0nB,EACA9wB,EAHE0a,IAAM7Q,KAAK6Q,IAAI7b,EAAGm8C,EAAG5xC,GACrBqR,IAAM5Q,KAAK4Q,IAAI5b,EAAGm8C,EAAG5xC,GAGrBpL,GAAK0c,IAAMD,KAAO,EAExB,GAAIC,MAAQD,IACRqW,EAAI9wB,EAAI,MACL,CACH,IAAM3B,EAAIqc,IAAMD,IAEhB,OADAza,EAAIhC,EAAI,GAAMK,GAAK,EAAIqc,IAAMD,KAAOpc,GAAKqc,IAAMD,KACvCC,KACR,KAAK7b,EAAGiyB,GAAKkqB,EAAI5xC,GAAK/K,GAAK28C,EAAI5xC,EAAI,EAAI,GAAI,MAC3C,KAAK4xC,EAAGlqB,GAAK1nB,EAAIvK,GAAKR,EAAI,EAAG,MAC7B,KAAK+K,EAAG0nB,GAAKjyB,EAAIm8C,GAAK38C,EAAI,EAG1ByyB,GAAK,EAET,OAAQA,EAAG9wB,EAAGhC,EAAGmC,IAgDfq2E,YAAc,SAAdA,YAAeC,KAWjB,MAViB,yCAUJpzE,KAAKozE,MALA,iHAKkBpzE,KAAKozE,KAC9B,MAVM,0CAWGpzE,KAAKozE,MALP,sGAKyBpzE,KAAKozE,KACrC,MALM,yBAMGpzE,KAAKozE,KACd,MACFA,KA0EPC,sBAAwB,SAAxBA,sBAAyBryD,UAAWjB,SAAUlkB,MAChD,GAAiB,OAAbkkB,SACA,OAAO,KAEX,IAAMuzD,UAAYl4E,OAAOqN,KAAKsX,UAU9B,OAAOiB,UAAUa,OATH,SAAR0xD,MAAQhoE,QAAM,OAAI+nE,UAAU7xD,MAAM,SAACxT,OACrC,IAAMpK,IAAM0H,OAAO0C,OAAOtS,MACpBuI,MAAQ6b,SAAS9R,OAAO,aAAczC,MAAQuU,SAAS9R,OAAO,GAAK8R,SAAS9R,OAClF,MAAwB,iBAAb/J,MAAM,QACyB+L,IAA/B/L,MAAM6pB,KAAK,SAAA/yB,GAAC,OAAIA,IAAM6I,OAE1BK,OAAQL,KAAOK,MAAM,IAAML,KAAOK,MAAM,OAI/C6d,WAAW,EACXlmB,aAWF23E,yCAA8B,SAA9BA,4BAA+BxyD,UAAWmE,YAAatpB,MACzD,IAAI43E,kBACJ,GAAItuD,uBAAuB3Z,MAAO,CAC9B,IAAM2V,aAAeH,UAAUI,kBAEzBsyD,QAAUvuD,YAAYpH,MAAM,EAAGoH,YAAY9gB,QACjD,GAAI8gB,uBAAuBhN,SACvBs7D,kBAAoBtuD,YAAYnE,cAAe,QAC5C,GAAImE,uBAAuB3Z,OAAS2Z,YAAY,GAAG9gB,OAAQ,CAC9D,IAAMsvE,eAAiBxuD,YAAY,GAAGzO,OAAO,SAAA1b,GAAC,OAAIA,KAAKmmB,eACvDsyD,kBAAoBzyD,UAAUa,OAAO,SAACtW,QAClC,IAAIqoE,SAAU,EAMd,OALAD,eAAeloE,QAAQ,SAACiW,UAAW/L,KAC/B,IAAMha,MAAQ4P,OAAOmW,WAAWC,UAC1B/c,MAAQ8uE,QAAQ1qD,UAAU,SAAAhuB,GAAC,OAAIA,EAAE2a,OAASha,QAChDi4E,QAAUA,UAAsB,IAAXhvE,QAElBgvE,UAEP7xD,WAAW,EACXlmB,kBAIR43E,kBAAoBJ,sBAAsBryD,UAAWmE,YAAatpB,MAEtE,OAAO43E,mBASLI,+BAAoB,SAApBA,kBAAqBz0C,QAAS00C,aAA2B,QAAAC,MAAAhsE,UAAA1D,OAAXmgB,OAAW,IAAAhZ,MAAAuoE,MAAA,EAAAA,MAAA,KAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAXxvD,OAAWwvD,MAAA,GAAAjsE,UAAAisE,OAC3D,IAAMC,gBAAkBH,YAAW5pE,WAAX,GAAYk1B,SAAZ9gB,OAAwBkG,SAChD,IAAK,IAAMvoB,OAAOg4E,gBACd,MAAOx3E,eAAe5B,KAAKo5E,gBAAiBh4E,KAAM,CAC9C,IAAM2zE,UAAYprD,OAAO,GACrBzoB,GAAK,KACL6zE,YACA7zE,GAAK6zE,UAAUsE,OAEnB,IAAMC,OAASF,gBAAgBh4E,KACzBm4E,SAAWD,OAAO32E,KAClBy5B,MAAQk9C,OAAOl9C,MACfo9C,WAAaF,OAAOG,SAC1Bl1C,QAAQ9zB,QAAQ8oE,UAAUn9C,MAAOo9C,YAAY,GACzCzE,UAAW7zE,OAMrBw4E,aAAe,SAAfA,aAAe54E,OAAK,OAAKsb,MAAMtb,QAAUA,SAAWioD,KAAYjoD,QAAUioD,KA0B1E7rB,QAAU,SAAVA,QAAUhkB,KAAG,OAAKA,eAAevI,MAAQuI,KAAOA,MAmEhDygE,uBAAY,SAAZA,UAAYh3E,MAAI,OIr3CP,WACb,IAAIA,KAAO49C,sBAASorB,eAChBppC,KAAOge,sBAAS,IAChBhc,QAAU,KAEd,SAASmiB,SACP,IAAIua,OAGJ,GAFK18B,UAASA,QAAU08B,OAASv1C,YACjC/oB,KAAK0M,MAAMvH,KAAMoF,WAAWi1D,KAAK59B,SAAUhC,KAAKlzB,MAAMvH,KAAMoF,YACxD+zD,OAAQ,OAAO18B,QAAU,KAAM08B,OAAS,IAAM,KAepD,OAZAva,OAAO/jD,KAAO,SAASsmB,GACrB,OAAO/b,UAAU1D,QAAU7G,KAAoB,mBAANsmB,EAAmBA,EAAIs3B,sBAASt3B,GAAIy9B,QAAU/jD,MAGzF+jD,OAAOnkB,KAAO,SAAStZ,GACrB,OAAO/b,UAAU1D,QAAU+4B,KAAoB,mBAANtZ,EAAmBA,EAAIs3B,uBAAUt3B,GAAIy9B,QAAUnkB,MAG1FmkB,OAAOniB,QAAU,SAAStb,GACxB,OAAO/b,UAAU1D,QAAU+6B,QAAe,MAALtb,EAAY,KAAOA,EAAGy9B,QAAUniB,SAGhEmiB,OJ61CiBA,GAAS/jD,KAAKiwE,UAAUjwE,QAE5Ci3E,aAAWC,gBAAAC,gBDz4CS,OC04CKC,YADdF,gBAAAC,aD34Cc,YC64CKE,iBAFnBH,gBAAAC,aD14Ce,aMCjB,SAAShT,QACtB,OAAOt5B,gBAAUs5B,QAAQz6C,YLw4CVytD,cAKXG,cAAYJ,gBAAAK,iBD74Cc,YOHjB,SAASpT,OAAQl4C,OAC9B,IAAOttB,EAAIwlE,OAAOt9D,QAAU,EAC5B,IAAK,IAAI3J,EAAUM,EAAGy9D,GAAIuc,GAAIC,GAAI94E,EAAtB2hB,EAAI,EAAqBhjB,EAAI6mE,OAAOl4C,MAAM,IAAIplB,OAAQyZ,EAAIhjB,IAAKgjB,EACzE,IAAKk3D,GAAKC,GAAK,EAAGv6E,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3B+9D,IAAMz9D,EAAI2mE,OAAOl4C,MAAM/uB,IAAIojB,IAAI,GAAK9iB,EAAE,KAAO,GAChDA,EAAE,GAAKg6E,GAAIh6E,EAAE,GAAKg6E,IAAMvc,IACfA,GAAK,GACdz9D,EAAE,GAAKi6E,GAAIj6E,EAAE,GAAKi6E,IAAMxc,IAExBz9D,EAAE,GAAKg6E,KNu4CGN,gBAAAK,cD54CS,OC84CKG,MAFdR,gBAAAK,cD34CW,SQHd,SAASpT,OAAQl4C,OAC9B,IAAOttB,EAAIwlE,OAAOt9D,QAAU,EAA5B,CACA,IAAK,IAAI3J,EAAGyB,EAAgCgK,EAA7B2X,EAAI,EAAGhjB,EAAI6mE,OAAO,GAAGt9D,OAAWyZ,EAAIhjB,IAAKgjB,EAAG,CACzD,IAAK3X,EAAIzL,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGyL,GAAKw7D,OAAOjnE,GAAGojB,GAAG,IAAM,EACpD,GAAI3X,EAAG,IAAKzL,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGinE,OAAOjnE,GAAGojB,GAAG,IAAM3X,EAEpDu7D,KAAKC,OAAQl4C,UPw4CGirD,gBAAAK,cD14CW,SSJd,SAASpT,OAAQl4C,OAC9B,IAAOttB,EAAIwlE,OAAOt9D,QAAU,IAASvJ,GAAK6lE,GAAKgB,OAAOl4C,MAAM,KAAKplB,QAAU,EAA3E,CACA,IAAK,IAAkBs8D,GAAI7lE,EAAGqB,EAArBgK,EAAI,EAAG2X,EAAI,EAAaA,EAAIhjB,IAAKgjB,EAAG,CAC3C,IAAK,IAAIpjB,EAAI,EAAGo3B,GAAK,EAAGC,GAAK,EAAGr3B,EAAIyB,IAAKzB,EAAG,CAK1C,IAJA,IAAIy6E,GAAKxT,OAAOl4C,MAAM/uB,IAClB06E,KAAOD,GAAGr3D,GAAG,IAAM,EAEnBu3D,IAAMD,MADCD,GAAGr3D,EAAI,GAAG,IAAM,IACF,EAChBytB,EAAI,EAAGA,EAAI7wC,IAAK6wC,EAAG,CAC1B,IAAI+pC,GAAK3T,OAAOl4C,MAAM8hB,IAGtB8pC,KAFWC,GAAGx3D,GAAG,IAAM,IACZw3D,GAAGx3D,EAAI,GAAG,IAAM,GAG7BgU,IAAMsjD,KAAMrjD,IAAMsjD,GAAKD,KAEzBzU,GAAG7iD,EAAI,GAAG,IAAM6iD,GAAG7iD,EAAI,GAAG,GAAK3X,EAC3B2rB,KAAI3rB,GAAK4rB,GAAKD,IAEpB6uC,GAAG7iD,EAAI,GAAG,IAAM6iD,GAAG7iD,EAAI,GAAG,GAAK3X,EAC/Bu7D,KAAKC,OAAQl4C,UR03CGsrD,eAQZQ,mBAAQ,SAARA,MAAQ/wD,QAAM,OnB/4CL,WACb,IAAI/b,KAAO2yC,0BACP3xB,MAAQ+rD,WACR7vB,OAAS8vB,KACT95E,MAAQkmE,WAEZ,SAAS0T,MAAM7nE,MACb,IACIhT,EAIAg7E,GALAC,GAAKltE,KAAKyB,MAAMvH,KAAMoF,WAEtBjN,EAAI4S,KAAKrJ,OACTlI,EAAIw5E,GAAGtxE,OACPuxE,GAAK,IAAIpqE,MAAMrP,GAGnB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EAAG,CACtB,IAAK,IAAkDm7E,IAA9CC,GAAKH,GAAGj7E,GAAIy6E,GAAKS,GAAGl7E,GAAK,IAAI8Q,MAAM1Q,GAAIgjB,EAAI,EAAQA,EAAIhjB,IAAKgjB,EACnEq3D,GAAGr3D,GAAK+3D,KAAO,GAAIl6E,MAAM+R,KAAKoQ,GAAIg4D,GAAIh4D,EAAGpQ,OACzCmoE,IAAInoE,KAAOA,KAAKoQ,GAElBq3D,GAAGl5E,IAAM65E,GAGX,IAAKp7E,EAAI,EAAGg7E,GAAKjsD,MAAMmsD,IAAKl7E,EAAIyB,IAAKzB,EACnCk7E,GAAGF,GAAGh7E,IAAIkK,MAAQlK,EAIpB,OADAirD,OAAOiwB,GAAIF,IACJE,GAmBT,OAhBAL,MAAM9sE,KAAO,SAASqb,GACpB,OAAO/b,UAAU1D,QAAUoE,KAAoB,mBAANqb,EAAmBA,EAAIs3B,sBAASr9B,yBAAMljB,KAAKipB,IAAKyxD,OAAS9sE,MAGpG8sE,MAAM55E,MAAQ,SAASmoB,GACrB,OAAO/b,UAAU1D,QAAU1I,MAAqB,mBAANmoB,EAAmBA,EAAIs3B,uBAAUt3B,GAAIyxD,OAAS55E,OAG1F45E,MAAM9rD,MAAQ,SAAS3F,GACrB,OAAO/b,UAAU1D,QAAUolB,MAAa,MAAL3F,EAAY0xD,WAAyB,mBAAN1xD,EAAmBA,EAAIs3B,sBAASr9B,yBAAMljB,KAAKipB,IAAKyxD,OAAS9rD,OAG7H8rD,MAAM5vB,OAAS,SAAS7hC,GACtB,OAAO/b,UAAU1D,QAAUshD,OAAc,MAAL7hC,EAAY2xD,KAAa3xD,EAAGyxD,OAAS5vB,QAGpE4vB,MmBi2CeQ,GAAUttE,KAAK+b,OAAO/b,MAAMk9C,OAAOmvB,aAAatwD,OAAOmhC,SAC9Dl8B,MAAMgrD,YAAYjwD,OAAOiF,OADlBssD,CAC0BvxD,OAAO9W,OAenDsoE,mBACFna,yBACAoa,yBACAC,2BACAC,qBACAC,iCACA3U,UAAWwU,UACX7V,WAAYgW,iBACZltC,KAAMitC,WACN3U,WAAY0U,WACZh7B,OAAQ2gB,cAGNwa,SACFC,SzDrwCG,SAASA,SAAS1qC,OACvB,OAAOgpB,UAAKlsB,UAAMkD,QyDqwChB2qC,UzD9wCG,SAASA,UAAU3qC,OACxB,OAAOgpB,UAAKjsB,WAAOiD,QyD8wCjB4qC,QzDnxCG,SAASA,QAAQ5qC,OACtB,OAAOgpB,UAAKxvB,SAAKwG,QyDmxCf6qC,WzD5wCG,SAASA,WAAW7qC,OACzB,OAAOgpB,UAAKJ,YAAQ5oB,QyD4wClBoqB,cACAiG,cACAya,ISv7CW,WACb,IAAI/6E,MAAQ44B,sBACRkW,WAAaksC,eACbzgE,KAAO,KACPmjD,WAAaje,sBAAS,GACtBme,SAAWne,sBAASkb,UACpBmD,SAAWre,sBAAS,GAExB,SAASs7B,IAAIhpE,MACX,IAAIhT,EAEAojB,EACAytB,EAMA33B,GAGAvI,EAXAlP,EAAIuR,KAAKrJ,OAGTuS,IAAM,EACNhS,MAAQ,IAAI4G,MAAMrP,GAClBy6E,KAAO,IAAIprE,MAAMrP,GACjBm8D,IAAMe,WAAWnvD,MAAMvH,KAAMoF,WAC7B4wD,GAAKnyD,KAAK4Q,IAAIk/C,SAAK9vD,KAAK6Q,KAAKi/C,SAAKiD,SAASrvD,MAAMvH,KAAMoF,WAAauwD,KAEpE57D,EAAI8J,KAAK4Q,IAAI5Q,KAAKsoB,IAAI6pC,IAAMx8D,EAAGs9D,SAASvvD,MAAMvH,KAAMoF,YACpD8uE,GAAKn6E,GAAKi8D,GAAK,GAAK,EAAI,GAG5B,IAAKj+D,EAAI,EAAGA,EAAIyB,IAAKzB,GACd2Q,EAAIurE,KAAKhyE,MAAMlK,GAAKA,IAAMiB,MAAM+R,KAAKhT,GAAIA,EAAGgT,OAAS,IACxDkJ,KAAOvL,GASX,IAJkB,MAAdo/B,WAAoB7lC,MAAMsR,KAAK,SAASxb,EAAGojB,GAAK,OAAO2sB,WAAWmsC,KAAKl8E,GAAIk8E,KAAK94D,MACnE,MAAR5H,MAActR,MAAMsR,KAAK,SAASxb,EAAGojB,GAAK,OAAO5H,KAAKxI,KAAKhT,GAAIgT,KAAKoQ,MAGxEpjB,EAAI,EAAG6wC,EAAI30B,KAAO+hD,GAAKx8D,EAAI06E,IAAMjgE,IAAM,EAAGlc,EAAIyB,IAAKzB,EAAG49D,GAAK1kD,GAC9DkK,EAAIlZ,MAAMlK,GAAiBkZ,GAAK0kD,KAAlBjtD,EAAIurE,KAAK94D,IAAmB,EAAIzS,EAAIkgC,EAAI,GAAKsrC,GAAID,KAAK94D,IAClEpQ,KAAMA,KAAKoQ,GACXlZ,MAAOlK,EACPiB,MAAO0P,EACPguD,WAAYf,GACZiB,SAAU3lD,GACV6lD,SAAU/8D,GAId,OAAOk6E,KA2BT,OAxBAF,IAAI/6E,MAAQ,SAASmoB,GACnB,OAAO/b,UAAU1D,QAAU1I,MAAqB,mBAANmoB,EAAmBA,EAAIs3B,uBAAUt3B,GAAI4yD,KAAO/6E,OAGxF+6E,IAAIjsC,WAAa,SAAS3mB,GACxB,OAAO/b,UAAU1D,QAAUomC,WAAa3mB,EAAG5N,KAAO,KAAMwgE,KAAOjsC,YAGjEisC,IAAIxgE,KAAO,SAAS4N,GAClB,OAAO/b,UAAU1D,QAAU6R,KAAO4N,EAAG2mB,WAAa,KAAMisC,KAAOxgE,MAGjEwgE,IAAIrd,WAAa,SAASv1C,GACxB,OAAO/b,UAAU1D,QAAUg1D,WAA0B,mBAANv1C,EAAmBA,EAAIs3B,uBAAUt3B,GAAI4yD,KAAOrd,YAG7Fqd,IAAInd,SAAW,SAASz1C,GACtB,OAAO/b,UAAU1D,QAAUk1D,SAAwB,mBAANz1C,EAAmBA,EAAIs3B,uBAAUt3B,GAAI4yD,KAAOnd,UAG3Fmd,IAAIjd,SAAW,SAAS31C,GACtB,OAAO/b,UAAU1D,QAAUo1D,SAAwB,mBAAN31C,EAAmBA,EAAIs3B,uBAAUt3B,GAAI4yD,KAAOjd,UAGpFid,KTg3CLre,IrDn3CW,WACb,IAAIY,YAAcD,eACdG,YAAcD,eACd4d,aAAe17B,sBAAS,GACxB27B,UAAY,KACZ1d,WAAaD,cACbG,SAAWD,YACXG,SAAWD,YACXp6B,QAAU,KAEd,SAASi5B,MACP,IAAIyD,OACAtgE,EACAgxC,IAAMysB,YAAY/uD,MAAMvH,KAAMoF,WAC9B0kC,IAAM0sB,YAAYjvD,MAAMvH,KAAMoF,WAC9BuwD,GAAKe,WAAWnvD,MAAMvH,KAAMoF,WAAa+wD,OACzCllD,GAAK2lD,SAASrvD,MAAMvH,KAAMoF,WAAa+wD,OACvCH,GAAK7pC,IAAIlb,GAAK0kD,IACdI,GAAK9kD,GAAK0kD,GAQd,GANKl5B,UAASA,QAAU08B,OAASv1C,YAG7BkmB,GAAKD,KAAIhxC,EAAIixC,GAAIA,GAAKD,GAAIA,GAAKhxC,GAG7BixC,GAAKgoB,aAGN,GAAIkE,GAAKrC,SAAM7B,aAClBr1B,QAAQy3B,OAAOpqB,GAAK6M,IAAIgf,IAAK7rB,GAAK8M,IAAI+e,KACtCl5B,QAAQi5B,IAAI,EAAG,EAAG5rB,GAAI6rB,GAAI1kD,IAAK8kD,IAC3BlsB,GAAKioB,eACPr1B,QAAQy3B,OAAOrqB,GAAK8M,IAAI1lC,IAAK44B,GAAK+M,IAAI3lC,KACtCwrB,QAAQi5B,IAAI,EAAG,EAAG7rB,GAAI54B,GAAI0kD,GAAII,SAK7B,CACH,IAWI3f,GACAC,GAZAg+B,IAAM1e,GACN2e,IAAMrjE,GACNsjE,IAAM5e,GACN6e,IAAMvjE,GACNwjE,IAAMze,GACN0e,IAAM1e,GACN2e,GAAK7d,SAASvvD,MAAMvH,KAAMoF,WAAa,EACvCwvE,GAAMD,GAAK7iB,eAAasiB,WAAaA,UAAU7sE,MAAMvH,KAAMoF,WAAauP,UAAKk1B,GAAKA,GAAKC,GAAKA,KAC5FktB,GAAKviD,SAAI0X,IAAI2d,GAAKD,IAAM,GAAIsqC,aAAa5sE,MAAMvH,KAAMoF,YACrDyvE,IAAM7d,GACN8d,IAAM9d,GAKV,GAAI4d,GAAK9iB,aAAS,CAChB,IAAIijB,GAAK3e,KAAKwe,GAAK/qC,GAAK+M,IAAI+9B,KACxBK,GAAK5e,KAAKwe,GAAK9qC,GAAK8M,IAAI+9B,MACvBF,KAAY,EAALM,IAAUjjB,cAA8ByiB,KAArBQ,IAAOhf,GAAK,GAAK,EAAeye,KAAOO,KACjEN,IAAM,EAAGF,IAAMC,KAAO7e,GAAK1kD,IAAM,IACjCyjE,KAAY,EAALM,IAAUljB,cAA8BuiB,KAArBW,IAAOjf,GAAK,GAAK,EAAeue,KAAOU,KACjEN,IAAM,EAAGL,IAAMC,KAAO3e,GAAK1kD,IAAM,GAGxC,IAAI6jD,IAAMhrB,GAAK6M,IAAI09B,KACftf,IAAMjrB,GAAK8M,IAAIy9B,KACfhd,IAAMxtB,GAAK8M,IAAI69B,KACfld,IAAMztB,GAAK+M,IAAI49B,KAGnB,GAAIxd,GAAKlF,aAAS,CAChB,IAAIqF,IAAMrtB,GAAK6M,IAAI29B,KACfld,IAAMttB,GAAK8M,IAAI09B,KACf/c,IAAM1tB,GAAK8M,IAAI49B,KACf/c,IAAM3tB,GAAK+M,IAAI29B,KAGnB,GAAIve,GAAKtC,QAAI,CACX,IAAIuhB,GAAKR,IAAM3iB,aAhIzB,SAASojB,UAAUtzB,GAAI+S,GAAI9S,GAAIyS,GAAIE,GAAIC,GAAI0gB,GAAIC,IAC7C,IAAI/d,IAAMxV,GAAKD,GAAI0V,IAAMhD,GAAKK,GAC1B0gB,IAAMF,GAAK3gB,GAAI8gB,IAAMF,GAAK3gB,GAC1Bx7D,GAAKo8E,KAAO1gB,GAAKF,IAAM6gB,KAAO1zB,GAAK4S,MAAQ8gB,IAAMje,IAAMge,IAAM/d,KACjE,OAAQ1V,GAAK3oD,EAAIo+D,IAAK1C,GAAK17D,EAAIq+D,KA4HE4d,CAAUpgB,IAAKC,IAAKwC,IAAKC,IAAKL,IAAKC,IAAKC,IAAKC,MAAQD,IAAKC,KAC/EwK,GAAKhN,IAAMmgB,GAAG,GACdlT,GAAKhN,IAAMkgB,GAAG,GACdzR,GAAKrM,IAAM8d,GAAG,GACdxR,GAAKrM,IAAM6d,GAAG,GACdM,GAAK,EAAI3+B,IDhJhB,SAAS2e,KAAKr3B,GACnB,OAAOA,EAAI,EAAI,EAAIA,GAAK,EAAIw1B,QAAK7vD,KAAK0xD,KAAKr3B,GC+IlBq3B,EAAMuM,GAAK0B,GAAKzB,GAAK0B,KAAO9uD,UAAKmtD,GAAKA,GAAKC,GAAKA,IAAMptD,UAAK6uD,GAAKA,GAAKC,GAAKA,MAAQ,GAC/F+R,GAAK7gE,UAAKsgE,GAAG,GAAKA,GAAG,GAAKA,GAAG,GAAKA,GAAG,IACzCJ,IAAMpgE,SAAIuiD,IAAKntB,GAAK2rC,KAAOD,GAAK,IAChCT,IAAMrgE,SAAIuiD,IAAKltB,GAAK0rC,KAAOD,GAAK,KAK9Bb,IAAM5iB,aAGHgjB,IAAMhjB,cACb1b,GAAK2gB,eAAeQ,IAAKC,IAAK1C,IAAKC,IAAKjrB,GAAIgrC,IAAK/e,IACjD1f,GAAK0gB,eAAeI,IAAKC,IAAKC,IAAKC,IAAKxtB,GAAIgrC,IAAK/e,IAEjDt5B,QAAQy3B,OAAO9d,GAAG8hB,GAAK9hB,GAAG0e,IAAK1e,GAAG+hB,GAAK/hB,GAAG2e,KAGtC+f,IAAM9d,GAAIv6B,QAAQi5B,IAAItf,GAAG8hB,GAAI9hB,GAAG+hB,GAAI2c,IAAK19B,MAAMhB,GAAG2e,IAAK3e,GAAG0e,KAAM1d,MAAMf,GAAG0e,IAAK1e,GAAGye,MAAOiB,KAI1Ft5B,QAAQi5B,IAAItf,GAAG8hB,GAAI9hB,GAAG+hB,GAAI2c,IAAK19B,MAAMhB,GAAG2e,IAAK3e,GAAG0e,KAAM1d,MAAMhB,GAAGghB,IAAKhhB,GAAG+gB,MAAOpB,IAC9Et5B,QAAQi5B,IAAI,EAAG,EAAG5rB,GAAIsN,MAAMhB,GAAG+hB,GAAK/hB,GAAGghB,IAAKhhB,GAAG8hB,GAAK9hB,GAAG+gB,KAAM/f,MAAMf,GAAG8hB,GAAK9hB,GAAG+gB,IAAK/gB,GAAG6hB,GAAK7hB,GAAG8gB,MAAOpB,IACrGt5B,QAAQi5B,IAAIrf,GAAG6hB,GAAI7hB,GAAG8hB,GAAI2c,IAAK19B,MAAMf,GAAG+gB,IAAK/gB,GAAG8gB,KAAM/f,MAAMf,GAAG0e,IAAK1e,GAAGye,MAAOiB,OAK7Et5B,QAAQy3B,OAAOY,IAAKC,KAAMt4B,QAAQi5B,IAAI,EAAG,EAAG5rB,GAAIuqC,IAAKC,KAAMve,KArB1Ct5B,QAAQy3B,OAAOY,IAAKC,KAyBpClrB,GAAKioB,cAAc2iB,IAAM3iB,aAGtB+iB,IAAM/iB,cACb1b,GAAK2gB,eAAeM,IAAKC,IAAKH,IAAKC,IAAKvtB,IAAKgrC,IAAK9e,IAClD1f,GAAK0gB,eAAejC,IAAKC,IAAKwC,IAAKC,IAAK3tB,IAAKgrC,IAAK9e,IAElDt5B,QAAQ23B,OAAOhe,GAAG8hB,GAAK9hB,GAAG0e,IAAK1e,GAAG+hB,GAAK/hB,GAAG2e,KAGtC8f,IAAM7d,GAAIv6B,QAAQi5B,IAAItf,GAAG8hB,GAAI9hB,GAAG+hB,GAAI0c,IAAKz9B,MAAMhB,GAAG2e,IAAK3e,GAAG0e,KAAM1d,MAAMf,GAAG0e,IAAK1e,GAAGye,MAAOiB,KAI1Ft5B,QAAQi5B,IAAItf,GAAG8hB,GAAI9hB,GAAG+hB,GAAI0c,IAAKz9B,MAAMhB,GAAG2e,IAAK3e,GAAG0e,KAAM1d,MAAMhB,GAAGghB,IAAKhhB,GAAG+gB,MAAOpB,IAC9Et5B,QAAQi5B,IAAI,EAAG,EAAG7rB,GAAIuN,MAAMhB,GAAG+hB,GAAK/hB,GAAGghB,IAAKhhB,GAAG8hB,GAAK9hB,GAAG+gB,KAAM/f,MAAMf,GAAG8hB,GAAK9hB,GAAG+gB,IAAK/gB,GAAG6hB,GAAK7hB,GAAG8gB,KAAMpB,IACpGt5B,QAAQi5B,IAAIrf,GAAG6hB,GAAI7hB,GAAG8hB,GAAI0c,IAAKz9B,MAAMf,GAAG+gB,IAAK/gB,GAAG8gB,KAAM/f,MAAMf,GAAG0e,IAAK1e,GAAGye,MAAOiB,MAK7Et5B,QAAQi5B,IAAI,EAAG,EAAG7rB,GAAI2qC,IAAKD,IAAKxe,IArBIt5B,QAAQ23B,OAAOiD,IAAKC,UA1F1C76B,QAAQy3B,OAAO,EAAG,GAoHvC,GAFAz3B,QAAQ03B,YAEJgF,OAAQ,OAAO18B,QAAU,KAAM08B,OAAS,IAAM,KAyCpD,OAtCAzD,IAAI+f,SAAW,WACb,IAAI58E,IAAMy9D,YAAY/uD,MAAMvH,KAAMoF,aAAcoxD,YAAYjvD,MAAMvH,KAAMoF,YAAc,EAClFjL,IAAMu8D,WAAWnvD,MAAMvH,KAAMoF,aAAcwxD,SAASrvD,MAAMvH,KAAMoF,YAAc,EAAIsuD,QAAK,EAC3F,OAAQ/c,IAAIx8C,GAAKtB,EAAG+9C,IAAIz8C,GAAKtB,IAG/B68D,IAAIY,YAAc,SAASn1C,GACzB,OAAO/b,UAAU1D,QAAU40D,YAA2B,mBAANn1C,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAOY,aAG9FZ,IAAIc,YAAc,SAASr1C,GACzB,OAAO/b,UAAU1D,QAAU80D,YAA2B,mBAANr1C,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAOc,aAG9Fd,IAAIye,aAAe,SAAShzD,GAC1B,OAAO/b,UAAU1D,QAAUyyE,aAA4B,mBAANhzD,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAOye,cAG/Fze,IAAI0e,UAAY,SAASjzD,GACvB,OAAO/b,UAAU1D,QAAU0yE,UAAiB,MAALjzD,EAAY,KAAoB,mBAANA,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAO0e,WAG/G1e,IAAIgB,WAAa,SAASv1C,GACxB,OAAO/b,UAAU1D,QAAUg1D,WAA0B,mBAANv1C,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAOgB,YAG7FhB,IAAIkB,SAAW,SAASz1C,GACtB,OAAO/b,UAAU1D,QAAUk1D,SAAwB,mBAANz1C,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAOkB,UAG3FlB,IAAIoB,SAAW,SAAS31C,GACtB,OAAO/b,UAAU1D,QAAUo1D,SAAwB,mBAAN31C,EAAmBA,EAAIs3B,uBAAUt3B,GAAIu0C,KAAOoB,UAG3FpB,IAAIj5B,QAAU,SAAStb,GACrB,OAAO/b,UAAU1D,QAAW+6B,QAAe,MAALtb,EAAY,KAAOA,EAAIu0C,KAAOj5B,SAG/Di5B,KqD6rCL1tB,eAGE0tC,QACFvsC,KAAMwsC,MAGJC,gBAAkB,SAAlBA,gBAAmBC,QAGrB,IADA,IAAIv+D,SADJu+D,OAASA,OAAOtiE,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,KACd,GAAKyyE,OAAO,GACxB99E,EAAI,EAAGA,EAAI89E,OAAOn0E,OAAQ3J,IAC/Buf,QAAUzT,KAAK4Q,IAAI6C,QAASu+D,OAAO99E,GAAK89E,OAAO99E,EAAI,IAGvD,OAAOuf,SAGLw+D,aACF5yB,YAAa,yBACbG,OAAQ,sBACRE,OAAQ,mBACRC,KAAM,mBACNxgD,IAAK,gBACLK,MAAO,QACPW,KAAM,MAGJ+xE,gBACD,cAAe,SAAU,SAAU,OAAQ,MAAO,QAAS,SAC3D,EAAG,IAAM,IAAO,KAAS,MAAU,OAAY,UAQ9CC,4BAAiB,SAAjBA,eAAkBh9E,MAAO2oD,UAC3B,IAAMs0B,gBANiB,SAArBC,mBAAsBv0B,UACxB,IAAM1/C,MAAQ+nC,+BAAkB+rC,cAAc,GAAIp0B,UAClD,OAAOo0B,cAAc,GAAG9zE,OAIAi0E,CAAmBv0B,UAC3C,OAAO7hD,iCAAkBsG,SAASpN,MAAO88E,YAAYG,mBAiCnDE,gBANgBx+E,OAAO83B,uBAAyB93B,OAAO+3B,6BACzD/3B,OAAOg4B,0BAA4Bh4B,OAAOi4B,wBAA0Bj4B,OAAOk4B,wBAKxD,SAAjBsmD,eAAiBvpE,QAAM,OAAI,SAAC1L,KAC9B,OAAIA,eAAewL,kBACRxL,OAAO0L,OAASA,OAAO1L,KAAvB,GAAAya,OAAiCza,KAErCA,OAGLk1E,4CAAiC,SAAjCA,+BAAkC/3D,WAAoC,QAAAg4D,MAAAjxE,UAAA1D,OAAtB40E,kBAAsB,IAAAztE,MAAAwtE,MAAA,EAAAA,MAAA,KAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAtBD,kBAAsBC,MAAA,GAAAnxE,UAAAmxE,OACxE,IAAMC,oBACN,GAAIn4D,qBAAqBxgB,oBAAW,CAChC,IAAM0jB,eAAW5F,OAAA+tD,mBAAOrrD,UAAUmD,iBAAiB+C,WAAlCmlD,mBAAgDrrD,UAAUo4D,yBAAyBlyD,YAC9FmyD,gBAAkBjK,aACpBU,WAAW5rD,YAAY6J,KAAK,SAAAurD,MAAI,OAAIA,KAAKz5D,KAAOnP,8BAAeG,UAAU,gBAEvE8a,SAAW3K,UAAU3O,gBAAgBnE,cAC3C+qE,kBAAoBA,kBAAkB50E,OAAS40E,kBAAoB79E,OAAOqN,KAAKkjB,WAC7DlgB,QAAQ,SAACqgB,aACvB,GAAIutD,gBAAgBvtD,aAChBqtD,iBAAiBrtD,aAAeutD,gBAAgBvtD,iBAC7C,CACH,IAAMyC,aAAe5C,SAASG,aAC1ByC,eACA4qD,iBAAiBrtD,aAAeyC,aAAa3T,eAK7D,OAAOu+D,kBAGLI,yBAA2B,SAA3BA,yBAA4BnjE,GAAII,WAAL,OAAmBJ,GAAG/D,gBAAgBtE,YAAYyI,WAAW0C,eUpiDnFsgE,MAAQ,+BAEJC,gBACbryC,IAAK,6BACLoyC,MAAOA,MACPE,MAAO,+BACPC,IAAK,uCACLC,MAAO,iCCLMC,cAAA,SAAS5+E,MACtB,IAAIooD,OAASpoD,MAAQ,GAAIP,EAAI2oD,OAAOz6C,QAAQ,KAE5C,OADIlO,GAAK,GAAqC,WAA/B2oD,OAASpoD,KAAK8iB,MAAM,EAAGrjB,MAAiBO,KAAOA,KAAK8iB,MAAMrjB,EAAI,IACtEo/E,eAAWr9E,eAAe4mD,SAAW02B,MAAOD,eAAWz2B,QAAS6wB,MAAOj5E,MAAQA,MCczE,IAAA++E,QAAA,SAAS/+E,MACtB,IAAIg/E,SAAWrK,cAAU30E,MACzB,OAAQg/E,SAAS/F,MARnB,SAASgG,aAAaD,UACpB,OAAO,WACL,OAAOt3E,KAAKw3E,cAAc1yC,gBAAgBwyC,SAASF,MAAOE,SAAS/F,SAZvE,SAASkG,eAAen/E,MACtB,OAAO,WACL,IAAI+/B,SAAWr4B,KAAKw3E,cAChBE,IAAM13E,KAAK23E,aACf,OAAOD,MAAQb,OAASx+C,SAASyjB,gBAAgB67B,eAAiBd,MAC5Dx+C,SAASmJ,cAAclpC,MACvB+/B,SAASyM,gBAAgB4yC,IAAKp/E,SAchBg/E,WCvBxB,SAASvY,iBAEM,IAAA6Y,aAAA,SAASC,UACtB,OAAmB,MAAZA,SAAmB9Y,cAAO,WAC/B,OAAO/+D,KAAK83E,cAAcD,YCJ9B,SAASjwC,oBACP,SAGa,IAAAmwC,YAAA,SAASF,UACtB,OAAmB,MAAZA,SAAmBjwC,kBAAQ,WAChC,OAAO5nC,KAAKg4E,iBAAiBH,YCN7BI,QAAU,SAAAA,QAASJ,UACrB,OAAO,WACL,OAAO73E,KAAKk4E,QAAQL,YAIxB,GAAwB,oBAAbx/C,SAA0B,CACnC,IAAI8/C,gBAAU9/C,SAASyjB,gBACvB,IAAKq8B,gBAAQD,QAAS,CACpB,IAAIE,cAAgBD,gBAAQE,uBACrBF,gBAAQG,mBACRH,gBAAQI,oBACRJ,gBAAQK,iBACfP,QAAU,SAAAA,QAASJ,UACjB,OAAO,WACL,OAAOO,cAAclgF,KAAK8H,KAAM63E,aAMzBI,wBCrBAQ,OAAA,SAAShjD,QACtB,OAAO,IAAI5sB,MAAM4sB,OAAO/zB,SCMnB,SAASg3E,UAAUnyD,OAAQlU,OAChCrS,KAAKw3E,cAAgBjxD,OAAOixD,cAC5Bx3E,KAAK23E,aAAepxD,OAAOoxD,aAC3B33E,KAAK24E,MAAQ,KACb34E,KAAK6jB,QAAU0C,OACfvmB,KAAK44E,SAAWvmE,MAGlBqmE,UAAU7+E,WACRgsB,YAAa6yD,UACb70C,YAAa,SAAAA,YAASvhB,OAAS,OAAOtiB,KAAK6jB,QAAQ0d,aAAajf,MAAOtiB,KAAK24E,QAC5Ep3C,aAAc,SAAAA,aAASjf,MAAO3U,MAAQ,OAAO3N,KAAK6jB,QAAQ0d,aAAajf,MAAO3U,OAC9EmqE,cAAe,SAAAA,cAASD,UAAY,OAAO73E,KAAK6jB,QAAQi0D,cAAcD,WACtEG,iBAAkB,SAAAA,iBAASH,UAAY,OAAO73E,KAAK6jB,QAAQm0D,iBAAiBH,YCpB/D,ICIXgB,UAAY,IAEhB,SAASC,UAAUvyD,OAAQy5B,MAAOmT,MAAO19B,OAAQw9B,KAAMloD,MASrD,IARA,IACI6lB,KADA74B,EAAI,EAEJghF,YAAc/4B,MAAMt+C,OACpBs3E,WAAajuE,KAAKrJ,OAKf3J,EAAIihF,aAAcjhF,GACnB64B,KAAOovB,MAAMjoD,KACf64B,KAAKgoD,SAAW7tE,KAAKhT,GACrB09B,OAAO19B,GAAK64B,MAEZuiC,MAAMp7D,GAAK,IAAI2gF,UAAUnyD,OAAQxb,KAAKhT,IAK1C,KAAOA,EAAIghF,cAAehhF,GACpB64B,KAAOovB,MAAMjoD,MACfk7D,KAAKl7D,GAAK64B,MAKhB,SAASqoD,QAAQ1yD,OAAQy5B,MAAOmT,MAAO19B,OAAQw9B,KAAMloD,KAAMzR,KACzD,IAAIvB,EACA64B,KAKAyX,SAJA6wC,kBACAH,YAAc/4B,MAAMt+C,OACpBs3E,WAAajuE,KAAKrJ,OAClBy3E,UAAY,IAAItwE,MAAMkwE,aAK1B,IAAKhhF,EAAI,EAAGA,EAAIghF,cAAehhF,GACzB64B,KAAOovB,MAAMjoD,MACfohF,UAAUphF,GAAKswC,SAAWwwC,UAAYv/E,IAAIpB,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,OACnE3X,YAAY6wC,eACdjmB,KAAKl7D,GAAK64B,KAEVsoD,eAAe7wC,UAAYzX,MAQjC,IAAK74B,EAAI,EAAGA,EAAIihF,aAAcjhF,GAExB64B,KAAOsoD,eADX7wC,SAAWwwC,UAAYv/E,IAAIpB,KAAKquB,OAAQxb,KAAKhT,GAAIA,EAAGgT,SAElD0qB,OAAO19B,GAAK64B,KACZA,KAAKgoD,SAAW7tE,KAAKhT,GACrBmhF,eAAe7wC,UAAY,MAE3B8qB,MAAMp7D,GAAK,IAAI2gF,UAAUnyD,OAAQxb,KAAKhT,IAK1C,IAAKA,EAAI,EAAGA,EAAIghF,cAAehhF,GACxB64B,KAAOovB,MAAMjoD,KAAQmhF,eAAeC,UAAUphF,MAAQ64B,OACzDqiC,KAAKl7D,GAAK64B,MClDhB,SAAS8U,eAAUvrC,EAAGiJ,GACpB,OAAOjJ,EAAIiJ,GAAK,EAAIjJ,EAAIiJ,EAAI,EAAIjJ,GAAKiJ,EAAI,EAAIuiC,ICoBhC,IC1CAyzC,WAAA,SAASxoD,MACtB,OAAQA,KAAK4mD,eAAiB5mD,KAAK4mD,cAAcz7B,aACzCnrB,KAAKyH,UAAYzH,MAClBA,KAAKmrB,aC4BP,SAASs9B,WAAWzoD,KAAMt4B,MAC/B,OAAOs4B,KAAKkJ,MAAMoiB,iBAAiB5jD,OAC5ByjD,WAAYnrB,MAAMqrB,iBAAiBrrB,KAAM,MAAMsrB,iBAAiB5jD,MCjCzE,SAASghF,WAAWj/B,QAClB,OAAOA,OAAO3hC,OAAOpM,MAAM,SAG7B,SAASitE,UAAU3oD,MACjB,OAAOA,KAAK2oD,WAAa,IAAIC,UAAU5oD,MAGzC,SAAS4oD,UAAU5oD,MACjB5wB,KAAKk0B,MAAQtD,KACb5wB,KAAKy5E,OAASH,WAAW1oD,KAAK4iC,aAAa,UAAY,IAuBzD,SAASkmB,WAAW9oD,KAAMm2B,OAExB,IADA,IAAI71B,KAAOqoD,UAAU3oD,MAAO74B,GAAK,EAAGyB,EAAIutD,MAAMrlD,SACrC3J,EAAIyB,GAAG03B,KAAKla,IAAI+vC,MAAMhvD,IAGjC,SAAS4hF,cAAc/oD,KAAMm2B,OAE3B,IADA,IAAI71B,KAAOqoD,UAAU3oD,MAAO74B,GAAK,EAAGyB,EAAIutD,MAAMrlD,SACrC3J,EAAIyB,GAAG03B,KAAKwW,OAAOqf,MAAMhvD,IA3BpCyhF,UAAU3/E,WACRmd,IAAK,SAAAA,IAAS1e,MACJ0H,KAAKy5E,OAAOxzE,QAAQ3N,MACpB,IACN0H,KAAKy5E,OAAOvzE,KAAK5N,MACjB0H,KAAKk0B,MAAM4P,aAAa,QAAS9jC,KAAKy5E,OAAO12E,KAAK,QAGtD2kC,OAAQ,SAAAA,OAASpvC,MACf,IAAIP,EAAIiI,KAAKy5E,OAAOxzE,QAAQ3N,MACxBP,GAAK,IACPiI,KAAKy5E,OAAOnyE,OAAOvP,EAAG,GACtBiI,KAAKk0B,MAAM4P,aAAa,QAAS9jC,KAAKy5E,OAAO12E,KAAK,QAGtD62E,SAAU,SAAAA,SAASthF,MACjB,OAAO0H,KAAKy5E,OAAOxzE,QAAQ3N,OAAS,IC7BxC,SAASuhF,aACP75E,KAAKm8B,YAAc,GCDrB,SAAS29C,aACP95E,KAAKu5B,UAAY,GCDnB,SAASipB,cACHxiD,KAAK+5E,aAAa/5E,KAAKshC,WAAWuC,YAAY7jC,MCDpD,SAASg6E,QACHh6E,KAAKi6E,iBAAiBj6E,KAAKshC,WAAWC,aAAavhC,KAAMA,KAAKshC,WAAW3T,YCE/E,SAASusD,eACP,OAAO,KCJT,SAASxyC,gBACP,IAAInhB,OAASvmB,KAAKshC,WACd/a,QAAQA,OAAOH,YAAYpmB,MCFjC,SAASm6E,yBACP,OAAOn6E,KAAKshC,WAAWC,aAAavhC,KAAKo6E,WAAU,GAAQp6E,KAAK+5E,aAGlE,SAASM,sBACP,OAAOr6E,KAAKshC,WAAWC,aAAavhC,KAAKo6E,WAAU,GAAOp6E,KAAK+5E,aAGlD,ICRXO,gBAEOC,SAAQ,KAEK,oBAAbliD,WAEH,iBADQA,SAASyjB,kBAErBw+B,cAAgBE,WAAY,YAAaC,WAAY,cAIzD,SAASC,sBAAsB/I,SAAU1vE,MAAO+9C,OAE9C,OADA2xB,SAAWgJ,gBAAgBhJ,SAAU1vE,MAAO+9C,OACrC,SAASu6B,OACd,IAAIK,QAAUL,MAAMM,cACfD,UAAYA,UAAY56E,MAAkD,EAAxC46E,QAAQE,wBAAwB96E,QACrE2xE,SAASz5E,KAAK8H,KAAMu6E,QAK1B,SAASI,gBAAgBhJ,SAAU1vE,MAAO+9C,OACxC,OAAO,SAAS+6B,QACd,IAAIC,OAAST,SACbA,SAAQQ,OACR,IACEpJ,SAASz5E,KAAK8H,KAAMA,KAAK44E,SAAU32E,MAAO+9C,OAD5C,QAGEu6B,SAAQS,SAad,SAASC,SAASC,UAChB,OAAO,WACL,IAAIxN,GAAK1tE,KAAKm7E,KACd,GAAKzN,GAAL,CACA,IAAK,IAAkCl1E,EAA9B2iB,EAAI,EAAGpjB,GAAK,EAAGI,EAAIu1E,GAAGhsE,OAAWyZ,EAAIhjB,IAAKgjB,EAC7C3iB,EAAIk1E,GAAGvyD,GAAM+/D,SAASrgF,MAAQrC,EAAEqC,OAASqgF,SAASrgF,MAASrC,EAAEF,OAAS4iF,SAAS5iF,KAGjFo1E,KAAK31E,GAAKS,EAFVwH,KAAKo7E,oBAAoB5iF,EAAEqC,KAAMrC,EAAEm5E,SAAUn5E,EAAE6iF,WAK7CtjF,EAAG21E,GAAGhsE,OAAS3J,SACTiI,KAAKm7E,OAIrB,SAASG,MAAMJ,SAAUliF,MAAOqiF,SAC9B,IAAIE,KAAOjB,aAAaxgF,eAAeohF,SAASrgF,MAAQ6/E,sBAAwBC,gBAChF,OAAO,SAAStiF,EAAGN,EAAGioD,OACpB,IAAoBxnD,EAAhBk1E,GAAK1tE,KAAKm7E,KAASxJ,SAAW4J,KAAKviF,MAAOjB,EAAGioD,OACjD,GAAI0tB,GAAI,IAAK,IAAIvyD,EAAI,EAAGhjB,EAAIu1E,GAAGhsE,OAAQyZ,EAAIhjB,IAAKgjB,EAC9C,IAAK3iB,EAAIk1E,GAAGvyD,IAAItgB,OAASqgF,SAASrgF,MAAQrC,EAAEF,OAAS4iF,SAAS5iF,KAI5D,OAHA0H,KAAKo7E,oBAAoB5iF,EAAEqC,KAAMrC,EAAEm5E,SAAUn5E,EAAE6iF,SAC/Cr7E,KAAKw7E,iBAAiBhjF,EAAEqC,KAAMrC,EAAEm5E,SAAWA,SAAUn5E,EAAE6iF,QAAUA,cACjE7iF,EAAEQ,MAAQA,OAIdgH,KAAKw7E,iBAAiBN,SAASrgF,KAAM82E,SAAU0J,SAC/C7iF,GAAKqC,KAAMqgF,SAASrgF,KAAMvC,KAAM4iF,SAAS5iF,KAAMU,MAAOA,MAAO24E,SAAUA,SAAU0J,QAASA,SACrF3N,GACAA,GAAGxnE,KAAK1N,GADJwH,KAAKm7E,MAAQ3iF,IA0BnB,SAASijF,YAAYV,OAAQpJ,SAAUxW,KAAMn0D,MAClD,IAAIg0E,OAAST,SACbQ,OAAOW,YAAcnB,SACrBA,SAAQQ,OACR,IACE,OAAOpJ,SAASpqE,MAAM4zD,KAAMn0D,MAD9B,QAGEuzE,SAAQS,QCtGZ,SAASW,cAAc/qD,KAAM/1B,KAAMgnB,QACjC,IAAIlqB,OAASokD,WAAYnrB,MACrB2pD,MAAQ5iF,OAAOikF,YAEE,mBAAVrB,MACTA,MAAQ,IAAIA,MAAM1/E,KAAMgnB,SAExB04D,MAAQ5iF,OAAO0gC,SAASwjD,YAAY,SAChCh6D,QAAQ04D,MAAMuB,UAAUjhF,KAAMgnB,OAAOk6D,QAASl6D,OAAOm6D,YAAazB,MAAM0B,OAASp6D,OAAOo6D,QACvF1B,MAAMuB,UAAUjhF,MAAM,GAAO,IAGpC+1B,KAAK+qD,cAAcpB,OAeN,ICEJljF,gBAAQ,MAEZ,SAASywE,oBAAUoU,OAAQC,SAChCn8E,KAAKo8E,QAAUF,OACfl8E,KAAKq8E,SAAWF,QAGlB,SAAStpB,sBACP,OAAO,IAAIiV,sBAAYzvC,SAASyjB,kBAAmBzkD,gBAGrDywE,oBAAUjuE,UAAYg5D,oBAAUh5D,WAC9BgsB,YAAaiiD,oBACb5oD,OCzCa,SAASA,QACA,mBAAXA,SAAuBA,OAAS24D,aAAS34D,SAEpD,IAAK,IAAIg9D,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ46E,UAAY,IAAIzzE,MAAM1Q,GAAIgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAC3F,IAAK,IAAiFyV,KAAM2rD,QAAnFv8B,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAQ86E,SAAWF,UAAUnhE,GAAK,IAAItS,MAAMrP,GAAmBzB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9G64B,KAAOovB,MAAMjoD,MAAQwkF,QAAUr9D,OAAOhnB,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,UAClE,aAAcpvB,OAAM2rD,QAAQ3D,SAAWhoD,KAAKgoD,UAChD4D,SAASzkF,GAAKwkF,SAKpB,OAAO,IAAIzU,oBAAUwU,UAAWt8E,KAAKq8E,WD8BrCvpB,UE1Ca,SAAS5zC,QACA,mBAAXA,SAAuBA,OAAS64D,YAAY74D,SAEvD,IAAK,IAAIg9D,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ46E,aAAgBH,WAAchhE,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAC/F,IAAK,IAAyCyV,KAArCovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAc3J,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9D64B,KAAOovB,MAAMjoD,MACfukF,UAAUp2E,KAAKgZ,OAAOhnB,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,QACnDm8B,QAAQj2E,KAAK0qB,OAKnB,OAAO,IAAIk3C,oBAAUwU,UAAWH,UF+BhCpoE,OG3Ca,SAAS1L,OACD,mBAAVA,QAAsBA,MAAQ4vE,YAAQ5vE,QAEjD,IAAK,IAAI6zE,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ46E,UAAY,IAAIzzE,MAAM1Q,GAAIgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAC3F,IAAK,IAAuEyV,KAAnEovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAQ86E,SAAWF,UAAUnhE,MAAepjB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3F64B,KAAOovB,MAAMjoD,KAAOsQ,MAAMnQ,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,QAC1Dw8B,SAASt2E,KAAK0qB,MAKpB,OAAO,IAAIk3C,oBAAUwU,UAAWt8E,KAAKq8E,WHiCrCtxE,Kf6Ba,SAAS/R,MAAOM,KAC7B,IAAKN,MAGH,OAFA+R,KAAO,IAAIlC,MAAM7I,KAAKy6B,QAAStf,GAAK,EACpCnb,KAAKynC,KAAK,SAASpvC,GAAK0S,OAAOoQ,GAAK9iB,IAC7B0S,KAGT,IAAIxR,KAAOD,IAAM2/E,QAAUH,UACvBqD,QAAUn8E,KAAKq8E,SACfH,OAASl8E,KAAKo8E,QAEG,mBAAVpjF,QAAsBA,MDvFpB,SAASklC,GACtB,OAAO,WACL,OAAOA,GCqFgCua,CAASz/C,QAElD,IAAK,IAAIb,EAAI+jF,OAAOx6E,OAAQ+zB,OAAS,IAAI5sB,MAAM1Q,GAAIg7D,MAAQ,IAAItqD,MAAM1Q,GAAI86D,KAAO,IAAIpqD,MAAM1Q,GAAIgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAAG,CAC/G,IAAIoL,OAAS41D,QAAQhhE,GACjB6kC,MAAQk8B,OAAO/gE,GACf49D,YAAc/4B,MAAMt+C,OACpBqJ,KAAO/R,MAAMd,KAAKquB,OAAQA,QAAUA,OAAOqyD,SAAUz9D,EAAGghE,SACxDnD,WAAajuE,KAAKrJ,OAClB+6E,WAAatpB,MAAMh4C,GAAK,IAAItS,MAAMmwE,YAClC0D,YAAcjnD,OAAOta,GAAK,IAAItS,MAAMmwE,YAGxCz/E,KAAKgtB,OAAQy5B,MAAOy8B,WAAYC,YAFhBzpB,KAAK93C,GAAK,IAAItS,MAAMkwE,aAEoBhuE,KAAMzR,KAK9D,IAAK,IAAoB2pD,SAAUt1C,KAA1B45B,GAAK,EAAG6X,GAAK,EAAmB7X,GAAKyxC,aAAczxC,GAC1D,GAAI0b,SAAWw5B,WAAWl1C,IAAK,CAE7B,IADIA,IAAM6X,KAAIA,GAAK7X,GAAK,KACf55B,KAAO+uE,YAAYt9B,QAAUA,GAAK45B,aAC3C/1B,SAAS01B,MAAQhrE,MAAQ,MAQ/B,OAHA8nB,OAAS,IAAIqyC,oBAAUryC,OAAQ0mD,UACxBQ,OAASxpB,MAChB19B,OAAOmnD,MAAQ3pB,KACRx9B,QepEP09B,MjB7Ca,WACb,OAAO,IAAI2U,oBAAU9nE,KAAK28E,QAAU38E,KAAKo8E,QAAQn0E,IAAIwwE,QAASz4E,KAAKq8E,WiB6CnEppB,KI9Ca,WACb,OAAO,IAAI6U,oBAAU9nE,KAAK48E,OAAS58E,KAAKo8E,QAAQn0E,IAAIwwE,QAASz4E,KAAKq8E,WJ8ClEzyE,MKhDa,SAASipD,WAEtB,IAAK,IAAIgqB,QAAU78E,KAAKo8E,QAASU,QAAUjqB,UAAUupB,QAASW,GAAKF,QAAQn7E,OAAQ+zC,GAAKqnC,QAAQp7E,OAAQvJ,EAAI0L,KAAK4Q,IAAIsoE,GAAItnC,IAAKunC,OAAS,IAAIn0E,MAAMk0E,IAAK5hE,EAAI,EAAGA,EAAIhjB,IAAKgjB,EACpK,IAAK,IAAmGyV,KAA/FqsD,OAASJ,QAAQ1hE,GAAI+hE,OAASJ,QAAQ3hE,GAAI3hB,EAAIyjF,OAAOv7E,OAAQkI,MAAQozE,OAAO7hE,GAAK,IAAItS,MAAMrP,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxH64B,KAAOqsD,OAAOllF,IAAMmlF,OAAOnlF,MAC7B6R,MAAM7R,GAAK64B,MAKjB,KAAOzV,EAAI4hE,KAAM5hE,EACf6hE,OAAO7hE,GAAK0hE,QAAQ1hE,GAGtB,OAAO,IAAI2sD,oBAAUkV,OAAQh9E,KAAKq8E,WLmClCv1D,MMnDa,WAEb,IAAK,IAAIo1D,OAASl8E,KAAKo8E,QAASjhE,GAAK,EAAGhjB,EAAI+jF,OAAOx6E,SAAUyZ,EAAIhjB,GAC/D,IAAK,IAA8Dy4B,KAA1DovB,MAAQk8B,OAAO/gE,GAAIpjB,EAAIioD,MAAMt+C,OAAS,EAAGiM,KAAOqyC,MAAMjoD,KAAYA,GAAK,IAC1E64B,KAAOovB,MAAMjoD,MACX4V,MAAQA,OAASijB,KAAKmpD,aAAapsE,KAAK2zB,WAAWC,aAAa3Q,KAAMjjB,MAC1EA,KAAOijB,MAKb,OAAO5wB,MNyCPuT,KdlDa,SAASsyB,SAGtB,SAASs3C,YAAYhjF,EAAGiJ,GACtB,OAAOjJ,GAAKiJ,EAAIyiC,QAAQ1rC,EAAEy+E,SAAUx1E,EAAEw1E,WAAaz+E,GAAKiJ,EAHrDyiC,UAASA,QAAUH,gBAMxB,IAAK,IAAIw2C,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ07E,WAAa,IAAIv0E,MAAM1Q,GAAIgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAAG,CAC/F,IAAK,IAAmFyV,KAA/EovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAQ27E,UAAYD,WAAWjiE,GAAK,IAAItS,MAAMrP,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxG64B,KAAOovB,MAAMjoD,MACfslF,UAAUtlF,GAAK64B,MAGnBysD,UAAU9pE,KAAK4pE,aAGjB,OAAO,IAAIrV,oBAAUsV,WAAYp9E,KAAKq8E,UAAUv1D,ScmChD5uB,KOrDa,WACb,IAAImU,SAAWjH,UAAU,GAGzB,OAFAA,UAAU,GAAKpF,KACfqM,SAAS9E,MAAM,KAAMnC,WACdpF,MPkDPizB,MQtDa,WACb,IAAIA,MAAQ,IAAIpqB,MAAM7I,KAAKy6B,QAAS1iC,GAAK,EAEzC,OADAiI,KAAKynC,KAAK,WAAaxU,QAAQl7B,GAAKiI,OAC7BizB,ORoDPrC,KSvDa,WAEb,IAAK,IAAIsrD,OAASl8E,KAAKo8E,QAASjhE,EAAI,EAAGhjB,EAAI+jF,OAAOx6E,OAAQyZ,EAAIhjB,IAAKgjB,EACjE,IAAK,IAAI6kC,MAAQk8B,OAAO/gE,GAAIpjB,EAAI,EAAGyB,EAAIwmD,MAAMt+C,OAAQ3J,EAAIyB,IAAKzB,EAAG,CAC/D,IAAI64B,KAAOovB,MAAMjoD,GACjB,GAAI64B,KAAM,OAAOA,KAIrB,OAAO,MT+CP6J,KUxDa,WACb,IAAIA,KAAO,EAEX,OADAz6B,KAAKynC,KAAK,aAAehN,OAClBA,MVsDPmN,MWzDa,WACb,OAAQ5nC,KAAK4wB,QXyDb6W,KY1Da,SAASp7B,UAEtB,IAAK,IAAI6vE,OAASl8E,KAAKo8E,QAASjhE,EAAI,EAAGhjB,EAAI+jF,OAAOx6E,OAAQyZ,EAAIhjB,IAAKgjB,EACjE,IAAK,IAAgDyV,KAA5CovB,MAAQk8B,OAAO/gE,GAAIpjB,EAAI,EAAGyB,EAAIwmD,MAAMt+C,OAAc3J,EAAIyB,IAAKzB,GAC9D64B,KAAOovB,MAAMjoD,KAAIsU,SAASnU,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,OAI/D,OAAOhgD,MZmDPozD,KbjBa,SAAS96D,KAAMU,OAC5B,IAAIs+E,SAAWrK,cAAU30E,MAEzB,GAAI8M,UAAU1D,OAAS,EAAG,CACxB,IAAIkvB,KAAO5wB,KAAK4wB,OAChB,OAAO0mD,SAAS/F,MACV3gD,KAAK0sD,eAAehG,SAASF,MAAOE,SAAS/F,OAC7C3gD,KAAK4iC,aAAa8jB,UAG1B,OAAOt3E,KAAKynC,MAAe,MAATzuC,MACXs+E,SAAS/F,MA7ClB,SAASgM,aAAajG,UACpB,OAAO,WACLt3E,KAAKw9E,kBAAkBlG,SAASF,MAAOE,SAAS/F,SARpD,SAASkM,WAAWnlF,MAClB,OAAO,WACL0H,KAAK09E,gBAAgBplF,QAiDgD,mBAAVU,MACtDs+E,SAAS/F,MApBlB,SAASoM,eAAerG,SAAUt+E,OAChC,OAAO,WACL,IAAI0P,EAAI1P,MAAMuO,MAAMvH,KAAMoF,WACjB,MAALsD,EAAW1I,KAAKw9E,kBAAkBlG,SAASF,MAAOE,SAAS/F,OAC1DvxE,KAAK+kC,eAAeuyC,SAASF,MAAOE,SAAS/F,MAAO7oE,KAZ7D,SAASk1E,aAAatlF,KAAMU,OAC1B,OAAO,WACL,IAAI0P,EAAI1P,MAAMuO,MAAMvH,KAAMoF,WACjB,MAALsD,EAAW1I,KAAK09E,gBAAgBplF,MAC/B0H,KAAK8jC,aAAaxrC,KAAMoQ,KAyBxB4uE,SAAS/F,MAnClB,SAASsM,eAAevG,SAAUt+E,OAChC,OAAO,WACLgH,KAAK+kC,eAAeuyC,SAASF,MAAOE,SAAS/F,MAAOv4E,SARxD,SAAS8kF,aAAaxlF,KAAMU,OAC1B,OAAO,WACLgH,KAAK8jC,aAAaxrC,KAAMU,UAuC+Bs+E,SAAUt+E,SaKnE8gC,MXtCa,SAASxhC,KAAMU,MAAO+kF,UACnC,OAAO34E,UAAU1D,OAAS,EACpB1B,KAAKynC,MAAe,MAATzuC,MAtBnB,SAASglF,YAAY1lF,MACnB,OAAO,WACL0H,KAAK85B,MAAMmkD,eAAe3lF,QAqBe,mBAAVU,MAXnC,SAASklF,cAAc5lF,KAAMU,MAAO+kF,UAClC,OAAO,WACL,IAAIr1E,EAAI1P,MAAMuO,MAAMvH,KAAMoF,WACjB,MAALsD,EAAW1I,KAAK85B,MAAMmkD,eAAe3lF,MACpC0H,KAAK85B,MAAMqkD,YAAY7lF,KAAMoQ,EAAGq1E,YAVzC,SAASK,cAAc9lF,KAAMU,MAAO+kF,UAClC,OAAO,WACL/9E,KAAK85B,MAAMqkD,YAAY7lF,KAAMU,MAAO+kF,aAiBXzlF,KAAMU,MAAmB,MAAZ+kF,SAAmB,GAAKA,WAC1D1E,WAAWr5E,KAAK4wB,OAAQt4B,OWiC9BsB,SazCa,SAAStB,KAAMU,OAC5B,OAAOoM,UAAU1D,OAAS,EACpB1B,KAAKynC,MAAe,MAATzuC,MAtBnB,SAASqlF,eAAe/lF,MACtB,OAAO,kBACE0H,KAAK1H,QAqB8B,mBAAVU,MAXpC,SAASslF,iBAAiBhmF,KAAMU,OAC9B,OAAO,WACL,IAAI0P,EAAI1P,MAAMuO,MAAMvH,KAAMoF,WACjB,MAALsD,SAAkB1I,KAAK1H,MACtB0H,KAAK1H,MAAQoQ,IAVtB,SAAS61E,iBAAiBjmF,KAAMU,OAC9B,OAAO,WACLgH,KAAK1H,MAAQU,SAiBaV,KAAMU,QAC5BgH,KAAK4wB,OAAOt4B,OboClBkmF,QVDa,SAASlmF,KAAMU,OAC5B,IAAI+tD,MAAQuyB,WAAWhhF,KAAO,IAE9B,GAAI8M,UAAU1D,OAAS,EAAG,CAExB,IADA,IAAIwvB,KAAOqoD,UAAUv5E,KAAK4wB,QAAS74B,GAAK,EAAGyB,EAAIutD,MAAMrlD,SAC5C3J,EAAIyB,GAAG,IAAK03B,KAAK0oD,SAAS7yB,MAAMhvD,IAAK,OAAO,EACrD,OAAO,EAGT,OAAOiI,KAAKynC,MAAuB,mBAAVzuC,MAf3B,SAASylF,gBAAgB13B,MAAO/tD,OAC9B,OAAO,YACJA,MAAMuO,MAAMvH,KAAMoF,WAAas0E,WAAaC,eAAe35E,KAAM+mD,SAc5C/tD,MA5B1B,SAAS0lF,YAAY33B,OACnB,OAAO,WACL2yB,WAAW15E,KAAM+mD,SAIrB,SAAS43B,aAAa53B,OACpB,OAAO,WACL4yB,cAAc35E,KAAM+mD,UAsBFA,MAAO/tD,SUV3BqH,KT9Ca,SAASrH,OACtB,OAAOoM,UAAU1D,OACX1B,KAAKynC,KAAc,MAATzuC,MACN6gF,YAA+B,mBAAV7gF,MAVjC,SAAS4lF,aAAa5lF,OACpB,OAAO,WACL,IAAI0P,EAAI1P,MAAMuO,MAAMvH,KAAMoF,WAC1BpF,KAAKm8B,YAAmB,MAALzzB,EAAY,GAAKA,IATxC,SAASm2E,aAAa7lF,OACpB,OAAO,WACLgH,KAAKm8B,YAAcnjC,SAgBGA,QAClBgH,KAAK4wB,OAAOuL,aSyClB2iD,KR/Ca,SAAS9lF,OACtB,OAAOoM,UAAU1D,OACX1B,KAAKynC,KAAc,MAATzuC,MACN8gF,YAA+B,mBAAV9gF,MAVjC,SAAS+lF,aAAa/lF,OACpB,OAAO,WACL,IAAI0P,EAAI1P,MAAMuO,MAAMvH,KAAMoF,WAC1BpF,KAAKu5B,UAAiB,MAAL7wB,EAAY,GAAKA,IATtC,SAASs2E,aAAahmF,OACpB,OAAO,WACLgH,KAAKu5B,UAAYvgC,SAgBKA,QAClBgH,KAAK4wB,OAAO2I,WQ0ClBipB,MP7Da,WACb,OAAOxiD,KAAKynC,KAAK+a,cO6DjBw3B,MN9Da,WACb,OAAOh6E,KAAKynC,KAAKuyC,QM8DjBhlD,OcjEa,SAAS18B,MACtB,IAAIe,OAAyB,mBAATf,KAAsBA,KAAO++E,QAAQ/+E,MACzD,OAAO0H,KAAKkf,OAAO,WACjB,OAAOlf,KAAK6jC,YAAYxqC,OAAOkO,MAAMvH,KAAMoF,ed+D7CkuD,OL7Da,SAASh7D,KAAMyrE,QAC5B,IAAI1qE,OAAyB,mBAATf,KAAsBA,KAAO++E,QAAQ/+E,MACrD4mB,OAAmB,MAAV6kD,OAAiBmW,aAAiC,mBAAXnW,OAAwBA,OAAS8T,aAAS9T,QAC9F,OAAO/jE,KAAKkf,OAAO,WACjB,OAAOlf,KAAKuhC,aAAaloC,OAAOkO,MAAMvH,KAAMoF,WAAY8Z,OAAO3X,MAAMvH,KAAMoF,YAAc,SK0D3FsiC,OJhEa,WACb,OAAO1nC,KAAKynC,KAAKC,gBIgEjB9pB,MH9Da,SAASqhE,MACtB,OAAOj/E,KAAKkf,OAAO+/D,KAAO5E,oBAAsBF,yBG8DhD9nE,MevEa,SAASrZ,OACtB,OAAOoM,UAAU1D,OACX1B,KAAKpG,SAAS,WAAYZ,OAC1BgH,KAAK4wB,OAAOgoD,UfqElBlL,GFIa,SAASwN,SAAUliF,MAAOqiF,SACvC,IAA+CtjF,EAAyBkB,EAApEimF,UA5CN,SAASC,eAAeD,WACtB,OAAOA,UAAUxmE,OAAOpM,MAAM,SAASrE,IAAI,SAAShP,GAClD,IAAIX,KAAO,GAAIP,EAAIkB,EAAEgN,QAAQ,KAE7B,OADIlO,GAAK,IAAGO,KAAOW,EAAEmiB,MAAMrjB,EAAI,GAAIkB,EAAIA,EAAEmiB,MAAM,EAAGrjB,KAC1C8C,KAAM5B,EAAGX,KAAMA,QAwCT6mF,CAAejE,SAAW,IAAQ1hF,EAAI0lF,UAAUx9E,OAEhE,KAAI0D,UAAU1D,OAAS,GAAvB,CAcA,IAFAgsE,GAAK10E,MAAQsiF,MAAQL,SACN,MAAXI,UAAiBA,SAAU,GAC1BtjF,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGiI,KAAKynC,KAAKimC,GAAGwR,UAAUnnF,GAAIiB,MAAOqiF,UAC1D,OAAOr7E,KAdL,IAAI0tE,GAAK1tE,KAAK4wB,OAAOuqD,KACrB,GAAIzN,GAAI,IAAK,IAA0Bl1E,EAAtB2iB,EAAI,EAAGhjB,EAAIu1E,GAAGhsE,OAAWyZ,EAAIhjB,IAAKgjB,EACjD,IAAKpjB,EAAI,EAAGS,EAAIk1E,GAAGvyD,GAAIpjB,EAAIyB,IAAKzB,EAC9B,IAAKkB,EAAIimF,UAAUnnF,IAAI8C,OAASrC,EAAEqC,MAAQ5B,EAAEX,OAASE,EAAEF,KACrD,OAAOE,EAAEQ,OEXjBomF,SD5Ca,SAASvkF,KAAMgnB,QAC5B,OAAO7hB,KAAKynC,MAAwB,mBAAX5lB,OAP3B,SAASw9D,iBAAiBxkF,KAAMgnB,QAC9B,OAAO,WACL,OAAO85D,cAAc37E,KAAMnF,KAAMgnB,OAAOta,MAAMvH,KAAMoF,cARxD,SAASk6E,iBAAiBzkF,KAAMgnB,QAC9B,OAAO,WACL,OAAO85D,cAAc37E,KAAMnF,KAAMgnB,WAaXhnB,KAAMgnB,WC4CjBgxC,sCgB1EA0sB,WAAA,SAAS1H,UACtB,MAA2B,iBAAbA,SACR,IAAI/P,sBAAYzvC,SAASy/C,cAAcD,aAAcx/C,SAASyjB,kBAC9D,IAAIgsB,sBAAY+P,WAAYxgF,iBCLhCmoF,OAAS,EAMb,SAASC,QACPz/E,KAAKmhB,EAAI,OAASq+D,QAAQl9E,SAAS,IAGrCm9E,MAAM5lF,UARS,SAAS03E,QACtB,OAAO,IAAIkO,OAOW5lF,WACtBgsB,YAAa45D,MACb7mF,IAAK,SAAAA,IAASg4B,MAEZ,IADA,IAAIiI,GAAK74B,KAAKmhB,IACL0X,MAAMjI,OAAO,KAAMA,KAAOA,KAAK0Q,YAAa,OACrD,OAAO1Q,KAAKiI,KAEdrmB,IAAK,SAAAA,IAASoe,KAAM53B,OAClB,OAAO43B,KAAK5wB,KAAKmhB,GAAKnoB,OAExB0uC,OAAQ,SAAAA,OAAS9W,MACf,OAAO5wB,KAAKmhB,KAAKyP,aAAeA,KAAK5wB,KAAKmhB,IAE5C7e,SAAU,SAAAA,WACR,OAAOtC,KAAKmhB,ICtBD,IAAAu6D,YAAA,WAEb,IADA,IAAqBh3D,OAAjBg7D,QAAUnF,SACP71D,OAASg7D,QAAQhE,aAAagE,QAAUh7D,OAC/C,OAAOg7D,SCLMC,UAAA,SAAS/uD,KAAM2pD,OAC5B,IAAI91C,IAAM7T,KAAKgvD,iBAAmBhvD,KAElC,GAAI6T,IAAIo7C,eAAgB,CACtB,IAAIlnB,MAAQl0B,IAAIo7C,iBAGhB,OAFAlnB,MAAMz6B,EAAIq8C,MAAMuF,QAASnnB,MAAMn1D,EAAI+2E,MAAMwF,UACzCpnB,MAAQA,MAAMqnB,gBAAgBpvD,KAAKqvD,eAAeC,YACpChiD,EAAGy6B,MAAMn1D,GAGzB,IAAIyyD,KAAOrlC,KAAKuvD,wBAChB,OAAQ5F,MAAMuF,QAAU7pB,KAAKlwB,KAAOnV,KAAKwvD,WAAY7F,MAAMwF,QAAU9pB,KAAKxzB,IAAM7R,KAAKyvD,YCRxEC,MAAA,SAAS1vD,MACtB,IAAI2pD,MAAQmB,cAEZ,OADInB,MAAMgG,iBAAgBhG,MAAQA,MAAMgG,eAAe,IAChD5nB,UAAM/nC,KAAM2pD,QCHNiG,UAAA,SAAS5vD,KAAM6vD,QAASC,YACjCt7E,UAAU1D,OAAS,IAAGg/E,WAAaD,QAASA,QAAU/E,cAAc6E,gBAExE,IAAK,IAA6CI,MAAzC5oF,EAAI,EAAGyB,EAAIinF,QAAUA,QAAQ/+E,OAAS,EAAU3J,EAAIyB,IAAKzB,EAChE,IAAK4oF,MAAQF,QAAQ1oF,IAAI2oF,aAAeA,WACtC,OAAO/nB,UAAM/nC,KAAM+vD,OAIvB,OAAO,MCZLzlB,eAAQliE,MAAO,SAAAA,WAEnB,SAASomF,oBACP,IAAK,IAAyCnmF,EAArClB,EAAI,EAAGyB,EAAI4L,UAAU1D,OAAQyf,KAAWppB,EAAIyB,IAAKzB,EAAG,CAC3D,KAAMkB,EAAImM,UAAUrN,GAAK,KAAQkB,KAAKkoB,EAAI,MAAM,IAAIpR,MAAM,iBAAmB9W,GAC7EkoB,EAAEloB,MAEJ,OAAO,IAAI2nF,SAASz/D,GAGtB,SAASy/D,SAASz/D,GAChBnhB,KAAKmhB,EAAIA,EAqDX,SAASvoB,aAAIiC,KAAMvC,MACjB,IAAK,IAA4BF,EAAxBL,EAAI,EAAGyB,EAAIqB,KAAK6G,OAAW3J,EAAIyB,IAAKzB,EAC3C,IAAKK,EAAIyC,KAAK9C,IAAIO,OAASA,KACzB,OAAOF,EAAEY,MAKf,SAASwZ,aAAI3X,KAAMvC,KAAM+T,UACvB,IAAK,IAAItU,EAAI,EAAGyB,EAAIqB,KAAK6G,OAAQ3J,EAAIyB,IAAKzB,EACxC,GAAI8C,KAAK9C,GAAGO,OAASA,KAAM,CACzBuC,KAAK9C,GAAKmjE,cAAMrgE,KAAOA,KAAKugB,MAAM,EAAGrjB,GAAG4jB,OAAO9gB,KAAKugB,MAAMrjB,EAAI,IAC9D,MAIJ,OADgB,MAAZsU,UAAkBxR,KAAKqL,MAAM5N,KAAMA,KAAMU,MAAOqT,WAC7CxR,KAzDT+lF,SAAS/mF,UAAYulF,kBAASvlF,WAC5BgsB,YAAa+6D,SACblT,GAAI,SAAAA,GAASwN,SAAU7uE,UACrB,IAEIpT,EAFAkoB,EAAInhB,KAAKmhB,EACT0/D,EAbR,SAAS1B,wBAAeD,UAAW4B,OACjC,OAAO5B,UAAUxmE,OAAOpM,MAAM,SAASrE,IAAI,SAAShP,GAClD,IAAIX,KAAO,GAAIP,EAAIkB,EAAEgN,QAAQ,KAE7B,GADIlO,GAAK,IAAGO,KAAOW,EAAEmiB,MAAMrjB,EAAI,GAAIkB,EAAIA,EAAEmiB,MAAM,EAAGrjB,IAC9CkB,IAAM6nF,MAAMhnF,eAAeb,GAAI,MAAM,IAAI8W,MAAM,iBAAmB9W,GACtE,OAAQ4B,KAAM5B,EAAGX,KAAMA,QAQf6mF,CAAejE,SAAW,GAAI/5D,GAElCppB,GAAK,EACLyB,EAAIqnF,EAAEn/E,OAGV,KAAI0D,UAAU1D,OAAS,GAAvB,CAOA,GAAgB,MAAZ2K,UAAwC,mBAAbA,SAAyB,MAAM,IAAI0D,MAAM,qBAAuB1D,UAC/F,OAAStU,EAAIyB,GACX,GAAIP,GAAKiiF,SAAW2F,EAAE9oF,IAAI8C,KAAMsmB,EAAEloB,GAAKuZ,aAAI2O,EAAEloB,GAAIiiF,SAAS5iF,KAAM+T,eAC3D,GAAgB,MAAZA,SAAkB,IAAKpT,KAAKkoB,EAAGA,EAAEloB,GAAKuZ,aAAI2O,EAAEloB,GAAIiiF,SAAS5iF,KAAM,MAG1E,OAAO0H,KAZL,OAASjI,EAAIyB,GAAG,IAAKP,GAAKiiF,SAAW2F,EAAE9oF,IAAI8C,QAAU5B,EAAIL,aAAIuoB,EAAEloB,GAAIiiF,SAAS5iF,OAAQ,OAAOW,GAc/FiwC,KAAM,SAAAA,OACJ,IAAIA,QAAW/nB,EAAInhB,KAAKmhB,EACxB,IAAK,IAAIloB,KAAKkoB,EAAG+nB,KAAKjwC,GAAKkoB,EAAEloB,GAAGmiB,QAChC,OAAO,IAAIwlE,SAAS13C,OAEtBhxC,KAAM,SAAAA,KAAS2C,KAAMsgE,MACnB,IAAK3hE,EAAI4L,UAAU1D,OAAS,GAAK,EAAG,IAAK,IAAgClI,EAAGP,EAA/B+N,KAAO,IAAI6B,MAAMrP,GAAIzB,EAAI,EAASA,EAAIyB,IAAKzB,EAAGiP,KAAKjP,GAAKqN,UAAUrN,EAAI,GACnH,IAAKiI,KAAKmhB,EAAErnB,eAAee,MAAO,MAAM,IAAIkV,MAAM,iBAAmBlV,MACrE,IAAuB9C,EAAI,EAAGyB,GAAzBP,EAAI+G,KAAKmhB,EAAEtmB,OAAoB6G,OAAQ3J,EAAIyB,IAAKzB,EAAGkB,EAAElB,GAAGiB,MAAMuO,MAAM4zD,KAAMn0D,OAEjFO,MAAO,SAAAA,MAAS1M,KAAMsgE,KAAMn0D,MAC1B,IAAKhH,KAAKmhB,EAAErnB,eAAee,MAAO,MAAM,IAAIkV,MAAM,iBAAmBlV,MACrE,IAAK,IAAI5B,EAAI+G,KAAKmhB,EAAEtmB,MAAO9C,EAAI,EAAGyB,EAAIP,EAAEyI,OAAQ3J,EAAIyB,IAAKzB,EAAGkB,EAAElB,GAAGiB,MAAMuO,MAAM4zD,KAAMn0D,QAuBxEo4E,mCCjFR,SAAS2B,gBACdxG,SAAMyG,2BAGO,IAAAC,QAAA,WACb1G,SAAM2G,iBACN3G,SAAMyG,4BCLOG,OAAA,SAASC,MACtB,IAAI/pF,KAAO+pF,KAAK/oD,SAASyjB,gBACrB+W,UAAY3zC,WAAOkiE,MAAM1T,GAAG,iBAAkBuT,SAAS,GACvD,kBAAmB5pF,KACrBw7D,UAAU6a,GAAG,mBAAoBuT,SAAS,IAE1C5pF,KAAKgqF,WAAahqF,KAAKyiC,MAAMwnD,cAC7BjqF,KAAKyiC,MAAMwnD,cAAgB,SCVhB,IAAAC,qBAAA,SAASrjD,GACtB,OAAO,WACL,OAAOA,ICFI,SAASsjD,UAAU9jC,OAAQ7iD,KAAM4mF,QAAS5oD,GAAI6oD,OAAQxjD,EAAG16B,EAAGqyD,GAAIC,GAAIspB,UACjFp/E,KAAK09C,OAASA,OACd19C,KAAKnF,KAAOA,KACZmF,KAAKyhF,QAAUA,QACfzhF,KAAK0gF,WAAa7nD,GAClB74B,KAAK0hF,OAASA,OACd1hF,KAAKk+B,EAAIA,EACTl+B,KAAKwD,EAAIA,EACTxD,KAAK61D,GAAKA,GACV71D,KAAK81D,GAAKA,GACV91D,KAAKmhB,EAAIi+D,SCFX,SAASuC,gBACP,OAAQpH,SAAMqH,OAGhB,SAASC,mBACP,OAAO7hF,KAAKshC,WAGd,SAASwgD,eAAezpF,GACtB,OAAY,MAALA,GAAa6lC,EAAGq8C,SAAMr8C,EAAG16B,EAAG+2E,SAAM/2E,GAAKnL,EAGhD,SAAS0pF,mBACP,MAAO,iBAAkB/hF,KDR3BwhF,UAAU3nF,UAAU6zE,GAAK,WACvB,IAAI10E,MAAQgH,KAAKmhB,EAAEusD,GAAGnmE,MAAMvH,KAAKmhB,EAAG/b,WACpC,OAAOpM,QAAUgH,KAAKmhB,EAAInhB,KAAOhH,OCSpB,IAAAgpF,SAAA,WACb,IAOIC,WACAC,WACAC,YACAC,YAVAruE,OAAS4tE,cACT7oD,UAAY+oD,iBACZJ,QAAUK,eACVO,UAAYN,iBACZO,YACA9xD,UAAY4uD,aAAS,QAAS,OAAQ,OACtCsC,OAAS,EAKTa,eAAiB,EAErB,SAASC,KAAK3vB,WACZA,UACK6a,GAAG,iBAAkB+U,aACvB1uE,OAAOsuE,WACL3U,GAAG,kBAAmBgV,cACtBhV,GAAG,iBAAkBiV,YACrBjV,GAAG,iCAAkCkV,YACrC9oD,MAAM,eAAgB,QACtBA,MAAM,8BAA+B,iBAG5C,SAAS2oD,cACP,IAAIL,aAAgBruE,OAAOxM,MAAMvH,KAAMoF,WAAvC,CACA,IAAIy9E,QAAUC,YAAY,QAAShqD,UAAUvxB,MAAMvH,KAAMoF,WAAYk7E,MAAOtgF,KAAMoF,WAC7Ey9E,UACL3jE,WAAOq7D,SAAM6G,MAAM1T,GAAG,iBAAkBqV,YAAY,GAAMrV,GAAG,eAAgBsV,YAAY,GACzF7B,OAAO5G,SAAM6G,MACbL,gBACAoB,aAAc,EACdF,WAAa1H,SAAMuF,QACnBoC,WAAa3H,SAAMwF,QACnB8C,QAAQ,WAGV,SAASE,aAEP,GADA9B,WACKkB,YAAa,CAChB,IAAItsB,GAAK0kB,SAAMuF,QAAUmC,WAAYnsB,GAAKykB,SAAMwF,QAAUmC,WAC1DC,YAActsB,GAAKA,GAAKC,GAAKA,GAAKysB,eAEpCD,SAAShC,MAAM,QAGjB,SAAS0C,aACP9jE,WAAOq7D,SAAM6G,MAAM1T,GAAG,8BAA+B,MH1DlD,SAASuV,QAAQ7B,KAAM8B,SAC5B,IAAI7rF,KAAO+pF,KAAK/oD,SAASyjB,gBACrB+W,UAAY3zC,WAAOkiE,MAAM1T,GAAG,iBAAkB,MAC9CwV,UACFrwB,UAAU6a,GAAG,aAAcuT,SAAS,GACpCnxD,WAAW,WAAa+iC,UAAU6a,GAAG,aAAc,OAAU,IAE3D,kBAAmBr2E,KACrBw7D,UAAU6a,GAAG,mBAAoB,OAEjCr2E,KAAKyiC,MAAMwnD,cAAgBjqF,KAAKgqF,kBACzBhqF,KAAKgqF,YGgDZ4B,CAAQ1I,SAAM6G,KAAMe,aACpBlB,UACAqB,SAAShC,MAAM,OAGjB,SAASoC,eACP,GAAK3uE,OAAOxM,MAAMvH,KAAMoF,WAAxB,CACA,IAEwBrN,EAAG8qF,QAFvBpC,QAAUlG,SAAMgG,eAChBnoF,EAAI0gC,UAAUvxB,MAAMvH,KAAMoF,WAC1B5L,EAAIinF,QAAQ/+E,OAEhB,IAAK3J,EAAI,EAAGA,EAAIyB,IAAKzB,GACf8qF,QAAUC,YAAYrC,QAAQ1oF,GAAG2oF,WAAYtoF,EAAGuoF,UAAO3gF,KAAMoF,cAC/D27E,gBACA8B,QAAQ,WAKd,SAASF,aACP,IACwB5qF,EAAG8qF,QADvBpC,QAAUlG,SAAMgG,eAChB/mF,EAAIinF,QAAQ/+E,OAEhB,IAAK3J,EAAI,EAAGA,EAAIyB,IAAKzB,GACf8qF,QAAUP,SAAS7B,QAAQ1oF,GAAG2oF,eAChCO,UACA4B,QAAQ,SAKd,SAASD,aACP,IACwB7qF,EAAG8qF,QADvBpC,QAAUlG,SAAMgG,eAChB/mF,EAAIinF,QAAQ/+E,OAIhB,IAFI0gF,aAAae,aAAaf,aAC9BA,YAActyD,WAAW,WAAasyD,YAAc,MAAS,KACxDrqF,EAAI,EAAGA,EAAIyB,IAAKzB,GACf8qF,QAAUP,SAAS7B,QAAQ1oF,GAAG2oF,eAChCK,gBACA8B,QAAQ,QAKd,SAASC,YAAYjqD,GAAIC,UAAW6/B,MAAOwC,KAAMn0D,MAC/C,IAA8BhN,EAAG67D,GAAIC,GAAjC/7D,EAAI4+D,MAAM7/B,UAAWD,IACrBuqD,aAAe5yD,UAAU0Y,OAE7B,GAAKuyC,YAAY,IAAI+F,UAAUgB,KAAM,cAAexoF,EAAG6+B,GAAI6oD,OAAQ3nF,EAAE,GAAIA,EAAE,GAAI,EAAG,EAAGqpF,cAAe,WAClG,OAAuD,OAAlD7I,SAAMkH,QAAUznF,EAAIynF,QAAQl6E,MAAM4zD,KAAMn0D,SAC7C6uD,GAAK77D,EAAEkkC,EAAInkC,EAAE,IAAM,EACnB+7D,GAAK97D,EAAEwJ,EAAIzJ,EAAE,IAAM,GACZ,KAGT,OAAO,SAAS8oF,QAAQhoF,MACtB,IAAYrB,EAARu7E,GAAKh7E,EACT,OAAQc,MACN,IAAK,QAASynF,SAASzpD,IAAMgqD,QAASrpF,EAAIkoF,SAAU,MACpD,IAAK,aAAcY,SAASzpD,MAAO6oD,OACnC,IAAK,OAAQ3nF,EAAI4+D,MAAM7/B,UAAWD,IAAKr/B,EAAIkoF,OAE7CjG,YAAY,IAAI+F,UAAUgB,KAAM3nF,KAAMb,EAAG6+B,GAAIr/B,EAAGO,EAAE,GAAK87D,GAAI97D,EAAE,GAAK+7D,GAAI/7D,EAAE,GAAKg7E,GAAG,GAAIh7E,EAAE,GAAKg7E,GAAG,GAAIqO,cAAeA,aAAa77E,MAAO67E,cAAevoF,KAAMsgE,KAAMn0D,QA6BpK,OAzBAw7E,KAAKzuE,OAAS,SAASoN,GACrB,OAAO/b,UAAU1D,QAAUqS,OAAsB,mBAANoN,EAAmBA,EAAIs3B,uBAAWt3B,GAAIqhE,MAAQzuE,QAG3FyuE,KAAK1pD,UAAY,SAAS3X,GACxB,OAAO/b,UAAU1D,QAAUo3B,UAAyB,mBAAN3X,EAAmBA,EAAIs3B,qBAASt3B,GAAIqhE,MAAQ1pD,WAG5F0pD,KAAKf,QAAU,SAAStgE,GACtB,OAAO/b,UAAU1D,QAAU+/E,QAAuB,mBAANtgE,EAAmBA,EAAIs3B,qBAASt3B,GAAIqhE,MAAQf,SAG1Fe,KAAKH,UAAY,SAASlhE,GACxB,OAAO/b,UAAU1D,QAAU2gF,UAAyB,mBAANlhE,EAAmBA,EAAIs3B,uBAAWt3B,GAAIqhE,MAAQH,WAG9FG,KAAK9U,GAAK,WACR,IAAI10E,MAAQw3B,UAAUk9C,GAAGnmE,MAAMipB,UAAWprB,WAC1C,OAAOpM,QAAUw3B,UAAYgyD,KAAOxpF,OAGtCwpF,KAAKa,cAAgB,SAASliE,GAC5B,OAAO/b,UAAU1D,QAAU6gF,gBAAkBphE,GAAKA,GAAKA,EAAGqhE,MAAQ3+E,KAAK8Q,KAAK4tE,iBAGvEC,mSCrKT,IAIIc,SACAC,SALAC,YAAQ,EACRC,QAAU,EACV9hC,eAAW,EACX+hC,UAAY,IAGZC,UAAY,EACZC,SAAW,EACXC,UAAY,EACZC,MAA+B,YAAvB,oBAAOC,YAAP,YAAAC,aAAOD,eAA4BA,YAAYE,IAAMF,YAAcnkF,KAC3EskF,SAA6B,YAAlB,oBAAOvsF,OAAP,YAAAqsF,aAAOrsF,UAAuBA,OAAO83B,sBAAwB93B,OAAO83B,sBAAsBl2B,KAAK5B,QAAU,SAASmjB,GAAKgV,WAAWhV,EAAG,KAE7I,SAASmpE,MACd,OAAOL,WAAaM,SAASC,UAAWP,SAAWE,MAAMG,MAAQJ,WAGnE,SAASM,WACPP,SAAW,EAGN,SAASQ,QACdpkF,KAAKqkF,MACLrkF,KAAKskF,MACLtkF,KAAK24E,MAAQ,KA0BR,SAAS4L,YAAMl4E,SAAUm4E,MAAO94B,MACrC,IAAIzyD,EAAI,IAAImrF,MAEZ,OADAnrF,EAAEwrF,QAAQp4E,SAAUm4E,MAAO94B,MACpBzyD,EAcT,SAASyrF,OACPd,UAAYD,UAAYG,MAAMG,OAASJ,UACvCL,YAAQC,QAAU,EAClB,KAdK,SAASkB,aACdV,QACET,YAEF,IADA,IAAkBvpF,EAAdhB,EAAIqqF,SACDrqF,IACAgB,EAAI2pF,SAAW3qF,EAAEqrF,QAAU,GAAGrrF,EAAEorF,MAAMnsF,KAAK,KAAM+B,GACtDhB,EAAIA,EAAE0/E,QAEN6K,YAOAmB,GADF,QAGEnB,YAAQ,EAWZ,SAASoB,MACP,IAAIxuC,GAAmBE,GAAfD,GAAKitC,SAAc53B,KAAOzK,IAClC,KAAO5K,IACDA,GAAGguC,OACD34B,KAAOrV,GAAGiuC,QAAO54B,KAAOrV,GAAGiuC,OAC/BluC,GAAKC,GAAIA,GAAKA,GAAGsiC,QAEjBriC,GAAKD,GAAGsiC,MAAOtiC,GAAGsiC,MAAQ,KAC1BtiC,GAAKD,GAAKA,GAAGuiC,MAAQriC,GAAKgtC,SAAWhtC,IAGzCitC,SAAWntC,GACXyuC,MAAMn5B,MAtBJk5B,GACAhB,SAAW,GAIf,SAASkB,OACP,IAAIb,IAAMH,MAAMG,MAAOO,MAAQP,IAAMN,UACjCa,MAAQd,YAAWG,WAAaW,MAAOb,UAAYM,KAkBzD,SAASY,MAAMn5B,MACT83B,cACAC,UAASA,QAAUN,aAAaM,UACxB/3B,KAAOk4B,SACP,IACNl4B,KAAOzK,MAAUwiC,QAAU3zD,WAAW40D,KAAMh5B,KAAOo4B,MAAMG,MAAQJ,YACjEliC,iBAAUA,eAAWojC,cAAcpjC,mBAElCA,iBAAUgiC,UAAYG,MAAMG,MAAOtiC,eAAWqjC,YAAYF,KAAMpB,YACrEF,YAAQ,EAAGU,SAASQ,QAjFxBN,MAAMvqF,UAAY0qF,YAAM1qF,WACtBgsB,YAAau+D,MACbK,QAAS,SAAAA,QAASp4E,SAAUm4E,MAAO94B,MACjC,GAAwB,mBAAbr/C,SAAyB,MAAM,IAAIyB,UAAU,8BACxD49C,MAAgB,MAARA,KAAeu4B,OAASv4B,OAAkB,MAAT84B,MAAgB,GAAKA,OACzDxkF,KAAK24E,OAAS4K,WAAavjF,OAC1BujF,SAAUA,SAAS5K,MAAQ34E,KAC1BsjF,SAAWtjF,KAChBujF,SAAWvjF,MAEbA,KAAKqkF,MAAQh4E,SACbrM,KAAKskF,MAAQ54B,KACbm5B,SAEFv+C,KAAM,SAAAA,OACAtmC,KAAKqkF,QACPrkF,KAAKqkF,MAAQ,KACbrkF,KAAKskF,MAAQrjC,IACb4jC,WC1CS,IAAAI,YAAA,SAAS54E,SAAUm4E,MAAO94B,MACvC,IAAIzyD,EAAI,IAAImrF,MAMZ,OALAI,MAAiB,MAATA,MAAgB,GAAKA,MAC7BvrF,EAAEwrF,QAAQ,SAASS,SACjBjsF,EAAEqtC,OACFj6B,SAAS64E,QAAUV,QAClBA,MAAO94B,MACHzyD,GCNLksF,QAAU/F,aAAS,QAAS,MAAO,aACnCgG,cAEOC,QAAU,EACVC,UAAY,EACZC,SAAW,EACXC,QAAU,EACVC,QAAU,EACVC,OAAS,EACTC,MAAQ,EAEJC,oBAAA,SAASh1D,KAAMt4B,KAAMugC,GAAI52B,MAAO+9C,MAAO6lC,QACpD,IAAIC,UAAYl1D,KAAKm1D,aACrB,GAAKD,WACA,GAAIjtD,MAAMitD,UAAW,YADVl1D,KAAKm1D,iBAmCvB,SAAS1sF,gBAAOu3B,KAAMiI,GAAImtD,MACxB,IACIC,MADAH,UAAYl1D,KAAKm1D,aAgBrB,SAAStoF,MAAMynF,SACb,IAAIntF,EAAGojB,EAAG3hB,EAAGhB,EAGb,GAAIwtF,KAAKE,QAAUZ,UAAW,OAAOh/C,OAErC,IAAKvuC,KAAK+tF,UAER,IADAttF,EAAIstF,UAAU/tF,IACRO,OAAS0tF,KAAK1tF,KAApB,CAKA,GAAIE,EAAE0tF,QAAUV,QAAS,OAAO/B,YAAQhmF,OAIpCjF,EAAE0tF,QAAUT,SACdjtF,EAAE0tF,MAAQP,MACVntF,EAAE+rF,MAAMj+C,OACR9tC,EAAEk1E,GAAGx1E,KAAK,YAAa04B,KAAMA,KAAKgoD,SAAUpgF,EAAEyJ,MAAOzJ,EAAEwnD,cAChD8lC,UAAU/tF,KAMTA,EAAI8gC,KACZrgC,EAAE0tF,MAAQP,MACVntF,EAAE+rF,MAAMj+C,cACDw/C,UAAU/tF,IAoBrB,GAZA0rF,YAAQ,WACFuC,KAAKE,QAAUV,UACjBQ,KAAKE,MAAQT,QACbO,KAAKzB,MAAME,QAAQ1xB,KAAMizB,KAAKxB,MAAOwB,KAAKt6B,MAC1CqH,KAAKmyB,YAMTc,KAAKE,MAAQX,SACbS,KAAKtY,GAAGx1E,KAAK,QAAS04B,KAAMA,KAAKgoD,SAAUoN,KAAK/jF,MAAO+jF,KAAKhmC,OACxDgmC,KAAKE,QAAUX,SAAnB,CAKA,IAJAS,KAAKE,MAAQV,QAGbS,MAAQ,IAAIp9E,MAAMrP,EAAIwsF,KAAKC,MAAMvkF,QAC5B3J,EAAI,EAAGojB,GAAK,EAAGpjB,EAAIyB,IAAKzB,GACvBS,EAAIwtF,KAAKC,MAAMluF,GAAGiB,MAAMd,KAAK04B,KAAMA,KAAKgoD,SAAUoN,KAAK/jF,MAAO+jF,KAAKhmC,UACrEimC,QAAQ9qE,GAAK3iB,GAGjBytF,MAAMvkF,OAASyZ,EAAI,GAGrB,SAAS43C,KAAKmyB,SAKZ,IAJA,IAAIjsF,EAAIisF,QAAUc,KAAKG,SAAWH,KAAKI,KAAKluF,KAAK,KAAMgtF,QAAUc,KAAKG,WAAaH,KAAKzB,MAAME,QAAQn+C,MAAO0/C,KAAKE,MAAQR,OAAQ,GAC9H3tF,GAAK,EACLyB,EAAIysF,MAAMvkF,SAEL3J,EAAIyB,GACXysF,MAAMluF,GAAGG,KAAK,KAAMe,GAIlB+sF,KAAKE,QAAUR,SACjBM,KAAKtY,GAAGx1E,KAAK,MAAO04B,KAAMA,KAAKgoD,SAAUoN,KAAK/jF,MAAO+jF,KAAKhmC,OAC1D1Z,QAIJ,SAASA,OAIP,IAAK,IAAIvuC,KAHTiuF,KAAKE,MAAQP,MACbK,KAAKzB,MAAMj+C,cACJw/C,UAAUjtD,IACHitD,UAAW,cAClBl1D,KAAKm1D,aA/FdD,UAAUjtD,IAAMmtD,KAChBA,KAAKzB,MAAQA,YAEb,SAAS8B,SAASnB,SAChBc,KAAKE,MAAQZ,UACbU,KAAKzB,MAAME,QAAQhnF,MAAOuoF,KAAKxB,MAAOwB,KAAKt6B,MAGvCs6B,KAAKxB,OAASU,SAASznF,MAAMynF,QAAUc,KAAKxB,QAPrB,EAAGwB,KAAKt6B,MAxCrCryD,CAAOu3B,KAAMiI,IACXvgC,KAAMA,KACN2J,MAAOA,MACP+9C,MAAOA,MACP0tB,GAAIyX,QACJc,MAAOb,WACP15B,KAAMm6B,OAAOn6B,KACb84B,MAAOqB,OAAOrB,MACd2B,SAAUN,OAAOM,SACjBC,KAAMP,OAAOO,KACb7B,MAAO,KACP2B,MAAOb,WAIJ,SAASltD,KAAKvH,KAAMiI,IACzB,IAAIwtD,SAAWztF,aAAIg4B,KAAMiI,IACzB,GAAIwtD,SAASH,MAAQb,QAAS,MAAM,IAAIt1E,MAAM,+BAC9C,OAAOs2E,SAGF,SAAS7zE,aAAIoe,KAAMiI,IACxB,IAAIwtD,SAAWztF,aAAIg4B,KAAMiI,IACzB,GAAIwtD,SAASH,MAAQX,SAAU,MAAM,IAAIx1E,MAAM,6BAC/C,OAAOs2E,SAGF,SAASztF,aAAIg4B,KAAMiI,IACxB,IAAIwtD,SAAWz1D,KAAKm1D,aACpB,IAAKM,YAAcA,SAAWA,SAASxtD,KAAM,MAAM,IAAI9oB,MAAM,wBAC7D,OAAOs2E,SCqBF,SAASC,WAAW/yB,WAAYj7D,KAAMU,OAC3C,IAAI6/B,GAAK06B,WAAWgzB,IAOpB,OALAhzB,WAAW9rB,KAAK,WACd,IAAI4+C,SAAW7zE,aAAIxS,KAAM64B,KACxBwtD,SAASrtF,QAAUqtF,SAASrtF,WAAaV,MAAQU,MAAMuO,MAAMvH,KAAMoF,aAG/D,SAASwrB,MACd,OAAOh4B,aAAIg4B,KAAMiI,IAAI7/B,MAAMV,OC3EhB,IAAAkuF,uBAAA,SAASrsF,EAAGiJ,GACzB,IAAIhL,EACJ,OAAqB,iBAANgL,EAAiBitE,WAC1BjtE,aAAasxC,YAAQ+xC,SACpBruF,EAAIs8C,YAAMtxC,KAAOA,EAAIhL,EAAGquF,SACzBC,YAAmBvsF,EAAGiJ,ICAf,ICNX0kE,+BAAYjV,cAAUh5D,UAAUgsB,YCarB,ICIXgT,cAAK,EAEF,SAAS8tD,WAAWzK,OAAQC,QAAS7jF,KAAMugC,IAChD74B,KAAKo8E,QAAUF,OACfl8E,KAAKq8E,SAAWF,QAChBn8E,KAAK4mF,MAAQtuF,KACb0H,KAAKumF,IAAM1tD,GAON,SAASguD,QACd,QAAShuD,cAGX,IAAIiuD,oBAAsBj0B,cAAUh5D,UAEpC8sF,WAAW9sF,UAVI,SAAS05D,0BAAWj7D,MACjC,OAAOu6D,gBAAYU,WAAWj7D,OASEuB,WAChCgsB,YAAa8gE,WACbznE,OCpCa,SAASA,QACtB,IAAI5mB,KAAO0H,KAAK4mF,MACZ/tD,GAAK74B,KAAKumF,IAEQ,mBAAXrnE,SAAuBA,OAAS24D,aAAS34D,SAEpD,IAAK,IAAIg9D,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ46E,UAAY,IAAIzzE,MAAM1Q,GAAIgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAC3F,IAAK,IAAiFyV,KAAM2rD,QAAnFv8B,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAQ86E,SAAWF,UAAUnhE,GAAK,IAAItS,MAAMrP,GAAmBzB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9G64B,KAAOovB,MAAMjoD,MAAQwkF,QAAUr9D,OAAOhnB,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,UAClE,aAAcpvB,OAAM2rD,QAAQ3D,SAAWhoD,KAAKgoD,UAChD4D,SAASzkF,GAAKwkF,QACd8J,oBAAS7J,SAASzkF,GAAIO,KAAMugC,GAAI9gC,EAAGykF,SAAU5jF,aAAIg4B,KAAMiI,MAK7D,OAAO,IAAI8tD,WAAWrK,UAAWt8E,KAAKq8E,SAAU/jF,KAAMugC,KDqBtDi6B,UErCa,SAAS5zC,QACtB,IAAI5mB,KAAO0H,KAAK4mF,MACZ/tD,GAAK74B,KAAKumF,IAEQ,mBAAXrnE,SAAuBA,OAAS64D,YAAY74D,SAEvD,IAAK,IAAIg9D,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ46E,aAAgBH,WAAchhE,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAC/F,IAAK,IAAyCyV,KAArCovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAc3J,EAAI,EAAGA,EAAIyB,IAAKzB,EAClE,GAAI64B,KAAOovB,MAAMjoD,GAAI,CACnB,IAAK,IAA2DuqB,MAAvDuV,SAAW3Y,OAAOhnB,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,OAAe+mC,QAAUnuF,aAAIg4B,KAAMiI,IAAK+P,EAAI,EAAG5wC,EAAI6/B,SAASn2B,OAAQknC,EAAI5wC,IAAK4wC,GAC/HtmB,MAAQuV,SAAS+Q,KACnBy9C,oBAAS/jE,MAAOhqB,KAAMugC,GAAI+P,EAAG/Q,SAAUkvD,SAG3CzK,UAAUp2E,KAAK2xB,UACfskD,QAAQj2E,KAAK0qB,MAKnB,OAAO,IAAI+1D,WAAWrK,UAAWH,QAAS7jF,KAAMugC,KFkBhD9kB,OGvCa,SAAS1L,OACD,mBAAVA,QAAsBA,MAAQ4vE,YAAQ5vE,QAEjD,IAAK,IAAI6zE,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQ46E,UAAY,IAAIzzE,MAAM1Q,GAAIgjB,EAAI,EAAGA,EAAIhjB,IAAKgjB,EAC3F,IAAK,IAAuEyV,KAAnEovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAQ86E,SAAWF,UAAUnhE,MAAepjB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3F64B,KAAOovB,MAAMjoD,KAAOsQ,MAAMnQ,KAAK04B,KAAMA,KAAKgoD,SAAU7gF,EAAGioD,QAC1Dw8B,SAASt2E,KAAK0qB,MAKpB,OAAO,IAAI+1D,WAAWrK,UAAWt8E,KAAKq8E,SAAUr8E,KAAK4mF,MAAO5mF,KAAKumF,MH6BjE38E,MIzCa,SAAS2pD,YACtB,GAAIA,WAAWgzB,MAAQvmF,KAAKumF,IAAK,MAAM,IAAIx2E,MAE3C,IAAK,IAAI8sE,QAAU78E,KAAKo8E,QAASU,QAAUvpB,WAAW6oB,QAASW,GAAKF,QAAQn7E,OAAQ+zC,GAAKqnC,QAAQp7E,OAAQvJ,EAAI0L,KAAK4Q,IAAIsoE,GAAItnC,IAAKunC,OAAS,IAAIn0E,MAAMk0E,IAAK5hE,EAAI,EAAGA,EAAIhjB,IAAKgjB,EACrK,IAAK,IAAmGyV,KAA/FqsD,OAASJ,QAAQ1hE,GAAI+hE,OAASJ,QAAQ3hE,GAAI3hB,EAAIyjF,OAAOv7E,OAAQkI,MAAQozE,OAAO7hE,GAAK,IAAItS,MAAMrP,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxH64B,KAAOqsD,OAAOllF,IAAMmlF,OAAOnlF,MAC7B6R,MAAM7R,GAAK64B,MAKjB,KAAOzV,EAAI4hE,KAAM5hE,EACf6hE,OAAO7hE,GAAK0hE,QAAQ1hE,GAGtB,OAAO,IAAIwrE,WAAW3J,OAAQh9E,KAAKq8E,SAAUr8E,KAAK4mF,MAAO5mF,KAAKumF,MJ2B9D1zB,UFxCa,WACb,OAAO,IAAIiV,+BAAU9nE,KAAKo8E,QAASp8E,KAAKq8E,WEwCxC9oB,WK1Ca,WAKb,IAJA,IAAIj7D,KAAO0H,KAAK4mF,MACZI,IAAMhnF,KAAKumF,IACXU,IAAMJ,QAED3K,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQyZ,EAAI,EAAGA,EAAIhjB,IAAKgjB,EACjE,IAAK,IAAyCyV,KAArCovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAc3J,EAAI,EAAGA,EAAIyB,IAAKzB,EAClE,GAAI64B,KAAOovB,MAAMjoD,GAAI,CACnB,IAAIgvF,QAAUnuF,aAAIg4B,KAAMo2D,KACxBX,oBAASz1D,KAAMt4B,KAAM2uF,IAAKlvF,EAAGioD,OAC3B0L,KAAMq7B,QAAQr7B,KAAOq7B,QAAQvC,MAAQuC,QAAQZ,SAC7C3B,MAAO,EACP2B,SAAUY,QAAQZ,SAClBC,KAAMW,QAAQX,OAMtB,OAAO,IAAIO,WAAWzK,OAAQl8E,KAAKq8E,SAAU/jF,KAAM2uF,MLwBnD/uF,KAAM4uF,oBAAoB5uF,KAC1B+6B,MAAO6zD,oBAAoB7zD,MAC3BrC,KAAMk2D,oBAAoBl2D,KAC1B6J,KAAMqsD,oBAAoBrsD,KAC1BmN,MAAOk/C,oBAAoBl/C,MAC3BH,KAAMq/C,oBAAoBr/C,KAC1BimC,GM3Ba,SAASp1E,KAAMq5E,UAC5B,IAAI94C,GAAK74B,KAAKumF,IAEd,OAAOnhF,UAAU1D,OAAS,EACpB9I,aAAIoH,KAAK4wB,OAAQiI,IAAI60C,GAAGA,GAAGp1E,MAC3B0H,KAAKynC,KApBb,SAASy/C,WAAWruD,GAAIvgC,KAAMq5E,UAC5B,IAAIwV,IAAKC,IAAKC,IAThB,SAAS5pF,SAAMnF,MACb,OAAQA,KAAO,IAAIogB,OAAOpM,MAAM,SAASwS,MAAM,SAAS7lB,GACtD,IAAIlB,EAAIkB,EAAEgN,QAAQ,KAElB,OADIlO,GAAK,IAAGkB,EAAIA,EAAEmiB,MAAM,EAAGrjB,KACnBkB,GAAW,UAANA,IAKKwE,CAAMnF,MAAQ6/B,KAAO3lB,aACzC,OAAO,WACL,IAAI6zE,SAAWgB,IAAIrnF,KAAM64B,IACrB60C,GAAK2Y,SAAS3Y,GAKdA,KAAOyZ,MAAMC,KAAOD,IAAMzZ,IAAIxkC,QAAQwkC,GAAGp1E,KAAMq5E,UAEnD0U,SAAS3Y,GAAK0Z,KASAF,CAAWruD,GAAIvgC,KAAMq5E,YNuBrCve,KOca,SAAS96D,KAAMU,OAC5B,IAAIs+E,SAAWrK,cAAU30E,MAAOP,EAAiB,cAAbu/E,SAA2Bn8B,wBAAuB6B,uBACtF,OAAOh9C,KAAKsnF,UAAUhvF,KAAuB,mBAAVU,OAC5Bs+E,SAAS/F,MAjBlB,SAASoM,oBAAerG,SAAUt6B,YAAahkD,OAC7C,IAAIuuF,QACAC,QACAC,aACJ,OAAO,WACL,IAAIjgD,OAAQkgD,OAAS1uF,MAAMgH,MAC3B,GAAc,MAAV0nF,OAEJ,OADAlgD,OAASxnC,KAAKs9E,eAAehG,SAASF,MAAOE,SAAS/F,UACpCmW,OAAS,KACrBlgD,SAAW+/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAezqC,YAAYuqC,QAAU//C,OAAQggD,QAAUE,QAJ7B1nF,KAAKw9E,kBAAkBlG,SAASF,MAAOE,SAAS/F,SApBpF,SAASqM,kBAAatlF,KAAM0kD,YAAahkD,OACvC,IAAIuuF,QACAC,QACAC,aACJ,OAAO,WACL,IAAIjgD,OAAQkgD,OAAS1uF,MAAMgH,MAC3B,GAAc,MAAV0nF,OAEJ,OADAlgD,OAASxnC,KAAKwzD,aAAal7D,SACTovF,OAAS,KACrBlgD,SAAW+/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAezqC,YAAYuqC,QAAU//C,OAAQggD,QAAUE,QAJ7B1nF,KAAK09E,gBAAgBplF,SAyBAg/E,SAAUv/E,EAAGuuF,WAAWtmF,KAAM,QAAU1H,KAAMU,QACtF,MAATA,OAAiBs+E,SAAS/F,MA5DlC,SAASgM,kBAAajG,UACpB,OAAO,WACLt3E,KAAKw9E,kBAAkBlG,SAASF,MAAOE,SAAS/F,SARpD,SAASkM,gBAAWnlF,MAClB,OAAO,WACL0H,KAAK09E,gBAAgBplF,SAgE4Cg/E,WAC5DA,SAAS/F,MA5ClB,SAASsM,oBAAevG,SAAUt6B,YAAa0qC,QAC7C,IAAIH,QACAE,aACJ,OAAO,WACL,IAAIjgD,OAASxnC,KAAKs9E,eAAehG,SAASF,MAAOE,SAAS/F,OAC1D,OAAO/pC,SAAWkgD,OAAS,KACrBlgD,SAAW+/C,QAAUE,aACrBA,aAAezqC,YAAYuqC,QAAU//C,OAAQkgD,UAlBvD,SAAS5J,kBAAaxlF,KAAM0kD,YAAa0qC,QACvC,IAAIH,QACAE,aACJ,OAAO,WACL,IAAIjgD,OAASxnC,KAAKwzD,aAAal7D,MAC/B,OAAOkvC,SAAWkgD,OAAS,KACrBlgD,SAAW+/C,QAAUE,aACrBA,aAAezqC,YAAYuqC,QAAU//C,OAAQkgD,WAgDEpQ,SAAUv/E,EAAGiB,MAAQ,MPlB5EsuF,UQ9Ba,SAAShvF,KAAMU,OAC5B,IAAIM,IAAM,QAAUhB,KACpB,GAAI8M,UAAU1D,OAAS,EAAG,OAAQpI,IAAM0G,KAAKimF,MAAM3sF,OAASA,IAAI4S,OAChE,GAAa,MAATlT,MAAe,OAAOgH,KAAKimF,MAAM3sF,IAAK,MAC1C,GAAqB,mBAAVN,MAAsB,MAAM,IAAI+W,MAC3C,IAAIunE,SAAWrK,cAAU30E,MACzB,OAAO0H,KAAKimF,MAAM3sF,KAAMg+E,SAAS/F,MA5BnC,SAASoW,YAAYrQ,SAAUt+E,OAC7B,SAASitF,QACP,IAAIr1D,KAAO5wB,KAAMjI,EAAIiB,MAAMuO,MAAMqpB,KAAMxrB,WACvC,OAAOrN,GAAK,SAASkB,GACnB23B,KAAKmU,eAAeuyC,SAASF,MAAOE,SAAS/F,MAAOx5E,EAAEkB,KAI1D,OADAgtF,MAAM/5E,OAASlT,MACRitF,OAGT,SAASqB,UAAUhvF,KAAMU,OACvB,SAASitF,QACP,IAAIr1D,KAAO5wB,KAAMjI,EAAIiB,MAAMuO,MAAMqpB,KAAMxrB,WACvC,OAAOrN,GAAK,SAASkB,GACnB23B,KAAKkT,aAAaxrC,KAAMP,EAAEkB,KAI9B,OADAgtF,MAAM/5E,OAASlT,MACRitF,QAS2D3O,SAAUt+E,SRyB5E8gC,MSNa,SAASxhC,KAAMU,MAAO+kF,UACnC,IAAIhmF,EAAqB,cAAhBO,MAAQ,IAAsB6iD,wBAAuB6B,uBAC9D,OAAgB,MAAThkD,MAAgBgH,KACd4nF,WAAWtvF,KA/CtB,SAAS0lF,kBAAY1lF,KAAM0kD,aACzB,IAAIuqC,QACAC,QACAC,aACJ,OAAO,WACL,IAAIjgD,OAAS1N,WAAM95B,KAAM1H,MACrBovF,QAAU1nF,KAAK85B,MAAMmkD,eAAe3lF,MAAOwhC,WAAM95B,KAAM1H,OAC3D,OAAOkvC,SAAWkgD,OAAS,KACrBlgD,SAAW+/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAezqC,YAAYuqC,QAAU//C,OAAQggD,QAAUE,SAsCrC1J,CAAY1lF,KAAMP,IACnC21E,GAAG,aAAep1E,KAnC7B,SAASuvF,eAAevvF,MACtB,OAAO,WACL0H,KAAK85B,MAAMmkD,eAAe3lF,OAiCKuvF,CAAevvF,OAC1C0H,KAAK4nF,WAAWtvF,KAAuB,mBAAVU,MAnBrC,SAASklF,oBAAc5lF,KAAM0kD,YAAahkD,OACxC,IAAIuuF,QACAC,QACAC,aACJ,OAAO,WACL,IAAIjgD,OAAS1N,WAAM95B,KAAM1H,MACrBovF,OAAS1uF,MAAMgH,MAEnB,OADc,MAAV0nF,SAA0B1nF,KAAK85B,MAAMmkD,eAAe3lF,MAApCovF,OAA2C5tD,WAAM95B,KAAM1H,OACpEkvC,SAAWkgD,OAAS,KACrBlgD,SAAW+/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAezqC,YAAYuqC,QAAU//C,OAAQggD,QAAUE,SAUrDxJ,CAAc5lF,KAAMP,EAAGuuF,WAAWtmF,KAAM,SAAW1H,KAAMU,QA/BrE,SAASolF,oBAAc9lF,KAAM0kD,YAAa0qC,QACxC,IAAIH,QACAE,aACJ,OAAO,WACL,IAAIjgD,OAAS1N,WAAM95B,KAAM1H,MACzB,OAAOkvC,SAAWkgD,OAAS,KACrBlgD,SAAW+/C,QAAUE,aACrBA,aAAezqC,YAAYuqC,QAAU//C,OAAQkgD,SAyB3CtJ,CAAc9lF,KAAMP,EAAGiB,MAAQ,IAAK+kF,WTA9C6J,WU7Ca,SAAStvF,KAAMU,MAAO+kF,UACnC,IAAIzkF,IAAM,UAAYhB,MAAQ,IAC9B,GAAI8M,UAAU1D,OAAS,EAAG,OAAQpI,IAAM0G,KAAKimF,MAAM3sF,OAASA,IAAI4S,OAChE,GAAa,MAATlT,MAAe,OAAOgH,KAAKimF,MAAM3sF,IAAK,MAC1C,GAAqB,mBAAVN,MAAsB,MAAM,IAAI+W,MAC3C,OAAO/P,KAAKimF,MAAM3sF,IAhBpB,SAASsuF,WAAWtvF,KAAMU,MAAO+kF,UAC/B,SAASkI,QACP,IAAIr1D,KAAO5wB,KAAMjI,EAAIiB,MAAMuO,MAAMqpB,KAAMxrB,WACvC,OAAOrN,GAAK,SAASkB,GACnB23B,KAAKkJ,MAAMqkD,YAAY7lF,KAAMP,EAAEkB,GAAI8kF,WAIvC,OADAkI,MAAM/5E,OAASlT,MACRitF,MAQgB2B,CAAWtvF,KAAMU,MAAmB,MAAZ+kF,SAAmB,GAAKA,YVyCvE19E,KD1Ca,SAASrH,OACtB,OAAOgH,KAAKimF,MAAM,OAAyB,mBAAVjtF,MARnC,SAAS4lF,kBAAa5lF,OACpB,OAAO,WACL,IAAI0uF,OAAS1uF,MAAMgH,MACnBA,KAAKm8B,YAAwB,MAAVurD,OAAiB,GAAKA,QAMrC9I,CAAa0H,WAAWtmF,KAAM,OAAQhH,QAf9C,SAAS6lF,kBAAa7lF,OACpB,OAAO,WACLgH,KAAKm8B,YAAcnjC,OAcf6lF,CAAsB,MAAT7lF,MAAgB,GAAKA,MAAQ,MCwChD0uC,OHlDa,WACb,OAAO1nC,KAAK0tE,GAAG,aATjB,SAASoa,eAAejvD,IACtB,OAAO,WACL,IAAItS,OAASvmB,KAAKshC,WAClB,IAAK,IAAIvpC,KAAKiI,KAAK+lF,aAAc,IAAKhuF,IAAM8gC,GAAI,OAC5CtS,QAAQA,OAAOH,YAAYpmB,OAKJ8nF,CAAe9nF,KAAKumF,OGkDjDN,MLRa,SAAS3tF,KAAMU,OAC5B,IAAI6/B,GAAK74B,KAAKumF,IAId,GAFAjuF,MAAQ,GAEJ8M,UAAU1D,OAAS,EAAG,CAExB,IADA,IACkCzI,EAD9BgtF,MAAQrtF,aAAIoH,KAAK4wB,OAAQiI,IAAIotD,MACxBluF,EAAI,EAAGyB,EAAIysF,MAAMvkF,OAAW3J,EAAIyB,IAAKzB,EAC5C,IAAKkB,EAAIgtF,MAAMluF,IAAIO,OAASA,KAC1B,OAAOW,EAAED,MAGb,OAAO,KAGT,OAAOgH,KAAKynC,MAAe,MAATzuC,MAhEpB,SAAS+uF,YAAYlvD,GAAIvgC,MACvB,IAAI0vF,OAAQC,OACZ,OAAO,WACL,IAAI5B,SAAW7zE,aAAIxS,KAAM64B,IACrBotD,MAAQI,SAASJ,MAKrB,GAAIA,QAAU+B,OAEZ,IAAK,IAAIjwF,EAAI,EAAGyB,GADhByuF,OAASD,OAAS/B,OACSvkF,OAAQ3J,EAAIyB,IAAKzB,EAC1C,GAAIkwF,OAAOlwF,GAAGO,OAASA,KAAM,EAC3B2vF,OAASA,OAAO7sE,SACT9T,OAAOvP,EAAG,GACjB,MAKNsuF,SAASJ,MAAQgC,SAIrB,SAASC,cAAcrvD,GAAIvgC,KAAMU,OAC/B,IAAIgvF,OAAQC,OACZ,GAAqB,mBAAVjvF,MAAsB,MAAM,IAAI+W,MAC3C,OAAO,WACL,IAAIs2E,SAAW7zE,aAAIxS,KAAM64B,IACrBotD,MAAQI,SAASJ,MAKrB,GAAIA,QAAU+B,OAAQ,CACpBC,QAAUD,OAAS/B,OAAO7qE,QAC1B,IAAK,IAAIniB,GAAKX,KAAMA,KAAMU,MAAOA,OAAQjB,EAAI,EAAGyB,EAAIyuF,OAAOvmF,OAAQ3J,EAAIyB,IAAKzB,EAC1E,GAAIkwF,OAAOlwF,GAAGO,OAASA,KAAM,CAC3B2vF,OAAOlwF,GAAKkB,EACZ,MAGAlB,IAAMyB,GAAGyuF,OAAO/hF,KAAKjN,GAG3BotF,SAASJ,MAAQgC,UAmB4CpvD,GAAIvgC,KAAMU,SKNzEwrF,MW9Ca,SAASxrF,OACtB,IAAI6/B,GAAK74B,KAAKumF,IAEd,OAAOnhF,UAAU1D,OACX1B,KAAKynC,MAAuB,mBAAVzuC,MAhB1B,SAASmvF,cAActvD,GAAI7/B,OACzB,OAAO,WACLm/B,KAAKn4B,KAAM64B,IAAI2rD,OAASxrF,MAAMuO,MAAMvH,KAAMoF,aAI9C,SAASgjF,cAAcvvD,GAAI7/B,OACzB,OAAOA,OAASA,MAAO,WACrBm/B,KAAKn4B,KAAM64B,IAAI2rD,MAAQxrF,SAUA6/B,GAAI7/B,QACvBJ,aAAIoH,KAAK4wB,OAAQiI,IAAI2rD,OXwC3B2B,SY/Ca,SAASntF,OACtB,IAAI6/B,GAAK74B,KAAKumF,IAEd,OAAOnhF,UAAU1D,OACX1B,KAAKynC,MAAuB,mBAAVzuC,MAhB1B,SAASqvF,iBAAiBxvD,GAAI7/B,OAC5B,OAAO,WACLwZ,aAAIxS,KAAM64B,IAAIstD,UAAYntF,MAAMuO,MAAMvH,KAAMoF,aAIhD,SAASkjF,iBAAiBzvD,GAAI7/B,OAC5B,OAAOA,OAASA,MAAO,WACrBwZ,aAAIxS,KAAM64B,IAAIstD,SAAWntF,SAUC6/B,GAAI7/B,QAC1BJ,aAAIoH,KAAK4wB,OAAQiI,IAAIstD,UZyC3BC,KarDa,SAASptF,OACtB,IAAI6/B,GAAK74B,KAAKumF,IAEd,OAAOnhF,UAAU1D,OACX1B,KAAKynC,KAXb,SAAS8gD,aAAa1vD,GAAI7/B,OACxB,GAAqB,mBAAVA,MAAsB,MAAM,IAAI+W,MAC3C,OAAO,WACLyC,aAAIxS,KAAM64B,IAAIutD,KAAOptF,OAQPuvF,CAAa1vD,GAAI7/B,QAC3BJ,aAAIoH,KAAK4wB,OAAQiI,IAAIutD,OCT7B,IAAIoC,eACF98B,KAAM,KACN84B,MAAO,EACP2B,SAAU,IACVC,KAAMqC,YAGR,SAAS1B,mBAAQn2D,KAAMiI,IAErB,IADA,IAAIgtD,SACKA,OAASj1D,KAAKm1D,iBAAmBF,OAASA,OAAOhtD,MACxD,KAAMjI,KAAOA,KAAK0Q,YAChB,OAAOknD,cAAc98B,KAAOu4B,MAAOuE,cAGvC,OAAO3C,OCfThzB,cAAUh5D,UAAU6uF,UCFL,SAASpwF,MACtB,OAAO0H,KAAKynC,KAAK,YCDJ,SAAS7W,KAAMt4B,MAC5B,IACI+tF,SACA3E,OAEA3pF,EAJA+tF,UAAYl1D,KAAKm1D,aAGjBn+C,OAAQ,EAGZ,GAAKk+C,UAAL,CAIA,IAAK/tF,KAFLO,KAAe,MAARA,KAAe,KAAOA,KAAO,GAE1BwtF,WACHO,SAAWP,UAAU/tF,IAAIO,OAASA,MACvCopF,OAAS2E,SAASH,MAAQX,UAAYc,SAASH,MAAQR,OACvDW,SAASH,MAAQP,MACjBU,SAAS9B,MAAMj+C,OACXo7C,QAAQ2E,SAAS3Y,GAAGx1E,KAAK,YAAa04B,KAAMA,KAAKgoD,SAAUyN,SAASpkF,MAAOokF,SAASrmC,cACjF8lC,UAAU/tF,IAL8B6vC,OAAQ,EAQrDA,cAAchX,KAAKm1D,cDlBrB2C,CAAU1oF,KAAM1H,SDCpBu6D,cAAUh5D,UAAU05D,WDiBL,SAASj7D,MACtB,IAAIugC,GACAgtD,OAEAvtF,gBAAgBquF,YAClB9tD,GAAKvgC,KAAKiuF,IAAKjuF,KAAOA,KAAKsuF,QAE3B/tD,GAAKguD,SAAUhB,OAAS2C,eAAe98B,KAAOu4B,MAAO3rF,KAAe,MAARA,KAAe,KAAOA,KAAO,IAG3F,IAAK,IAAI4jF,OAASl8E,KAAKo8E,QAASjkF,EAAI+jF,OAAOx6E,OAAQyZ,EAAI,EAAGA,EAAIhjB,IAAKgjB,EACjE,IAAK,IAAyCyV,KAArCovB,MAAQk8B,OAAO/gE,GAAI3hB,EAAIwmD,MAAMt+C,OAAc3J,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9D64B,KAAOovB,MAAMjoD,KACfsuF,oBAASz1D,KAAMt4B,KAAMugC,GAAI9gC,EAAGioD,MAAO6lC,QAAUkB,mBAAQn2D,KAAMiI,KAKjE,OAAO,IAAI8tD,WAAWzK,OAAQl8E,KAAKq8E,SAAU/jF,KAAMugC,oTI7BrD,IAAM8vD,6BAAgB,SAAhBA,cAAgBxQ,SAAO,OAAIj5D,WAAOi5D,UAUlCyQ,YAAc,SAAdA,YAAeriE,OAAQsiE,SAAU99E,KAAM8sE,UAAoC,IAA1BiR,UAA0B1jF,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAAV2jF,MAAU3jF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,GACxEiZ,kBAAkB4iD,aAAe5iD,kBAAkByiE,cACpDziE,OAASoiE,6BAAcpiE,SAG3B,IAMIxS,OANEk1E,YAAcpR,SAAWA,SAAS,GAAK,KACzCqR,aAAe,KACfC,eAAiB,KACjBhR,QAAU,KACViR,SAAW,KACXC,SAAW,KAEXJ,YACoB,MAAhBA,aACAC,aAAe,KACfC,eAAiBtR,WAEjBqR,aAAe,QACfC,eAAiC,MAAhBtR,SAAS,GAAaA,SAAtB,IAAAl8D,OAAqCk8D,YAG1DsR,eAAiBN,SACjB90E,QAAS,GAEbokE,QAAU5xD,OAAOusC,UAAUq2B,gBAE3Bp1E,SAAWokE,QAAUA,QAAQpkE,OAAO,WAChC,OAAO/T,KAAKshC,aAAe/a,OAAOqK,UAItCw4D,UAFAjR,QAAUA,QAAQptE,KAAKA,KAAMg+E,QAEV51B,QACMn+B,OAAO6zD,UAAY,OAC5CC,UAAU31B,OAASi2B,SAAS3hD,KAAK,WAAqB,QAAA2lC,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAClDyb,UAAU31B,MAAV5rD,MAAAuhF,WAAgBH,6BAAc3oF,OAArB2b,OAA+BkG,WAG5CwnE,SAAWD,SAASx/E,MAAMuuE,SAC1B2Q,UAAUrzD,QAAU4zD,SAAS5hD,KAAK,WAAqB,QAAA4mC,MAAAjpE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAwlE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAARzsD,OAAQysD,OAAAlpE,UAAAkpE,OACnDwa,UAAUrzD,OAAVluB,MAAAuhF,WAAiBH,6BAAc3oF,OAAtB2b,OAAgCkG,WAExB,UAAjBqnE,aACAG,SAAS7K,QAAwB,MAAhByK,YAAsBpR,SAASn0E,UAAU,EAAGm0E,SAASn2E,QAAUm2E,UAAU,GAClE,OAAjBqR,cACPG,SAASj2B,KAAK,KAAMykB,SAASn0E,UAAU,EAAGm0E,SAASn2E,SAEvD,IAAM4nF,QAAUnR,QAAQllB,OASxB,OAPI61B,UAAU71B,KACVq2B,QAAQ7hD,KAAK,WAAqB,QAAA2pC,MAAAhsE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAuoE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAARxvD,OAAQwvD,OAAAjsE,UAAAisE,OAC9ByX,UAAU71B,KAAV1rD,MAAAuhF,WAAeH,6BAAc3oF,OAApB2b,OAA8BkG,WAG3CynE,QAAQ5hD,SAEL2hD,UASLE,WAAa,SAAbA,WAAcnhE,KAAMgc,UAItB,OAHA3rC,OAAOwc,QAAQmvB,UAAUt7B,QAAQ,SAACzQ,GAC9B+vB,KAAK0R,MAAMzhC,EAAE,GAAIA,EAAE,aAEhB+vB,MAiBLohE,gBAAkB,SAAlBA,gBAAmBrR,QAASsR,OAC9B,IAAK,IAAMnwF,OAAOmwF,WACP3vF,eAAe5B,KAAKuxF,MAAOnwF,MAC9B6+E,QAAQ/kB,KAAK95D,IAAKmwF,MAAMnwF,OAY9BowF,wBAAW,SAAXA,SAAYvR,QAASsR,MAAOxoD,WAO9B,OANMk3C,mBAAmBtlB,gBACrBslB,QAAUwQ,6BAAcxQ,eAEd7qE,IAAd2zB,UAA0Bk3C,QAAQrlB,UAAR,IAAAn3C,OAAsBslB,YAAawG,KAAK,WAC9D+hD,gBAAgBtqE,WAAOlf,MAAOypF,SAC7BD,gBAAgBrR,QAASsR,OACvBtR,SAyCLwR,yBAAY,SAAZA,UAAaxR,QAASyR,QAIxB,IAAK,IAAMtwF,OAHL6+E,mBAAmBtlB,gBACrBslB,QAAUwQ,6BAAcxQ,UAEVyR,YACP9vF,eAAe5B,KAAK0xF,OAAQtwF,MAC/B6+E,QAAQr+C,MAAMxgC,IAAKswF,OAAOtwF,MAGlC,OAAO6+E,SAYL0R,8BAAiB,SAAjBA,eAAkBhoE,QACpB,IACI9W,KACA6kE,IAFE92C,UAAY5Z,WAAO2C,OAAOiX,WAKZ,iBADpB/tB,KAAO8W,OAAO9W,QAEVA,KAAOlC,MAAMkC,MAAM2zC,OAAOz2C,IAAI,SAAC5P,EAAGN,GAAJ,OAAUA,KAE5C63E,IAAM92C,UAAUg6B,UAAUjxC,OAAOg2D,UAAU9sE,KAAKA,OAEhD6kE,IAAM92C,UAAUg6B,UAAUjxC,OAAOg2D,UAAU9jE,OAAO,WAC9C,OAAO/T,KAAKshC,aAAexI,UAAUlI,SACtC7lB,KAAK8W,OAAO9W,OAEYooD,QAAQn+B,OAAOnT,OAAOmT,QAAQprB,MAAMgmE,KAAKnoC,KAAK,SAAUpvC,EAAGN,GAClF8pB,OAAO4lB,KAAKpvC,EAAG6mB,WAAOlf,MAAOjI,KAGlBq7D,KAAK,QAASvxC,OAAOof,WAAa,IACjD2uC,IAAI3c,OAAOvrB,UA0CToiD,8BAAiB,SAAjBA,iBACF,IAAMC,IAAMC,UAAWziF,WAAX,EAAAnC,WACZ,OACI84B,EAAG6rD,IAAI,GACPvmF,EAAGumF,IAAI,KAeTE,wBAAW,SAAXA,WAAW,OAAMC,UAMjBC,yBAAY,SAAZA,YAAY,OAAMC,UAElBC,qCAAwB,SAAxBA,sBAAyBrqC,MAAOsqC,KAClC,IAAIC,OAEEC,gBACFC,eAAgB,GAEdxpD,UAA2B,iBAARqpD,IAAmBA,IAAOA,eAAezhF,MAAQyhF,IAAIvnF,KAAK,UAAOuK,EAGtFi9E,OADAvqC,MAAMpvB,iBAAkBu4C,YACfnpB,MAAMhrB,OAAO,OAAO8pD,KAPhB,KASJ9+B,MAAMhrB,OAAO,QAAQ30B,KATjB,KAYb4gC,UACAspD,OAAOn3B,KAAK,QAASnyB,WACC,WAAfypD,sBAAOJ,cACPA,IAAI,gBACX7a,eAAe+a,eAAgBF,MAGnCC,OAAOzwD,MAAM0wD,gBACb,IAAMG,cAAgBhzF,OAAOskD,iBAAiBsuC,OAAO35D,QAC/Cg6D,oBACFtvD,SAAUqvD,cAAcrvD,SACxBC,WAAYovD,cAAcpvD,WAC1BC,WAAYmvD,cAAcnvD,WAC1BC,UAAWkvD,cAAclvD,WAK7B,OAFA8uD,OAAO7iD,SAEAkjD,oBAGLC,SAAW,SAAXA,WAAW,MAAM,iBAAkBxyD,SAASyjB,6HC1T5CgvC,QACF,cACA,eACA,UACA,aACA,QACA,eACA,UACA,gBAaEC,eATF,SACA,OACA,QACA,OACA,gBACA,SACA,WAKSjiF,QAAQ,SAACkiF,aAClBF,OAAOhiF,QAAQ,SAACyxE,OACZwQ,WAAW7kF,KAAX,GAAAyV,OAAmBqvE,YAAnB,KAAArvE,OAAkC4+D,YAI3BwQ,+TClBf,IAAMt5D,2BAAW,SAAXA,SAAWw5D,WAAS,OAAI,SAAAC,cAAY,OAAID,UAAUC,gBASlDC,OAAS,SAATA,OAAUzmE,OAAQ9qB,UAAT,OAAsBnB,OAAOoB,UAAUC,eAAe5B,KAAKwsB,OAAQ9qB,WClBnEwxF,6BDkCX,SAAAA,mLAAeC,CAAArrF,KAAAorF,kBACXprF,KAAKsrF,WAAaP,WAClB/qF,KAAKurF,UAAY,IAAIp5E,IACrBnS,KAAKwrF,cACLxrF,KAAKyrF,eACLzrF,KAAK0rF,yBACL1rF,KAAK2rF,8TASL3rF,KAAKwrF,WAAaxrF,KAAKsrF,WAAWx4E,OAAO,SAACC,IAAKza,MAE3C,OADAya,IAAIza,MAAQm5B,2BACL1e,SAEX/S,KAAK4rF,6DAWCpgE,WACN,OAAOxrB,KAAKurF,UAAU3yF,IAAI4yB,6EAURA,WAAW,IAAAtW,MAAAlV,KAC7B,OAAO,IAAI6rF,QAAQ,SAACxiE,SAChBnU,MAAKs2E,WAAWhgE,WAAaiG,2BAASpI,uEAU1B,IAAAhU,OAAArV,KAChBA,KAAKsrF,WAAWxiF,QAAQ,SAAC0iB,WACrB,IAAMsgE,QAAUz2E,OAAK02E,qBAAqBvgE,WAC1CnW,OAAKk2E,UAAU/4E,IAAIgZ,UAAWsgE,SEpFb,SAAhBE,cAAiBF,QAAStgE,UAAWiR,SAC9CqvD,QAAQG,KAAK,WACT,IAAMC,IAAMzvD,QAAQsvD,qBAAqBvgE,WACzCiR,QAAQ8uD,UAAU/4E,IAAIgZ,UAAW0gE,KACjCF,cAAcE,IAAK1gE,UAAWiR,WFiF1BuvD,CAAcF,QAAStgE,UAAWnW,kEAezBmW,UAAW0/D,cACxBlrF,KAAKwrF,WAAWhgE,WAAW0/D,oDAYvBA,cAGJ,IAAMF,YAAcE,aAAaiB,YAAcjB,aAAakB,OAAOvmE,YAAYsmE,aAC/EjB,aAAaiB,WAAanB,YAC1BhrF,KAAKqsF,4BACLrsF,KAAKssF,QAAQtB,YAAaE,sDAcrBF,YAAaE,cAClB,IAAMqB,MAAQrB,aAAa5nE,OACrBkI,UAAS,GAAA7P,OAAMqvE,YAAN,KAAArvE,OAAqB4wE,OAGpCvsF,KAAKwsF,gBAAgBhhE,UAAW0/D,cAGhC,IAAMY,QAAU9rF,KAAKysF,SAASjhE,WAE1BxrB,KAAKyrF,YAAYT,cACbhrF,KAAKyrF,YAAYT,aAAauB,OAE9BvsF,KAAK0sF,uBAAuB1B,YAAauB,MAAOT,SAMpD9rF,KAAK2sF,cAAc3B,YAAauB,MAAOT,+EAYvBd,YAAauB,MAAOT,SACxC,IAAMtgE,UAAS,GAAA7P,OAAMqvE,YAAN,KAAArvE,OAAqB4wE,OACpCvsF,KAAKyrF,YAAYT,aAAauB,OAAOT,SACrC9rF,KAAK4sF,oBAAoBphE,yFASA,IAAA7T,OAAA3X,KACJvH,OAAOqN,KAAK9F,KAAK0rF,uBACzB5iF,QAAQ,SAACkiF,aACHvyF,OAAOqN,KAAK6R,OAAK+zE,sBAAsBV,cAC/CliF,QAAQ,SAACyjF,OACZ,GAAI50E,OAAK8zE,YAAYT,cACbrzE,OAAK8zE,YAAYT,aAAauB,OAAQ,CAEtC,IAAMT,QAAUn0E,OAAK+zE,sBAAsBV,aAAauB,OAExD50E,OAAK+0E,uBAAuB1B,YAAauB,MAAOT,gBAEzCn0E,OAAK+zE,sBAAsBV,aAAauB,gEAepDvB,YAAauB,MAAOT,SAC1BX,OAAOnrF,KAAK0rF,sBAAuBV,eACpChrF,KAAK0rF,sBAAsBV,iBAG1BG,OAAOnrF,KAAK0rF,sBAAsBV,aAAcuB,SACjDvsF,KAAK0rF,sBAAsBV,aAAauB,WAE5CvsF,KAAK0rF,sBAAsBV,aAAauB,OAAST,oDAS1B,IAAjBe,WAAiBznF,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACvBpF,KAAKyrF,YAAcoB,WAGnB7sF,KAAKqsF,4FASY7gE,WAAW,IAAAgK,OAAAx1B,KAC5B8vB,WAAW,WACP0F,OAAKg2D,WAAWhgE,WAAaiG,2BAC7B+D,OAAK+1D,UAAU/4E,IAAIgZ,UAAWgK,OAAKu2D,qBAAqBvgE,aACzD,2BGhPL9e,sBAAoB7O,oBAAU6O,kBCLvBogF,KAAO,OACPC,MAAQ,QACRC,cAAgB,gBAChBC,MAAQ,QACRC,UAAY,YACZC,UAAY,YACZC,YAAc,ICNrBC,oBAAsB,EACtBC,oBAAsB,EACtBC,eAAiB,EACjBC,oBAAsB,EACtBC,oBAAsB,uSCFbC,6BCkBX,SAAAA,aAAaC,YAAaC,uKAAWC,CAAA7tF,KAAA0tF,cACjC1tF,KAAK2tF,YAAcA,YACnB3tF,KAAK+uB,KAAO4+D,YAAY76E,OAAO,SAAC5K,IAAK5O,KAEjC,OADA4O,IAAI5O,KAAOi0F,eACJrlF,SAEXlI,KAAK4tF,UAAYA,UACjB5tF,KAAK8tF,kBAAoBH,YAAYjsF,OACrC1B,KAAK+tF,oBACL/tF,KAAKguF,WAAY,kSAWhBC,KACDjuF,KAAKguF,WAAY,EAEjB,IAAMx7E,IAAMxS,KAAK+uB,KAMjB,IAAK,IAAMz1B,OAJX20F,IAAInlF,QAAQ,SAAC/Q,GACTya,IAAIza,GAAKs1F,sBAGK76E,IACVA,IAAIlZ,OAAS+zF,qBAAuB76E,IAAIlZ,OAASk0F,sBACjDh7E,IAAIlZ,KAAOkZ,IAAIlZ,KAAO,EAAIm0F,mBAAqBH,oBAGvD,OAAOttF,2CAUHiuF,KACJ,IAAMz7E,IAAMxS,KAAK+uB,KAMjB,OAJAk/D,IAAInlF,QAAQ,SAAC/Q,GACTya,IAAIza,GAAKy1F,sBAGNxtF,uDAYP,IAAMwS,IAAMxS,KAAK+uB,KAGjB,IAAK,IAAMz1B,OAAOkZ,IACdA,IAAIlZ,KAAOkZ,IAAIlZ,OAAS+zF,oBAAsBG,oBAAsBh7E,IAAIlZ,KAE5E,OAAO0G,qDAaP,IAAMwS,IAAMxS,KAAK+uB,KAEjB,IAAK,IAAMz1B,OAAOkZ,IACdA,IAAIlZ,KAAOkZ,IAAIlZ,OAASg0F,mBAAqBG,mBAAqBj7E,IAAIlZ,KAE1E,OAAO0G,2CAWHiuF,KACJjuF,KAAKguF,WAAY,EAEjB,IAAMx7E,IAAMxS,KAAK+uB,KAKjB,IAAK,IAAMz1B,OAJX20F,IAAInlF,QAAQ,SAAC/Q,GACTya,IAAIza,GAAKu1F,qBAGK96E,IACVA,IAAIlZ,OAASg0F,oBAAsB96E,IAAIlZ,OAASm0F,qBAChDj7E,IAAIlZ,KAAoB,IAAbkZ,IAAIlZ,KAAa+zF,oBAAsBG,qBAI1D,OAAOxtF,+CAIP,IAAMwS,IAAMxS,KAAK+uB,KACX1H,QACF6mE,iBACAC,gBACAR,gBAGJ,IAAK,IAAMr0F,OAAOkZ,IACVA,IAAIlZ,KAAO,GACXkZ,IAAIlZ,OAASk0F,qBAAuBnmE,OAAO6mE,SAAS,GAAGhoF,KAAK5M,KAC5DkZ,IAAIlZ,OAAS+zF,qBAAuBhmE,OAAO6mE,SAAS,GAAGhoF,KAAK5M,MACrDkZ,IAAIlZ,KAAO,IAClBkZ,IAAIlZ,OAASm0F,oBAAsBpmE,OAAO8mE,QAAQ,GAAGjoF,KAAK5M,KAC1DkZ,IAAIlZ,OAASg0F,oBAAsBjmE,OAAO8mE,QAAQ,GAAGjoF,KAAK5M,MAE9D+tB,OAAOsmE,YAAYznF,KAAK5M,KAQ5B,OALC,WAAY,WAAWwP,QAAQ,SAACjO,MAC7BwsB,OAAOxsB,MAAQwsB,OAAOxsB,MAAMoN,IAAI,SAAAhO,GAAC,OAAIA,EAAEgO,IAAIO,YAE/C6e,OAAOsmE,YAActmE,OAAOsmE,YAAY1lF,IAAIO,QAErC6e,2CAaJ4mE,KACH,IAAMz7E,IAAMxS,KAAK+uB,KACjB,GAAIk/D,IACAA,IAAInlF,QAAQ,SAAC/Q,GACTya,IAAIza,GAAKw1F,qBAEV,CACH,IAAMa,UAAYpuF,KAAK+tF,iBACvB,IAAK,IAAMz0F,OAAOkZ,IACRlZ,OAAO80F,YACT57E,IAAIlZ,KAAOi0F,gBAKvB,OADAvtF,KAAKguF,WAAY,EACVhuF,uDAWP,IAAMwS,IAAMxS,KAAK+uB,KACXs/D,UAEN,IAAK,IAAM/0F,OAAOkZ,IACdA,IAAIlZ,OAAS+zF,qBAAuBgB,OAAOnoF,KAAK5M,KAGpD,OAAO+0F,uEAWUA,QACjB,IAAM77E,IAAMxS,KAAK+uB,KACjB,OAAOs/D,OAAOt6E,OAAO,SAAA1b,GAAC,OAAIma,IAAIna,KAAOg1F,qBAAuB76E,IAAIna,KAAOm1F,oFAWvDc,WAChB,IAAM97E,IAAMxS,KAAK+uB,KACjB,OAAOu/D,UAAUv6E,OAAO,SAAA1b,GAAC,OAAIma,IAAIna,KAAOi1F,oBAAsB96E,IAAIna,KAAOo1F,uEAQzE,IAAMj7E,IAAMxS,KAAK+uB,KACXw/D,aAEN,IAAK,IAAMj1F,OAAOkZ,IACdA,IAAIlZ,OAASk0F,qBAAuBe,UAAUroF,KAAK5M,KAEvD,OAAOi1F,0DAQP,IAAM/7E,IAAMxS,KAAK+uB,KACXw/D,aAEN,IAAK,IAAMj1F,OAAOkZ,IACdA,IAAIlZ,OAASm0F,oBAAsBc,UAAUroF,KAAK5M,KAGtD,OAAOi1F,0DAUP,IAAM/7E,IAAMxS,KAAK+uB,KACXu/D,aAEN,IAAK,IAAMh1F,OAAOkZ,IACdA,IAAIlZ,OAASg0F,oBAAsBgB,UAAUpoF,KAAK5M,KAEtD,OAAOg1F,kEAUP,IAAM97E,IAAMxS,KAAK+uB,KACX4+D,eAEN,IAAK,IAAMr0F,OAAOkZ,IACdm7E,YAAYznF,KAAK5M,KAGrB,OAAOq0F,8EAIP,OAAO3tF,KAAK8tF,8DAIZ,OAAO9tF,KAAKguF,kDAQZ,IAAMx7E,IAAMxS,KAAK+uB,KAEjB,IAAK,IAAMz1B,OAAOkZ,IACVA,IAAIlZ,OAAS+zF,oBACb76E,IAAIlZ,KAAOg0F,mBACJ96E,IAAIlZ,OAASg0F,mBACpB96E,IAAIlZ,KAAO+zF,oBACJ76E,IAAIlZ,OAASk0F,oBACpBh7E,IAAIlZ,KAAOm0F,mBAEXj7E,IAAIlZ,KAAOk0F,oBAInB,OAAOxtF,mfChUR,IAmCMwuF,6BAA+B,SAA/BA,6BAAgC/xD,QAAStd,GAAIsvE,UACtD,IAAMC,YAAcjyD,QAAQiyD,cAC5B,IAAK,IAAMp1F,OAAOo1F,YACd,MAAO50F,eAAe5B,KAAKw2F,YAAap1F,KAAM,CAC1C,IAAIq1F,QAAS,EACTxvE,KAAkB,IAAZA,GAAG7lB,OACTq1F,QAAS,GAETA,SACAF,SAAWC,YAAYp1F,KAAKs1F,SAAWF,YAAYp1F,KAAKu1F,aAM3DC,aAAe,SAAfA,aAAet8E,KAAG,OAAAu8E,yBAAQ,IAAIj4E,OAAJ6E,OAAAozE,yBAAYv8E,IAAI,IAAhBu8E,yBAAuBv8E,IAAI,QAe5Dw8E,eACFC,UAAWC,qBACXC,UAAWD,qBACXE,aAAcF,oBAA+BA,qBAC7CG,SAAUH,oBACVI,SAAUJ,oBACVK,YAAaL,mBAA8BA,oBAC3CM,aAaSC,WAAa,SAAbA,WAAc50F,KAAM2X,IAAK5F,QAClC,IAAIiQ,MAAQ,KACNi0D,kBAAoBlkE,OAAOkkE,kBAC3B4e,aAAe9iF,OAAO8iF,aAU5B,OATK9iF,OAAO+iF,gBAMD7e,oBACPj0D,MAAiB,gBAAThiB,KAAyBi2E,kBAAkB,GAAKA,kBAAkB,IALtEj0D,MADA6yE,aAAaE,WACL,KAhBW,SAAlBC,gBAAmBh1F,KAAMgiB,MAAOrK,KACzC,OAAIqK,MACOA,MAAMqC,OAAO,SAACtW,OAAQ7Q,GAAT,OAChBi3F,cAAcn0F,MAAMgkB,KAAK,SAAAixE,WAAS,OAAIt9E,IAAIza,KAAO+3F,cAC9C1wE,WAAW,IAGf,KAWSywE,CAAgBh1F,KAAM+R,OAAOyR,UAAWzR,OAAO8iF,aAAa3gE,OAMxEzH,KAAM9U,IACN9Q,OAAQ8Q,IAAI9Q,OACZmb,mjCC1EakzE,6BACjB,SAAAA,SAAatzD,QAASuzD,QAAStB,YAAauB,2KAAoBC,CAAAlwF,KAAA+vF,UAC5D/vF,KAAKy8B,QAAUA,QACfz8B,KAAKmwF,0BACLnwF,KAAKowF,gBACLpwF,KAAKqwF,mBACLrwF,KAAKswF,UACDC,eACAC,aAEJxwF,KAAKywF,iBACLzwF,KAAK0wF,yBACL1wF,KAAK2wF,sBACL3wF,KAAK4wF,oBACDC,aAAc,SAAAA,eAAA,OAAM,IAExB7wF,KAAK8wF,4BACL9wF,KAAK+wF,qBACL/wF,KAAKgxF,uBACLhxF,KAAKixF,WACLjxF,KAAKkxF,uBACLlxF,KAAKmxF,iBACLnxF,KAAKoxF,kBACLpxF,KAAKqxF,sBAELrxF,KAAKsxF,eAAerB,oBACpBjwF,KAAKuxF,2BAA2BvB,QAAQO,aACxCvwF,KAAKwxF,oBAAoB9C,aACzB1uF,KAAKyxF,+BAA+BzB,QAAQ0B,wBAC5C1xF,KAAK2xF,wBAAwB3B,QAAQQ,+RAIrC,OAAIprF,UAAO1D,QACP1B,KAAKixF,QAAUxhB,eAAezvE,KAAKixF,QAAN7rF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACtBpF,MAEJA,KAAKixF,8DAGAW,cACZ,IAAM3B,mBAAqBjwF,KAAKkxF,oBAChC,IAAK,IAAM53F,OAAOs4F,aACd,MAAO93F,eAAe5B,KAAK05F,aAAct4F,KAAM,CAC3C,IAAMo1F,YAAckD,aAAat4F,SAC7Bu4F,uBAAwB,EACxBC,iBAAW,EACXxiE,eAAeo/D,cACfoD,YAAcpD,YAAYqD,QAC1BF,sBAAwBnD,YAAYmD,uBAEpCC,YAAcpD,aAEjBuB,mBAAmB32F,OAAS22F,mBAAmB32F,SAChD0G,KAAKkxF,oBAAoB53F,KAAzB04F,2BAAoC,IAAIl7E,IAAI+6E,sBAAwBC,eAAHn2E,OAAAq2E,2BACzD/B,mBAAmB32F,MADsC04F,2BAC7BF,gBAG5C,OAAO9xF,mFAGiBgwF,SACxB,IAAMiC,WD3E8B,SAA/BC,6BAAgCz1D,QAASuzD,SAClD,IAAMmC,0BAMN,OAJAnC,QAAUA,mBAAmBnnF,MAAQmnF,QAAUv3F,OAAOkmB,OAAOqxE,UACrDlnF,QAAQ,SAACspF,QACbD,uBAAuBC,OAAOjG,cAAgB,IAAIiG,OAAO31D,WAEtD01D,uBCoEgBD,CAA6BlyF,KAAMgwF,SAGtD,OAFAhwF,KAAKqyF,qBAAqBJ,YAC1Bx5F,OAAOoU,OAAO7M,KAAKswF,SAASC,YAAa0B,YAClCjyF,yEAIP,OAAOA,qEAGU0uF,aACjB,IAAK,IAAMp1F,OAAOo1F,YACd1uF,KAAKmwF,uBAAuBzB,YAAYp1F,KAAK6yF,cAAgBuC,YAAYp1F,KAG7E,OADA0G,KAAKsyF,wBACEtyF,+DAGO0uF,YAAagB,aAAcvkE,SAAS,IAAAjW,MAAAlV,KAC5CuyF,gBAAkBvyF,KAAK0uF,cACvB8D,cAAgBxyF,KAAKoxF,eACrBqB,kBAAoBzyF,KAAKqxF,mBA6B/B,OA5BA3C,YAAY5lF,QAAQ,SAAC4pF,YACjB,IAAI/rF,QACArO,KACEy5F,QAAUW,WAAWX,QACrBE,WAAaS,WAAWT,WACxBU,YDIO,SAAZC,UAAan2D,QAASw1D,YAC/B,IAAIU,eACEhvE,QACFyrE,YAAa,KACbG,WAAY,MAwBhB,OAtBA0C,WAAWnpF,QAAQ,SAAC+pF,WAChB,IAAMC,aAAer2D,QAAQ00D,cAAc0B,WACvCC,eACAH,YAAcl6F,OAAOoU,OAAO8lF,YAAa/0E,MAAMk1E,gBAC9C,cAAe,cAAchqF,QAAQ,SAACjO,MACnC,IAAMgiB,MAAQi2E,aAAaj4F,MAAMgiB,MAC7Bk2E,cAAgBpvE,OAAO9oB,MACvBm4F,OAAS5c,4CAA+Bv5D,OACvCk2E,cAEM,GAAAp3E,OAAGkB,MAAMgQ,YAAY5kB,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OAAMib,UAAtC,GAAAoI,OACJo3E,cAAclmE,YAAY5kB,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OAAMib,SAC9Cy/E,OAASv6F,OAAOoU,UAAWupE,4CAA+B2c,gBAC1DA,cAAgBpvE,OAAO9oB,MAAQgiB,MAAMuR,MAAM2kE,gBAE3CA,cAAgBl2E,MANhBk2E,cAAgBpvE,OAAO9oB,MAAQgiB,MAQnC81E,YAAY93F,MAAMgiB,MAAQk2E,cAC1BJ,YAAY93F,MAAMm4F,OAASA,YAIhCL,YChCqBC,CAAU19E,MAAM+8E,YACpCF,QAAQjpF,QAAQ,SAACmqF,QACS,WAAlBC,gBAAOD,SACP36F,KAAO26F,OAAO36F,KACdqO,QAAUssF,OAAOtsF,SAEjBrO,KAAO26F,OAGX,IAAME,mBAAqBZ,gBAAgBj6F,MACvC66F,mBAAmBC,eACdD,mBAAmBttE,YAAYwtE,WAChC56F,OAAOkmB,OAAO6zE,eAAe3zE,KAAK,SAAAxmB,GAAC,OAAIA,EAAE6yB,kBACzCunE,kBAAiB,GAAA92E,OAAIrjB,KAAJ,KAAAqjB,OAAYs2E,WAAWlvF,UACpCzK,UACAupB,QAAS8wE,YAAaxnE,QAASxkB,UAGnCuO,MAAKo+E,mBAAmBh7F,KAAMq6F,YAAaxnE,QAASxkB,cAK7D3G,mEAGS1H,KAAMo3F,aAAcvkE,SAAuB,IAAdxkB,QAAcvB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACrDmtF,gBAAkBvyF,KAAK0uF,cACvBgE,WAAaH,gBAAgBj6F,MAC/Bu2F,SAAU,EACVloF,QAAQoN,QAAUpN,QAAQoN,OAAO2+E,cACjC7D,SAAU,IAEbA,SAAW0D,gBAAgBj6F,MAAMiP,MAAMmoF,aAAcvkE,QAASxkB,iGAGlCsB,KAE7B,OADAjI,KAAK8wF,yBAA2Br4F,OAAOoU,OAAO7M,KAAK8wF,yBAA0B7oF,SACtEjI,iEAGQ6yF,UAAW1nE,SAA+B,IAAtBooE,gBAAsBnuF,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACnDouF,eAA0ClmF,IAA9BimF,gBAAgBC,WAA0BD,gBAAgBC,UAEtElwE,OADqBtjB,KAAKswF,SAASC,YACPsC,WAE5BnE,YDzDgB,SAAjB+E,eAAkBZ,UAAW5C,oBACtC,IAAMvB,eACN,IAAK,IAAMp1F,OAAO22F,mBAAoB,CAClC,IAAMgC,WAAa34F,IAAIgT,MAAM,KACf2lF,WAAWpzE,KAAK,SAAAxmB,GAAC,OAAIA,IAAMw6F,aAErCnE,YAAYxoF,MACR6rF,QAAS9B,mBAAmB32F,KAC5B24F,wBAIZ,OAAOvD,YC6CiB+E,CAAeZ,UADR7yF,KAAKkxF,qBAIhC,GAFAlxF,KAAKqwF,gBAAkBkD,gBAEnBjwE,OAAQ,CACR,IAAMosE,aAAepsE,OAAO87D,SAASj0D,SAC/BuoE,wBAA0B1zF,KAAK2zF,2BAA2BjE,cAChE1vF,KAAKmxF,cAAc0B,WAAaa,wBAChC,IAAME,uBAAyB5zF,KAAK4zF,uBAAuBJ,WAK3D,GAHIA,WACAxzF,KAAKwzF,UAAUX,UAAW1nE,QAASukE,aAAatkE,KAAK,SAAA/yB,GAAC,OAAIA,EAAEw7F,qBAAqBnF,aAEjFkF,uBAAwB,CACxB,IAAME,sBAAwB9zF,KAAK+zF,yBAAyBrF,YAAavjE,QAASooE,iBAClFvzF,KAAKg0F,iBAAiBF,sBAAuBJ,wBAAyBvoE,UAI9E,OAAOnrB,mFAGiB0vF,cACxB,OAAOA,aAAatkE,KAAK,SAAA/yB,GAAC,OAAKA,EAAEw7F,6FAIjC,OAAO,8FAGwBhB,UAAW75F,OAM1C,OALIA,iBAAiBwc,SACjBxV,KAAK+wF,kBAAkB8B,WAAa75F,MAEpCgH,KAAK+wF,kBAAkB8B,WAAa,kBAAM75F,OAEvCgH,mGAGyB0yF,WAAY15F,OACxCA,iBAAiBwc,SACjBxV,KAAK4wF,mBAAmB8B,YAAc15F,MAEtCgH,KAAK4wF,mBAAmB8B,YAAc,kBAAM15F,qDAKhD,OAAOgH,uDAIP,OAAIoF,UAAY1D,QACZ1B,KAAKowF,aAALhrF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKowF,yEAGGjxE,IAEf,OADAqvE,6BAA6BxuF,KAAMmf,IAAI,GAChCnf,mEAGSmf,IAEhB,OADAqvE,6BAA6BxuF,KAAMmf,IAAI,GAChCnf,qEAGU6yF,UAAWoB,gBAC5B,IAAMC,mBAAqBl0F,KAAKgxF,oBAChC,IAAK,IAAM13F,OAAO46F,mBACd,GAAI56F,MAAQ26F,eAAgB,CACxB,IAAME,aAAeD,mBAAmB56F,KACxC66F,aAAalC,WAAakC,aAAalC,WAAWl+E,OAAO,SAAA1b,GAAC,OAAIA,IAAMw6F,YACpE7yF,KAAKo0F,uBAAuB96F,KAIpC,OAAO0G,uEAGW0yF,WAAYG,WAC9B,IAAM5C,mBAAqBjwF,KAAKkxF,oBAEhC,OADAjB,mBAAmB4C,WAAa5C,mBAAmB4C,WAAW9+E,OAAO,SAAA1b,GAAC,OAAKA,EAAEC,MAAQD,KAAOq6F,aACrF1yF,+EAGe0uF,aACtB,OAAOA,wFAGgBrwE,WAGvB,OAFAA,UAAUg2E,YAAY,eACtBh2E,UAAUqvD,GAAG,cAAe1tE,KAAKs0F,0BAC1Bt0F,6EAGe,IAAAqV,OAAArV,KACtB,OAAO,SAACu0F,WACJ,IAAMppE,QAAUopE,UAAUppE,QACpB7H,OAAS6H,QAAQ7H,OAEvBjO,OAAKm/E,kBAAkBlxE,OAAQ6H,SAC3BqoE,WAAW,mEAKHiB,UAAWC,oBAC3B,IAAMzC,WAAayC,oBAAsB10F,KAAKswF,SAASC,YACjDb,aAAe1vF,KAAKywF,cACpBkE,qBAAuB30F,KAAK0wF,sBAElC,IAAK,IAAMp3F,OAAO24F,gBACPn4F,eAAe5B,KAAK+5F,WAAY34F,OACnCo2F,aAAap2F,KAAO,IAAIo0F,kBAAa+G,WACrCE,qBAAqBr7F,KAAO,IAAIo0F,kBAAa+G,WAAW,IAKhE,OAFAz0F,KAAK0wF,sBAAwBiE,qBAC7B30F,KAAK0vF,aAAaA,cACX1vF,yDAIP,OAAIoF,UAAa1D,QACb1B,KAAKywF,cAALrrF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKywF,oFAIZ,IAAMmE,sBAAwB50F,KAAKmwF,uBAEnC,OADAnwF,KAAK0uF,YDxSwB,SAAxB4D,sBAAyB71D,QAASiyD,aAC3C,IAAMmG,eAAiBp4D,QAAQ2zD,aACzBxjF,OAAS6vB,QAAQ7vB,SASvB,OARA8hF,YAAcA,uBAAuB7lF,MAAQ6lF,YAAcj2F,OAAOkmB,OAAO+vE,cAC7D5lF,QAAQ,SAACgsF,YACjB,IAAM3I,WAAa2I,WAAW3I,aACxBgH,mBAAqB0B,eAAe1I,YAC1C0I,eAAe1I,YAAcgH,oBAAsB,IAAI2B,WAAWr4D,SAClE,IAAMs4D,eAAiBnoF,OAAOu/E,YAC9B4I,gBAAkBF,eAAe1I,YAAYv/E,OAAOmoF,kBAEjDF,eC6RcvC,CAAsBtyF,KAAM40F,wBACtC50F,6EAGcgwF,SACrB,IAAMgF,cDrR2B,SAA5BC,0BAA6Bx4D,QAASuzD,SAC/C,IAAMkF,mBAEN,IAAK,IAAM58F,QAAQ03F,aACLl2F,eAAe5B,KAAKI,KAAM03F,WAChCkF,gBAAgB58F,MAAQ03F,QAAQ13F,MAAMmkC,UAG9C,OAAOy4D,gBC6QmBD,CAA0Bj1F,KAAMgwF,SAEtD,OADAv3F,OAAOoU,OAAO7M,KAAKswF,SAASE,SAAUwE,eAC/Bh1F,yDAiBIsjB,OAAQ1a,QAAwB,IAAhBosB,OAAgB5vB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,IAAAA,UAAA,GACrCsvF,mBAAqB10F,KAAKswF,SAASC,YACzC,GAAI3nF,OAAOlH,OAAQ,CACf,GAAI4hB,SAAW8pE,YACX,IAAK,IAAM9zF,OAAOo7F,mBACd10F,KAAK2wF,mBAAmBr3F,MACpBsP,cACAosB,oBAIRh1B,KAAK2wF,mBAAmBrtE,SACpB1a,cACAosB,eAGR,OAAOh1B,KAEX,OAAOA,KAAK2wF,yFAOQwE,WACpB,IAAMC,sBAAwBp1F,KAAKswF,SAASE,SACtCvoF,IAAMjI,KAAKgxF,oBAEjB,IAAK,IAAM1tE,UAAUrb,IACjB,OAAUnO,eAAe5B,KAAKorB,OAAQrb,MAAQqb,UAAY6xE,WAAa7xE,QAAS,CAC5E,IAAIo6B,YAAM,EACJ8zB,OAASvpE,IAAIqb,QACnBo6B,OAAS8zB,OAAO9zB,OAChB,IAAMijC,MAAQnP,OAAOmP,MAChBjjC,SACDA,OAAS19C,KAAKy8B,QAAQ44D,8BAEbxK,YAAuB,IAAVlK,YAA4BrzE,IAAVqzE,OAAuBA,QAC3D3gF,KAAKs1F,wBAAwBF,sBAAsB9xE,QACvDo6B,OAAQ8zB,OAAOygB,YAG3B,OAAOjyF,2FAGqBiI,KAE5B,OADAjI,KAAKgxF,oBAAsBvhB,eAAezvE,KAAKgxF,oBAAqB/oF,KAC7DjI,6EAWcsjB,OAAQiyE,QAASC,eAAe,IAAA79E,OAAA3X,KAiBrD,MAhByB,iBAAbu1F,UACRA,SAAWA,UAEfA,QAAQzsF,QAAQ,SAAC40C,QACb,IAAM7pB,MAAQlc,OAAK8kB,QAAQ5I,QACrBZ,MAAQyqB,OAAO9sB,gBAAgBpb,SAAWkoC,OAASirC,6BAAc90D,OAAOi/B,UAAUpV,QACnFzqB,MAAM2U,UACH3U,iBAAiBpqB,MACjBoqB,MAAMnqB,QAAQ,SAAC8nB,MACXtN,OAAOqlE,6BAAc/3D,MAAO4kE,iBAGhClyE,OAAO2P,MAAOuiE,kBAInBx1F,mEAIP,OAAOA,KAAKqwF,oFAGOjzE,UAA+B,IAArBsF,eAAqBtd,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC5Cq3B,QAAUz8B,KAAKy8B,QACfq0C,kBAAoBpuD,eAAe3X,KAAO2X,eAAe3X,KAC3D0xB,QAAQo0C,4BAA4BzzD,SAAU,OAC5Cq4E,QAAUh5D,QAAQ7zB,SAASs1B,MAC3Bw3D,QAAUj5D,QAAQ7zB,SAASpF,MAC3BmyF,UAAYF,QAAQ32E,MAAM,SAAAxT,OAAK,OAAIA,MAAMzQ,SAAW+6F,yBAAUj3F,UAC9Dk3F,UAAYH,QAAQ52E,MAAM,SAAAxT,OAAK,OAAIA,MAAMzQ,SAAW+6F,yBAAUj3F,UACpE,OACIke,MAAOi0D,kBACPxpD,KAAmB,OAAblK,SAAoB,KAAQsF,eAAe3X,KnG0vB9B,SAAzB+qF,uBAA0Bj5E,MAAOoC,UAAW+J,UAAa,IAEvD1E,cAFuDyxE,mBAClC92E,UAAUV,UAA3BxT,KADmDgrF,mBACnDhrF,KAAMW,OAD6CqqF,mBAC7CrqF,OAEd,GAAIA,OAAOhK,OAAQ,CACf,IAAMs0F,SAAWn5E,MAAM4B,kBACvB6F,cAAgBzH,MAAMqC,OAAO,SAACtW,QAQ1B,OAPgBmC,KAAK8T,KAAK,SAAAxD,KAAG,OAAI3P,OAAOoT,MAAM,SAACC,UAAW/L,KACtD,QAAKgW,UAAejK,UAAUzmB,QAAQ09F,UAC9BA,SAASj3E,UAAUzmB,MAAMsmB,IAAI/jB,OAAS+6F,yBAAUj3F,UAGjD0c,IAAIrI,OAASpK,OAAOmW,UAAUzmB,MAAM0mB,gBAI/CI,WAAW,SAGfkF,cAAgBrF,UAGpB,OAAOqF,cmG/wByDwxE,CAAuB91F,KAAKi2F,cAChFvzE,eAAe3X,KAAK,GAAI4qF,WAAaE,WAAWt3E,UAAU+I,KAAOwpD,kBAAkB,GAAGvyD,UAAU+I,gEAI1FhE,QACd,IAAMR,SAAW9iB,KAAKy8B,QAAQ5D,KAExBq9D,mBADiBl2F,KAAKqwF,qBACavtE,SACrCqzE,2BAQJ,OAPID,oBAAsBpzE,WACtBqzE,yBAA2Bn2F,KAAK0wF,sBAAsBptE,UAGtD4yE,mBACAC,wBAAwBjwF,KAAKlG,KAAK0vF,eAAepsE,SAE9C6yE,0EAIP,OAAOn2F,KAAKy8B,QAAQ1xB,mDAIpB,OAAO/K,KAAKguF,kEAYC6E,WACb,OAAO7yF,KAAKmxF,cAAc0B,0TC5bbuD,oCACjB,SAAAA,iBAAaC,gKAAUC,CAAAt2F,KAAAo2F,kBACnBp2F,KAAKq2F,SAAWA,SAChBr2F,KAAKu2F,UAAW,8RAYVprE,SAAS,IAAAjW,MAAAlV,KACTod,SAAW+N,QAAQ/N,SACnBi5E,SAAWr2F,KAAKq2F,SAChBlK,WAAansF,KAAK6lB,YAAYsmE,aAC9BqK,cAAgBH,SAASI,iBAAiBtK,YAJjCuK,sBAQX12F,KAAKq2F,SAASM,sBAAsBv5E,SAAUpd,KAAKq2F,SAASO,qBAFrD9lB,kBANI4lB,sBAMX75E,MACAyK,KAPWovE,sBAOXpvE,KAOJ,OALsBkvE,cAAcvuF,IAAI,SAACynF,cAErC,OADAx6E,MAAK2hF,gBAAgBvvE,KAAMooE,cACpBx6E,MAAK4hF,gBAAgBpH,aAAc5e,kBAAmB3lD,qEAiBjE,OAAOnrB,6DAGM0vF,aAAc5e,kBAAmB3lD,SAAS,IAAA4rE,sBAKnDrH,aAAasH,UAHb9I,SAFmD6I,sBAEnD7I,SACAC,QAHmD4I,sBAGnD5I,QACAR,YAJmDoJ,sBAInDpJ,YAEEjrE,eAAiB1iB,KAAKq2F,SAASO,oBAC/Bv4E,UAAYre,KAAKq2F,SAASJ,cAC1BgB,WACFC,qBAAsBx0E,eAAew0E,qBACrC74E,oBACAyyD,oCACA6e,gBAAiBjtE,eAAe3X,KAChC2kF,2BAGJ,OACIxB,UAAWuB,WAAW,WAAYvB,SAAS,GAAI+I,WAC3CxH,WAAW,WAAYvB,SAAS,GAAI+I,YACxC9I,SAAUsB,WAAW,WAAYtB,QAAQ,GAAI8I,WACzCxH,WAAW,UAAWtB,QAAQ,GAAI8I,YACtC7H,YAAaK,WAAW,cAAeX,aAAaZ,UAAW+I,WAC/D1H,WAAYE,WAAW,aAAcX,aAAaX,SAAU8I,WAC5DtJ,YAAa8B,WAAW,WAAY9B,YAAasJ,WACjDC,qBAAsBx0E,eAAew0E,qBACrCtuF,OF1BmB,SAAlBuuF,gBAAmBz0E,gBAAkC,IAAlBtF,SAAkBhY,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACxD6e,kBAAoBvB,eAAeuB,kBASzC,OAPIA,kBACeA,kBAAkB4I,YAAY5kB,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OACjD8kB,oBAAoBvU,MACZuU,SAAS,GAET3kB,OAAOqN,KAAKsX,cEkBf+5E,CAAgBz0E,eAAgByI,QAAQ/N,UAChDy2E,oBAA+C,IAA3BnE,aAAa9B,mDASrC5tF,KAAKu2F,UAAW,4CAIhBv2F,KAAKu2F,UAAW,gDAIhB,OAAOv2F,KAAKu2F,qDAZZ,OAAO,6qCCnFMa,mtBAA0BhB,iUAC1B/H,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa2H,aACV,GAAIhJ,OAAO3sF,OAAQ,CAEtB,IAAM41F,eAAiBjJ,OAAOt6E,OAAO,SAAA1b,GAAC,OAAIq3F,aAAa3gE,KAAK12B,KAAO62F,qBACxDQ,aAAa3gE,KAAK12B,KAAO62F,sBACpCQ,aAAa6H,aAJS,IAKdrJ,SAAawB,aAAasH,UAA1B9I,SACRwB,aAAa2H,MAAMvI,aAAaZ,WAChCwB,aAAa14E,IAAIq3E,QACjBqB,aAAaj6D,OAAO6hE,qBAEpB5H,aAAahoD,OAAOgoD,aAAa8H,2CClBhCC,MAAQ,QACRC,UAAY,YACZC,QAAU,UACVC,OAAS,SACT5pF,OAAS,stCCDD6pF,+vBAA2BT,oUAExC,OAAOM,ysCCGMI,mtBAAuBV,oTAEpC,OAAOW,2sCCPMC,8tBAAwBZ,wTAErC,OAAOQ,iDAIP,OAAO,gvCCLMK,ywBAA4B7B,yUAC5B/H,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa2H,aACV,GAAIhJ,OAAO3sF,OAAQ,CACtB,IAAMghB,eAAiB1iB,KAAKq2F,SAASO,oBAE/BU,eAAiBjJ,OAAOt6E,OAAO,SAAA1b,GAAC,OAAIq3F,aAAa3gE,KAAK12B,KAAO62F,qBAC5DQ,aAAa3gE,KAAK12B,KAAO62F,sBAChC,IAAiC,IAA7BxsE,eAAe8wE,UAAqB,CACpC9D,aAAa6H,aADuB,IAE5BrJ,SAAawB,aAAasH,UAA1B9I,SACRwB,aAAa2H,MAAMvI,aAAaZ,WAChCwB,aAAa14E,IAAIq3E,QACjBqB,aAAaj6D,OAAO6hE,oBACjB,CAECA,eAAe51F,QACfguF,aAAa6H,aACb7H,aAAahoD,OAAO4vD,kBAEpB5H,aAAawI,cACbxI,aAAa14E,IAAIq3E,SAPlB,IASKF,QAAYuB,aAAasH,UAAzB7I,QACFgK,cAAgBrJ,aAAaX,SAC7BiK,iBAAmB1I,aAAa8H,iBAAiB91F,OACnDy2F,cAAcz2F,SAAW02F,kBACzB1I,aAAa2H,cAIrB3H,aAAahoD,OAAOgoD,aAAa8H,kBAGrC,OAAOx3F,guCCpCMq4F,guBAAwBJ,4TAErC,OAAOjqF,8BCgFAsqF,mBA9EwC,SAAtBA,oBAAuBC,WAAY3rF,OAAQ4R,cACxE,IAAM+5E,WAAWC,KAAKt6D,IAAKq6D,WAAWC,KAAKh1F,EACvC,OACI4Z,SAAU,MAIlB,IAAMo7E,KAAOD,WAAWC,KAClBC,MAAQD,KAAKt6D,EAAE,GACfw6D,MAAQF,KAAKh1F,EAAE,GACfm1F,WAAaJ,WAAW3vF,OACxBgwF,OAASD,WAAWz6D,EAAE,GAAG26D,aAAa,GACtCC,OAASH,WAAWn1F,EAAE,GAAGq1F,aAAa,GACtCE,WAAav6E,aAAao6E,QAAQh6E,IAAItI,QACtC0iF,WAAax6E,aAAas6E,QAAQl6E,IAAItI,QACtCwS,cACAmwE,MAAQrsF,OAAOssF,SACfC,OAASvsF,OAAOusF,OAEtB,GAAIF,MAAM/6D,IAAMi7D,OAAOj7D,GAAK+6D,MAAMz1F,IAAM21F,OAAO31F,EAC3C,OACI4Z,SAAU,MAIlB,IAAMg8E,QAAUL,aAAeM,8BAAe56F,WAAcu6F,aAAeK,8BAAe56F,YACrF,IAAK,MAAQ,MAAS,KACrB2e,YACAk8E,aAAeP,aAAehvB,gCAAiB3rE,YAC/Cm7F,aAAeP,aAAejvB,gCAAiB3rE,YAC/Co7F,OAASf,MAAM7uD,aAAaqvD,MAAM/6D,EAAGi7D,OAAOj7D,GAC5Cu7D,OAASf,MAAM9uD,aAAaqvD,MAAMz1F,EAAG21F,OAAO31F,GAC5Ck2F,iBACFx7D,EAAG+6D,MAAM/6D,IAAMi7D,OAAOj7D,KAAUo7D,aAAeE,OAASA,OAAOjmF,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,IAClFI,EAAGy1F,MAAMz1F,IAAM21F,OAAO31F,KAAU+1F,aAAeE,OAASA,OAAOlmF,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,KAEhFu2F,YAEN,GAAuB,IAAnBP,QAAQ13F,QAGR,GAFAi4F,SAASf,QAAUc,gBAAgBx7D,EACnCy7D,SAASb,QAAUY,gBAAgBl2F,EAC/Bo1F,SAAWE,OAAQ,CACnB,IAAMc,KAAOF,gBAAgBx7D,EACvB27D,KAAOH,gBAAgBl2F,EACvBiR,IAAMmlF,KAAK,GAAKC,KAAK,GAAKA,KAAOD,KACjCllF,IAAMD,MAAQolF,KAAOD,KAAOC,KAC9BplF,IAAI,GAAKC,IAAI,GACbilF,SAASf,WAETe,SAASf,SAAWlkF,IAAI,GAAID,IAAI,GAAKC,IAAI,GAAKD,IAAI,GAAKC,IAAI,IAE/DoU,WAAWoV,GAAK+6D,MAAM/6D,EAAGi7D,OAAOj7D,GAChCpV,WAAWtlB,GAAKy1F,MAAMz1F,EAAG21F,OAAO31F,SAGpC4Z,SAASg8E,QAAQ,IAAMM,gBAAgBN,QAAQ,QAE5B,MAAfA,QAAQ,IACRO,SAASf,QAAUx7E,SAAS8gB,EACxB66D,aAAehvB,gCAAiB3rE,cAChC0qB,WAAWoV,EAAKtxB,OAAOktF,MAAQb,MAAM/6D,IAAMi7D,OAAOj7D,EAAKu6D,MAAMsB,gBAAgBd,MAAM/6D,EAAGi7D,OAAOj7D,IACxF+6D,MAAM/6D,EAAGi7D,OAAOj7D,MAGzBy7D,SAASb,QAAU17E,SAAS5Z,EACxBw1F,aAAejvB,gCAAiB3rE,cAChC0qB,WAAWtlB,EAAKoJ,OAAOktF,MAAQb,MAAMz1F,IAAM21F,OAAO31F,EAAKk1F,MAAMqB,gBAAgBd,MAAMz1F,EAAG21F,OAAO31F,IACxFy1F,MAAMz1F,EAAG21F,OAAO31F,KAKjC,OACI4Z,SAAUu8E,SACV7wE,wBCpEKkxE,2BAAkB,SAAlBA,gBAAmBC,SAAUhI,WAAYoE,SAAU1V,OAC5D,IAEIuZ,WAGAC,WALAjB,YACAC,UAGEiB,OAASjQ,2BAEf8P,SAAS/hG,KAAKkiG,SAAS1sB,GAAG,QAAS,WAC/B,IAAM6M,MAAQ0P,0BACdiP,UACIh7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,GAEb02F,WAAa7D,SAAS55D,QAAQ49D,oBAC9BF,YAAa,IAAIv6F,MAAO2K,YACzBmjE,GAAG,OAAQ,WACV,IAAM6M,MAAQ0P,0BAKd,GAJAkP,QACIj7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,KAETm9E,OAAS98E,KAAKsoB,IAAI+sE,SAASh7D,EAAIi7D,OAAOj7D,IAAM,GAAhD,CAGAi7D,OAAOj7D,EAAIr6B,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAOj7D,EAAGg8D,WAAWt+D,QACrDu9D,OAAO31F,EAAIK,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAO31F,EAAG02F,WAAWr+D,SAErD,IAAM1Q,QAAUmtE,mBAAoBjC,SAAS55D,QAAQ69D,iBACjDpB,kBACAC,eACD9C,SAAS55D,QAAQ1xB,OAAO0T,mBAC3BwzE,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKpvE,cAC3DuiD,GAAG,MAAO,WACT,IAAM6M,MAAQ0P,0BACdkP,QACIj7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,GAEb,IAAM2iF,UAAW,IAAIvmF,MAAO2K,UAAY4vF,WAExC,KAAIxZ,OAASwF,SAAW,KAAOtiF,KAAKsoB,IAAI+sE,SAASh7D,EAAIi7D,OAAOj7D,IAAM,GAAlE,CAGAi7D,OAAOj7D,EAAIr6B,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAOj7D,EAAGg8D,WAAWt+D,QACrDu9D,OAAO31F,EAAIK,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAO31F,EAAG02F,WAAWr+D,SAErD,IAAM1Q,QAAUmtE,mBAAoBjC,SAAS55D,QAAQ69D,iBACjDpB,kBACAC,cACAW,MAAM,GACPzD,SAAS55D,QAAQ1xB,OAAO0T,mBAC3B0M,QAAQqvE,SAAU,EAClBvI,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKpvE,gBCvBnDsvE,eAjC0B,SAARA,MAAQpE,UAAQ,OAAI,SAAC4D,SAAUhI,YAC5D,IAAMuC,kBAAoB,SAApBA,kBAA8BxtF,MAChC,IAAMuzE,MAAQ0P,0BACRxtD,QAAU45D,SAAS55D,QAEnBvjC,KADcujC,QAAQ7vB,SAAS8tF,YAAYC,QACxBzhG,KACnB6wF,IAAMD,8BAAertD,QAAQ49D,oBAAoBO,aAAcrgB,OAC/DsgB,aAAep+D,QAAQq+D,gBAAgB/Q,IAAI7rD,EAAG6rD,IAAIvmF,GACpDu3F,aChBgB,iBDgBF7hG,MCfA,eDeyBA,KACvC6R,KAAM/D,KACNuzE,cAEEpvD,SACF/N,SAAUy9E,aAAeA,aAAahiE,GAAK,KAC3CmiE,eAAgBH,aAAaG,eAC7Bt9C,OAAQm9C,aAAan9C,OACrBlb,SAAUunD,IACV7wF,WAGJ+4F,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKpvE,WAC1DovD,MAAMtjD,mBAGVgjE,SAASvsB,GAAG,YAAa8mB,mBACR9mB,GAAG,YAAa8mB,mBAChB9mB,GAAG,WAAY,WACZukB,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,KACjDn9E,SAAU,aEnCzB69E,iCAA2B,SAA3BA,yBAAqCj0F,KAAMuzE,MAAO8b,UAC3D,IAAM55D,QAAU45D,SAAS55D,QACnBstD,IAAMD,8BAAertD,QAAQ49D,oBAAoBO,aAAcrgB,MAAMkG,QAAUlG,MAAMkG,QAAQ,GAAKlG,OAClGsgB,aAAep+D,QAAQq+D,gBAAgB/Q,IAAI7rD,EAAG6rD,IAAIvmF,GACpDuH,KAAM/D,KACNuzE,cAEJ,OACIn9D,SAAUy9E,aAAeA,aAAahiE,GAAK,KAC3CmiE,eAAgBH,aAAaG,eAC7Bt9C,OAAQm9C,aAAan9C,OACrBlb,SAAUunD,MCMHmR,eAV0B,SAARA,MAAQ7E,UAAQ,OAAI,SAAC4D,SAAUhI,YAQ5DgI,SAASvsB,GAAG,QAPc,SAApB8mB,kBAA8BxtF,MAChC,IAAMuzE,MAAQ0P,0BACR9+D,QAAU8vE,iCAAyBj0F,KAAMuzE,MAAO8b,UACtDpE,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKpvE,WAC1DovD,MAAMtjD,kMCPP,IAAMi+D,iBAAeiG,wBAAAC,oBACvBC,KCAmC,SAAP7Y,KAAO6T,UAAQ,OAAI,SAAC4D,SAAUhI,YAC3D+H,2BAAgBC,SAAUhI,WAAYoE,aDFd8E,wBAAAC,iBAEvBC,MAAoBZ,gBAFGU,wBAAAC,iBAGvBC,MAAoBH,gBAHGC,wBAAAC,iBAIvBC,UEDoB,SAAZC,UAAYjF,UAAQ,OAAI,SAAC4D,SAAUhI,YAC5C,IAAI1X,MACAghB,SAOJA,UAAW,EACXhhB,MAAQ0P,0BACRgQ,SAASvsB,GAAG,aAAc,SAAC1mE,MACvBuzE,MAAQ0P,0BACRsR,UAAW,EACXzrE,WAAW,WACFyrE,SAGDtJ,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,KACjDn9E,SAAU,SAhBA,SAApBo3E,kBAA8BxtF,MAChC,IAAMmkB,QAAU8vE,iCAAyBj0F,KAAMuzE,MAAO8b,UACtDpE,WAAWnpF,QAAQ,SAAAyxF,KAAG,OAAIlE,SAAS7B,kBAAkB+F,IAAKpvE,WAC1DovD,MAAMtjD,kBAUEu9D,CAAkBxtF,OAMvB,OACJ0mE,GAAG,WAAY,WACd6tB,UAAW,OF3BSJ,wBAAAC,iBAKvBC,UGJoB,SAAZG,UAAYnF,UAAQ,OAAI,SAAC4D,SAAUhI,YAC5C+H,2BAAgBC,SAAUhI,WAAYoE,UAAU,MHFxB+E,kBIPfK,OACTC,aACIjvB,aAAc,SAAAA,aAAAvrE,KAAG,OAAIA,iTCAdy6F,mBCaX,SAAAA,kBAAatF,2KAAUuF,CAAA57F,KAAA27F,mBACnB37F,KAAKq2F,SAAWA,SAChBr2F,KAAKu2F,UAAW,EAChBv2F,KAAK67F,UAAY,UACjB77F,KAAKixF,WACLjxF,KAAKumF,IAAMj8E,cACXtK,KAAK87F,eACL/sB,sBAAsB/uE,KAAMy7F,OAC5Bz7F,KAAK4M,OAAO5M,KAAK6lB,YAAYk2E,6UAiD7B,OAAI32F,UAAO1D,QACP1B,KAAKixF,QAAUxhB,eAAezvE,KAAKixF,QAAN7rF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACtBpF,MAEJA,KAAKixF,kDAKZ,OADAjxF,KAAKu2F,UAAW,EACTv2F,6CAKP,OADAA,KAAKu2F,UAAW,EACTv2F,mDAIP,OAAOA,KAAKu2F,+CAyBZ,OAAOv2F,qDAWE1H,KAAM6mB,IAIf,OAHIA,KACAnf,KAAK87F,YAAYxjG,MAAQ6mB,IAEtBnf,6DAjGP,yDAUA,MAAO,kDAIP,MAAO,gDAWP,OAAO,wuCChCMg8F,0vBAA4BL,iUA2BtBnpF,KAA0CpN,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,IAAAA,UAAA,OAAxB62F,gBAAwB72F,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAP/F,MAAOnC,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAI7D,OAHetN,KAAKq2F,SAAS55D,QAAQy/D,SAC9BpzF,QAAQ,SAAAqzF,OAAK,OAAmC,IAA/BA,MAAMvvF,SAASwvF,aACnCD,MAAME,sBAAsBJ,gBAAiBzpF,IAAI8U,KAAM/f,SACpDvH,6uCC7BMs8F,owBAA4BX,iTAY9B7iE,UAAW+vD,SAAU99E,KAAMk2B,UAAW6nD,WACjD,OAAOF,YAAY9vD,UAAW+vD,SAAU99E,KAAMk2B,UAAW6nD,mEAiBzD,OAAI1jF,UAAe1D,QACf1B,KAAKu8F,gBAALn3F,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKu8F,sDAIZ,OAAOv8F,yCAIP,OAAOA,slBCpER,IA2GMw8F,wBAAmB,SAAnBA,iBAAoB//D,QAASggE,gBAAiBC,SACvD,IAAM9vF,OAAS6vB,QAAQ7vB,SACjBq0B,UAAYr0B,OAAO+vF,aACnBC,YAAchwF,OAAOgwF,YAC3BjU,6BAAc8T,iBAAiB3pC,UAA/B,IAAAn3C,OAA6CihF,YAA7C,KAAAjhF,OAA4DslB,YAC3CnH,MAAM,UAAW4iE,QAAU,QAAU,8vCCuB3CG,8uBAxHYP,4TAmChB5M,aAAcvkE,SACjB,IAAI+S,EACA16B,EACAo4B,MACAC,OACEjvB,OAAS5M,KAAKixF,QACd6L,QAAUlwF,OAAOmwF,IACjB1G,SAAWr2F,KAAKq2F,SAChB6D,WAAal6F,KAAKg9F,iBAClB5mE,WAAa8jE,WAAWuC,gBACxBQ,UAAY/C,WAAWt+D,MACvBshE,WAAahD,WAAWr+D,OACxB+gE,YAAchwF,OAAOgwF,YACrBO,wBAA0BvwF,OAAO+vF,aAEvC,GAAyB,OAArBxxE,QAAQ/N,SAER,OADApd,KAAKo9F,KAAKlD,YACHl6F,KAGX,IAAMq9F,UAAYhH,SAAS55D,QAAQ69D,gBApBTgD,sBDlDS,SAA9BC,4BAA+BpyE,QAASqtE,KAAMG,YACvD,IAAI92C,GACA2S,GACAF,GACAG,GACA+kC,OACAC,OACA+D,UACEpgF,SAAW+N,QAAQ/N,SACnB0L,WAAaqC,QAAQrC,eACrB20E,KAAO30E,WAAWoV,EAClBw/D,KAAO50E,WAAWtlB,EAExB,GAAiB,OAAb4Z,SACA,OAAO,KAGX,IAAMq7E,MAAQD,KAAKt6D,EAAE,GACfw6D,MAAQF,KAAKh1F,EAAE,GACfm6F,QAAuC,WAA7BlF,MAAM5yE,YAAYhrB,OAC5B+iG,QAAuC,WAA7BlF,MAAM7yE,YAAYhrB,OAC5B+9F,OAAM,GAAAj9E,OAAMg9E,WAAWz6D,EAAE,IACzB46D,OAAM,GAAAn9E,OAAMg9E,WAAWn1F,EAAE,IACzBq6F,UAAYzgF,SAASw7E,QACrBkF,UAAY1gF,SAAS07E,QAU3B,GARI+E,WAAaA,UAAU,aAAch1F,OACrC2wF,OAASqE,UAAU,GACnBpE,OAASoE,UAAU,KAEnBrE,OAASqE,cACTpE,OAASqE,eAEbN,UAAYK,WAAaC,UAAY,OAAUD,UAAY,WAAa,aACpErE,QAAUA,OAAO93F,OACjB,GAAkC,SAA7Bg3F,MAAM7yE,YAAYhrB,QAAqB8iG,QACxC97C,GAAK2S,QAAKlnD,EACVkwF,UAAY,iBACT,CACH,IAEIO,MACAC,MAHEjnF,OAAS0hF,MAAM1hF,SACfknF,UAAyC,SAA7BxF,MAAM5yE,YAAYhrB,OAGpC,GAAIojG,UAAW,CACX,IAAIC,cAAgBnnF,OAAO9Q,QAAQuzF,OAAO,IACtC2E,cAAgBpnF,OAAO9Q,QAAQuzF,OAAOA,OAAO93F,OAAS,IAF/C08F,OAAAC,sBAGuBH,cAAeC,eAAe5qF,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,IAHxE,GAGV86F,cAHUE,OAAA,GAGKD,cAHLC,OAAA,GAIXL,MAAQhnF,OAAOmnF,eACfF,MAAQjnF,OAAOonF,oBAEfJ,MAAQvE,OAAO,GACfwE,MAAQxE,OAAOA,OAAO93F,OAAS,GAEnCmgD,GAAK42C,MAAM6F,cAAcP,OACzBvpC,GAAKikC,MAAM6F,cAAcN,OACzBxpC,IAAMypC,UAAYxF,MAAM8F,eAAiB,OAG7C18C,GAAK2S,QAAKlnD,EAEd,GAAImsF,QAAUA,OAAO/3F,OACjB,GAAkC,SAA7B+2F,MAAM5yE,YAAYhrB,QAAqB+iG,QACxCtpC,GAAKG,QAAKnnD,EACVkwF,UAAY,eACT,CACH,IAEIgB,MACAC,MAHE1nF,QAAS2hF,MAAM3hF,SAIrB,GAH+C,SAA7B2hF,MAAM7yE,YAAYhrB,OAGrB,CACX,IAAI6jG,cAAgB3nF,QAAO9Q,QAAQwzF,OAAO,IACtCkF,cAAgB5nF,QAAO9Q,QAAQwzF,OAAOA,OAAO/3F,OAAS,IAF/Ck9F,OAAAP,sBAGuBK,cAAeC,eAAeprF,KAAM,SAACpZ,EAAGiJ,GAAJ,OAAUA,EAAIjJ,IAHzE,GAGVukG,cAHUE,OAAA,GAGKD,cAHLC,OAAA,GAIXJ,MAAQznF,QAAO2nF,eACfD,MAAQ1nF,QAAO4nF,oBAEfH,MAAQ/E,OAAO,GACfgF,MAAQhF,OAAOA,OAAO/3F,OAAS,GAEnC4yD,GAAKokC,MAAM4F,cAAcE,OACzB/pC,GAAKikC,MAAM4F,cAAcG,OACzBhqC,IAAmC,SAA7BikC,MAAM7yE,YAAYhrB,OAAoB69F,MAAM6F,eAAiB,OAGvEjqC,GAAKG,QAAKnnD,EAGd,GAAKswF,SAAWD,UAAaxyE,QAAQqvE,QAAS,CAC1C,GAAIiD,KAAM,KAAAoB,MAAAR,qBACKZ,KADL,GACL57C,GADKg9C,MAAA,GACDrqC,GADCqqC,MAAA,GAGV,GAAInB,KAAM,KAAAoB,MAAAT,qBACKX,KADL,GACLppC,GADKwqC,MAAA,GACDrqC,GADCqqC,MAAA,IAKd,OACIroF,WACIorC,MACA2S,MACAF,MACAG,OAEJ+oC,qBChCiCD,CAA4BpyE,QAASkyE,UAAU7E,KAC5E6E,UAAUz0F,QADN6N,UArBkB6mF,sBAqBlB7mF,UAAW+mF,UArBOF,sBAqBPE,UAEbjqC,WAAapoC,QAAQqvE,SAAW5tF,OAAO2mD,WAE3B,SAAdiqC,WAAsC,aAAdA,WACxBt/D,EAAIr6B,KAAK4Q,IAAIgC,UAAUorC,GAAIprC,UAAU+9C,IACrC54B,MAAQ/3B,KAAKsoB,IAAI1V,UAAU+9C,GAAK/9C,UAAUorC,MAE1C3jB,EAAI,EACJtC,MAAQqhE,WAEM,SAAdO,WAAsC,eAAdA,WACxBh6F,EAAIK,KAAK4Q,IAAIgC,UAAU69C,GAAI79C,UAAUg+C,IACrC54B,OAASh4B,KAAKsoB,IAAI1V,UAAUg+C,GAAKh+C,UAAU69C,MAE3Cz4B,OAASqhE,WACT15F,EAAI,GAERxD,KAAK++F,KAAK7E,YAEV,IAAMrkB,SAEE33C,IACA16B,IACAo4B,YACAC,gBAMF62D,WAAa1yF,KACb6yD,UAHiB+1B,YAAYD,6BAAcvyD,YAAa,KAAM,GAAlC,IAAAza,OAC1BihF,YAD0B,KAAAjhF,OACXwhF,0BAEUrqC,UAAU,QAAQ/nD,KAAK8qE,QAClDgb,aAAeh+B,UAAUM,QAAQn+B,OAAO,QAC7ByS,KAAK,YCpGE,SAAnBu3D,iBAAmB3I,UAAQ,OAAI,SAAC4D,SAAUhI,YACnD,IAAIxQ,QACAyY,WACEz9D,QAAU45D,SAAS55D,QACnBwiE,OAAS,SAATA,OAAU9zE,SACZ8mE,WAAWnpF,QAAQ,SAAAwa,QAAM,OAAI+yE,SAAS7B,kBAAkBlxE,OAAQ6H,YAE9DivE,OAASjQ,2BAEf8P,SAAS/hG,KAAKkiG,SAAS1sB,GAAG,QAAS,WAC/B,IAAM6M,MAAQ0P,0BACdiQ,WAAaz9D,QAAQ49D,oBACrB5Y,QAAUlH,MAAMkH,UACjB/T,GAAG,OAAQ,WACV,IAAM6M,MAAQ0P,0BACdxI,QAAQvjD,GAAKq8C,MAAM1kB,GACnB4rB,QAAQj+E,GAAK+2E,MAAMzkB,GACnB,IAAMl6B,MAAQs+D,WAAWt+D,MACnBC,OAASq+D,WAAWr+D,OACpBqC,EAAIr6B,KAAK4Q,IAAImnB,MAAQ6lD,QAAQ7lD,MAAO/3B,KAAK6Q,IAAI+sE,QAAQvjD,EAAG,IACxD16B,EAAIK,KAAK4Q,IAAIonB,OAAS4lD,QAAQ5lD,OAAQh4B,KAAK6Q,IAAI+sE,QAAQj+E,EAAG,IAC1DixD,GAAKjxD,EAAIi+E,QAAQ5lD,OACjB24B,GAAKt2B,EAAIujD,QAAQ7lD,MAEvB,GAAIsC,GAAK,GAAKs2B,IAAM54B,OAASp4B,GAAK,GAAKixD,IAAM54B,OAAQ,CACjD,IAAM1Q,QAAUmtE,mBAAoB77D,QAAQ69D,iBACxCpB,UACIh7D,IACA16B,KAEJ21F,QACIj7D,EAAGs2B,GACHhxD,EAAGixD,KAERh4B,QAAQ1xB,OAAO0T,mBAClBwgF,OAAO9zE,YAEZuiD,GAAG,MAAO,WACT,IAAM9xC,MAAQs+D,WAAWt+D,MACnBC,OAASq+D,WAAWr+D,OACpBqC,EAAIr6B,KAAK4Q,IAAImnB,MAAQ6lD,QAAQ7lD,MAAO/3B,KAAK6Q,IAAI+sE,QAAQvjD,EAAG,IACxD16B,EAAIK,KAAK4Q,IAAIonB,OAAS4lD,QAAQ5lD,OAAQh4B,KAAK6Q,IAAI+sE,QAAQj+E,EAAG,IAC1DixD,GAAKjxD,EAAIi+E,QAAQ5lD,OACjB24B,GAAKt2B,EAAIujD,QAAQ7lD,MAEvB,GAAIsC,GAAK,GAAKs2B,IAAM54B,OAASp4B,GAAK,GAAKixD,IAAM54B,OAAQ,CACjD,IAAM1Q,QAAUmtE,mBAAoB77D,QAAQ69D,iBACxCpB,UACIh7D,IACA16B,KAEJ21F,QACIj7D,EAAGs2B,GACHhxD,EAAGixD,IAEPqlC,MAAM,GACPr9D,QAAQ1xB,OAAO0T,mBAClB0M,QAAQqvE,SAAU,EAClByE,OAAO9zE,cD2CS6zE,CAAiB3I,SAAjB2I,CAA2BrW,6BAAc3oF,OAAQ,SAAU0yF,cAE9D9oF,MAAMipD,WACNprB,KAAK,SAAUgiD,OACZ,IAAItR,QAAUwQ,6BAAc3oF,MAE5B,IAAK,IAAM1G,OADXi6D,aAAe4kB,QAAUA,QAAQ5kB,aAAa4yB,SAAS5yB,WAAW4yB,WAChDsD,WACP3vF,eAAe5B,KAAKuxF,MAAOnwF,MAC9Bs4E,aAAa6X,MAAMnwF,OAAS6+E,QAAQ/kB,KAAK95D,IAAKmwF,MAAMnwF,QAK1E4lG,aAAe5yB,sBAAsBwwB,QAAQH,aAAc38F,KAAKumF,IAAKqW,aAI3E,OAHA/L,aAAarS,QAAQ0gB,aAAan8F,KAAK,MAAM,GAC7C8tF,aAAarS,QAAQse,QAAQ77D,WAAW,GAEjCjhC,uCAGLk6F,YACFsC,wBAAiBx8F,KAAMk6F,WAAWuC,iBAAiB,qCAGjDvC,YACFsC,wBAAiBx8F,KAAMk6F,WAAWuC,iBAAiB,2DA9GnD,OACIE,aAAc,sBACd17D,UAAW,GACX27D,Yb1Be,Oa2BfG,KACIJ,aAAc,gBACd17D,UAAW,IAEfsyB,YACI4yB,SAAU,sDAMlB,MAAO,mCE7BFgZ,eACT38D,SAAU,WACV5G,MAAO,EACPC,OAAQ,GCVCkgE,8BACTa,YDHuB,OCIvBD,aAAc,cACdyC,mBAAoB,qBACpBn+D,UAAW,GACX5lB,KACIgkF,OAAQ,GAEZC,SACI7sC,QAAS,EACT8sC,kBAAmB,GACnBC,UAAW,EACXC,UAAW,SACXC,UAAW,UACXC,UAAW,MACXN,OAAQ,GACRO,UAAW,IACX3+D,UAAW,4BACX4+D,gBAAiB,oCAErBC,OACIrlE,KAAM,GACNslE,UAAU,EACVpD,aAAc,gBACd17D,UAAW,GACXyT,MAAO,2BCxBFsrD,mBAAc,SAAdA,YAAe9tC,OAAQ+tC,IAAKC,YAAatzF,QAClD,IAAIuzF,SACIjiE,EAA8BgiE,YAA9BhiE,EAAG16B,EAA2B08F,YAA3B18F,EAAG48F,UAAwBF,YAAxBE,UAAWC,SAAaH,YAAbG,SAEnBC,WADgB1zF,OAAOkzF,MAAMC,SACA,EAAInzF,OAAOkzF,MAAMrlE,KAEpD,GFLsB,SEKlBy3B,QFRmB,UEQMA,OAAwB,CACjD,IAAIz0D,MAAQ,EACRwnC,KAAOm7D,UAAY,EACjBG,WAAaN,IAAIz8F,EAAIy8F,IAAIpkE,OACzB2kE,UAAYh9F,EAAI48F,UAElBH,IAAIz8F,EAAIA,GACR/F,MAAQwiG,IAAIz8F,EAAIA,EAChByhC,MAAQs7D,YAAcC,UAAaA,UAAYP,IAAIz8F,EAAKy8F,IAAIpkE,QAAU,GAC/D2kE,UAAYD,aACnBt7D,KAAOphC,KAAKsoB,IAAI3oB,GAAKy8F,IAAIz8F,EAAIy8F,IAAIpkE,SAAW,GAEhDskE,SAAW1iG,MAAQwnC,KAAOq7D,WAAa,MACpC,CACH,IAAI7iG,OAAQ,EACRwnC,MAAOo7D,SAAW,EAChBI,UAAYR,IAAI/hE,EAAI+hE,IAAIrkE,MACxB8kE,SAAWxiE,EAAImiE,SAEjBJ,IAAI/hE,EAAIA,GACRzgC,OAAQwiG,IAAI/hE,EAAIA,EAChB+G,OAAQw7D,WAAaC,SAAYA,SAAWT,IAAI/hE,EAAK+hE,IAAIrkE,OAAS,GAC3D8kE,SAAWD,YAClBx7D,MAAOphC,KAAKsoB,IAAI+R,GAAK+hE,IAAI/hE,EAAI+hE,IAAIrkE,QAAU,GAE/CukE,SAAW1iG,OAAQwnC,MAAOq7D,WAAa,EAE3C,OAAOH,UAUEQ,kBAAa,SAAbA,WAAclkE,QAAS+F,SAAU29D,UAC1C,IAAMS,aAAenkE,QAAQokE,cACvBC,kBAAoBrkE,QAAQskE,mBAC5Bn0F,OAAS6vB,QAAQw0D,QACjB2L,YAAchwF,OAAOgwF,YACrBoE,UAAYp0F,OAAOkzF,MACnB7+D,UAAYqrC,sBAAsB00B,UAAUrE,aAAclgE,QAAQ8pD,IAAK35E,OAAOgwF,aAEpFgE,aAAa9mE,MAAM,UAAW,SAC9B8mE,aAAaxtC,KAAK,QAAlB,GAAAz3C,OAA8BslB,UAAUl+B,KAAK,OFlDrB,SEmDpBy/B,UFlDqB,UEkDQA,UAC7Bo+D,aAAa9mE,MAAM,MAAnB,GAAAne,OAA6BwkF,SAA7B,OACAS,aAAa9mE,MAAM,OAAQ,IAC3BgnE,kBAAkBhnE,MAAM,MAAxB,GAAAne,OAAkCwkF,SAAlC,OACAW,kBAAkBhnE,MAAM,OAAQ,MFrDV,WEuDtB0I,SAA8Bo+D,aAAa9mE,MAAM,MAAO,QAAU8mE,aAAa9mE,MAAM,MAAnB,IAAAne,OAC1DqlF,UAAUvmE,KADgD,OAElEmmE,aAAa9mE,MAAM,OAAnB,GAAAne,OAA8BwkF,SAA9B,OFzDsB,WE0DtB39D,SAA8Bs+D,kBAAkBhnE,MAAM,MAAO,QAAUgnE,kBAAkBhnE,MAAM,MAAxB,IAAAne,OAC/DqlF,UAAUvmE,KAAO,EAD8C,OAEvEqmE,kBAAkBhnE,MAAM,OAAxB,GAAAne,OAAmCwkF,SAAnC,QAEJS,aAAapiB,QAAb,GAAA7iE,OAAwBihF,YAAxB,mBAAqD,GACrDgE,aAAapiB,QAAb,GAAA7iE,OAAwBihF,YAAxB,mBAAAjhF,OAAqD8gB,QAAQwkE,oBAAqB,GAClFL,aAAapiB,QAAb,GAAA7iE,OAAwBihF,YAAxB,mBAAAjhF,OAAqD6mB,WAAY,GACjEs+D,kBAAkBtiB,QAAlB,GAAA7iE,OAA6BihF,YAA7B,8BAAqE,GACrEkE,kBAAkBtiB,QAAlB,GAAA7iE,OAA6BihF,YAA7B,8BAAAjhF,OAAqE8gB,QAAQwkE,oBAAqB,GAClGH,kBAAkBtiB,QAAlB,GAAA7iE,OAA6BihF,YAA7B,8BAAAjhF,OAAqE6mB,WAAY,2TC5DhE0+D,2BAIjB,SAAAA,gKAAeC,CAAAnhG,KAAAkhG,SACXlhG,KAAKohG,OAAS,KACdphG,KAAKqhG,WAAa,KAClBrhG,KAAKixF,QAAUjxF,KAAK6lB,YAAYk2E,iSAahC,OAAI32F,UAAE1D,OAAS,GACX1B,KAAKixF,QAAUxhB,eAAezvE,KAAKixF,QAAN7rF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACtBpF,MAEJA,KAAKixF,8CAORlnF,MAGJ,OAFA/J,KAAKohG,OAASr3F,KAAK8S,MACnB7c,KAAKqhG,WAAat3F,KAAK3H,UAChBpC,6CAGFshG,KAEL,OADAthG,KAAKw8B,SAAW8kE,IACTthG,2CAGH6zB,OACJ,IAAI9oB,KACE6B,OAAS5M,KAAKixF,QACdsO,kBAAoB3yF,OAAO2yF,kBAC3Bn9F,UAAYpC,KAAKqhG,WACjB1B,UAAY/yF,OAAO+yF,UACnB9iF,MAAQ7c,KAAKohG,OASnB,GAPAphG,KAAKuhG,OAAS1tE,OAEV9oB,KADA8R,iBAAiBhU,MACVgU,MAEAza,UAAUpC,KAAKohG,OAAQphG,KAAK4M,SAAU5M,KAAKw8B,qBAGlChnB,SAChBqe,MAAMirD,KAAK/zE,YACR,CACH,IAAIu0F,QAAUv0F,KACVy2F,cAAgB,UAEhBlyE,eAAevkB,QACfu0F,QAAUv0F,KAAKu0F,QACfkC,cAAgBz2F,KAAKy2F,eAGzB,IAAM59D,KAAOglD,YAAY/0D,MAAO,OAAQ2tE,eAAhB,GAAA7lF,OAAmC/O,OAAOgwF,YAA1C,uBACpB,SAAAvkG,GAAC,OAAIA,IAET,GAAsB,UAAlBmpG,cAA2B,CAC3B,IAAMC,MAAQ7Y,YAAYhlD,KAAM,SAAU,GAAjB,GAAAjoB,OAAwB/O,OAAOgwF,YAA/B,mBACnB8E,MAAQ9Y,YAAY6Y,MAAO,SAAU,GAAlB,GAAA9lF,OAAyB/O,OAAOgwF,YAAhC,yBACnB7hF,KAAO6tE,YAAY8Y,MAAO,KAAMpC,QAAd,GAAA3jF,OAA0B/O,OAAOgwF,YAAjC,uBACxB7hF,KAAK0sB,KAAK,SAAUpvC,EAAGN,GACnB4wF,6BAAc3oF,MAAMw+E,QAApB,GAAA7iE,OAA+B/O,OAAOgwF,YAAtC,uBAAAjhF,OAAuE5jB,IAAK,KAElE6wF,YAAY7tE,KAAM,KAAM,SAAA1iB,GAAC,OAAIA,GAAlB,GAAAsjB,OAAwB/O,OAAOgwF,YAA/B,wBACnBn1D,KAAK,SAAUpvC,GACjBswF,6BAAc3oF,MAAM8+E,KAAKzmF,SAE1B,CACH,IAAM0iB,MAAO6tE,YAAYhlD,KAAM,MAAO07D,QAAd,GAAA3jF,OAA0B/O,OAAOgwF,YAAjC,iBAClBn7B,OAAQmnB,YAAY7tE,MAAM,OAAQ,SAAA1iB,GAAC,OAAIA,GAApB,GAAAsjB,OAA0B/O,OAAOgwF,YAAjC,qBACzBn7B,OAAMrO,KAAK,QAAX,GAAAz3C,OAAuB/O,OAAOgwF,YAA9B,qBACAjT,yBAAU5uE,OACNskF,OAAQM,YAEZhW,yBAAUloB,QACNj8B,QAAS,eACTm8D,eAAA,GAAAhmF,OAAmB/O,OAAO6lD,QAA1B,QAGJgP,OAAMh6B,KAAK,SAAUpvC,GACjB,IAAMupG,GAAKjZ,6BAAc3oF,MAEzB,GADA4hG,GAAG9iB,KAAK,IACJzmF,aAAaI,OACb,GAAe,SAAXJ,EAAEwC,KAAiB,CACnB,IAAM4pC,IAAMmkD,YAAYgZ,GAAI,OAAQ,IAC9Bh+E,KAAOglE,YAAYnkD,IAAK,QAAS,IACjCo9D,MAAQxpG,EAAEwpG,iBAAiBrsF,SAAWnd,EAAEwpG,MAAQhwB,uBAAUx5E,EAAEwpG,OAElEnY,wBAASjlD,KACLvG,EAAG,EACH16B,EAAG,EACHo4B,MAAO2jE,kBACP1jE,OAAQ0jE,oBAEZ7V,wBAAS9lE,MACLvrB,EAAGwpG,MAAMpnE,KAAKpiC,EAAEoiC,KAAbonE,GACH7lD,UAAS,aAAArgC,OAAe4jF,kBAAoB,EAAnC,MAAA5jF,OAAyC4jF,kBAAoB,EAA7D,OAEb5V,yBAAU/lE,MACN86B,KAAMrmD,EAAEq8C,QAEZi1C,yBAAUllD,KACN7I,MAAK,GAAAjgB,OAAK4jF,kBAAL,MACL1jE,OAAM,GAAAlgB,OAAK4jF,kBAAL,aAGVqC,GAAG9iB,KAAKzmF,EAAEW,OACVX,EAAE4oC,WAAa2gE,GAAGpjB,QAAQnmF,EAAE4oC,WAAW,GACvC0oD,yBAAUiY,GAAIvpG,EAAEyhC,YAGpB8nE,GAAG9iB,KAAKzmF,MAKxB,OAAO2H,2CAKP,OADAA,KAAKohG,OAAS,KACPphG,6DA1HP,IAAM4M,OAASmvF,6BAAcuD,QAE7B,OADA1yF,OAAOgwF,YAAcb,6BAAca,YAC5BhwF,qTCVMk1F,2BAMjB,SAAAA,QAAaC,cAAenH,oKAAcoH,CAAAhiG,KAAA8hG,SACtC,IAAIG,mBAAqBrH,aACzB56F,KAAKumF,IAAMj8E,cACXtK,KAAKixF,WACLjxF,KAAK4M,WACL,IAAMs1F,YAAcliG,KAAKixF,QACnB2L,YAAcsF,YAAYtF,YAC1BuF,aAAeD,YAAY5C,QAAQO,gBACnC/mE,UAAY8vD,YAAYmZ,cAAe,OAAQ,GAAxB,GAAApmF,OAA+BihF,YAA/B,uBAC7B58F,KAAKg7B,WAAalC,UAClB94B,KAAKoiG,kBAAoBtpE,UAAU9D,OAAO,OAAO8E,MAAM,WAAY,YACnE95B,KAAKqiG,kBAAoBriG,KAAKoiG,kBAAkBptE,OAAO,OAAOo+B,KAAK,QAA1C,GAAAz3C,OAAsDihF,YAAtD,KAAAjhF,OAAqEwmF,eAC9FniG,KAAK+gG,mBAAqB/gG,KAAKoiG,kBAAkBptE,OAAO,OAAO8E,MAAM,WAAY,YACjF95B,KAAK6gG,cAAgB7gG,KAAKoiG,kBAAkBptE,OAAO,OAE9C4lE,eACDqH,mBAAqBF,cAAc/sE,OAAO,OAAO8E,MAAM,iBAAkB,SAE7E95B,KAAKsiG,aACLtiG,KAAKuiG,2BAA6B5Z,6BAAcsZ,oBAC3CjtE,OAAO,KACPo+B,KAAK,QAFwB,GAAAz3C,OAEZumF,YAAYtF,YAFA,KAAAjhF,OAEeumF,YAAY9C,qBAC7D,IAAMvmE,GAAK74B,KAAKumF,IACVoW,aAAeuF,YAAYvF,aAC3B6F,mBAAqBl2B,sBAAsBqwB,aAAc9jE,GAAIqpE,YAAYtF,aAE/EjT,yBAAU3pF,KAAK6gG,cAAe1B,eAC9BxV,yBAAU3pF,KAAK+gG,mBAAoB5B,eACnCn/F,KAAKyiG,SAASD,mBAAmBz/F,KAAK,MACtC/C,KAAKyiG,SAASP,YAAYjhE,WAC1BjhC,KAAKo9F,wRASL,GAAIh4F,UAAO1D,OAAS,EAAG,CACnB,IAAMghG,QAAUjzB,kBAAmBzvE,KAAK6lB,YAAYk2E,iBAEpD,OADA/7F,KAAKixF,QAAUxhB,eAAeizB,QAADt9F,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACtBpF,KAEX,OAAOA,KAAKixF,kDAeNhwD,WAEN,OADAjhC,KAAKoiG,kBAAkB5jB,QAAQv9C,WAAW,GACnCjhC,+CAIP,OAAIoF,UAAI1D,QACJ1B,KAAKw8B,SAALp3B,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKw8B,iDAGPlkC,KAAMyS,MAA0B,IAApB43F,cAAoBv9F,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC/BwH,OAAS5M,KAAK4M,SACZgwF,YAAgBhwF,OAAhBgwF,YACFuF,aAAev1F,OAAO0yF,QAAQr+D,UAC9B7+B,UAAYwK,OAAOxK,UACnB6+B,UAAY0hE,cAAc1hE,WAAd,GAAAtlB,OAA8BihF,YAA9B,KAAAjhF,OAA6CwmF,aAA7C,KAAAxmF,OAA6DrjB,MACzEgnG,QAAUt/F,KAAKsiG,UAAUhqG,MAAQ0H,KAAKsiG,UAAUhqG,OAAS,IAAI4oG,gBAC7DpoE,UAAY8vD,YAAY5oF,KAAKqiG,kBAAmB,OAAQM,cAAc77E,OAAQma,WACpFnI,UAAUs6B,KAAK,QAAf,GAAAz3C,OAA2BihF,YAA3B,KAAAjhF,OAA0CwmF,aAA1C,KAAAxmF,OAA0DslB,YF5BjC,SAApB2hE,kBAAqB7oE,gBAAiBkH,WAC/ClH,gBAAgB+4B,UAAU7xB,WAAW1tB,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,IE4BpDw/F,CAAkB5iG,KAAKqiG,kBAAN,IAAA1mF,OAA6BihF,YAA7B,KAAAjhF,OAA4CwmF,eAC7D,IAAMU,YAAcj2F,OAAO0yF,QAoB3B,OAnBAqD,cAAc/F,YAAc58F,KAAKixF,QAAQ2L,YACzC0C,QAAQ1yF,OAAOi2F,aAEF,OAAT93F,MACAu0F,QAAQ33D,QACR7O,UAAU4O,gBACH1nC,KAAKsiG,UAAUhqG,QAEtBgnG,QAAQ7pE,QACJ5Y,MAAO9R,KACP3I,UAAWugG,cAAcvgG,WAAaA,YAE1Ck9F,QAAQ7iE,QAAQz8B,KAAKw8B,UACrB8iE,QAAQwD,OAAOhqE,YAGdrgC,OAAOqN,KAAK9F,KAAKsiG,WAAW5gG,QAC7B1B,KAAKo9F,OAEFp9F,uDAIP,OAAOvH,OAAOkmB,OAAO3e,KAAKsiG,qDASpBpkE,EAAG16B,GAAc,IAAXuqE,KAAW3oE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACvB,IAAK3M,OAAOqN,KAAK9F,KAAKsiG,WAAW5gG,OAE7B,OADA1B,KAAKo9F,OACEp9F,KAEXA,KAAK++F,OACL,IAAMrhD,OAAS19C,KAAK+iG,QACdC,gBAAkBj1B,KAAKi1B,gBAE7B,GAAItlD,QAAUslD,gBAAiB,CAC3B,IAAMpyE,KAAO5wB,KAAKoiG,kBAAkBxxE,OAC9BhkB,OAAS5M,KAAKixF,QACdgS,cAAgBr2F,OAAOkzF,MAAMC,SAC7BO,WAAa2C,cAAgB,EAAIr2F,OAAOkzF,MAAMrlE,KAC9CyoE,YAAcljG,KAAKihG,kBACnBkC,YJxJQ,SIwJMD,aJ3JL,UI2JmCA,YAC7C1/F,EAAIotB,KAAK+I,aAAe2mE,WAAc5iD,OAAOl6C,GAAKA,EAAKk6C,OAAOl6C,EAAIk6C,OAAO7hB,OACzEqC,EAAItN,KAAKgJ,YAAc0mE,WAAc5iD,OAAOxf,GAAKA,EAAKwf,OAAOxf,EAAIwf,OAAO9hB,MAE7E,IAAKqnE,cACD,GAAIE,YAAa,CACb,IAAIv/E,KACJ5jB,KAAK6gG,cAAc/mE,MAAM,UAAW,QACpC95B,KAAK+gG,mBAAmBjnE,MAAM,UAAW,QACzC95B,KAAKuiG,2BAA2BzoE,MAAM,UAAW,SACjD,IAAMspE,UAAYpjG,KAAKuiG,2BAA2BzvC,UAAU,QAAQ/nD,MAAM,IACpEooD,MAAQiwC,UAAUjwC,QAAQn+B,OAAO,QJnKjC,SIoKFkuE,YACAt/E,KAAO,KAAAjI,OAAKuiB,EAAL,KAAAviB,OAAUnY,EAAIotB,KAAK+I,aAAe,EAAlC,OAAAhe,OAAyC+hC,OAAOxf,EAAIwf,OAAO9hB,OAA3D,IAAAjgB,OACG+hC,OAAOl6C,EAAIk6C,OAAO7hB,OAAS,GJzKlC,UI0KIqnE,YACPt/E,KAAO,KAAAjI,OAAKuiB,EAAItN,KAAKgJ,YAAd,KAAAje,OAA6BnY,EAAIotB,KAAK+I,aAAe,GAArD,MAAAhe,OACS+hC,OAAOxf,EADhB,KAAAviB,OACqB+hC,OAAOl6C,EAAIk6C,OAAO7hB,OAAS,GJ1KnD,WI2KGqnE,cACPt/E,KAAO,KAAAjI,OAAKuiB,EAAItN,KAAKgJ,YAAc,EAA5B,KAAAje,OAAiCnY,EAAIotB,KAAK+I,cAA1C,MAAAhe,OACK+hC,OAAOxf,EAAIwf,OAAO9hB,MAAQ,EAD/B,KAAAjgB,OACoC+hC,OAAOl6C,IAEtD2vD,MAAMvpD,MAAMw5F,WAAWhwC,KAAK,IAAKxvC,MAAMkW,MAAM,UAAW,aACrD,CACH,IAAMqmE,SAAWH,mBAAYkD,YAAaxlD,QACtCxf,IACA16B,IACA48F,UAAWxvE,KAAK+I,aAChB0mE,SAAUzvE,KAAKgJ,aAChB55B,KAAKixF,SAER0P,kBAAW3gG,KAAMA,KAAKihG,kBAAmBd,UACzCngG,KAAKuiG,2BAA2BzoE,MAAM,UAAW,SAK7D,IAAMkpB,OAAShjD,KAAKqjG,UAChBnlE,EAAG,EACH16B,EAAG,GAKP,OAHAxD,KAAKoiG,kBAAkBtoE,MAAM,OAA7B,GAAAne,OAAwCqnC,OAAO9kB,EAAIA,EAAnD,OAA0DpE,MAAM,MAAhE,GAAAne,OACOqnC,OAAOx/C,EAAIA,EADlB,OAGOxD,mEAQSigG,KAAuB,IACnC/3F,IADmCgN,MAAAlV,KAAlBkiG,YAAkB98F,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAEnCk+F,YAAcpB,YAAYoB,YAE9B,GADAtjG,KAAK++F,QACAkB,IAED,OADAjgG,KAAKo9F,OACEp9F,KAGX,IAAMimE,OAASjmE,KAAKujG,QACd3yE,KAAO5wB,KAAKoiG,kBAAkBxxE,OAEpC5wB,KAAKoiG,kBAAkBtoE,MAAM,MAAO,OACnBA,MAAM,OAAQ,OAC/B,IAAMF,YAAchJ,KAAKgJ,YAAc,EACjCD,aAAe/I,KAAK+I,aAAe,EACnC/sB,OAAS5M,KAAKixF,QACdjuC,OAAShjD,KAAKqjG,QACdJ,cAAgBr2F,OAAOkzF,MAAMC,SAC7ByD,UAAYP,cAAgB,EAAIr2F,OAAOkzF,MAAMrlE,KAC7C4/B,UAA4B/sD,IAArB40F,YAAY7nC,MAAqB6nC,YAAY7nC,KACpDopC,SAAWxD,IAAIz8F,EAEfkgG,KAAOzD,IAAI/hE,EAAI+hE,IAAIrkE,MAAQonB,OAAO9kB,EAClCylE,WAAa19B,OAAOrqC,MAAQ8nE,KAC5BE,UAAY3D,IAAI/hE,EAAI8kB,OAAO9kB,EAAI+nC,OAAO/nC,EACtC2lE,YAAcJ,SAAY9pE,aAAe6pE,UACzCM,cAAgBH,YAAc/pE,YAAc4pE,UAC5CO,aAAeH,WAAahqE,YAAc4pE,UAwGhD,OA/BAxjG,KAAK+iG,QAAU9C,IACVqD,cAEGA,YADAO,YACc,WACPC,eAAiBC,aACV,aAEA,YAIF,eAAhBT,YACAp7F,IAnFuB,SAArB87F,qBACF,IAAIxhE,SACAtE,EAAI+hE,IAAI/hE,EAAI+hE,IAAIrkE,MAChBp4B,EAAIy8F,IAAIz8F,EAwBZ,OAtBIsgG,eACAthE,SJ/OY,OIgPZtE,GAAKslE,WACEO,cACP7lE,EAAI+hE,IAAI/hE,EAAItE,YACZ4I,SJlPa,QImPbtE,GAAKslE,YAELhhE,SAAW,OACXtE,GAAKslE,WAELvD,IAAIpkE,OAASlC,eACbn2B,EAAIK,KAAK6Q,IAAI,EAAGurF,IAAIz8F,EAAIy8F,IAAIpkE,OAAS,EAAIlC,aAAe,KAWxD6I,kBACA29D,SATaH,mBAAYx9D,SAAUy9D,KACnC/hE,IACA16B,IACA48F,UAAWzmE,aACX0mE,SAAUzmE,aACX1kB,MAAK+7E,SAKJ/yD,IACA16B,KAoDEwgG,GACiB,aAAhBV,cACPp7F,IAlDqB,SAAnB+7F,mBACF,IAAIzhE,SACAh/B,EAEA06B,EAAI+hE,IAAI/hE,EAAItE,YAAc,EAAIqmE,IAAIrkE,MAAQ,EAwB9C,OArBKqqC,OAAOrqC,OAASqkE,IAAI/hE,EAAI8kB,OAAO9kB,GAAMtE,YACtCsE,EAAI+nC,OAAOrqC,MAAQhC,YAAcopB,OAAO9kB,EAChCA,EAAI8kB,OAAO9kB,EAAK+nC,OAAO/nC,IAC/BA,EAAI+nC,OAAO/nC,GAGX2lE,aACArgG,EAAIy8F,IAAIz8F,EAAIm2B,aAAe6pE,UAC3BhhE,SJzRc,WI2Rdh/B,EAAIy8F,IAAIz8F,EAAIy8F,IAAIpkE,OAAS2nE,UACzBhhE,SJ3RW,QIsSXA,kBACA29D,SATaH,mBAAYx9D,SAAUy9D,KACnC/hE,IACA16B,IACA48F,UAAWzmE,aACX0mE,SAAUzmE,aACX1kB,MAAK+7E,SAKJ/yD,IACA16B,KAkBEygG,IAGVjkG,KAAKkkG,WACDhmE,EAAGh2B,IAAIg2B,EACP16B,EAAG0E,IAAI1E,GAGXxD,KAAKmkG,UAAYj8F,IAAIi4F,SAChB8C,eAGDjjG,KAAK6gG,cAAc/mE,MAAM,UAAW,QACpC95B,KAAK+gG,mBAAmBjnE,MAAM,UAAW,SAHzC6mE,kBAAW3gG,KAAMkI,IAAIs6B,SAAUt6B,IAAIi4F,UAKvCngG,KAAKihG,kBAAoB/4F,IAAIs6B,SAC7B63B,MAAQr6D,KAAKwiC,SAASt6B,IAAIg2B,EAAGh2B,IAAI1E,GAC1BxD,yCAUP,OAFAA,KAAKoiG,kBAAkBtoE,MAAM,UAAW,QACxC95B,KAAKuiG,2BAA2BzoE,MAAM,UAAW,QAC1C95B,yCASP,OADAA,KAAKoiG,kBAAkBtoE,MAAM,UAAW,SACjC95B,2CAGHimE,SAEJ,OADAjmE,KAAKujG,QAAUt9B,QACRjmE,2CAGHgjD,SAEJ,OADAhjD,KAAKqjG,QAAUrgD,QACRhjD,6CAOP,OAHAA,KAAKoiG,kBAAkB16D,SACvB1nC,KAAK+gG,mBAAmBr5D,SACxB1nC,KAAKuiG,2BAA2B76D,SACzB1nC,6DA1SP,OAAO+7F,65CCnEP78F,IAAeD,kCAAfC,IAAKM,MAAUP,kCAAVO,MACLkN,6BAAsB7O,oBAAtB6O,kBAEF03F,sBAAa,SAAbA,WAAchiG,UAAWu/C,SAAU+5C,aAAtB,IAAAjnE,KAAA,OAAA4vE,0BAAA5vE,QACds1C,gCAAiB1rE,SAAW,SAACrF,OAC1B,OAAIA,iBAAiB0T,6BACVgvF,YAAY1iG,OAEhBg9E,4BAAeh9E,MAAO2oD,YALlB0iD,0BAAA5vE,KAOd4kE,8BAAe56F,WAAa,SAAAzF,OAAK,OAAKA,iBAAiB0T,6BAAoBgvF,YAAY1iG,OACpFoJ,UAAUpJ,MAAMymD,QAAQ,MARb4kD,0BAAA5vE,KASds1C,gCAAiB3rE,YAAc,SAAApF,OAAK,OAAI0iG,YAAY1iG,SATtCy7B,MAYb6vE,wCAA+B,SAA/BA,6BAAgCliG,UAAWmiG,kBAAZ,OAAiC93B,aAAarqE,UAAWmiG,mBAsBxFC,yBAAgB,SAAhBA,cAAiBC,SAAUhoE,QAASioE,QAAS93F,QAC/C,IAAI5T,MACA2rG,eACAC,aAGAlJ,YAIAj/D,QAJAi/D,YACAlD,KAGA/7D,QAHA+7D,KACAqM,oBAEApoE,QAFAooE,oBACAC,UACAroE,QADAqoE,UAEajqG,KAAsB4pG,SAA/BnuF,QAAqBhL,MAAUm5F,SAAhBnsG,KAEfkmB,aAAiDkmF,QAAjDlmF,aAAcumF,aAAmCL,QAAnCK,aAAch6F,KAAqB25F,QAArB35F,KAAMi6F,WAAeN,QAAfM,WAClCpF,UAA2BhzF,OAA3BgzF,UAAWhD,YAAgBhwF,OAAhBgwF,YACbqI,QAAUl6F,KAAKrJ,OACfid,UACA1c,MAAQuc,aAAalT,OAAOrJ,MAC5B0/C,SAAWnjC,aAAalT,OAAOsT,IAAItI,UAAYyzD,gCAAiB1rE,SAAWymG,UAAUx5F,OAAS,EAC9F45F,YAAcZ,wCAA6BF,sBAAW,SAAAljG,KAAG,OAAIA,KAAKygD,SAAU+5C,aAAa7gG,MAC3FkqG,cAEAI,WAAatqG,OAASw+F,8BAAe56F,WAAasM,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE4J,SAArDmjG,6BACT,IAAItuF,IAAI/L,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE4J,WAChCkjG,WAAaA,WAAWpxF,OAAO,SAAA1b,GAAC,MAAU,KAANA,IACpC,IAAMgtG,UAAY7M,KAAK9jD,MAAM,GACvB4wD,UAAY9M,KAAKqJ,MAAM,GACvB0D,SAAW/M,KAAK/9D,KAAK,GACrB+qE,gBAAkBH,WAAaC,WAAaC,WAAaN,QAAU,GACjEpqG,OAASw+F,8BAAe56F,WA2EhC,OAzEA0mG,WAAWr8F,QAAQ,SAAC5H,IAAKnJ,GACrB,IAAIuB,IACAmsG,mBAAqBZ,oBAAoBv5F,OAE7C,GAAIm6F,8BAA8B58F,OAASo8F,QAAU,EAAG,CACpDQ,mBAAqBA,mBAAmB1xF,OAAO,SAAA1b,GAAC,OAAIA,KAAKmmB,eACzDllB,IAAM4H,IACN,IAAIwkG,MACA1sG,MAAO,IAWX,GARIwsG,iBACAE,MACI7qG,KAAM,OACN65C,MAAO2wD,UAAUM,SAASzkG,KAC1B2gG,MAAOyD,UAAUM,SAAS1kG,KAC1Bu5B,KAAM8qE,SAASM,QAAQ3kG,KAAO0L,OAAO4yF,YAGzCiG,mBAAmB/jG,OAAS,EAAG,CAC/B,IAAMokG,aAAejrG,OAASkvE,gCAAiB1rE,SAAW6mG,YAAY5rG,IAAKqoD,UAAYroD,IACvFqlB,OAAOzY,MAAMw/F,KAAD,GAAA/pF,OAAUmqF,gBACtBL,mBAAmB38F,QAAQ,SAACiP,SACxB6sF,aAAepmF,aAAazG,SAAS9V,MACrCjJ,MAAQ+R,KAAKhT,GAAG6sG,cAChB,IAAM1sF,aAAe8sF,WAAWp8F,OAAOg8F,cAAc1sF,eAC/C6tF,iBAAmBzB,wCACrBF,sBAAWlsF,aAAcypC,SAAU+5C,aAAarC,8BAAe56F,aACnEkmG,eAAiBoB,iBAAiB/sG,OAClC2lB,OAAOzY,OACHlN,MAAK,GAAA2iB,OAAKi7D,yBAAyBn6C,QAAQ1xB,KAAMgN,UAA5C4D,OAAuDikF,WAC5D9lE,OACIksE,cAAA,GAAArqF,OAAkB/O,OAAOyyF,OAAzB,QAEJp+D,UAAS,GAAAtlB,OAAKihF,YAAL,kBAET5jG,MAAK,GAAA2iB,OAAKgpF,gBACV1jE,UAAS,GAAAtlB,OAAKihF,YAAL,2BAGd,CACHgI,aAAepmF,aAAainF,mBAAmB,IAAIxjG,MACnDjJ,MAAQ+R,KAAKhT,GAAG6sG,cAChB,IAAM1sF,aAAe8sF,WAAWp8F,OAAOg8F,cAAc1sF,eAC/C6tF,iBAAmBzB,wCACrBF,sBAAWlsF,aAAcypC,SAAU+5C,aAAarC,8BAAe56F,aACnEkmG,eAAiBoB,iBAAiB/sG,OAClC,IAAM8sG,cAAejrG,OAASkvE,gCAAiB1rE,SAAW6mG,YAAY5rG,IAAKqoD,UAAYroD,IACvFqlB,OAAOzY,MACHw/F,MAEI1sG,MAAK,GAAA2iB,OAAKmqF,eACV7kE,UAAS,GAAAtlB,OAAKihF,YAAL,kBAGT5jG,MAAK,GAAA2iB,OAAKgpF,gBACV1jE,UAAS,GAAAtlB,OAAKihF,YAAL,2BAKrBtjG,IAAMgS,MAENq5F,eAAiBO,YADjBlsG,MAAQkI,KAERyd,OAAOzY,OACHlN,MAAK,GAAA2iB,OAAKi7D,yBAAyBn6C,QAAQ1xB,KAAMzR,MAA5CqiB,OAAmDikF,WACxD3+D,UAAS,GAAAtlB,OAAK/O,OAAOgwF,YAAZ,kBAET5jG,MAAK,GAAA2iB,OAAKgpF,gBACV1jE,UAAS,GAAAtlB,OAAK/O,OAAOgwF,YAAZ,uBAIdj+E,QAGEsnF,4BAAmB,SAAnBA,iBAAoB5nF,WAAoC,IAAzBzR,OAAyBxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAAZq3B,QAAYr3B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAC7D44F,eACE5nF,QAAUD,UAAUE,UACpBxT,KAAOuT,QAAQvT,KACfW,OAAS4S,QAAQ5S,OACjBs5F,WAAa3mF,UAAU3O,gBACvB8O,aAAeH,UAAUI,kBACzB0nF,aAAe1pE,QAAQ0pE,iBACvBr9E,WAAapd,OAAOqI,OAAO,SAAA1b,GAAC,OAAIA,EAAEwC,OAAS+6F,yBAAUh3F,YACrDoqB,SAAWtd,OAAOqI,OAAO,SAAA1b,GAAC,OAAIA,EAAEwC,OAAS+6F,yBAAUj3F,UACnDynG,oBAAsB16F,OAAO0f,KAAK,SAAA/yB,GAAC,OAAsC,IAAlC8tG,aAAalgG,QAAQ5N,EAAEC,QAC9D2sG,QAAUl6F,KAAKrJ,OAEjBg6F,YAEAj/D,QAFAi/D,YACAmJ,oBACApoE,QADAooE,oBAEEE,aAAeX,sBAAW,KAAM,KAAM1I,aAAa3xB,gCAAiB3rE,aAE1E,GAAI6mG,QAAU,GAAKmB,oBACfF,YAlJe,SAAjBG,eAAkB/nF,QAASme,QAAS8nE,kBACtC,IAAMxpF,QACEhQ,KAA6BuT,QAA7BvT,KAAMW,OAAuB4S,QAAvB5S,OAAQs5F,WAAe1mF,QAAf0mF,WACtBjqF,KAAK7U,KAAKwF,OAAOzD,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,QAH+B,IAInDojG,YAA2Bj/D,QAA3Bi/D,YAAaoJ,UAAcroE,QAAdqoE,UAarB,OAZA/5F,KAAKjC,QAAQ,SAACzQ,GACV,IAAMgjB,OACN3P,OAAO5C,QAAQ,SAACw9F,SAAUvuG,GACtB,IAAM4pD,SAAW2kD,SAAShwF,UAAYyzD,gCAAiB1rE,SAAWymG,UAAUwB,SAAShuG,MAAQ,EACvF4f,aAAeouF,SAASzrG,OAAS+6F,yBAAUj3F,SAAWqmG,WAAWp8F,OAAO7Q,GAAGmgB,eAG3Elf,MAFcsrG,wCAA6BF,sBAAWlsF,aACxDypC,SAAU+5C,aAAa4K,SAAShwF,SAAUiuF,iBAChCW,CAAY7sG,EAAEN,IAC5BsjB,IAAInV,KAAKlN,SAEb+hB,KAAK7U,KAAKmV,OAEPN,KAiIWsrF,EACVt7F,UACAW,cACAs5F,uBACDvoE,QAASsoE,kBACT,CACHj8E,WAAWhgB,QAAQ,SAACiB,MAChBm8F,eAAWvqF,OAAAypF,6BAAOc,aAAPd,6BAAuBZ,yBAAcz6F,KAAM0yB,SAClDje,0BACAzT,UACAg6F,0BACAC,uBACDp4F,YAGP,IAAM25F,YAAcnB,6BAAAoB,WAAQ1vF,IAAXsuF,6BAAkB3sG,OAAOkmB,OAAOkmF,yBACxBI,QAAU,EAAIj8E,SAASjV,OAAO,SAAA1b,GAAC,OAAqC,IAAjCkuG,YAAYtgG,QAAQ5N,EAAEC,QAC5E0wB,UAEWlgB,QAAQ,SAACiB,MACtBm8F,eAAWvqF,OAAAypF,6BAAOc,aAAPd,6BAAuBZ,yBAAcz6F,KAAM0yB,SAClDje,0BACAzT,UACAg6F,0BACAC,uBACDp4F,YAIX,OAAOs5F,aAGEO,uBACTC,iBAAkB,SAAAA,iBAACjzF,GAAI7G,OAAQ6vB,SAAY,IAEjCu2D,OADmBv2D,QAAjBizD,aACoBN,YAAY4D,OAClC10E,QAAU7K,GAAG8K,UACbyK,SAAW1K,QAAQ5S,OAAOqI,OAAO,SAAA1b,GAAC,OAAIA,EAAEwC,OAAS+6F,yBAAUj3F,UAC3DgoG,gBAAkBlzF,GAAGsa,SAAS,IAAK/E,SAASlW,OAAO,SAACC,IAAKrK,GAE3D,OADAqK,IAAIrK,EAAEpQ,MAAQ06F,OAAOtqF,EAAEpQ,QAAUkH,MAAQN,IAAM8zF,OAAOtqF,EAAEpQ,MACjDya,MAEPqM,WAAW,KAETwnF,WAAaD,gBAAgBloF,kBAC/BE,UACA3lB,MAAK,GAAA2iB,OAAK2C,QAAQvT,KAAKrJ,QACvBo4B,OACIkJ,cAAe,SAEpB,mBACG6jE,aAAe79E,SAAS/gB,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OAazC,OAZAuuG,aAAa/9F,QAAQ,SAACiP,SAClB4G,OAAOzY,MAAK,IAAAyV,OAAKq3E,OAAOj7E,SAAS6nC,cAArB,QAAAjkC,OAA0Ci7D,yBAAyBnjE,GAAIsE,WAE3E/e,MAAK,GAAA2iB,OAAKgrF,gBAAgBpoF,UAAUxT,KAAK,GAAG67F,WAAW7uF,SAAS9V,OAAOw9C,QAAQ,IAC/E3lB,OACIkJ,cAAe,aAIH,IAAxB6jE,aAAanlG,SACbid,WAAShD,OAAAypF,6BAAKzmF,OAAO,IAAZymF,6BAAmBzmF,OAAO,OAEhCA,QAEXmoF,iBAAkB,SAAAA,iBAAC/7F,KAAM6B,OAAQ6vB,SAE7B,OADewpE,4BAAiBl7F,KAAM6B,OAAQ6vB,msDCxOtD,IAAMsqE,iBACFD,iBAAkB,SAAAA,iBAACE,aAAcp6F,QAAf,OAA0B6/D,aAAau6B,aAAcp6F,SACvExS,QAAS,SAAA6sG,SAAAD,cAAY,OAAIv6B,aAAau6B,mBAYrBlF,4DACjB,SAAAA,UAAwB,IAAAoF,iBAAAhyF,yKAAAiyF,CAAAnnG,KAAA8hG,SAAA,QAAA10B,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAAkyF,kCAAApnG,MAAAknG,iBAAAG,uBAAAvF,UAAA5pG,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJylF,aACLpyF,MAAK4mF,YAAc2K,sBACnBvxF,MAAK2mF,UAAY,mBAJG3mF,yXADSonF,gVAsC7B,GAAIl3F,UAAO1D,OAAQ,CACf,IAAMkL,OAAS5M,KAAKixF,QAAUxhB,eAAezvE,KAAKixF,QAhDvC,SAAjBsW,eAAkB36F,OAAQ6vB,SAC5B,IAAM+qE,YAAc/qE,QAAQq/D,YACtB2L,cAAgBhvG,OAAOoU,UAAWD,QACxC,IAAK,IAAMtT,OAAOkuG,YACdC,cAAcnuG,KAAOmzE,aAAas6B,gBAAgBztG,KAAMytG,gBAAgB3sG,QAAnDqyE,CAA4D7/D,OAAOtT,KAAMsT,QAElG,OAAO66F,cA0C4DF,CAAcniG,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GAAYpF,OAC/EwnG,YAAcxnG,KAAK87F,YACzB,IAAK,IAAMxiG,OAAOkuG,YAAa,CAC3B,IAAMplG,UAAYwK,OAAOtT,KAAK8I,UAC9BpC,KAAK0nG,YAAYpuG,IAAK8I,WAE1B,OAAOpC,KAEX,OAAOA,KAAKixF,4CAGTvB,aAAcvkE,SAAuB,IAAdxkB,QAAcvB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACpCuiG,YAAc,EACdC,WAAa,EACXvpF,UAAYqxE,aAAaN,YAAYvyE,MACrC4f,QAAUz8B,KAAKq2F,SAAS55D,QACxBy9D,WAAal6F,KAAKg9F,iBACxB,GAAK3+E,UAAUwpF,WAAkC,OAArB18E,QAAQ/N,WAA4D,IAAtCsyE,aAAawH,qBAEnE,OADAl3F,KAAKo9F,KAAKz2F,QAAS,MACZ3G,KAGX,IAAM8nG,SAAW9nG,KAAKsnG,UAChB16F,OAAS5M,KAAK4M,SACdm7F,UACFnsE,MAAOs+D,WAAWt+D,MAClBC,OAAQq+D,WAAWr+D,QAEjBm/D,eAAiB7vE,QAAQ6vE,eACzBn7F,IAAM+M,OAAO+1B,QACbqlE,cACAC,WrB3FY,eqB2FCr7F,OAAO1T,KACpBmkG,UAAY5gE,QAAQ69D,gBACpB1xF,OAASy0F,UAAUz0F,OAEnBs/F,oBADYt/F,OAAOs1B,EAAE,IAAKt1B,OAAOs1B,EAAE,GAAGrjC,SAAW+6F,yBAAUh3F,WAE3DupG,WAAah9E,QAAQqX,SACrB4lE,SACAj1C,SACA7rC,KAAOjJ,UAAUE,UAAU+I,KAC7B2gF,WACAD,WAAW9hG,KAAXqB,MAAAygG,WAAUK,0BAAS/gF,KAAKrf,IAAI,SAAA5P,GAAC,OAAIgmB,UAAUa,OAAO,SAACsJ,UAAWzwB,GAAZ,OAAkBA,IAAMM,IACtE+mB,WAAW,QAGf4oF,WAAW9hG,KAAKmY,WAGpB,IAAIq/B,OAASvyB,QAAQuyB,OACjB/qC,gBACJ,GAAI+qC,OAAQ,CACR/qC,aAAe+qC,OAAO,OAGtB,IAFA,IAAM4qD,aAAen9E,QAAQm9E,aACvBC,WACGxwG,EAAI,EAAG0Q,IAAMkK,aAAajR,OAAQ3J,EAAI0Q,IAAK1Q,KACD,IAA3CuwG,aAAariG,QAAQ0M,aAAa5a,KAClCwwG,QAAQriG,KAAKnO,GAGrB2lD,OAASA,OAAOz1C,IAAI,SAAA5P,GAAC,OAAIA,EAAE0b,OAAO,SAACrL,EAAG3Q,GAAJ,OAAkC,IAAxBwwG,QAAQtiG,QAAQlO,OAWhE,IARA,IAAMywG,eAAiB/rE,QAAQgsE,6BAA6B/qD,QAAUvyB,QAAQ/N,UAC1Egf,SAAS,IAGPssE,SAAWj8B,aAAa9lE,QAAQ+hG,SAAU1oG,KAAK67F,WAC/C8M,aAAe/7F,OAAO87F,UACpBE,cAAyCD,aAAzCC,cAAuBC,cAAkBF,aAA1B//F,OAEd7Q,GAAI,EAAGA,GAAIiwG,WAAWtmG,OAAQ3J,KAAK,CACxC,IAAI+wG,QAAUN,eAAezwG,IAC7B,GAAIkwG,WAAY,CACZ,IAAMn/E,WAAak/E,WAAWjwG,IAAGwmB,UAAU7S,OAAOqI,OAAO,SAAA1b,GAAC,OAAIA,EAAEwC,OAAS+6F,yBAAUh3F,YAC9EqJ,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OAEhBwwG,SADAA,QAAUrsE,QAAQgsE,6BAA6BT,WAAWjwG,IAAG+1B,QAAQhF,aAAesT,SAAS,MACxE0sE,QAAQ,GAGjC,IAAMC,GAAKH,cAAcZ,WAAWjwG,IAAI8wG,cAAe7oG,MAEvDmzD,MAAMp7D,KAAK,EAX6B,IAYfixG,gBAA+C9O,WAAhEngE,gBAAkCkvE,0BAA8B/O,WAA9B+O,0BACpCC,eAAiBF,gBAAgB7oB,wBACjCgpB,aAAejP,WAAW6H,cAAc5hB,wBAExC/+C,WAAa+nE,aAAapjE,KAAOmjE,eAAenjE,KAChD1E,UAAY8nE,aAAa1mE,IAAMymE,eAAezmE,IAC9C2mE,YAActB,SAAS/vG,IAAK+vG,SAAS/vG,KAAM,IAAIsxG,gBAAgBL,gBAC7D9O,WAAWU,cAEnByC,UAAUlyE,QAAUA,QACpBkyE,UAAUhH,SAAWr2F,KAAKq2F,SAC1BgH,UAAU8I,aAAe1pE,QAAQ0pE,eACjC9I,UAAUyH,UAAYroE,QAAQ6sE,mBAC9BjM,UAAU3B,YAAcj/D,QAAQi/D,cAChC2B,UAAU3N,aAAeA,aACzB0Z,YAAY3sE,QAAQ4gE,WACpB,IAAMkM,WAAa9C,sBAAWiC,UAiB9B,GAhBAU,YAAY9J,QAAQoJ,SAAUK,IAC1B3mG,UAAWmnG,WACXziF,MAAOngB,QAAQmgB,QAEFla,OAAO5M,KAAK4M,UACZq5D,QACG/nC,EAAG,EACH16B,EAAG,EACHo4B,MAAOqtE,0BAA0BrtE,MACjCC,OAAQotE,0BAA0BptE,SAErCmnB,QACG9kB,EAAGkD,YAAcx0B,OAAOo2C,OAAO9kB,GAAK,GACpC16B,EAAG69B,WAAaz0B,OAAOo2C,OAAOx/C,GAAK,KAGnDw3F,eACAoO,YAAY5mE,SAAS2lE,WAAWjqE,EAAIr+B,IAAKsoG,WAAW3kG,EAAI3D,SACrD,KAAIipG,QAUJ,CACHM,YAAYhM,OACZ,MAXAgM,YAAYI,oBACRtrE,EAAG4qE,QAAQ5qE,EACX16B,EAAGslG,QAAQtlG,EACXo4B,MAAOktE,QAAQltE,OAAS,EACxBC,OAAQitE,QAAQjtE,QAAU,IAE1BynE,YAAa2E,WACRC,eAAiB,aAAe,gBAAc56F,IAO3D,GAAI26F,WAAY,CACZ,IAAMzlE,SAAW4mE,YAAYlF,UACvBuF,gBAAkBL,YAAYhH,kBAAkBxxE,OAAOuvD,wBAI7D,GAFAwnB,aAAe8B,gBAAgB5tE,OAASh8B,IACxC+nG,YAAc6B,gBAAgB7tE,MAAQ/7B,IAClCqoG,eAAiBP,YAAczN,WAAWr+D,OAAS+rE,WAAa1N,WAAWt+D,MAC3E,MAEJwsE,MAAMliG,MACFg4B,EAAGsE,SAAStE,EACZ16B,EAAGg/B,SAASh/B,EACZo4B,MAAO6tE,gBAAgB7tE,MACvBC,OAAQ4tE,gBAAgB5tE,OACxB8+D,QAASyO,eAKrB,IAAK,IAAM9vG,OAAOwuG,SACd,IAAK30C,MAAM75D,KAAM,CACb,IAAMqhG,QAAUmN,SAASxuG,KACzBqhG,QAAQ2E,QAAQn0E,QAAQ7H,OAAQ,MAC3Bq3E,QAAQ+O,cAAchoG,SACvBi5F,QAAQjzD,gBACDogE,SAASxuG,MAU5B,OANI2uG,cC/NiB,SAAhB0B,cAAiBvB,MAAOniC,OAAQiiC,gBACzC,IAAI1kG,EACAq4B,OACAqC,EACAtC,MACA7jC,EAEE0Q,IAAM2/F,MAAM1mG,OACZkoG,kBAAoB,SAApBA,kBAAqBC,SAAUC,UAAWC,UAC5C7rE,EAAI2rE,SAAS3rE,EACbtC,MAAQiuE,SAASjuE,MACjBp4B,EAAIqmG,SAASrmG,EACbq4B,OAASguE,SAAShuE,OAClB,IAAMg2B,OAASruD,EAAIq4B,OACbmK,MAAQ9H,EAAItC,MAEdssE,gBACI6B,SAAWvmG,EAAKsmG,UAAUtmG,EAAIsmG,UAAUjuE,OAAUg2B,OAASi4C,UAAUtmG,KACrEsmG,UAAUtmG,EAAIumG,SAAWF,SAASrmG,EAAIsmG,UAAUjuE,OAZhD,EAaQg2B,OAbR,IAeGk4C,SAAW7rE,EAAK4rE,UAAU5rE,EAAI4rE,UAAUluE,MAASoK,MAAQ8jE,UAAU5rE,KAC1E4rE,UAAU5rE,EAAI6rE,SAAWF,SAAS3rE,EAAI4rE,UAAUluE,MAhB5C,EAiBIoK,MAjBJ,IAwBZ,IAHAoiE,MAAM70F,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAW8kG,eAAiB/tG,EAAEqJ,EAAIJ,EAAEI,EAAIrJ,EAAE+jC,EAAI96B,EAAE86B,IAC3DnmC,EAAI,EAECA,EAAI,EAAGA,EAAI0Q,IAAM,EAAG1Q,IACrB6xG,kBAAkBxB,MAAMrwG,GAAIqwG,MAAMrwG,EAAI,IAG1C,GAAKqwG,MAAMrwG,GAAGyL,EAAI4kG,MAAMrwG,GAAG8jC,OAAUoqC,OAAOpqC,QACnCusE,MAAMrwG,GAAGmmC,EAAIkqE,MAAMrwG,GAAG6jC,MAASqqC,OAAOrqC,MAM3C,IALIssE,eACAE,MAAMrwG,GAAGyL,GAAM4kG,MAAMrwG,GAAG8jC,OAASusE,MAAMrwG,GAAGyL,EAAKyiE,OAAOpqC,OAEtDusE,MAAMrwG,GAAGmmC,GAAMkqE,MAAMrwG,GAAG6jC,MAAQwsE,MAAMrwG,GAAGmmC,EAAK+nC,OAAOrqC,MAEpD7jC,EAAI0Q,IAAM,EAAG1Q,EAAI,EAAGA,IACrB6xG,kBAAkBxB,MAAMrwG,GAAIqwG,MAAMrwG,EAAI,IAAI,GDsL1C4xG,CAAcvB,MAAOL,SAAUG,gBAC/BE,MAAMt/F,QAAQ,SAAAi0F,KAAG,OAAIA,IAAIpC,QAAQn4D,SAASu6D,IAAI7+D,EAAG6+D,IAAIv5F,GACjDw/F,iBAAiB,OAGlBhjG,uCAGL2G,SACF,IAAMmhG,SAAW9nG,KAAKsnG,UACtB,IAAK,IAAMhuG,OAAOwuG,SACd,MAAOhuG,eAAe5B,KAAK4vG,SAAUxuG,KAAM,CACvC,IAAMovG,SAAW/hG,QAAQ+hG,UAAY1oG,KAAK67F,UAC1CiM,SAASxuG,KAAKgmG,QAAQoJ,SAAU,MAChCZ,SAASxuG,KAAK8jG,gEA9MtB,OACIz6D,QAAS,EACTqgB,QACI9kB,EAAG,EACH16B,EAAG,GAEPsjG,kBACI8B,cAAe,SAAAA,cAACG,GAAIngG,QAAL,OAAiBA,OAASmgG,GAAGj7E,QAAQllB,QAAUwW,WAAW,IAAW2pF,KAGxFrC,kBACIkC,cAAe,SAAAA,cAACG,GAAIngG,QAChB,IAAMo8F,WAAa+D,GAAGr5F,gBAChBoZ,WAAarwB,OAAOqN,KAAKk/F,WAAWr5F,gBACpCqd,SAAWvwB,OAAOqN,KAAKk/F,WAAWz5F,cAClCy+F,gBAAkBv9B,aAAa7jE,OAAQogB,SAAStnB,QAAUsnB,SAAS,QACzE,OAAO+/E,GAAGj7E,WAAHnS,OAAA0sF,0BAAev/E,YAAfu/E,0BAA8B2B,mBACjC5qF,WAAW,uDAQ3B,MAAO,ouDEnDM6qF,otBAAkB3N,6SAa5B5M,aAAcvkE,SAAS,IACtB0Q,OACAquE,UACA1rC,GACA5iC,MAJsB1mB,MAAAlV,KAAAmqG,aAStBnqG,KAAK4M,SAHLq0B,UANsBkpE,aAMtBlpE,UACAmpE,UAPsBD,aAOtBC,UACAC,UARsBF,aAQtBE,UAEEhsF,UAAYqxE,aAAaN,YAAYvyE,MACrCq9E,WAAal6F,KAAKg9F,iBACxB,GAAI7xE,QAAQ/N,UAAYiB,WAAaA,UAAUwpF,UAC3C,OAAO7nG,KAEX,GAAyB,OAArBmrB,QAAQ/N,WAAsBiB,UAE9B,OADAre,KAAKo9F,OACEp9F,KAGX,IAAMse,QAAUD,UAAUE,UACpB8+E,UAAYr9F,KAAKq2F,SAAS55D,QAAQ69D,gBAClC9B,KAAO6E,UAAU7E,KACjBG,WAAa0E,UAAUz0F,OACvBA,OAAS8mF,aAAa9mF,OACtBmC,KAAOuT,QAAQvT,KACfyT,aAAeH,UAAUI,kBACzBm8E,aAAeV,WAAWuC,gBAE1B6N,YAgCN,GA/BA1hG,OAAOE,QAAQ,SAACwC,OACZ,IAAMvC,WAAayV,aAAalT,QAAUkT,aAAalT,OAAOrJ,MACxD8uE,QAAUhmE,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE0Q,cAC1BwhG,YAAc,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAIn/E,KAAK,SAACha,KAC7D,IAAMo5F,UAAY7R,WAAWvnF,IAAI,IAAIA,IAAI,IACzC,OAAOo5F,WAAaA,UAAU3vG,SAAW+6F,yBAAUh3F,YACJ,IAA3C4rG,UAAU3R,aAAa5yF,QAAQqF,SAEvC,QAAkBgC,IAAdi9F,WAA2Bx/F,KAAKrJ,OAAQ,CACxC,IAAM7G,KAAO0vG,UAAU,GACjBt4C,KAAOumC,KAAK39F,MAAM0vG,UAAU,IAC5BvxG,MAAQ+3E,QAAQ,GACtBm5B,UAAYj4C,KAAKssC,gBAAkB,EACnC//B,GAAKvM,KAAKqsC,cAActlG,OAASkxG,UAAY,EAAIhQ,WAAWuQ,QAC5D,IAAMvO,OAAShnF,MAAKmhF,SAAS55D,QAAQy/D,SAC/BwO,UAAY7mG,KAAK6Q,IAALnN,MAAA1D,KAAI8mG,4BAAQzO,OAAOj0F,IAAI,SAAAk0F,OAAK,OAAIA,MAAMyO,cAAc/vG,UAChEgF,IAAMgE,KAAK6Q,IAALnN,MAAA1D,KAAI8mG,4BAAQzO,OAAOj0F,IAAI,SAAAk0F,OAAK,OAAIA,MAAM0O,iBAAiBhwG,UACnEghC,OAASq+D,WAAWr+D,OACpBD,MAAQs+D,WAAWt+D,MACnB,IAAMkvE,QAAUtsC,GAAKksC,UAAY,EAAI7qG,IAAM,EACrCkrG,MAAQvsC,GAAKksC,UAAY,EAAI7qG,IAAM,EACnCmrG,aAEFA,UAAU3yG,EADD,MAATwC,KACA,OAAA8gB,OAAqBmvF,QAArB,SAAAnvF,OAAoCovF,MAApC,OAAApvF,OAA+CigB,MAA/C,KAAAjgB,OAAwDovF,MAAxD,OAAApvF,OAAmEigB,MAAnE,KAAAjgB,OAA4EmvF,QAA5E,MAEA,KAAAnvF,OAAmBmvF,QAAnB,SAAAnvF,OAAkCovF,MAAlC,SAAApvF,OAA+CovF,MAA/C,KAAApvF,OAAwDkgB,OAAxD,OAAAlgB,OAAoEmvF,QAApE,KAAAnvF,OAA+EkgB,OAA/E,MAEJmvE,UAAU/pE,UAAYypE,UAAYN,UAAYC,WAC7C/1F,MAAMkqD,KAAO8rC,SAASpkG,KAAK8kG,cAGhCV,SAAS5oG,OAAQ,CACjB,IAAMupG,YAAcjrG,KAAKwhC,cAAco5D,aAAc,KAAM,GAAI35D,WAClDjhC,KAAKwhC,cAAcypE,YAAa,OAAQX,UAChDl3C,KAAK,IAAK,SAAA/6D,GAAC,OAAIA,EAAEA,IAAGyhC,MAAM,iBAAkB,QAChCs5B,KAAK,QAAS,SAAA/6D,GAAC,OAAIA,EAAE4oC,YAE1C,OAAOjhC,yCAIP,IAAMihC,UAAYjhC,KAAK4M,SAASq0B,UAC1Bi5D,WAAal6F,KAAKg9F,iBACxBrU,6BAAcuR,WAAWuC,iBAAiB3pC,UAA1C,IAAAn3C,OAAwDslB,YAAayG,iEApFrE,OACIzG,UAAS,GAAAtlB,OvBTM,OuBSN,oBACTyuF,UAAS,GAAAzuF,OvBVM,OuBUN,cACT0uF,UAAS,GAAA1uF,OvBXM,OuBWN,+DAKb,MAAO,6BCAF8qF,qBACTyE,KAjBW,SAATC,OAAU34F,IAAKiqB,QAASisE,UAAa,IAEnCtZ,YAIA58E,IAJA48E,YACAG,WAGA/8E,IAHA+8E,WACApB,QAEA37E,IAFA27E,QACAR,YACAn7E,IADAm7E,YAGCyB,YAAY1tF,QAAW6tF,WAAW7tF,QAGnC+6B,QAAQ4/D,sBAAsBlO,QAAQ,MAAQua,UAAU,GACxDjsE,QAAQ4/D,sBAAsBjN,eAAiBsZ,UAAU,IAHzDjsE,QAAQ4/D,sBAAsB1O,eAAiB+a,UAAU,IAS7D0C,MAAO,SAAAA,MAAC54F,IAAKiqB,SAAY,IAEjB2yD,YAGA58E,IAHA48E,YACAG,WAEA/8E,IAFA+8E,WACA5B,YACAn7E,IADAm7E,YAECyB,YAAY1tF,QAAW6tF,WAAW7tF,QAGnC+6B,QAAQ4/D,sBAAsB9M,cAAgB,SAAS,GACvD9yD,QAAQ4/D,sBAAsBjN,eAAiB,SAAS,IAHxD3yD,QAAQ4/D,sBAAsB1O,eAAiB,SAAS,IAMhE0d,UAAW,SAAAA,UAAC74F,IAAKiqB,SAAY,IAErB2yD,YAKA58E,IALA48E,YACAG,WAIA/8E,IAJA+8E,WACArB,SAGA17E,IAHA07E,SACAC,QAEA37E,IAFA27E,QACAR,YACAn7E,IADAm7E,YAECyB,YAAY1tF,QAAW6tF,WAAW7tF,QAGnC+6B,QAAQ4/D,sBAAsBnO,SAAS,MAAQ,aAAa,GAC5DzxD,QAAQ4/D,sBAAsBlO,QAAQ,MAAQ,aAAa,IAH3D1xD,QAAQ4/D,sBAAsB1O,eAAiB,aAAa,wxCCrCnD2d,gEACjB,SAAAA,kBAAwB,IAAApE,iBAAAhyF,qKAAAq2F,CAAAvrG,KAAAsrG,iBAAA,QAAAl+B,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAAs2F,2CAAAxrG,MAAAknG,iBAAAuE,gCAAAH,kBAAApzG,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJg6E,UAAY,YACjB3mF,MAAK4mF,YAAc2K,oBAHCvxF,mZADiB8mF,8TAelCtM,aAAcvkE,SAAuB,IAAdxkB,QAAcvB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAClCsjG,SAAW1oG,KAAK87F,YAAYn1F,QAAQ+hG,UAAY1oG,KAAK67F,WAM3D,OAJ0C,IAAtCnM,aAAawH,sBACbwR,SAAShZ,aAAc1vF,KAAM2G,QAAQ+hG,UAAY1oG,KAAK67F,WAGnD77F,uDAdP,MAAO,sDAIP,MAAO,s1CCbM0rG,2wBAAqB1P,oUAa/BtM,aAAcvkE,SACjB,IAAMsR,QAAUz8B,KAAKq2F,SAAS55D,QACxBkvE,WAAajc,aAAaN,YAAYvyE,MAM5C,OALyB,OAArBsO,QAAQ/N,SACRqf,QAAQmvE,eAAeC,YAEvBpvE,QAAQqvE,gBAAgB/gG,KAAK4gG,YAE1B3rG,uDAnBP,MAAO,iDAIP,MAAO,wDAIP,OAAO,swDCNf,IAAM+rG,iBAAW,SAAXA,SAAYC,UAAWC,cAAexvE,QAASi2D,YACjD,IAAMwJ,UAwCN,OAvCI8P,WACAA,UAAUljG,QAAQ,SAACojG,UACf,IAAMC,KAAOD,SAASC,KAChBC,SAAWH,cAAcE,MAC/B,GAAIC,UAAYA,SAASC,oBAAqB,CAC1C,IAAMC,iBAAmBJ,SAASttF,IAAI2tF,SAChCA,UACFruE,EAAGivC,WAAWm/B,iBAAkB,IAAK,SACrC9oG,EAAG2pE,WAAWm/B,iBAAkB,IAAK,SACrC53D,MAAOy4B,WAAWm/B,iBAAkB,QAAS,SAC7C7xE,MACInvB,MAAO6hE,WAAWm/B,iBAAkB,OAAQ,SAC5CtzG,MAAO05F,WAAW8Z,qBAGpBl0G,KAAI,GAAAqjB,OAAMuwF,SAASttF,IAAItmB,KAAnB,KAAAqjB,OAA2B+2E,WAAW7sE,YAAYsmE,cACtDsgB,UACFC,UAAWjwE,QAAQsvE,UACfzzG,UACA6zG,KAAM,QACNlrE,UAAWyxD,WAAW7sE,YAAYk2E,gBAAgB96D,UAClDsrE,kBACAvwD,WACInhD,KAAM,YAEV04D,WAAYm/B,WAAWia,sBACvBC,iBAAiB,EACjBloF,OAAQ,SAAAA,OAAAjR,IAAE,OAAIA,GAAGyL,OAAO,kBAAM,IAC1BE,WAAW,KAEfg9E,aAAa,EACb0G,QAAQ,IAEZ+J,YAAaX,SAASttF,IAAItmB,MAE9B4jG,OAAOh2F,KAAKumG,aAIjBvQ,QAGU4Q,oDACjB,SAAAA,eAAwB,IAAA5F,iBAAAhyF,4JAAA63F,CAAA/sG,KAAA8sG,cAAA,QAAA1/B,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAA83F,kCAAAhtG,MAAAknG,iBAAA+F,uBAAAH,eAAA50G,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJqrF,cACLh4F,MAAKi4F,kBAHej4F,8XADconF,gUAqBnB,IAAAjnF,OAAArV,KACTy8B,QAAUz8B,KAAKq2F,SAAS55D,QACxB2wE,QAAU3wE,QAAQ2wE,UAClBnB,cAAgBxvE,QAAQ4wE,WAAWpB,cACnCqB,aAAe7wE,QAAQyvE,WAM7B,OALAzvE,QAAQ9zB,QAAQ4kG,0BAAhB,GAAA5xF,OACO6xF,0BAAiBz8C,qBADxB,KAAAp1C,OACgDyxF,QAAQngC,UADxD,aAC8E,SAAAx4C,MAAmB,IAAfu3E,UAAeyB,sBAAAh5E,KAAA,MACzFpf,OAAKq4F,QAAU3B,iBAASC,UAAWC,cAAexvE,QAASpnB,UAEnErV,KAAK0tG,QAAU3B,iBAASuB,aAAcrB,cAAexvE,QAASz8B,MACvDA,uEAIP,OACI+/F,UAAU,+DASd,OAAO,wCAGJrQ,cACH,IAAM1J,KAAOhmF,KACPqe,UAAYqxE,aAAaN,YAAYvyE,MAC3C,IAA0C,IAAtC6yE,aAAawH,qBAAgC,CAC7C,IACMuF,gBADaz8F,KAAKg9F,iBACWP,gBAC7Bx7D,UAAS,GAAAtlB,OAAM3b,KAAK4M,SAASq0B,WAC7Bi7D,OAASl8F,KAAK0tG,QACdzC,YAAcjrG,KAAKwhC,cAAci7D,gBAAiB,KAAM,GAA1C,GAAA9gF,OAAiDslB,UAAjD,eACCjhC,KAAKwhC,cAAcypE,YAAa,IAAKxyG,OAAOkmB,OAAOu9E,SAC3Dz0D,KAAK,SAAU00D,OACxB,IAAMuQ,UAAYvQ,MAAMuQ,UAClBiB,MAAQ3nB,KAAKxkD,cAAcxhC,KAAM,IAAK0sG,UAAWzrE,WAFxB2sE,uBAAAH,sBAGXznB,KAAKqQ,SAAS55D,QAAQoxE,eAAe1R,MAAM0Q,aACjBiB,kCAAkCzvF,WAJjD,GAIxB0vF,gBAJwBH,uBAAA,GAIPliG,OAJOkiG,uBAAA,GAKzBI,qBAAuB,IAAInwG,oBAAUkwG,gBAAiBriG,QAC5DiiG,MAAMlmE,KAAK,SAAUpvC,EAAGN,GACpB20G,UAAU30G,GAAGgT,KAAKijG,sBAAsBn6E,MAAM7zB,UAI1D,OAAOA,+CA7DP,MAAO,oEAIP,OACIihC,UAAS,GAAAtlB,O3B/DM,O2B+DN,mEAKb,MAAO,q0CCjEMsyF,2yBAA0BnB,qWAYvC,OACI/M,UAAU,qDAXd,MAAO,2EAIP,OACI9+D,UAAS,GAAAtlB,O5BVM,O4BUN,0zCCPAuyF,ovBAAqBpB,iVAYlC,OACI/M,UAAU,qDAXd,MAAO,sEAIP,OACI9+D,UAAS,GAAAtlB,O7BVM,O6BUN,+NCRd,IAAMs0E,yCAAkBke,oCAAAjd,uBAC1Bkd,OAAoB,gBACjB91G,KAAM,cACNqO,SACI+hG,SAAU,SAEf,kBANwByF,oCAAAjd,oBAAA,GAAAv1E,OAOvByyF,MAPuB,KAAAzyF,OAOHyyF,UACpB91G,KAAM,UACNqO,SACI+hG,SAAU,mBACV5hF,MAAO,EACP/S,OAAQ,SAAAA,OAAA0oB,SAAO,MAA8B,eAA1BA,QAAQ7vB,SAAS1T,UAZjBi1G,oCAAAjd,oBAe1Bkd,YACG91G,KAAM,cACNqO,SACI+hG,SAAU,cAEf,aACCpwG,KAAM,UACNqO,SACImgB,MAAO,OAEZ,YAzBwBqnF,oCAAAjd,oBA0B1Bkd,QAAqB,WA1BKD,oCAAAjd,oBA2B1Bkd,SACG91G,KAAM,cACNqO,SACI+hG,SAAU,UAEf,uBAhCwBxX,qBCElBmd,MAAQ,QACRC,OAAS,SACTC,KAAO,OACPC,MAAQ,QACRC,MAAQ,QAGRC,UACT/uD,EAAG,IACH17C,EAAG,IACH0qG,GAAI,KACJC,GAAI,MCbK7S,mCACTa,YDHuB,OCIvBD,aAAc,aACd17D,UAAW,GACX+b,YAAa,SACbhB,WACInhD,KDPa,SCSjB6/F,eAGAmU,sBAAuB,GACvBtC,UACI73D,SACAxW,KACA16B,KACAmxD,MACAm6C,eACI91G,MAAO,IAGfu6D,YACI0/B,OAAQ,QACR9M,SAAU,KAEd4oB,iBAAiB,2TCbAC,qhBAGb,MAAM,IAAIj/F,MAAMw/D,UAAUC,oEAS1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wDAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,oDAW1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8DAQ1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,gDAQ1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,4FAa1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,gFAc1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,4FAY1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8DAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,0EAQ1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wEAQ1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,4EAQ1B,OAAOxvE,6DAIP,MAAM,IAAI+P,MAAMw/D,UAAUC,sDAQ1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wDAI1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,mCCxJrBl7C,aACTkkE,QACA3kE,SACAqsE,eACAkN,WACAriG,QACA6B,UACA8uF,aACIjvB,aAAc,SAAAA,aAAAvrE,KAAG,OAAIA,2LCKtB,cAAM+tG,wBAAS,SACTC,qBAAM,MACNC,sBAAO,OACPC,uBAAQ,QAMRC,oBAAkBC,gCAAAC,uBAC1BC,sBAAuB97B,QAAQC,UADL27B,gCAAAC,oBAE1BC,wBAAyB97B,QAAQI,YAFPw7B,gCAAAC,oBAG1BC,uBAAwB97B,QAAQE,WAHN07B,gCAAAC,oBAI1BC,qBAAsB97B,QAAQG,SAJJ07B,qBCjBlBE,OAAS,SACTC,KAAO,OACPC,KAAO,WACPnB,iBAAQ,QACRoB,QAAU,UACVC,SAAW,WACXC,SAAW,WACXC,IAAM,MACNC,IAAM,MACNC,oBAAW,WACXC,WAAa,aACbC,UAAY,YCdZC,mCAAY,aACZC,SAAW,WACXH,qBAAa,aACbN,kBAAU,UACVH,iBAAS,SAETI,mBAAW,WASXS,OAAS,8LCHlBC,YAcAC,uBAdAD,YACAE,eAaAD,uBAbAC,eACAC,SAYAF,uBAZAE,SACAC,SAWAH,uBAXAG,SACAC,cAUAJ,uBAVAI,cACAC,aASAL,uBATAK,aACAC,gBAQAN,uBARAM,gBACAC,cAOAP,uBAPAO,cACAC,cAMAR,uBANAQ,cAIAr7B,UAEA66B,uBAFA76B,UACAs7B,UACAT,uBADAS,UAESC,UAAQC,6BAAAC,aAChBC,OAAmBd,aADHY,6BAAAC,UAEhBC,KAAiB17B,WAFDw7B,6BAAAC,UAGhBC,SAAqBN,eAHLI,6BAAAC,UAIhBC,SAAqBL,eAJLG,6BAAAC,UAKhBC,UAAsBZ,gBALNU,6BAAAC,UAMhBC,WAAuBP,iBANPK,6BAAAC,UAOhBC,IAAgBX,UAPAS,6BAAAC,UAQhBC,IAAgBV,UARAQ,6BAAAC,UAShBC,oBAAqBT,eATLO,6BAAAC,UAUhBC,KAAiBJ,WAVDE,6BAAAC,UAWhBC,iBAAkBd,aAXFY,6BAAAC,UAYhBC,QAAoBR,cAZJO,WA6Dd,SAASE,0BAAazvF,QACzB,IAAKA,OAAOhnB,OAASq2G,SAASrvF,OAAOhnB,MACjC,MAAM,IAAIkV,MAAJ,GAAA4L,OAAakG,OAAOhnB,KAApB,+BAEV,IAAKgO,MAAMuB,QAAQyX,OAAOtgB,OACtB,MAAM,IAAIwO,MAAM,oCAEpB,IAAIwhG,aAAe,KACbhwG,MAAQsgB,OAAOtgB,MAErB,GAAIsgB,OAAOhnB,OAAS40G,kBAAU5tF,OAAOquC,aAAc,CAE/C,GADAqhD,aAAeL,SAASrvF,OAAOquC,cAC3BruC,OAAOquC,eAAiBmhD,IACxB,OAAOE,eAAehwG,MAAMA,OAAO+9C,SAASz9B,OAAOy9B,UAChD,GAAIz9B,OAAOquC,eAAiBmhD,IAC/B,OAAOE,eAAehwG,MAAMA,OAAOygD,MAAMngC,OAAOmgC,YAGpDuvD,aAAeL,SAASrvF,OAAOhnB,MAMnC,OAHIgnB,OAAOhnB,OAASg1G,oBAChB0B,eAAe7vD,OAEZ6vD,eAAehwG,MAAMA,OC3GzB,IAAMw6F,6CACTljE,GAAIvuB,cACJknG,aAAa,EACbC,UACI9U,aAAc,aAElB+U,gBAAiB,GACjB1vD,KAAM,GACN46C,YFfuB,OEgBvB37D,UAAS,GAAAtlB,OFhBc,OEgBd,SACT2jC,SAAU,EACV4Q,aAAc,SACdyhD,eAAe,EACfC,QACIC,SAAU,KACVC,WAAY,MAEhBxO,YAAa,OACbprF,aAAc,SAAAA,aAAAhX,KAAG,OAAIA,KACrByhC,QAAS,GACT+e,MAAM,EACNqwD,cAAe,KACfl3D,QAAQ,EACRkkD,MAAM,EACNiT,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAChBp4E,SACAj/B,KAAM,SACN4mD,WAAY,KACZ2Q,WAAY,KACZq4C,QAAS,EACT0H,QAAS,GCxBPC,yBAAa,SAAbA,WAAcC,SAAUC,SAAUC,cACpC,IAAIV,SACE5/C,KAAOogD,SAASpgD,OAChBrlD,OAASylG,SAASzlG,SAClB4lG,aAAeH,SAASG,eACxBV,WAAaO,SAASP,aACtB7oE,MAAQgpB,KAAKhpB,QAEbpC,OADYoC,MAAMpC,OAASoC,MAAM5B,UAAY4B,MAAMlyB,UAGrDusF,YAGA12F,OAHA02F,YACAqO,cAEA/kG,OAFA+kG,cACA92G,KACA+R,OADA/R,KAGA+2G,OACAY,aADAZ,OAGJC,SAAWD,OAAOC,SAElB,IAAMp+C,SAAW4+C,SAASI,cAkD1B,OAjDAH,SAAS7qE,KAAK,SAAUpvC,EAAG4J,OACvB,IAAIywG,OACAC,OACAtgG,MAAQy/F,WAAW7vG,OAAS6vG,WAAW7vG,OAAO5B,KAAOhI,EAEzDga,MAAQA,MAAM/P,WAEd,IAAMswG,aAAeL,aAAapyE,WAAW9tB,OAEvCupB,MAA6B,GAArBg3E,aAAah3E,MACrBC,OAA+B,GAAtB+2E,aAAa/2E,OAExBg2E,SAAW,IACXA,SAAW,IAAMA,UAGrB,IAAMgB,SAAW,EAAIhvG,KAAK6N,MAAMmgG,SAAW,IACrCiB,oBAAuBD,SAAW,GAAM,EAAKhB,SAAW,IAAMhuG,KAAKqoB,KAAK2lF,SAAW,KAAOA,UAAY,IAE5Ga,OAAS7uG,KAAK8Q,KAAK9Q,KAAAgR,IAAAgnB,OAAU,GAAVh4B,KAAAgR,IAAc+mB,MAAS,IAAK/3B,KAAK+yC,IvJg6BtC,SAAhBm8D,cAAgBC,OAAK,OAAIA,MAAQnvG,KAAKkyC,GAAK,IuJh6Beg9D,CAAcD,qBAEpD,IAAbD,UAA+B,IAAbA,UAAqBC,mBAAqB,MAAQA,oBAAsB,KAC3FJ,QAAmB,EAAT72E,QAEd82E,OAAS/2E,MAGL+2E,OADa,KAAbd,SACSh2E,OACW,MAAbg2E,UACGh2E,OAED,EAGTynE,cAAgBkM,sBAChBmD,OAAUhB,eAAiB9qE,MAAM,KAAOxuC,GAAKwC,OAAS40G,iBAAUkD,OAASA,OAAS,EAAIA,OACtFhqB,6BAAc3oF,MACGozD,KAAK,YADtB,aAAAz3C,QACiDg3F,OAASl/C,SAD1D,sCAAA93C,QAEuB+2F,OAASj/C,SAFhC,aAAA93C,OAEoDk2F,SAFpD,QAIAc,OAAUhB,eAAiB9qE,MAAM,KAAOxuC,GAAKwC,OAAS40G,iBAAUkD,OAASA,OAAS,EAAIA,OAEtFhqB,6BAAc3oF,MACGozD,KAAK,YADtB,aAAAz3C,OACgDg3F,OAASl/C,SADzD,sCAAA93C,OAEsB+2F,OAASj/C,SAF/B,aAAA93C,OAEmDk2F,SAFnD,OAIJlpB,6BAAc3oF,MAAMuzD,aACH4yB,SAAS,KAAM9lF,KAAKgS,SAElCigG,UASLW,oCAAwB,SAAxBA,sBAAyBC,gBAAiBC,aAAc1/C,UAAa,IAEnE2/C,YACAD,aADAC,YAEExmG,OAASumG,aAAavmG,SACtB4lG,aAAeW,aAAaX,eAC5BD,aAAeY,aAAal4G,eAAes3G,aAE7CjP,YAEA12F,OAFA02F,YACA1G,YACAhwF,OADAgwF,YAGAgV,OACAY,aADAZ,OAGAC,SAEAD,OAFAC,SACYwB,aACZzB,OADAE,WAGEQ,SAAWY,gBAAgBpgD,UAAU,cAI3C,GAHAw/C,SAASx/C,UAAU,SAASprB,UAGxBmqE,UHjGW,QGiGEvO,aHlGC,WGkGsBA,YAEjC,GAAKuO,UAAawB,aAElB,CAEH,GADAf,SAASjyG,KAAK,IHtGH,QGuGPijG,aHxGU,WGwGaA,YACvBgP,SAASl/C,KAAK,IAAK,GACFA,KAAK,IAAK,GACVA,KAAK,YAAa,IAClB/yD,KAAK,IACRuoF,YAAY0pB,SAAU,QAAS,SAACj6G,EAAGN,GAC7C,OAAIq7G,YAAYr7G,GACLq7G,YAAYr7G,GAAGuiC,UAFL,GAAA3e,OAInBihF,YAJmB,gBAMnBxpC,KAAK,KAAM,KACAt5B,MAAM,UAAW,KAEjBy5B,aACA4yB,SAAS,KACTzY,GAAG,MAAOylC,aAAaG,6BACvBlgD,KAAK,KAAM,SAAC/6D,EAAGN,GACZ,MH1HV,WG0HcurG,aAAgC,IAANvrG,EACnBq7G,YAAY,GAAGtzE,eAElBszE,YAAY,GAAGtzE,eAAiBszE,YAAY,GAAG94E,MAAM54B,OAAS,GAAK+xD,WAE9E35B,MAAM,UAAW,GACjBz5B,KAAK,SAAApG,GAAC,OAAIA,IACVm5D,KAAK,IAAK,QAEbw1B,YAAY0pB,SAAU,QAAS,SAACj6G,EAAGN,GAAJ,OAAUq7G,YAAYr7G,GAAGuiC,OAA7C,GAAA3e,OAAuDihF,YAAvD,gBACnBv8F,KAAK,SAAApG,GAAC,OAAIA,SA/BpBq4G,SAASl/C,KAAK,YAAa,SAF3Bg/C,yBAAWe,aAAcb,SAAUC,cAqCvC,OAAOD,UAGLiB,+BAAmB,SAAnBA,iBAAoBJ,cAAiB,IAEnCxB,cACAwB,aAAavmG,SADb+kG,cAGAM,eACAkB,aAAaX,eADbP,eAEEl7F,OAASo8F,aAAap8F,SACxB46F,eAAiB56F,OAAOrV,QAAUuwG,gBAClCkB,aAAaI,oBAWfC,6BAAiB,SAAjBA,eAAkBC,SAAUnQ,YAAat6E,UAAa,IAEpD0qF,eAIA1qF,SAJA0qF,eACAvB,QAGAnpF,SAHAmpF,QACAwB,YAEA3qF,SAFA2qF,YACAC,eACA5qF,SADA4qF,eAEJ,OAAQtQ,aACR,KAAKkM,sBACDiE,SAASrgD,KAAK,YAAd,aAAAz3C,SACmBi4F,eAAeh4E,MAAQ83E,gBAD1C,KAAA/3F,OAC6Dw2F,QAAUwB,YADvE,iBAEA,MACJ,KAAKnE,uBACDiE,SAASrgD,KAAK,YAAd,aAAAz3C,OACmBi4F,eAAeh4E,MAAQ83E,eAD1C,KAAA/3F,OAC6Dw2F,QAAUwB,YADvE,gBAEA,MACJ,KAAKnE,qBACDiE,SAASrgD,KAAK,YAAd,aAAAz3C,OACkBi4F,eAAeh4E,MAAQ,EADzC,KAAAjgB,QAC+Ci4F,eAAe/3E,OAAS63E,eADvE,MAEA,MACJ,KAAKlE,wBACDiE,SAASrgD,KAAK,YAAd,aAAAz3C,OACkBi4F,eAAeh4E,MAAQ,EADzC,KAAAjgB,OAC8Ci4F,eAAe/3E,OAAS63E,eAAiB,EADvF,MAKJ,OAAOD,UCjMX,wBASMI,aACFxwG,MAAO,YACPywG,QAAS,UACTC,WAAY,OACZ/vG,KAAM,KACNhB,IAAK,YACLwgD,KAAM,QACNwwD,QAAS,QACTC,QAAS,MACT1lD,KAAM,UAOJc,2BACD,EAAG,EAAG,eAAgBQ,gBAAgB/wC,MAAM,GAAI,YAChD,EA3BkB,IA2BC,UAAW8wC,WAAW9wC,MAAM,GAAI,YACnD,EAAG,IAAoB,eAAgB8wC,WAAW9wC,MAAM,GAAI,YAC5D,GAAI,IAAqB,cAAe8wC,WAAW9wC,MAAM,IAAK,YAC9D,GAAI,KAAqB,kBAAmB8wC,WAAW9wC,MAAM,IAAK,YAClE,GAAI,IAAqB,iBAAkB8wC,WAAW9wC,MAAM,IAAK,YACjE,EA/BkB2vC,IA+BC,SAAUkB,WAAW7wC,MAAM,GAAI,YAClD,EAAG,IAAoB,eAAgB6wC,WAAW7wC,MAAM,GAAI,YAC5D,GAAI,IAAqB,cAAe6wC,WAAW7wC,MAAM,IAAK,YAC9D,GAAI,IAAqB,kBAAmB6wC,WAAW7wC,MAAM,IAAK,YAClE,GAAI,KAAqB,iBAAkB6wC,WAAW7wC,MAAM,IAAK,YACjE,EAnCgBqkC,KAmCC,OAAQuM,SAAS5wC,MAAM,GAAI,SAC5C,EAAG,MAAkB,cAAe4wC,SAAS5wC,MAAM,GAAI,SACvD,EAAG,MAAkB,YAAa4wC,SAAS5wC,MAAM,GAAI,SACrD,GAAI,MAAmB,eAAgB4wC,SAAS5wC,MAAM,IAAK,SAC3D,EAtCe4vC,MAsCC,QAAS5F,QAAQhqC,MAAM,GAAI,QAC3C,EAtCgB6vC,OAsCC,SAAUc,OAAS3wC,MAAM,GAAI,SAC9C,EAtCiB6vC,OAsCC,UAAWa,UAAU1wC,MAAM,GAAI,SACjD,EAAG,OAAmB,WAAY0wC,UAAU1wC,MAAM,GAAI,YACtD,EAAG,QAAmB,cAAe0wC,UAAU1wC,MAAM,GAAI,eACzD,EAxCgB6vC,QAwCC,SAAU5F,SAASjqC,MAAM,GAAI,SAC9C,EAAG,QAAkB,SAAUiqC,SAASjqC,MAAM,GAAI,SAClD,EAAG,QAAkB,SAAUiqC,SAASjqC,MAAM,GAAI,SAClD,EAAG,QAAkB,SAAUiqC,SAASjqC,MAAM,GAAI,SAClD,GAAI,QAAmB,SAAUiqC,SAASjqC,MAAM,IAAK,SACrD,IAAK,QAAoB,UAAWiqC,SAASjqC,MAAM,KAAM,SACzD,IAAM,QAAqB,YAAaiqC,SAASjqC,MAAM,KAAO,SAoC7Do1F,sCAAwC,SAAxCA,sCAAyCvyD,SAAU/a,MAAOnK,SAM5D,IALA,IAAI03E,uBAAyB9kD,yBAAc3tD,OAAS,EAChD0yG,iBAAmB,EACnBC,sBAAwB,KAGnBt8G,EAAIs3D,yBAAc3tD,OAAS,EAAG3J,GAAK,EAAGA,IAAK,CAChD,IAAMu8G,iBAAmBjlD,yBAAct3D,GACjCw8G,mBAAqB1wG,KAAK6N,MAAMiwC,SAAW2yD,iBAAiB,IAC9DC,oBAAsB3tE,QACtButE,uBAAyBp8G,EACzBq8G,iBAAmBG,oBAiB3B,OAbAF,sBAAwBhlD,yBAAc8kD,wBAzCZ,SAAxBK,sBAAyB/3E,QAASg4E,WACpC,IACMC,qBADkBj4E,QAAQk4E,iBACa/4E,MAErCA,MAAUa,QAAQm3E,iBAAlBh4E,MAGR,OAF2B/3B,KAAK6N,OAAQkqB,OAAS64E,UAAY,GAAMC,sBAAyBD,WAuCjED,CAAsB/3E,QAAS23E,kBA1BnB,SAArCQ,mCAAsCn4E,QAAS5hC,MACjD,IAAM03G,aAAe91E,QAAQo4E,cAActC,aACrCuC,gBAAkBjB,YAAYh5G,MAGpC,OAFgB03G,aAAapyE,WAAW20E,iBAEzBl5E,MAwBSg5E,CAAmCn4E,QAAS43E,sBAAsB,KAI9CF,uBAAyB9kD,yBAAc3tD,OAAS,IACxF2yG,sBAAwBhlD,yBAAc8kD,uBAAyB,IAE5DE,sBAAsB,oLC5H1B,IAAMU,+BAAoB,SAApBA,kBAAqBt4E,SAC9B,IAAMu4E,gBAAkBv4E,QAAQk4E,iBAC1BM,aAAex4E,QAAQy4E,cACvBR,qBAAuBM,gBAAgBp5E,MACvCu5E,aAAeF,aAAar5E,MAE1BA,MAAUa,QAAQm3E,iBAAlBh4E,MAEFw5E,SAAWvxG,KAAK6N,OAAOkqB,MAAQ84E,uBAAyBS,aAAeT,uBAEvE7tE,MAAQpK,QAAQwM,QAAQpC,MDqHH,SAAlBwuE,gBAAmB54E,QAAS23E,kBACrC,IAAIkB,oBAAsBlB,iBACpBr9F,OAAS0lB,QAAQ1lB,SACjBO,QAAUmlB,QAAQ84E,SAElBC,oBAAsBz+F,OAAO,GAAKA,OAAO,GAEzC0+F,6BAA+B5xG,KAAK6N,MAAM8jG,oBAAsBl+F,SAOtE,OAJI88F,kBAAoBqB,+BACpBH,oBAAsBG,8BAGnBvB,sCAAsCsB,oBAAqBF,oBAAqB74E,SCnInD44E,CAAgB54E,QAAS24E,WAE7D34E,QAAQ+1E,cACJpgD,WAAYvrB,SAId6uE,sBAAwB,SAAxBA,sBAAyBn0G,MAAO0jC,MAGlC,OAFA1jC,MAAM,IAAM0jC,KACZ1jC,MAAM,IAAM0jC,KACL1jC,OAGLo0G,oBAAsB,SAAtBA,oBAAuBp0G,MAAO0jC,MAGhC,OAFA1jC,MAAM,IAAM0jC,KACZ1jC,MAAM,IAAM0jC,KACL1jC,OAGLq0G,oBAAkBC,4BAAAC,uBACnB5G,qBAAMwG,uBADaG,4BAAAC,oBAEnB7G,wBAASyG,uBAFUG,4BAAAC,oBAGnB3G,sBAAOwG,qBAHYE,4BAAAC,oBAInB1G,uBAAQuG,qBAJWG,qBAOXC,aAAe,SAAfA,aAAgBt5E,QAAS5hC,KAAMm7G,YAAahzD,QACrDvmB,QAAQl7B,MAAMy0G,aACdhzD,QAAUvmB,QAAQ+1E,aAARqD,+BAAA,GAAAl6F,OAA2B9gB,KAA3B,UAA0CmoD,UAc3CizD,iBAAmB,SAAnBA,iBAAoB3+F,QAAS/V,MAAOwV,OAAQnK,QAAW,IAE5D02F,YAEA12F,OAFA02F,YACAkO,YACA5kG,OADA4kG,YAEEvsE,KAhBY,SAAhBixE,cAAiBC,SAAU50G,MAAOwV,QACpC,IAAMq/F,QAAUvyG,KAAKsoB,IAAI5qB,MAAM,GAAKA,MAAM,IAGpC80G,KAAOD,SAFDA,SAAWr/F,OAAO,GAAKA,OAAO,IACrBo/F,UAKrB,OAFaC,QADIA,SAAWC,KAAO,GACDA,MAEpB,EAQDH,CAAc5+F,QAAS/V,MAAOwV,QAE3C,OAAIy6F,YACOoE,mBAAmBtS,aAAa/hG,MAAO0jC,MAE3C1jC,OAGE+0G,YAAc,SAAdA,YAAe75E,QAAS85E,aACjC,IAAIjnD,aACAknD,eACE5pG,OAAS6vB,QAAQ7vB,SAH0B6pG,uBAQ7Ch6E,QAAQm3E,iBAHD8C,WALsCD,uBAK7C76E,MACQ+6E,YANqCF,uBAM7C56E,OACA8G,QAP6C8zE,uBAO7C9zE,QAGAF,IAIAE,QAJAF,IACAsD,KAGApD,QAHAoD,KACA8rB,OAEAlvB,QAFAkvB,OACA7rB,MACArD,QADAqD,MAGA4wE,SACAL,YADAK,SAhB6CC,uBAqB7Cp6E,QAAQ+1E,eAFRR,aAnB6C6E,uBAmB7C7E,aACAJ,OApB6CiF,uBAoB7CjF,OAGAC,SACAD,OADAC,SAGAF,cAGA/kG,OAHA+kG,cACAD,gBAEA9kG,OAFA8kG,gBACAt/C,WACAxlD,OADAwlD,WA5B6C0kD,sBAmC7Cr6E,QAAQs6E,oBAJRC,eA/B6CF,sBA+B7CE,eACAC,kBAhC6CH,sBAgC7CG,kBACAC,mBAjC6CJ,sBAiC7CI,mBACAzjD,SAlC6CqjD,sBAkC7CrjD,SAGQ0jD,cAERH,eAFAn7E,OACOu7E,aACPJ,eADAp7E,MAGEy7E,YAAcrF,aAAeN,gBAAkB,EAC/C4F,aAAgBxF,YAAY,EAAMD,SAAUD,OAAOC,UACnDmD,gBAAkBv4E,QAAQk4E,iBAC1BM,aAAex4E,QAAQy4E,cACvB59F,QAAUmlB,QAAQ84E,SAClBx+F,OAAS0lB,QAAQ1lB,SACjB28F,eAAiBwD,mBAAmBr7E,OACpC64E,qBAAuBM,gBAAgBp5E,MACvCu5E,aAAeF,aAAar5E,MAC5B27E,cAAgBtC,aAAap5E,OAEnC,OACI6vB,MACIxtB,EAAG,SAAAA,KACEk0B,YAAc31B,QAAQs4E,oBACvB,IAAMN,UAAYh4E,QAAQ+6E,gBAAgB91G,OAM1C80G,eAAiBG,YAAcjD,eAAiBjgD,SAAW4jD,aAH3D/nD,cAAiBonD,YAAcjC,UAAY,GAAMC,sBAAyBD,WAKvDU,cAA6B,IAAbtD,WAE/ByF,YAAYzF,SAA+B,OAApBD,OAAOC,UAAqB,GAAKA,SAEpDviD,aAAeioD,gBACff,eAAiBG,YACjBrnD,aAAeioD,cACf96E,QAAQ+1E,cAAeP,gBAAgB,EAAOC,gBAAgB,MAGlEyE,YAAcjD,gBACdj3E,QAAQ+1E,cAAezT,MAAM,IAGjC,IAAM0Y,YAAc5zG,KAAK4Q,IAAI66C,aAAc8nD,cAY3C,OAVArB,aAAat5E,QAAS,IAAKw5E,iBAAiB3+F,SAAUmgG,YAAc,EAChEf,WAAa3wE,KAAOC,MAAQyxE,YAAc,GAAI1gG,OAAQnK,QAClDgqG,SAAWD,YAAc,MAEjCl6E,QAAQi7E,eACJ97E,MAAO0zB,aACPzzB,OAAQ26E,eACRt5E,OAAqB,OAAb20E,WAGLyF,aAEX9zG,EAAG,SAAAA,IACC,IAAIm0G,cAAgBjB,WACde,YAAcN,cAAgB,EAmBpC,OAjBApB,aAAat5E,QAAS,IAAKw5E,iBAAiB3+F,SACvCq/F,YAAcl0E,IAAMovB,OAAS4lD,YAAaA,aAAc1gG,OAAQnK,QAC7DgqG,SAAWF,WAAa,MAE3BA,WAAahD,eAAiB2D,aAAgB3C,uBAC/CiD,cAAgB,EAChBl7E,QAAQ+1E,cAAeP,gBAAgB,EAAOC,gBAAgB,KAGlEz1E,QAAQi7E,eACJ97E,MAAO+7E,cACP97E,OAAQ86E,YACRz5E,QAAQ,IAERw5E,WAAahD,gBACbj3E,QAAQ+1E,cAAezT,MAAM,IAE1BuY,cAGfnuE,MACIjL,EAAG,SAAAA,IACC63E,aAAat5E,QAAS,KAAM,EAAGi6E,WAAa3wE,KAAOC,OAAQ4wE,SAAWD,YAAc,MACpF,IAAMp1G,MAAQk7B,QAAQl7B,QAQtB,GALA+tD,cAAiB/tD,MAAM,GAAKA,MAAM,KAAO6wD,YAAcr7C,QAAQrV,OAAiC,EAAvBgzG,qBAGzE8B,eAAiBG,YAAcjD,eAAiBjgD,SAAW4jD,YAEvD/nD,aAAe6lD,cAA6B,IAAbtD,SAE/ByF,YAAYzF,SAAwB,OAAbA,UAAqB,GAAKA,SACjDyF,YAAYxF,YAAa,EAGrBxiD,aAAeioD,gBACff,eAAiB,EACjBlnD,aAAe,EACf7yB,QAAQ+1E,cAAeP,gBAAgB,EAAOC,gBAAgB,IAC9Dz1E,QAAQl7B,OAAOg2G,cAAgB,EAAGb,WAAaa,cAAgB,UAEhE,GAAInlD,WAAY,CACDskD,WAAa3/F,OAAOrV,OAAUgzG,qBACjCS,cACX14E,QAAQl7B,OAAOg2G,cAAgB,EAAGb,WAAaa,cAAgB,IAYvE,OATIZ,YAAcjD,gBACdj3E,QAAQ+1E,cAAezT,MAAM,EAAOkT,gBAAgB,EAAOC,gBAAgB,IAG/Ez1E,QAAQi7E,eACJ97E,MAAO0zB,aACPzzB,OAAQ26E,eACRt5E,OAAqB,OAAb20E,WAELyF,aAEX9zG,EAAG,SAAAA,IACCuyG,aAAat5E,QAAS,KAAMk6E,YAAc9kD,OAAQpvB,KAAMm0E,SAAWF,WAAa,MAEhF,IAAIiB,cAAgBjB,WAAahD,eAAiBjgD,SAAW4jD,YAc7D,OAbIM,eAAiBjD,uBACjBiD,cAAgB,EAChBl7E,QAAQ+1E,cAAeP,gBAAgB,EAAOC,gBAAgB,KAGlEz1E,QAAQi7E,eACJ97E,MAAO+7E,cACP97E,OAAQ86E,YACRz5E,QAAQ,IAERw5E,WAAahD,gBACbj3E,QAAQ+1E,cAAezT,MAAM,IAE1BuY,cAGfM,WACI15E,EAAG,SAAAA,IACCo5E,YAAYxF,YAAa,EACzB,IAAM2F,YAAcL,aAAe,EAInCrB,aAAat5E,QAAS,MAFLk1E,cAAgB,EAAI8F,aAEE1xE,KAAM2wE,WAAa1wE,MAAQyxE,aAC9Db,SAAWD,YAAc,MAE7B,IAAMp1G,MAAQk7B,QAAQl7B,QAGhBs2G,eAAiBZ,kBAAkBv1G,QAAU01G,aAAe1C,sBAwBlE,OAvBuBnzG,MAAM,GAAKA,MAAM,GAGnBs2G,gBAAsC,OAApBjG,OAAOC,WACtC8E,YAAcS,aAAeC,YAAc5jD,SAAWigD,gBACtD4D,YAAYzF,SAAW,KACvBp1E,QAAQ+1E,cACJP,gBAAgB,EAChBD,cAAc,MAGlBsF,YAAYzF,UAAY,GACxBp1E,QAAQ+1E,cACJP,gBAAgB,EAChBD,cAAc,MAMtB2E,YAAcjD,gBACdj3E,QAAQ+1E,cAAezT,MAAM,IAE1BuY,aAEX9zG,EAAG,SAAAA,IACC8zG,YAAYxF,YAAa,EACzB,IAAM2F,YAAcT,eAAen7E,OAAS,EAa5C,OAVAk6E,aAAat5E,QAAS,KAAMk6E,YAAc9kD,QAFzB8/C,cAAgB,EAAI8F,aAEwBA,YAAch1E,KACvEm0E,SAAWF,WAAa,MAGxBA,WAAaU,aAAe1D,eAAiB2D,cAC7C56E,QAAQ+1E,cAAeP,gBAAgB,IACnCyE,WAAahD,gBACbj3E,QAAQ+1E,cAAezT,MAAM,KAG9BuY,siBCrShB,IAAMQ,iBAAmB,SAAnBA,mBAAoD,IAAhCjG,SAAgCzsG,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAArB,EAAGw2B,MAAkBx2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAXuuB,OAAWz2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACzDyqG,cAAgBl8E,OAChBm8E,aAAep8E,MACnB,GAAIi2E,SAAU,CACV,IAAMmB,OAAUnB,UAAY,GAAKhuG,KAAKkyC,GAAM,IAC5CiiE,aAAen0G,KAAKsoB,IAAI0P,OAASh4B,KAAK+yC,IAAIo8D,QAAUnvG,KAAKsoB,IAAIyP,MAAQ/3B,KAAK8yC,IAAIq8D,QAC9E+E,cAAgBl0G,KAAKsoB,IAAIyP,MAAQ/3B,KAAK+yC,IAAIo8D,QAAUnvG,KAAKsoB,IAAI0P,OAASh4B,KAAK8yC,IAAIq8D,QAEnF,OAASp3E,MAAOo8E,aAAcn8E,OAAQk8E,gBAG7BE,iBAAY,SAAZA,UAAax7E,SACtB,IAAIyB,EAAI,EACJ16B,EAAI,EACF00G,aAAez7E,QAAQy7E,eACvBtrG,OAAS6vB,QAAQ7vB,SAEnB02F,YAGA12F,OAHA02F,YACAmH,QAEA79F,OAFA69F,QACA0H,QACAvlG,OADAulG,QAEA7O,cAAgB6L,wBAChBjxE,OAAgB5wB,IAAZm9F,QAAwByN,aAAat8E,MAAQ6uE,SAEjDnH,cAAgB4L,uBAChB1rG,OAAgB8J,IAAZ6kG,QAAwB+F,aAAar8E,OAASs2E,SAEtD11E,QAAQ+1E,cAAe/H,QAASvsE,EAAGi0E,QAAS3uG,KAiCnC20G,2BAA6B,SAA7BA,2BAA8B17E,SACvC,IAGI27E,UAHAC,YAAc,GACdC,uBAA0B18E,MAAO,EAAGC,OAAQ,GAC5C08E,aAEEtB,qBACAhuE,MAAQxM,QAAQwM,QAN6BuvE,sBAOd/7E,QAAQ+1E,eAArCpgD,WAP2ComD,sBAO3CpmD,WAAY4/C,aAP+BwG,sBAO/BxG,aACZ15G,KAASmkC,QAAQ7vB,SAAjBtU,KACAi6G,aAAiB91E,QAAQxhC,eAAzBs3G,aACFkG,UAAYxvE,MAAMpC,OAASoC,MAAM5B,UAAY4B,MAAMlyB,OAgCzD,OA7BAw7F,aAAap4E,SAASsC,QAAQi8E,iBAM9BN,WAHAA,UAAYhmD,YAAcqmD,aAGJxwG,IAAI,SAAC0wG,cAAe5gH,GACtC,IAAM8a,MAAQ4pB,QAAQm8E,iBAAiBD,cAAe5gH,EAAGqgH,WAGnDpB,eAAiBzE,aAAapyE,WAAWttB,OAa/C,OAVAokG,kBAAkB/wG,KAAK8wG,gBAGnBA,eAAep7E,MAAQ08E,sBAAsB18E,QAC7Cy8E,YAAcxlG,MACd0lG,UAAY97E,QAAQq1E,aAAer1E,QAAQq1E,aAAa/5G,MAExDugH,sBAAwBtB,eACxBuB,UAAYA,WAAavB,gBAEtBnkG,QAGX0/F,aAAap4E,SAASsC,QAAQo8E,iBAI1B3B,mBAHuBlF,aAAeO,aAAapyE,WAAW7nC,OAAUsjC,MAAO,EAAGC,OAAQ,GAI1Fw8E,wBACAC,4CACArB,oCACAmB,oBACAG,oBACA9kD,SAAUh3B,QAAQg2E,gBAsDbqG,uBAAyB,SAAzBA,uBAA0Br8E,QAASs8E,eAAgBx3G,OAC5D,IAAIq6B,MACAC,OACE9kB,OAAS0lB,QAAQ1lB,SACf08C,SAAiDslD,eAAjDtlD,SAAUujD,eAAuC+B,eAAvC/B,eAAgBE,mBAAuB6B,eAAvB7B,mBAJoC8B,iBAK9Bv8E,QAAQ7vB,SAAxC8kG,gBAL8DsH,iBAK9DtH,gBAAiBt/C,WAL6C4mD,iBAK7C5mD,WACjB4/C,aAAiBv1E,QAAQ+1E,eAAzBR,aACQiH,cAAkB/B,mBAA1Br7E,OACQs7E,cAAuCH,eAA/Cn7E,OAA8Bu7E,aAAiBJ,eAAxBp7E,MAK/B,GAHAA,MAAQr6B,OAASA,MAAMG,OAASH,MAAM,GAAKA,MAAM,GAAK,EAEtDs6B,OAAS,EACLu2B,WAAY,CACZ,IAAM8mD,YAAcz8E,QAAQ08E,uBADhB1kF,MAGR5wB,KAAK4Q,IAALlN,MAAA1D,KAAIu1G,wCAAQhnD,YAARz2C,OAAAy9F,wCAAuBriG,UAC3BlT,KAAK6Q,IAALnN,MAAA1D,KAAIu1G,wCAAQhnD,YAARz2C,OAAAy9F,wCAAuBriG,WAG/B6kB,OAPYnH,KAAA,GAAAA,KAAA,IAOW5wB,KAAKsoB,IAAI+sF,cAAiB9B,aAAe36E,QAAQk4E,iBAAiB/4E,OAU7F,OALIC,OAHCD,OAAmB,IAAVA,MAGDu7E,cAFAtzG,KAAK6Q,IAAI0iG,aAAcD,gBAQhCv7E,YACAC,OAJJA,SAAWm2E,aAAeiH,cAAgBvH,gBAAkB,GAAKj+C,WAgBxD4lD,qBAAuB,SAAvBA,qBAAwB58E,QAASs8E,gBAC1C,IAAIl9E,OACAD,MACE7kB,OAAS0lB,QAAQ1lB,SACf08C,SAAiDslD,eAAjDtlD,SAAUujD,eAAuC+B,eAAvC/B,eAAgBE,mBAAuB6B,eAAvB7B,mBAJ2BoC,iBAKrB78E,QAAQ7vB,SAAxC8kG,gBALqD4H,iBAKrD5H,gBAAiBt/C,WALoCknD,iBAKpClnD,WACjB4/C,aAAiBv1E,QAAQ+1E,eAAzBR,aACQiH,cAAkB/B,mBAA1Br7E,OACQs7E,cAAuCH,eAA/Cn7E,OAIR,GAFAA,OAAS,EACTD,MAHuDo7E,eAAxBp7E,MAI3Bw2B,WAAY,CACZ,IAAM8mD,YAAcz8E,QAAQ08E,uBADhBvuC,OAGR/mE,KAAK4Q,IAALlN,MAAA1D,KAAIu1G,wCAAQhnD,YAARz2C,OAAAy9F,wCAAuBriG,UAC3BlT,KAAK6Q,IAALnN,MAAA1D,KAAIu1G,wCAAQhnD,YAARz2C,OAAAy9F,wCAAuBriG,WAG/B8kB,QAPY+uC,MAAA,GAAAA,MAAA,IAOY/mE,KAAKsoB,IAAI+sF,aAAgB/B,cAIrD,OACIt7E,cACAD,MAJJA,QAAUo2E,aAAeiH,cAAgB,GAAKxlD,SAAWi+C,kBAYhD6H,0BAAqB,SAArBA,mBAAsB98E,SAC/B,IAAMl7B,MAAQk7B,QAAQl7B,QAChBw3G,eAAiBt8E,QAAQs6E,oBAEvBzT,YAAgB7mE,QAAQ7vB,SAAxB02F,YACAvE,KAAStiE,QAAQ+1E,eAAjBzT,KACAuZ,sBAAwDS,eAAxDT,sBAAuBF,UAAiCW,eAAjCX,UAAWnB,kBAAsB8B,eAAtB9B,kBAC1BuC,iBAAqBlB,sBAA7Bz8E,OACFs5E,aAAe14E,QAAQk4E,iBAAiB/4E,MAC9C,GAAI0nE,cAAgB4L,sBAAO5L,cAAgB2L,wBAAQ,KAAAwK,sBAI3CX,uBAAuBr8E,QAASs8E,eAAgBx3G,OAFhDq6B,OAF2C69E,sBAE3C79E,MACAC,QAH2C49E,sBAG3C59E,OAYJ,OATKD,QAAmB,IAAVA,SACVA,OAAQq7E,kBAAkBnkG,OAAO,SAAC7Z,EAAGO,GAAJ,OAC7BP,EAAI4K,KAAK4Q,IAAIjb,EAAEoiC,MAAOpiC,EAAEqiC,QAAUs5E,cAAc,KAE3C,IAATpW,OACAljE,QAAS,EACTD,OAAQ,IAIRA,aACAC,gBA1BmC,IAAA69E,sBAiCvCL,qBAAqB58E,QAASs8E,gBAF9Bn9E,MA/BuC89E,sBA+BvC99E,MACAC,OAhCuC69E,sBAgCvC79E,OASJ,OANKA,QAAqB,IAAXA,SACXA,OAASu8E,UAAU12G,QAAU83G,iBAAmB/8E,QAAQk4E,iBAAiB94E,UAEhE,IAATkjE,OACAnjE,MAAQ,IAGRA,YACAC,gBAwDK89E,sBAAiB,SAAjBA,eAAkBl9E,QAAS1lB,QAAW,IAC/B6iG,QAAYn9E,QAAQ7vB,SAA5BmK,OAMR,OAJI6iG,UACA7iG,OAAS6iG,SAGNntC,aAAa11D,YAGX8iG,uBAAyB,SAAzBA,uBAA0Bp9E,QAAS1lB,QAAW,IAC/C2qC,KAASjlB,QAAQ7vB,SAAjB80C,KACFzY,MAAQxM,QAAQwM,MAAM1vC,KAAKkjC,SAEjCwM,QAAQlyB,OAAOA,QACf2qC,MAAQzY,QAAQyY,OAChBjlB,QAAQq9E,QAAU7wE,QAAQlyB,UCrWjB0kF,aACTmY,kBACAmF,kBACAgB,2BACAntG,QACI8hE,aAAc,SAAAA,aAACjyC,QAASzjC,OACpB,IAAMghH,UAAYvhH,OAAOoU,UAAW4vB,QAAQw0D,aACtCgpB,gBAAkBxqC,kBAAmBuqC,YAC3ChhH,MAAQy2E,eAAewqC,gBAAiBjhH,QAElC04G,gBAAkB7tG,KAAK6Q,IAAI1b,MAAM04G,gBAAiB,GACxD,IAAMwI,sBDqWkB,SAAvBC,uBAA4D,IAApCjyG,IAAoC9C,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAA1BqE,KAA0BrE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAAfg1G,WAAeh1G,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACrE,SAAK7U,OAAOqN,KAAKoC,KAAKxG,SAAWjJ,OAAOqN,KAAK2D,MAAM/H,SAG5C04G,WAAWv7F,KAAK,SAAAvlB,KAAG,OAAI4O,IAAI5O,OAASmQ,KAAKnQ,OCzWV6gH,CAC1BnhH,MAAOghH,WAAY,eAAgB,WAAY,OAAQ,gBAErDK,cAAgB59E,QAAQ69E,sBAAsBthH,OAUpD,OARIkhH,wBACAz9E,QAAQ89E,OAAS99E,QAAQ60E,YAAYt4G,OACrCyjC,QAAQ+9E,MAAQ/9E,QAAQg+E,WAAWzhH,QAGvCyjC,QAAQi+E,eAAiB,SAAA7zE,OAAK,OAAIwzE,cAAcxzE,QAEhDpK,QAAQk+E,kBAAkB3hH,OACnBA,QAGfw5G,cACI9jC,aAAc,SAAAA,aAACjyC,QAASzjC,OACpB,IAAMghH,UAAYvhH,OAAOoU,UAAW4vB,QAAQm+E,mBAE5C,OADA5hH,MAAQy2E,eAAeuqC,UAAWhhH,SAI1Ck/G,gBACArkF,SAEAtyB,OACImtE,aAAc,SAAAA,aAACjyC,QAASzjC,OAGpB,OAFAyjC,QAAQwM,QAAQ1nC,MAAMvI,OACtByjC,QAAQy7E,aAAa,MACdl/G,QAIf84G,cACAr+C,YACAikD,eACIhpC,aAAc,SAAAA,aAACjyC,QAASzjC,OACpB,IAAMghH,UAAYvhH,OAAOoU,UAAW4vB,QAAQo+E,oBAE5C,OADA7hH,MAAQy2E,eAAeuqC,UAAWhhH,SAI1C0iG,aACIjvB,aAAc,SAAAA,aAAAvrE,KAAG,OAAIA,ydCrCR45G,kCAMjB,SAAAA,WAAaluG,OAAQ3R,wKAAc8/G,CAAA/6G,KAAA86G,YAC/B96G,KAAKumF,IAAMj8E,cAEXtK,KAAK60G,cAAgB55G,aACrB+E,KAAKuhG,OAAS,KACdvhG,KAAKg7G,UACLh7G,KAAK85G,WACL95G,KAAKi7G,aAAc,EACnBj7G,KAAKk7G,mBACLl7G,KAAKozG,eAEL,IAAM+H,OAAS1rC,kBAAmBzvE,KAAK6lB,YAAYk2E,iBAC7Cqf,aAAe3rC,eAAe0rC,OAAQvuG,QAEtCyuG,SAAW1yB,6BAAc,QACzBiU,YAAcwe,aAAaxe,YACjC58F,KAAK04G,gBAAkBruB,qCAAsBgxB,SAAD,GAAA1/F,OAAcihF,YAAd,WAC5C58F,KAAK64G,eAAiBxuB,qCAAsBgxB,SAAD,GAAA1/F,OAAcihF,YAAd,eAE3C3hG,aAAas3G,aAAap4E,SAASn6B,KAAK04G,iBACxC,IAAM4C,KAAOrgH,aAAas3G,aAAapyE,WAAW,KAElDngC,KAAK20G,kBAAqB/4E,MAAoB,EAAb0/E,KAAK1/E,MAAY,EAAGC,OAAQy/E,KAAKz/E,OAAS,GAC3E77B,KAAKk1G,cAAgBj6G,aAAas3G,aAAapyE,WAAW,OAE1D4uC,sBAAsB/uE,KAAMy7F,aAC5Bz7F,KAAK4M,OAAOwuG,cAEZp7G,KAAKu6G,OAASv6G,KAAKsxG,YAAYtxG,KAAKixF,SACpCjxF,KAAKw6G,MAAQx6G,KAAKy6G,WAAWz6G,KAAKixF,SAClCjxF,KAAKu7G,8UAoBL,OAAOv7G,2CAUP,OAAIoF,UAAO1D,QACP1B,KAAKu6G,OAALn1G,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKu6G,yDAKZ,OADAv6G,KAAK85G,WACE95G,yCAUP,OAAIoF,UAAO1D,QACP1B,KAAKw6G,MAALp1G,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKw6G,8CAWZ,GAAIp1G,UAAO1D,OAAQ,CACf,IAAM85G,YAAc7B,sBAAe35G,KAADoF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAKlC,OAJApF,KAAKipC,QAAQlyB,OAAOykG,aACpBx7G,KAAK85G,QAAU95G,KAAKipC,QAAQlyB,SAC5B/W,KAAKy7G,6BACLz7G,KAAKk4G,aAAa,MACXl4G,KAEX,OAAOA,KAAK85G,wFAIZ95G,KAAK+5G,wBAAwB5B,2BAA2Bn4G,2DAUxD,OAAOA,KAAK60G,8DASHjoG,QAAQ,IAEbo1C,KAIAp1C,OAJAo1C,KAeJ,OATcsvD,2BACV3uE,QAHA/1B,OAHA+1B,QAOAutB,aAJAtjD,OAFAsjD,aAOA5Q,SALA1yC,OADA0yC,SAOA0C,UACAzgD,MANUvB,KAAKuB,QAOf1G,KAAMmF,KAAK6lB,YAAYhrB,6EAMR7B,OAAO,IAClByoD,WAA6BzoD,MAA7ByoD,WAAYvpC,aAAiBlf,MAAjBkf,aAEpB,OAAIupC,WACO,SAAA5a,OAAK,OAAI,SAAC3lC,IAAKnJ,GAAN,OAAY0pD,WAAWvpC,aAAahX,KAAMA,IAAKnJ,EAAG8uC,SAG/D,kBAAM,SAAA3lC,KAAG,OAAIgX,aAAahX,mEAGlB0L,QAAQ,IAEnBglG,OAQAhlG,OARAglG,OACA7S,KAOAnyF,OAPAmyF,KACAkT,eAMArlG,OANAqlG,eACAC,eAKAtlG,OALAslG,eACAF,aAIAplG,OAJAolG,aACAvH,QAGA79F,OAHA69F,QACA0H,QAEAvlG,OAFAulG,QACA//C,WACAxlD,OADAwlD,WAYJ,OAVApyD,KAAKwyG,cACDZ,cACA7S,UACAkT,8BACAC,8BACAF,0BACAvH,gBACA0H,gBACA//C,wBAEGpyD,mEAIPA,KAAKk4G,aAAa,MAClBl4G,KAAKuB,UAELvB,KAAK26G,kBAAkB36G,KAAK4M,oEAGdvM,KAAM4B,MAAOm2G,WAG3B,OAAOh2G,EAFWpC,KAAK06G,gBAENtC,UAAVh2G,CAAqB/B,KAAM4B,qDAS1B2K,QAAQ,IACR02F,YAAgB12F,OAAhB02F,YACFoY,UAAYrM,mBAAmB/L,aAErC,OAAIoY,UACaA,UAAU17G,KAAKipC,SAGzB,yDAGImpB,YACX,IAAMogD,aAAexyG,KAAKwyG,eAC1BxyG,KAAK4M,0bAAL+uG,IAAiBnJ,cAAcpgD,yBAC/BpyD,KAAKoyD,WAAaA,WAClBpyD,KAAKiyD,OAAOG,WAAWA,0EAW8B,IAAtCx2B,MAAsCx2B,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAA9B,EAAGy2B,OAA2Bz2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAnBq1B,QAAmBv9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAVspG,SAAUxxG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACjDgqG,eAEDhU,YACAtjG,KAAK4M,SADL02F,YAiBH,OAdAtjG,KAAK4zG,gBAAiBh4E,YAAOC,cAAQ8G,kBAGjC20E,YADAhU,cAAgB4L,sBAAO5L,cAAgB2L,wBACzBqH,YAAYt2G,MAAQ42G,oBAAYgB,UAAU15E,IAE1Co4E,YAAYt2G,MAAQ42G,oBAAYgB,UAAUp0G,IAI5DxD,KAAKwyG,cACDZ,OAAQ0F,cAEZt3G,KAAK47G,gBACL57G,KAAKyyG,cACEzyG,2DASP,OAAOA,yDAGI67G,WACX,GAAkB,OAAdA,gBAAoCvuG,IAAduuG,UAG1B,OAAO77G,KAAKipC,OAALjpC,CAAa67G,6DAUpB,OAAO77G,KAAKiyD,OAAOwB,yEASO,QAAA2Z,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAE1B,OADArtE,KAAK+4G,eF7LwB,SAAxB+C,sBAAyBr/E,SAClC,IAAIu6E,kBACIpF,OAAWn1E,QAAQ+1E,eAAnBZ,OACAE,WAAyBF,OAAzBE,WAAYD,SAAaD,OAAbC,SAH0BkK,sBAW1C5D,2BAA2B17E,SAN3B67E,sBAL0CyD,sBAK1CzD,sBACAF,UAN0C2D,sBAM1C3D,UACAG,UAP0CwD,sBAO1CxD,UACArB,mBAR0C6E,sBAQ1C7E,mBACAD,kBAT0C8E,sBAS1C9E,kBACAxjD,SAV0CsoD,sBAU1CtoD,SAEYuoD,YAAmC1D,sBAA3Cz8E,OAA4BogF,WAAe3D,sBAAtB18E,MAM7B,OAAsB,IAHPa,QAAQ1lB,SAGZrV,OACA,MAQXs1G,eAAiBc,iBAAiBjG,UAJ9BmF,eADAlF,WACiByG,WAEE38E,MAAOqgF,WAAYpgF,OAAQmgF,cAESpgF,MAAOo7E,eAAen7E,QAEhE,IAAb43B,WACAujD,gBAAmBp7E,MAAO,EAAGC,OAAQ,KAGrCo7E,oCACAxjD,kBACAujD,8BACAE,sCACAoB,4CACAF,uBEuJyC7wG,WAArB,GAAsBvH,MAAtB2b,OAA+BkG,UAC5C7hB,KAAK+4G,2EAeZ,OALK/4G,KAAKk4G,gBACNl4G,KAAKk4G,aFvBsB,SAA1BgE,wBAA2Bz/E,SACpC,IAAMl7B,MAAQk7B,QAAQl7B,QAChBw3G,eAAiBt8E,QAAQs6E,oBACvBzT,YAAgB7mE,QAAQ7vB,SAAxB02F,YAHwC6Y,uBAIjB1/E,QAAQ+1E,eAA/BzT,KAJwCod,uBAIxCpd,KAAMiT,aAJkCmK,uBAIlCnK,aACNkF,mBAAuB6B,eAAvB7B,mBAER,IAAa,IAATnY,KACA,OACInjE,MAAO,EACPC,OAAQ,GAVgC,IAcjCugF,cAAkBlF,mBAAzBt7E,MAER,GAAI0nE,cAAgB4L,sBAAO5L,cAAgB2L,wBAAQ,KAAAoN,uBAI3CvD,uBAAuBr8E,QAASs8E,eAAgBx3G,OAFhDq6B,QAF2CygF,uBAE3CzgF,MACAC,SAH2CwgF,uBAG3CxgF,OAIJ,OACID,MAHc/3B,KAAK6Q,IAAIknB,QAAOwgF,eAI9BvgF,iBAzBwC,IAAAygF,uBA+B5CjD,qBAAqB58E,QAASs8E,gBAF9Bn9E,MA7B4C0gF,uBA6B5C1gF,MACAC,OA9B4CygF,uBA8B5CzgF,OAKJ,OACID,YACAC,OAJch4B,KAAK6Q,IAAImnB,OAAQm2E,aAAeoK,cAAgB,IEVxCF,CAAwBl8G,OAE9Ci4G,iBAAUj4G,MAEHA,KAAKk4G,qDAQRl/G,OACJ,OAAOgH,KAAKipC,QAAQgB,OAAOjxC,+DAUdi/C,GAAIC,IACjB,OAAQD,GAAIC,sDAGFD,GAAIC,IACd,OAAQl4C,KAAKiqC,OAAOgO,IAAKj4C,KAAKiqC,OAAOiO,yEAIrC,OAAOl4C,KAAK+W,+EAGQq7C,YACpB,OAAOA,+DAYP,OAAO,gDAWP,OACI95D,KAAM0H,KAAK1H,KACXuC,KAAMmF,KAAKnF,KACX0G,MAAOvB,KAAKuB,QACZqL,OAAQ5M,KAAK4M,kDAwBjB,OAJI5M,KAAK6zB,UACL7zB,KAAK47G,gBL1LV,SAASW,WAAYpJ,cACxB,IAAMvmG,OAASumG,aAAavmG,SACtB4lG,aAAeW,aAAaX,eAC5BD,aAAeY,aAAal4G,eAAes3G,aAC3C1+E,MAAQs/E,aAAat/E,QACrBtyB,MAAQ4xG,aAAa5xG,QACrB0wD,KAAOkhD,aAAalhD,OACpBhpB,MAAQkqE,aAAalqE,QAEPuzE,cAGfrJ,aAHD0F,eACiB4D,eAEhBtJ,aAFDuF,gBACgBgE,kBACfvJ,aADDuH,eAGApX,YAOC12F,OAPD02F,YACAhrG,KAMCsU,OANDtU,KAEAo5G,gBAIC9kG,OAJD8kG,gBACAzwE,UAGCr0B,OAHDq0B,UACApI,GAECjsB,OAFDisB,GACA+jE,YACChwF,OADDgwF,YAGAmC,KAKAyT,aALAzT,KACA0L,QAIA+H,aAJA/H,QACA0H,QAGAK,aAHAL,QACAH,aAEAQ,aAFAR,aACAJ,OACAY,aADAZ,OAGJ,GAAK7S,KAAL,CAIA,IAAMtrC,SAAW0/C,aAAaV,cAExBS,gBAAkBtqB,YAAYD,6BAAc90D,OAAQ,KAAMs/E,cAA7B,GAAAx3F,OAA+CslB,cAC9E,SAAA3nC,KAAG,OAAIA,IAAIsT,SAASisB,KAGxB05E,aAAap4E,SAASsiF,gBAEtB,IAAMhE,UAAYxvE,MAAMpC,OAASoC,MAAM5B,UAAY4B,MAAMlyB,OAEnD8vB,MAAQorB,KAAKG,cAAgBqmD,YAEnCxmD,KAAKxQ,WAAWi7D,kBAAkB71E,QAGlC,IAAM+sE,eAAiB/vG,KAAKsoB,IAAI5qB,MAAM,GAAKA,MAAM,IAG3Co7G,WAAaxJ,aAAa4G,0BAA0BzB,sBAG1DpF,gBAAgB9/C,KAAK,YAArB,aAAAz3C,OAA+C8uF,QAA/C,KAAA9uF,OAA0Dw2F,QAA1D,MACAoB,+BAAiBJ,eACS,IAAtBvB,OAAOE,YAAqC,IAAbr+C,SAC/By/C,gBAAgB3/C,aACC4yB,SAAS,KACTzY,GAAG,MAAOylC,aAAaG,6BACvBp7G,KAAK+5D,MAEtBihD,gBAAgBh7G,KAAK+5D,MAEzBihD,gBAAgBpgD,UAAU,SAAS0rB,QAAnC,GAAA7iE,OAA8CihF,YAA9C,WAAmE,GACnEsW,gBAAgBpgD,UAAU,cAAc0rB,QAAxC,GAAA7iE,OAAmDihF,YAAnD,gBAA6E,GAG5DsW,gBAAgBpgD,UAAU,cAClC0rB,QAAT,GAAA7iE,OAAoBihF,YAApB,WAAyC,GACxBpe,QADjB,GAAA7iE,OAC4BihF,YAD5B,WAAAjhF,OACiDkd,KAAM,GAEvDo6E,oCAAsBC,gBAAiBC,aAAc1/C,UAGrD,IAAMggD,SAAW7qB,YAAYsqB,gBAAiB,QAAS56G,MAA3B,GAAAqjB,OAAqCihF,YAArC,eACXxpC,KAAK,cAAe,UACpBorB,QAFA,GAAA7iE,OAEWihF,YAFX,eAAAjhF,OAEoCkd,KAAM,GAC1Cx4B,KAAK,SAAAhI,GAAC,OAAIA,IAG3Bo7G,SAASj1B,QAAQ8xB,QAAS0B,cAG1B,IAAM2B,YAAcC,eAAiB,EAGrCrB,aAAap4E,SAASqiF,eACtB,IAAMI,cAAgBrK,aAAapyE,WAAW7nC,MACxC0wB,UACF2zF,sBACAlpD,kBACAi+C,gCACAgC,eAAgBkJ,cAAc/gF,OAC9BugF,cAAeQ,cAAchhF,MAC7Bu2E,gBACA1H,gBACAkJ,wBACAC,eAAgBT,aAAaS,kBAGjCJ,6BAAeC,SAAUnQ,YAAat6E,WKqF9BuzF,CAAWv8G,OAERA,6CAWP,OADA2oF,6BAAc3oF,KAAK6zB,SAAS6T,SACrB1nC,uDASP,OAAOA,mDAUP,IAAMuB,MAAQvB,KAAKuB,QACnB,OAAOA,MAAM,GAAKA,MAAM,uEAUxB,IAAM0nC,MAAQjpC,KAAKipC,QACb1nC,MAAQ0nC,MAAM1nC,QACdwV,OAASkyB,MAAMlyB,SAErB,OAAOlT,KAAKsoB,IAAI5qB,MAAM,GAAKA,MAAM,KAAOwV,OAAO,GAAKA,OAAO,0DAU3D,OAAO80E,QAAQgxB,IAAI78G,KAAKu7G,sGAIxB,IAAItwB,UACEa,QAAU,IAAID,QAAQ,SAACxiE,SACzB4hE,UAAY5hE,UAIhB,OAFArpB,KAAKu7G,uBAAuBr1G,KAAK4lF,SAE1B,WACHb,4CAjFJ,OAAOjrF,KAAKumF,4DAtUZ,OAAOwV,4VC/DM+gB,mhBAEJlwG,QAAQ,IAEbrL,MACAqL,OADArL,MAEEgwG,aAAeL,SAAS34D,OAE9B,OADAv4C,KAAKu6G,OAAShJ,eAAehwG,MAAMA,OAC5BvB,KAAKu6G,2DAGDsB,WACX,OAAO77G,KAAKu6G,OAAOsB,WAAa,yDAGpB9kG,QAIZ,OAHIA,OAAOrV,QAAUqV,OAAO,KAAOA,OAAO,KACtCA,QAAU,EAAgB,GAAZA,OAAO,KAElBA,4TCnBMgmG,wfAEJnwG,QAAQ,IAEbrL,MAEAqL,OAFArL,MACAygD,KACAp1C,OADAo1C,KAEEuvD,aAAeL,SAASlqE,IAE9B,OADAhnC,KAAKu6G,OAAShJ,eAAehwG,MAAMA,OAAOygD,KAAKA,MACxChiD,KAAKu6G,2DAGDsB,WACX,IAAM5yE,MAAQjpC,KAAKu6G,OACnB,OAAIsB,WAAa,EACN5yE,MAAMA,MAAMlyB,SAAS,IAGzBkyB,MAAM4yE,WAAa,yDAGd9kG,QAOZ,OANIA,OAAO,IAAM,IACbA,OAAO,GAAKlT,KAAK6Q,IAAI,EAAGqC,OAAO,KAE/BA,OAAO,IAAM,IACbA,OAAO,GAAKlT,KAAK6Q,IAAI,EAAGqC,OAAO,KAE5BA,0UC5BMimG,wfAEJpwG,QAAQ,IAEbrL,MAEAqL,OAFArL,MACA+9C,SACA1yC,OADA0yC,SAEEiyD,aAAeL,SAASr8F,IAE9B,OADA7U,KAAKu6G,OAAShJ,eAAehwG,MAAMA,OAAO+9C,SAASA,UAC5Ct/C,KAAKu6G,2DAGDsB,WACX,OAAO77G,KAAKu6G,OAAOsB,WAAa,yDAGpB9kG,QACZ,OAAOA,28CCPR,IAAMkmG,iBAAeC,8BAAAC,oBACvBpN,IAAMgN,qBADiBG,8BAAAC,iBAEvBnN,IAAMgN,qBAFiBE,8BAAAC,iBAGvB1N,OAASqN,2BAHcK,kBAMPC,mDACjB,SAAAA,cAAaxwG,OAAQ3R,cAAc,mKAAAoiH,CAAAr9G,KAAAo9G,eAC/BxwG,OAAO60C,WAAa70C,OAAO60C,YAAe,SAAAvgD,KAAG,OAAIA,KADlBo8G,yCAAAt9G,KAAAu9G,8BAAAH,eAAAllH,KAAA8H,KAEzB4M,OAAQ3R,sZAHqB6/G,qUAW1BluG,QAAQ,IAEbo1C,KAIAp1C,OAJAo1C,KACArf,QAGA/1B,OAHA+1B,QACAutB,aAEAtjD,OAFAsjD,aACA5Q,SACA1yC,OADA0yC,SAEE/9C,MAAQvB,KAAKuB,QACbi8G,gBAAkBP,gBAAgB/sD,cAExClwD,KAAKy9G,cAAgB,IAAID,gBACzB,IAAIv0E,MAAQjpC,KAAKy9G,cAAcnM,aAC3B3uE,gBACA2c,kBACA0C,UACAzgD,cAIJ,OADA0nC,MAAQA,MAAMyY,2DAeHm6D,WACX,GAAkB,OAAdA,gBAAoCvuG,IAAduuG,UAG1B,OAAO77G,KAAKy9G,cAAcnf,cAAcud,6DAQ7B,IAAA6B,mBAIP19G,KAAKwyG,eAFLP,eAFOyL,mBAEPzL,eACAC,eAHOwL,mBAGPxL,eAEEjgD,KAAOjyD,KAAKiyD,OAIlB,OAHAA,KAAKK,eAAiC,IAAnB2/C,eAA2B,EAAI,GAClDhgD,KAAKM,eAAiC,IAAnB2/C,eAA2B,EAAI,GAE3CjgD,KAAKwB,mDAWZ,GAAIruD,UAAO1D,OAAQ,CACf,IAAMm6G,UAAY77G,KAAKy9G,cAAcE,eAAehE,sBAAe35G,KAADoF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,KAIlE,OAHAy0G,uBAAuB75G,KAAM67G,WAC7B77G,KAAKy7G,6BACLz7G,KAAKk4G,aAAa,MACXl4G,KAEX,OAAOA,KAAK85G,sEAWyC,IAAtCl+E,MAAsCx2B,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAA9B,EAAGy2B,OAA2Bz2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAnBq1B,QAAmBv9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAVspG,SAAUxxG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACjDgqG,eAEDhU,YACAtjG,KAAK4M,SADL02F,YAiBH,OAdAtjG,KAAK4zG,gBAAiBh4E,YAAOC,cAAQ8G,kBAGjC20E,YADAhU,cAAgB4L,sBAAO5L,cAAgB2L,wBACzBqH,YAAYt2G,MAAQ42G,oBAAYgB,UAAU15E,IAE1Co4E,YAAYt2G,MAAQ42G,oBAAYgB,UAAUp0G,IAI5DxD,KAAKwyG,cACDZ,OAAQ0F,cAEZt3G,KAAK47G,gBACL57G,KAAKyyG,cACEzyG,2DAUM,IAGTyhD,WACAzhD,KAAK4M,SADL60C,WAHSm8D,oBAQT59G,KAAKwyG,eAFLpgD,WANSwrD,oBAMTxrD,WACA6/C,eAPS2L,oBAOT3L,eAEEhgD,KAAOjyD,KAAKiyD,OAElB,IAAKggD,eAED,OADAhgD,KAAKG,eACEpyD,KAGPoyD,YACAA,sBAAsBvpD,OAAS7I,KAAKiyD,OAAOG,WAAWA,YAE1D,IAAMyrD,cAAgB79G,KAAKw3G,gBAE3BvlD,KAAKG,WAAWyrD,eAChB,IAAMj+E,WAAa5/B,KAAK/E,eAAes3G,aACvC3yE,WAAWzF,SAASn6B,KAAK04G,iBAEzB,IAAM5G,WAAa+L,cAAc51G,IAAI,SAAC/G,KAClC,IAAMb,KAAOohD,WAAWvgD,KAClB48G,UAAYl+E,WAAWO,WAAW9/B,MAGxC,OADAy9G,UAAUz9G,KAAOA,KACVy9G,YAIX,OADA99G,KAAK8xG,WAAWA,YACT9xG,2DAUP,IAEIsjG,YAEAtjG,KAAK4M,SAFL02F,YAIAlxC,WACApyD,KAAKwyG,eADLpgD,WAEE7wD,MAAQvB,KAAKuB,QACb0wD,KAAOjyD,KAAKiyD,OAEZ2hD,eAAiB/vG,KAAKsoB,IAAI5qB,MAAM,GAAKA,MAAM,IAE3Co7G,WAAa38G,KAAK+5G,0BAA0BzB,sBAElD,OAAIlmD,YNtKoB,SAAnB2rD,iBAAoBnK,eAAgBoK,SAAU/rD,KAAMkhD,cAC7D,IAAI8K,eAAiB,EACjB7rD,cACE2/C,cAAkBoB,aAAavmG,SAA/BmlG,cAEAmM,WADQjsD,KAAKhpB,QAAQpC,QACFnlC,OACnBszG,gBAAkB7B,aAAawB,iBAAiB/4E,MAqBtD,OAnBAqiF,eAAiBC,WAEbA,YAAcF,SAAWhJ,iBAAmBpB,iBAC5CqK,eAAiBp6G,KAAK6N,MAAMkiG,gBAAkBoK,SAAWhJ,mBAG7DjD,cAAgBA,eAAiBkM,eACjCA,eAAiBp6G,KAAK4Q,IAAIs9F,cAAeluG,KAAK6Q,INvBnB,EMuBwCupG,kBAEnE7rD,WAAaH,KAAKhpB,QAAQpC,MAAMo3E,iBAEjBv8G,OAASu8G,iBACpB7rD,WAAaA,WAAWr+C,OAAO,SAAC9Z,EAAGlC,GAAJ,OAAUA,EAAI,GAAM,KN5B5B,IM+BvBkmH,iBAEA7rD,aADAA,WAAaH,KAAKhpB,QAAQpC,MN/BC,KMgCF,GAAIurB,WAAWA,WAAW1wD,OAAS,KAEzD0wD,WMgJI2rD,CAAiBnK,eAFb+I,WAAWrZ,cAAgB2L,yBAAU3L,cAAgB4L,qBAAM,QAAU,UAE9Bj9C,KAAMjyD,0EAIxD,OAAO41E,gBAAgB51E,KAAKwyG,eAAepgD,sEAW7BkgD,UAAU,IAEpBhP,YACAtjG,KAAK4M,SADL02F,YAOAuO,SAHA7xG,KAAKwyG,eADLZ,OAIAC,SAEE5/C,KAAOjyD,KAAKiyD,OACZprB,MAAQorB,KAAKG,aAZK+rD,kBAcEn+G,KAAK8xG,aAAa,GAApCl2E,MAdgBuiF,kBAchBviF,MAAOC,OAdSsiF,kBAcTtiF,OAaf,OAXAo2B,KAAKI,cAAc,SAACh6D,GAChB,GAAIA,IAAMwuC,MAAM,GAAI,CAChB,GAAKy8D,cAAgB6L,uBAAQ7L,cAAgB8L,uBACzC,uBAAAzzF,OAAyBkgB,OAAU,EAAnC,OAGJ,IAAKynE,cAAgB4L,sBAAO5L,cAAgB2L,2BAAY4C,SACpD,mBAAAl2F,OAAoBigB,MAAQ,EAA5B,QAAqC,EAArC,OAEN,MAAO,KAEN02E,+CA7LP,OAAO7C,yuCCrDM2O,ssBAAiBtD,+TAoBuB,IAAtCl/E,MAAsCx2B,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAA9B,EAAGy2B,OAA2Bz2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAnBq1B,QAAmBv9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAVspG,SAAUxxG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACjDgqG,eAEDhU,YACAtjG,KAAK4M,SADL02F,YAgBH,OAbAtjG,KAAK4zG,gBAAiBh4E,YAAOC,cAAQ8G,kBAGjC20E,YADAhU,cAAgB4L,sBAAO5L,cAAgB2L,wBACzBqH,YAAYt2G,MAAQ42G,oBAAYztE,KAAKjL,IAErCo4E,YAAYt2G,MAAQ42G,oBAAYztE,KAAK3lC,IAIvDxD,KAAKwyG,cACDZ,OAAQ0F,cAEZt3G,KAAK47G,gBACE57G,2DAUP,IACIq6B,WADAy3E,WAAa,GAEX/6F,OAAS/W,KAAK+W,SACZw7F,aAAiBvyG,KAAK60G,cAAtBtC,aACA5vE,QAAY3iC,KAAK4M,SAAjB+1B,QALK+6E,mBAMkB19G,KAAKwyG,eAA5BZ,OANK8L,mBAML9L,OAAQx/C,WANHsrD,mBAMGtrD,WANHisD,oBAO8Cr+G,KAAK03G,gBAAhDf,YAPH0H,oBAOLxiF,OAA4B66E,WAPvB2H,oBAOgBziF,MAAmBsB,OAPnCmhF,oBAOmCnhF,OAPnCohF,kBAQaxG,iBAAiBlG,OAAOC,SAAU6E,WAAYC,aAAhE/6E,MARK0iF,kBAQL1iF,MAAOC,OARFyiF,kBAQEziF,OASf,GAPAu2B,YAAcpyD,KAAKiyD,OAAOG,WAAWA,YACrC0/C,WAAa1/C,YAAcr7C,OAG3Bw7F,aAAap4E,SAASn6B,KAAK04G,iBAGJ,iBAAZ/1E,QAAsB,CAC7B,IAAM47E,kBAAoB16G,KAAK4Q,IAAI,EAAG5Q,KAAK6Q,IAAI,EAAGiuB,UAClD3iC,KAAKipC,QAAQtG,QAAQ47E,mBAGzB,GAAIxnG,QAAUA,OAAOrV,OAAQ,CACzB,IAAMid,OAASyzC,YAAcr7C,OACvBsjG,cAAgBr6G,KAAK06G,eAAe/7F,QAC1CmzF,WAAanzF,OAAO1W,IAAI,SAAC5P,EAAGN,GAIxB,OAHAw6G,aAAaz1E,uBAAsB,GAEnCzC,WAAak4E,aAAax1E,aAAas9E,cAAchiH,EAAGN,GAAI6jC,MAAOC,OAAQqB,QACpEq1E,aAAa1sF,YAAYuU,YAAYC,cAIpD,OADAr6B,KAAK8xG,WAAWA,YACT9xG,+DAeP,OALKA,KAAKk4G,gBACNl4G,KAAKk4G,aAAaqB,0BAAmBv5G,OAEzCi4G,iBAAUj4G,MAEHA,KAAKk4G,qEASZ,OAAOl4G,KAAKiyD,OAAOhpB,QAAQlyB,iEAGd7V,KACb,OAAOlB,KAAK07F,aAAL17F,CAAmBkB,yEAGPlI,OAAO,IAAAkc,MAAAlV,KAClByhD,WAAezoD,MAAfyoD,WAER,OAAIA,WACO,SAAA5a,OAAK,OAAI,SAAC3lC,IAAKnJ,GAAN,OAAY0pD,WAAWvsC,MAAKspG,gBAAgBt9G,KAAMA,IAAKnJ,EAAG8uC,SAEvE,kBAAM,SAAA3lC,KAAG,OAAIgU,MAAKspG,gBAAgBt9G,2DAUzC,OAAOlB,KAAKipC,QAAQG,8DAST,IAAAw0E,oBAIP59G,KAAKwyG,eAFLP,eAFO2L,oBAEP3L,eACAC,eAHO0L,oBAGP1L,eAEEjgD,KAAOjyD,KAAKiyD,OAIlB,OAFAA,KAAKK,cAAc2/C,eAAiB,EAAI,GACxChgD,KAAKM,cAAc2/C,eAAiB,EAAI,GACjCjgD,KAAKwB,6DAGFxb,GAAIC,IACd,OAAOl4C,KAAKipC,QAAQW,aAAaqO,GAAIC,4DASxBD,GAAIC,IACjB,IAAMjP,MAAQjpC,KAAKipC,QACb1nC,MAAQ0nC,MAAM1nC,QACdgjB,QAAUhjB,MAAM,GAAKA,MAAM,GAE3B0kE,OAASjmE,KAAK4pC,aAAaqO,GAAIC,IAGrC,OAFWjP,MAAM1kB,QAAU0hD,OAAOA,OAAOvkE,OAAS,GAAKukE,OAAO,IACnDh9B,MAAM1kB,QAAU0hD,OAAO,GAAKA,OAAOA,OAAOvkE,OAAS,IAAMunC,MAAMG,mDA7J1E,OAAOsmE,8sDCAM+O,yCAEjB,SAAAA,WAAwB,IAAAvX,iBAAAhyF,8JAAAwpG,CAAA1+G,KAAAy+G,UAAA,QAAArxC,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAAypG,oCAAA3+G,MAAAknG,iBAAA0X,yBAAAH,WAAAvmH,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJ0zF,SAAWt0D,IAFI/rC,8XAFU4lG,iTAcrBv5G,OACT,IAAI0nC,MAAK41E,KAAAD,yBAAAH,SAAA5kH,WAAA,cAAAmG,MAAA9H,KAAA8H,KAAqBuB,OAG9B,OADA0nC,MAAQA,MAAMyY,+DAeDxgD,KACb,OAAOlB,KAAKipC,QAAQwY,YAAbzhD,CAA0BkB,yEAGdlI,OAAO,IAAAqc,OAAArV,KAClByhD,WAAezoD,MAAfyoD,WAER,OAAIA,WACO,SAAC5a,OACJ,IAAMi4E,SAAWj4E,MAAM5+B,IAAI,SAAAhP,GAAC,OAAIA,EAAEsR,YAClC,OAAO,SAACrJ,IAAKnJ,GAAN,OAAY0pD,WAAWpsC,OAAKmpG,gBAAgBt9G,KAAMA,IAAIqJ,UAAWxS,EAAG+mH,YAG5E,kBAAM,SAAA59G,KAAG,OAAImU,OAAKmpG,gBAAgBt9G,yDAS9B,IAAAw8G,mBAIP19G,KAAKwyG,eAFLP,eAFOyL,mBAEPzL,eACAC,eAHOwL,mBAGPxL,eAEEjgD,KAAOjyD,KAAKiyD,OAGlB,OAFAA,KAAKK,eAAiC,IAAnB2/C,eAA2B,EAAI,GAClDhgD,KAAKM,eAAiC,IAAnB2/C,eAA2B,EAAI,GAClD2M,KAAAD,yBAAAH,SAAA5kH,WAAA,cAAAmG,MAAA9H,KAAA8H,4DAUA,OAAOA,KAAKwyG,eAAepgD,YAAcpyD,KAAKipC,QAAQpC,gDAUjD5B,MAEL,OADAjlC,KAAKu1G,SAAW1xG,KAAK4Q,IAAIzU,KAAKu1G,SAAUtwE,MACjCjlC,mEAIP+0G,+BAAkB/0G,8CAWlB,GAAIoF,UAAO1D,OAAQ,CACf,IAAM85G,YAAc7B,sBAAe35G,KAADoF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAMlC,OALAy0G,uBAAuB75G,KAAMw7G,aAC7Bx7G,KAAKy7G,6BACLz7G,KAAKk4G,aAAa,MRoQG,SAApB6G,kBAAqBtiF,QAAS1lB,QAAW,IAAAioG,iBAI9CviF,QAAQ7vB,SAFR02F,YAF8C0b,iBAE9C1b,YACAsT,SAH8CoI,iBAG9CpI,SAGEt/F,QAAUmlB,QAAQ84E,SAExB,GAAI94E,QAAQl7B,QAAQG,SAAW4hG,cAAgB4L,sBAAO5L,cAAgB2L,yBAAS,CAC3ExyE,QAAQs4E,oBADmE,IAGvEuD,sBACA77E,QAAQs6E,oBADRuB,sBAGE7D,UAAYh4E,QAAQ+6E,gBAAgB91G,OANiCu9G,sBAQxCxiF,QAAQm3E,iBAAnCh4E,MARmEqjF,sBAQnErjF,MAAOC,OAR4DojF,sBAQ5DpjF,OAAQ8G,QARoDs8E,sBAQpDt8E,QAEnBoD,KAEApD,QAFAoD,KACAC,MACArD,QADAqD,MAGEspB,aAAezrD,KAAK4Q,IAAI6jG,sBAAsB18E,OAC9CA,OAAS64E,UAAY,GAAMh4E,QAAQk4E,iBAAiB/4E,OAAU64E,WAEpEh4E,QAAQi7E,eACJ97E,MAAO0zB,eAGX,IAAM4vD,cAAgBjJ,iBAAiB3+F,SAAUg4C,aAAe,EAC5D1zB,MAAQmK,KAAOC,MAAQspB,aAAe,GAAIv4C,OAAQ0lB,QAAQ7vB,UAG9DmpG,aAAat5E,QAAS,IAAKyiF,cAAetI,SAAW/6E,OAAS,MAE9DY,QAAQm/E,iBQrSJmD,CAAkB/+G,KAAMw7G,aACjBx7G,KAEX,OAAOA,KAAK85G,kEAeZ,OALK95G,KAAKk4G,gBACNl4G,KAAKk4G,aAAaqB,0BAAmBv5G,OAEzCi4G,iBAAUj4G,MAEHA,KAAKk4G,mFAIZ,OAAOtiC,gBAAgB51E,KAAK4M,SAASwlD,0EAWgB,IAAtCx2B,MAAsCx2B,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAA9B,EAAGy2B,OAA2Bz2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAnBq1B,QAAmBv9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAVspG,SAAUxxG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACjDgqG,eAEDhU,YACAtjG,KAAK4M,SADL02F,YAiBH,OAdAtjG,KAAK4zG,gBAAiBh4E,YAAOC,cAAQ8G,kBAGjC20E,YADAhU,cAAgB4L,sBAAO5L,cAAgB2L,wBACzBqH,YAAYt2G,MAAQ42G,oBAAYlrD,KAAKxtB,IAErCo4E,YAAYt2G,MAAQ42G,oBAAYlrD,KAAKloD,IAIvDxD,KAAKwyG,cACDZ,OAAQ0F,cAEZt3G,KAAK47G,gBACL57G,KAAKyyG,cACEzyG,2DAUP,IAAI8xG,WACAz3E,WAFSujF,oBAIkB59G,KAAKwyG,eAA5BZ,OAJKgM,oBAILhM,OAAQx/C,WAJHwrD,oBAIGxrD,WAJHisD,oBAK8Cr+G,KAAK03G,gBAAhDf,YALH0H,oBAKLxiF,OAA4B66E,WALvB2H,oBAKgBziF,MAAmBsB,OALnCmhF,oBAKmCnhF,OACxCq1E,aAAiBvyG,KAAK60G,cAAtBtC,aACFx7F,OAAS/W,KAAKw3G,gBAEpBplD,YAAcpyD,KAAKiyD,OAAOG,WAAWA,YATxB,IAAAksD,kBAWaxG,iBAAiBlG,OAAOC,SAAU6E,WAAYC,aAAhE/6E,MAXK0iF,kBAWL1iF,MAAOC,OAXFyiF,kBAWEziF,OAOf,GALAi2E,WAAa1/C,YAAcr7C,OAG3Bw7F,aAAap4E,SAASn6B,KAAK04G,iBAEvB3hG,QAAUA,OAAOrV,OAAQ,CACzB,IAAMid,OAASyzC,YAAcr7C,OACvBsjG,cAAgBr6G,KAAK06G,eAAe/7F,QAC1CmzF,WAAanzF,OAAO1W,IAAI,SAAC5P,EAAGN,GAIxB,OAHAw6G,aAAaz1E,uBAAsB,GAEnCzC,WAAak4E,aAAax1E,aAAas9E,cAAchiH,EAAGN,GAAI6jC,MAAOC,OAAQqB,QACpEq1E,aAAa1sF,YAAYuU,YAAYC,cAKpD,OADAr6B,KAAK8xG,WAAWA,YACT9xG,2CAxKP,OAAO2vG,qBC5CFwP,WACTC,MAAQhqE,IAAK,SAAUF,IAAK,eAC5BmqE,WAAajqE,IAAK,SAAUF,IAAK,eACjCoqE,SAAWlqE,IAAK,SAAUF,IAAK,eAC/BqqE,UAAYnqE,IAAK,SAAUF,IAAK,cAChCsqE,eAAiBpqE,IAAK,SAAUF,IAAK,eACrCuqE,iBAAmBrqE,IAAK,SAAUF,IAAK,cACvCwqE,aAAetqE,IAAK,SAAUF,IAAK,eACnCyqE,QAAUvqE,IAAK,SAAUF,IAAK,eAC9B0qE,YAAcxqE,IAAK,SAAUF,IAAK,eAClC2qE,YAAczqE,IAAK,SAAUF,IAAK,eAClC4qE,WAAa1qE,IAAK,SAAUF,IAAK,aACjC6qE,SAAW3qE,IAAK,SAAUF,IAAK,aAC/B8qE,WAAa5qE,IAAK,SAAUF,IAAK,aACjC+qE,SAAW7qE,IAAK,SAAUF,IAAK,WAC/BgrE,KAAO9qE,IAAK,SAAUF,IAAK,WAC3BirE,WAAa/qE,IAAK,SAAUF,IAAK,YACjCkrE,QAAUhrE,IAAK,SAAUF,IAAK,aAC9BmrE,OAASjrE,IAAK,SAAUF,IAAK,cAC7BorE,YAAclrE,IAAK,SAAUF,IAAK,aAClCqrE,QAAUnrE,IAAK,SAAUF,IAAK,aAC9BsrE,MAAQprE,IAAK,SAAUF,IAAK,aAC5BurE,QAAUrrE,IAAK,SAAUF,IAAK,aAC9BwrE,aAAetrE,IAAK,SAAUF,IAAK,eACnCyrE,cAAgBvrE,IAAK,SAAUF,IAAK,eACpC0rE,sBAAwBxrE,IAAK,SAAUF,IAAK,eAC5C2rE,YAAczrE,IAAK,SAAUF,IAAK,eAClC4rE,UAAY1rE,IAAK,SAAUF,IAAK,eAChC6rE,WAAa3rE,IAAK,SAAUF,IAAK,eACjC8rE,eAAiB5rE,IAAK,SAAUF,IAAK,eACrC+rE,OAAS7rE,IAAK,SAAUF,IAAK,eAC7BgsE,WAAa9rE,IAAK,SAAUF,IAAK,eACjCisE,UAAY/rE,IAAK,SAAUF,IAAK,eAChCksE,gBAAkBhsE,IAAK,SAAUF,IAAK,eACtCmsE,QAAUjsE,IAAK,SAAUF,IAAK,eAC9BosE,aAAelsE,IAAK,SAAUF,IAAK,eACnCqsE,OAASnsE,IAAK,SAAUF,IAAK,eAC7BssE,WAAapsE,IAAK,SAAUF,IAAK,eACjCusE,KAAOrsE,IAAK,SAAUF,IAAK,eAC3BwsE,WAAatsE,IAAK,SAAUF,IAAK,eACjCysE,YAAcvsE,IAAK,SAAUF,IAAK,cAClC0sE,WAAaxsE,IAAK,SAAUF,IAAK,cACjC2sE,eAAiBzsE,IAAK,SAAUF,IAAK,cACrC4sE,MAAQ1sE,IAAK,SAAUF,IAAK,cAC5B6sE,WAAa3sE,IAAK,SAAUF,IAAK,cACjC8sE,aAAe5sE,IAAK,SAAUF,IAAK,aACnC+sE,QAAU7sE,IAAK,SAAUF,IAAK,aAC9BgtE,OAAS9sE,IAAK,SAAUF,IAAK,aAC7BitE,QAAU/sE,IAAK,SAAUF,IAAK,WAC9BktE,gBAAkBhtE,IAAK,SAAUF,IAAK,aACtCmtE,OAASjtE,IAAK,SAAUF,IAAK,aAC7BotE,WAAaltE,IAAK,SAAUF,IAAK,cACjCqtE,aAAentE,IAAK,SAAUF,IAAK,cACnCstE,WAAaptE,IAAK,SAAUF,IAAK,aACjCutE,MAAQrtE,IAAK,SAAUF,IAAK,WAC5BwtE,WAAattE,IAAK,SAAUF,IAAK,aACjCytE,YAAcvtE,IAAK,SAAUF,IAAK,aAClC0tE,aAAextE,IAAK,SAAUF,IAAK,cACnC2tE,aAAeztE,IAAK,SAAUF,IAAK,aACnC4tE,mBAAqB1tE,IAAK,SAAUF,IAAK,aACzC6tE,YAAc3tE,IAAK,SAAUF,IAAK,eAClC8tE,WAAa5tE,IAAK,SAAUF,IAAK,eACjC+tE,cAAgB7tE,IAAK,SAAUF,IAAK,eACpCguE,gBAAkB9tE,IAAK,SAAUF,IAAK,cACtCiuE,UAAY/tE,IAAK,SAAUF,IAAK,aAChCkuE,aAAehuE,IAAK,SAAUF,IAAK,aACnCmuE,OAASjuE,IAAK,SAAUF,IAAK,WAC7BouE,WAAaluE,IAAK,SAAUF,IAAK,WACjCquE,kBAAoBnuE,IAAK,SAAUF,IAAK,eACxCsuE,MAAQpuE,IAAK,SAAUF,IAAK,aAC5BuuE,MAAQruE,IAAK,SAAUF,IAAK,aAC5BwuE,WAAatuE,IAAK,SAAUF,IAAK,eACjCyuE,eAAiBvuE,IAAK,SAAUF,IAAK,eACrC0uE,YAAcxuE,IAAK,SAAUF,IAAK,eAClC2uE,WAAazuE,IAAK,SAAUF,IAAK,cACjC4uE,iBAAmB1uE,IAAK,SAAUF,IAAK,cACvC6uE,eAAiB3uE,IAAK,SAAUF,IAAK,aACrC8uE,eAAiB5uE,IAAK,SAAUF,IAAK,cACrC+uE,WAAa7uE,IAAK,SAAUF,IAAK,cACjCgvE,UAAY9uE,IAAK,SAAUF,IAAK,aAChCivE,MAAQ/uE,IAAK,SAAUF,IAAK,aAC5BkvE,gBAAkBhvE,IAAK,SAAUF,IAAK,eACtCmvE,YAAcjvE,IAAK,SAAUF,IAAK,eAClCovE,WAAalvE,IAAK,SAAUF,IAAK,eACjCqvE,SAAWnvE,IAAK,SAAUF,IAAK,eAC/BsvE,cAAgBpvE,IAAK,SAAUF,IAAK,eACpCuvE,aAAervE,IAAK,SAAUF,IAAK,aACnCwvE,YAActvE,IAAK,SAAUF,IAAK,cAClCyvE,gBAAkBvvE,IAAK,SAAUF,IAAK,eACtC0vE,WAAaxvE,IAAK,SAAUF,IAAK,cACjC2vE,WAAazvE,IAAK,SAAUF,IAAK,cACjC4vE,MAAQ1vE,IAAK,SAAUF,IAAK,WAC5B6vE,YAAc3vE,IAAK,SAAUF,IAAK,WAClC8vE,UAAY5vE,IAAK,SAAUF,IAAK,WAChC+vE,MAAQ7vE,IAAK,SAAUF,IAAK,WAC5BgwE,cAAgB9vE,IAAK,SAAUF,IAAK,aACpCiwE,UAAY/vE,IAAK,SAAUF,IAAK,eAChCkwE,SAAWhwE,IAAK,SAAUF,IAAK,eAC/BmwE,MAAQjwE,IAAK,SAAUF,IAAK,eAC5BowE,QAAUlwE,IAAK,SAAUF,IAAK,eAC9BqwE,QAAUnwE,IAAK,SAAUF,IAAK,eAC9BswE,SAAWpwE,IAAK,SAAUF,IAAK,aAC/BuwE,SAAWrwE,IAAK,SAAUF,IAAK,aAC/BwwE,cAAgBtwE,IAAK,SAAUF,IAAK,cACpCywE,cAAgBvwE,IAAK,SAAUF,IAAK,eACpC0wE,YAAcxwE,IAAK,SAAUF,IAAK,cAClC2wE,YAAczwE,IAAK,SAAUF,IAAK,aAClC4wE,YAAc1wE,IAAK,SAAUF,IAAK,cAClC6wE,aAAe3wE,IAAK,SAAUF,IAAK,aACnC8wE,QAAU5wE,IAAK,SAAUF,IAAK,aAC9B+wE,QAAU7wE,IAAK,SAAUF,IAAK,YAC9BgxE,eAAiB9wE,IAAK,SAAUF,IAAK,aACrCixE,WAAa/wE,IAAK,SAAUF,IAAK,cACjCkxE,iBAAmBhxE,IAAK,SAAUF,IAAK,eACvCmxE,OAASjxE,IAAK,SAAUF,IAAK,eAC7BoxE,MAAQlxE,IAAK,SAAUF,IAAK,eAC5BqxE,UAAYnxE,IAAK,SAAUF,IAAK,eAChCsxE,WAAapxE,IAAK,SAAUF,IAAK,eACjCuxE,OAASrxE,IAAK,SAAUF,IAAK,eAC7BwxE,WAAatxE,IAAK,SAAUF,IAAK,eACjCyxE,YAAcvxE,IAAK,SAAUF,IAAK,eAClC0xE,YAAcxxE,IAAK,SAAUF,IAAK,eAClC2xE,UAAYzxE,IAAK,SAAUF,IAAK,eAChC4xE,OAAS1xE,IAAK,SAAUF,IAAK,eAC7B6xE,SAAW3xE,IAAK,SAAUF,IAAK,eAC/B8xE,aAAe5xE,IAAK,SAAUF,IAAK,eACnC+xE,OAAS7xE,IAAK,SAAUF,IAAK,eAC7BgyE,cAAgB9xE,IAAK,SAAUF,IAAK,eACpCiyE,OAAS/xE,IAAK,SAAUF,IAAK,eAC7BkyE,eAAiBhyE,IAAK,SAAUF,IAAK,eACrCmyE,WAAajyE,IAAK,SAAUF,IAAK,eACjCoyE,WAAalyE,IAAK,SAAUF,IAAK,eACjCqyE,WAAanyE,IAAK,SAAUF,IAAK,eACjCsyE,QAAUpyE,IAAK,SAAUF,IAAK,eAC9BuyE,UAAYryE,IAAK,SAAUF,IAAK,eAChCwyE,MAAQtyE,IAAK,SAAUF,IAAK,eAC5ByyE,SAAWvyE,IAAK,SAAUF,IAAK,eAC/B0yE,gBAAkBxyE,IAAK,SAAUF,IAAK,eACtC2yE,WAAazyE,IAAK,SAAUF,IAAK,eACjC4yE,eAAiB1yE,IAAK,SAAUF,IAAK,YACrC6yE,OAAS3yE,IAAK,SAAUF,IAAK,UCtIpB8yE,SACT,UACA,UACA,UACA,UACA,UACA,WAGSC,uBAAyB,UAEzBC,gBACT3mH,MAAOymH,QACPhvH,MAAOgvH,QAAQ,GACfzhF,MAAM,EACN4hF,MAAO,EACPttH,KAAM40G,weCjBH,IAAM2Y,mBAAe,SAAfA,aAAeC,QAAM,cAAA1sG,OAAwB,IAAZ0sG,OAAO,GAAnB,KAAA1sG,OAA2C,IAAZ0sG,OAAO,GAAtC,MAAA1sG,OAA+D,IAAZ0sG,OAAO,GAA1D,MAAA1sG,OAChC0sG,OAAO,IAAM,EADmB,MAGrBC,mBAAqB,SAArBA,mBAAqBC,YAAU,OAAKA,WAAWj8G,MAAM,UACjDwG,OAAO,SAACorB,EAAGjkC,GAAJ,SAAA0hB,OAAauiB,GAAbviB,OAAiB1hB,EAAE0lC,OAAO,GAAGigB,eAA7BjkC,OAA6C1hB,EAAEmhB,MAAM,KAAM,KAEtEotG,wBAAoB,SAApBA,kBAAqBvuH,EAAGwuH,cACjC,IAAI/zE,MAAQ,GACZ,GAAiB,iBAANz6C,EAGP,GADAA,GADAA,EAAIA,EAAEqG,QAAQ,KAAM,KACdmB,cjBUK,QiBTP+uE,YAAYv2E,IjBQJ,SiBRkBu2E,YAAYv2E,GAEtCy6C,QADAA,MAAQz6C,EAAEoO,MAAM,mBACD,GAAK,IAAKqsC,MAAM,GAAK,IAAKA,MAAM,GAAK,IAAKA,MAAM,IAAM,QAClE,GjBII,QiBJA87B,YAAYv2E,GACnBy6C,MrKimCK,SAAXg0E,SAAYtzE,KACd,IAAM3xC,OAAS,4CAA4CkxC,KAAKS,KAE1Dv8C,EAAIwI,SAASoC,OAAO,GAAI,IACxBuxC,EAAI3zC,SAASoC,OAAO,GAAI,IACxBL,EAAI/B,SAASoC,OAAO,GAAI,IACxBtJ,EAAIsJ,OAAO,GAAKpC,SAASoC,OAAO,GAAI,IAAM,EAChD,OAAO8sE,SAAS13E,EAAGm8C,EAAG5xC,EAAGjJ,GqKxmCTuuH,CAASzuH,QACd,GjBCI,QiBDAu2E,YAAYv2E,GAAY,CAC/B,IAAMw2E,IAAMx2E,EAAEyJ,UAAUzJ,EAAEgM,QAAQ,KAAO,EAAGhM,EAAEumC,YAAY,MAAMl0B,MAAM,QACtEooC,MAAQ67B,SAAQhpE,WAAR,EAAAohH,wBAAYl4C,WACb0uC,UAAUmJ,mBAAmBruH,MACpCy6C,MAAQ67B,SAAQhpE,WAAR,EAAAohH,wBAAYxJ,UAAUmJ,mBAAmBruH,IAAIi7C,IAAI5oC,MAAM,aAKnEooC,MAHSz6C,aAAa4O,MAGd5O,EAFAs2E,SAASk4C,cAIrB,OAAO/zE,OAGE+mD,wBACT7uF,QACI8hE,aAAc,SAAAA,aAACjyC,QAAS7vB,QACpB,IAAMuuG,OAAS1rC,kBAAmBhzC,QAAQ5W,YAAYk2E,iBAClDnvF,OAAO/R,OAAS40G,mBAChB7iG,OAAOrL,MAAQqL,OAAOrL,QAAU45G,OAAO55G,MAAM,IAC7CqL,OAAOrL,MAAQqL,OAAOrL,MAAMG,OAAS,EAAIkL,OAAOrL,OAAS0mH,wBAA1CtsG,OAAAgtG,wBAAqE/7G,OAAOrL,SAE/F,IAAMy4G,UAAYvqC,eAAe0rC,OAAQ1+E,QAAQ7vB,UAC3Cg8G,UAAYn5C,eAAeuqC,UAAWptG,QAO5C,OALIg8G,UAAUrnH,iBAAiBsH,QAC3B+/G,UAAUrnH,MAAQqnH,UAAUrnH,MAAM0G,IAAI,SAAChO,EAAGlC,GAAJ,OAAUywH,wBAAkBvuH,EAAG+tH,QAAQjwH,MAC7E6wH,UAAUT,MAAQv7G,OAAOu7G,OAASS,UAAUrnH,MAAMG,QAEtDknH,UAAU5vH,MAAQwvH,wBAAkBI,UAAU5vH,MAAO4vH,UAAU5vH,OACxD4vH,YAGf7xG,UACAkyB,SACA4/E,iBCtDSC,yBAAoB,SAApBA,kBAAqBjN,UAAWkN,UAAWC,oBACpD,OAAInN,qBAAqBnvG,sBACds8G,mBAEJD,urBCAX,IAAME,wBAAW,SAAXA,SAAYlyG,OAAQoxG,OACtB,IAAIe,YAEJ,GAAIf,iBAAiBt/G,MACjBqgH,SAAWf,MAAM/sG,QAAQ7H,OACzB21G,SAAWC,iCAAI,IAAIryG,KAAKC,OAAO,IAAhB4E,OAAAwtG,iCAAuBhB,QAAOpxG,OAAO,OAAMxD,YAG1D,IADA,IAAM28C,aAAekgB,kCAAkB7oE,WAAlB,EAAA4hH,iCAAwBpyG,SACpChf,EAAI,EAAGA,GAAKowH,MAAOpwH,IACxBmxH,SAASnxH,GAAKm4D,aAAan4D,EAAIowH,OAOvC,OAHIe,SAAS,GAAKnyG,OAAO,IACrBmyG,SAAS5gH,SAEJyO,cAAQmyG,oBAGfE,0BAAa,SAAbA,WAAcC,eAAgB9nH,OAChC,IAAI+nH,YAGJ,GAAID,eAFmBxlH,KAAK4Q,IAAIlT,MAAMG,OAAQ,IAI1C,IADA,IAAMwuD,aAAeogB,qCvK29BL,SAAlBi5C,kBAAkB,OAAMC,QuK39BuBD,GAAmBhoH,MAAM0G,IAAI,SAAAhO,GAAC,OAAImuH,mBAAanuH,MACnFlC,EAAI,EAAGA,EAAIsxH,eAAgBtxH,IAChCuxH,SAASvxH,GAAKm4D,aAAan4D,GAAKsxH,eAAiB,SAGrDC,SAAW/nH,MAAM6Z,MAAM,EAAGiuG,gBAE9B,OAASC,oBASPG,cAAgB,SAAhBA,cAAiB1yG,QACnB,IAAMouF,WAAapuF,OAEnB,OAASA,OADSA,OAAO9O,IAAI,SAAC5P,EAAGN,GAAJ,OAAWA,GAAMgf,OAAOrV,OAAS,KAClCyjG,sBAAYukB,aAAc,EAAG,KASvDC,qBAAuB,SAAvBA,qBAAwB5yG,OAAQoxG,MAAO5mH,OAEzC,OAASwV,cAAQouF,WADEpuF,OACU2yG,aAAc,EAAG,GAAInoH,cAShDqoH,aAAe,SAAfA,aAAgB7yG,OAAQoxG,MAAO5mH,OAEjC,OAAS4jG,WADUpuF,OACEA,cAAQ2qC,MAAM,EAAMngD,cAUvCsoH,6BAAgB,SAAhBA,cAAiB9yG,OAAQoxG,MAAO5mH,OAAU,IAAAuoH,UACHb,wBAASlyG,OAAQoxG,OAA1ChjB,WAD4B2kB,UACpC/yG,OAAoBmyG,SADgBY,UAChBZ,SAG5B,OAAS/jB,sBAAYpuF,OAAQmyG,SAAUxnE,MAAM,EAAMngD,MAF9B6nH,0BAAWF,SAASxnH,OAAS,EAAGH,OAA7C+nH,WAKNS,sCAAyB,SAAzBA,uBAA0BhzG,OAAQoxG,MAAO5mH,OAAU,IAAAyoH,WACZf,wBAASlyG,OAAQxV,MAAMG,OAAS,GAEzE,OAASyjG,WAH4C6kB,WAC7CjzG,OAEaA,OAHgCizG,WACzBd,SAEWxnE,MAAM,EAAMngD,MADlCA,MAAM0G,IAAI,SAAAhO,GAAC,OAAImuH,mBAAanuH,OAa3CgwH,YAAc,SAAdA,YAAezO,YAAavyE,MAAOlyB,OAAQouF,YAG7C,OAAOl8D,MADQlyB,OADDouF,WAAWl/F,QAAQu1G,gBAa/B0O,4BAAe,SAAfA,aAAgB1O,YAAavyE,MAAOlyB,QACtC,IAAMozG,QAAU3O,YAAczkG,OAAO,KAAOA,OAAOA,OAAOrV,OAAS,GAAKqV,OAAO,IAE/E,OAAO+xG,yBAAkBtN,YAAavyE,MAAMkhF,QAASlhF,MAAM,KASzDmhF,2BAAc,SAAdA,YAAe5O,YAAavyE,MAAOlyB,QAArB,OAAgC+xG,yBAAkBtN,YAAavyE,MAAMuyE,aACrFvyE,MAAMlyB,OAAO,MAiDJszG,eAAiB,SAAjBA,eAAkBC,WAAYC,UAAWC,YAAxB,OA1CX,SAAb/jB,aAAa,IAAAhyE,KAAA,OAAAg2F,8BAAAh2F,QAAA,GAAA9Y,OACXy0F,UADW,KAAAz0F,OACEy0F,UADF,KAAAz0F,OACeu0F,aAC1BjnE,MAAOinE,WACPwa,YAAa,SAAAA,cAAA,OAAMf,sBACnB3wH,MAAO,SAAAA,QAAA,OAAMkxH,+BAJFO,8BAAAh2F,KAAA,GAAA9Y,OAMXy0F,UANW,KAAAz0F,OAME00F,SANF,KAAA10F,OAMcu0F,aACzBjnE,MAAOinE,WACPwa,YAAa,SAAAA,cAAA,OAAMf,sBACnB3wH,MAAO,SAAAA,QAAA,OAAMkxH,+BATFO,8BAAAh2F,KAAA,GAAA9Y,OAWX00F,SAXW,KAAA10F,OAWC00F,SAXD,KAAA10F,OAWau0F,aACxBjnE,MAAOinE,WACPwa,YAAa,SAAAA,cAAA,OAAMjB,eACnBzwH,MAAO,SAAAA,QAAA,OAAMixH,eAdFQ,8BAAAh2F,KAAA,GAAA9Y,OAgBX00F,SAhBW,KAAA10F,OAgBC00F,SAhBD,KAAA10F,OAgBai0F,UACxB3mE,MAAO2mE,QACP8a,YAAa,SAAAA,cAAA,OAAMd,cACnB5wH,MAAO,SAAAA,QAAA,OAAMoxH,8BAnBFK,8BAAAh2F,KAAA,GAAA9Y,OAqBXy0F,UArBW,KAAAz0F,OAqBEy0F,UArBF,KAAAz0F,OAqBei0F,UAC1B3mE,MAAOwmE,OACPib,YAAa,SAAAA,cAAA,OAAMX,uCACnB/wH,MAAO,SAAAA,QAAA,OAAMoxH,8BAxBFK,8BAAAh2F,KAAA,GAAA9Y,OA0BXy0F,UA1BW,KAAAz0F,OA0BE00F,SA1BF,KAAA10F,OA0Bci0F,UACzB3mE,MAAO6mE,SACP4a,YAAa,SAAAA,cAAA,OAAMb,8BACnB7wH,MAAO,SAAAA,QAAA,OAAMoxH,8BA7BF31F,KA2CfgyE,GAAU,GAAA9qF,OAAM2uG,WAAN,KAAA3uG,OAAoB4uG,UAApB,KAAA5uG,OAAiC6uG,YAAc,8xBCpKxCG,gCAUjB,SAAAA,UAAa/9G,iKAAQg+G,CAAA5qH,KAAA2qH,WACjB57C,sBAAsB/uE,KAAMy7F,wBAC5Bz7F,KAAK4M,OAAOA,QAEZ5M,KAAK6qH,YAAoC,WAAtB7qH,KAAKixF,QAAQp2F,KAAoBu1G,UAAYC,SAChErwG,KAAK8qH,WAAoC,WAAtB9qH,KAAKixF,QAAQp2F,MAAsBmF,KAAKixF,QAAQ1qD,KAAoB8pE,SAAZD,UAE3EpwG,KAAK+qH,YnBqCN,SAASC,cAAe36D,QAO3B,OALIA,QAA8B,iBAAZA,QACS,MAAdA,OAAO,GAAa6/C,qBAEpBN,kBmB1CMob,CAAchrH,KAAKixF,QAAQ1vF,OAE9CvB,KAAKirH,eAAiBjrH,KAAKkrH,iBAAiBlrH,KAAK6qH,YAAa7qH,KAAK8qH,WAAY9qH,KAAK+qH,aACpF/qH,KAAKu6G,OAASv6G,KAAKsxG,YAAYtxG,KAAKirH,gBAEpCjrH,KAAKumF,IAAMj8E,cAEXtK,KAAKmrH,aAAav+G,OAAOmK,4SAgChBq0G,eAAe,IAChB7pH,MAAUvB,KAAK4M,SAAfrL,MACR,OAAIA,OAA4B,iBAAXA,MnBlBtB,SAAS8pH,UAAWh7D,QACvB,MAAkB,MAAdA,OAAO,GACAygD,gBAAgBwa,8BAAaj7D,SAEjCwgD,aAAaya,8BAAaj7D,SmBelBg7D,CAAU9pH,OAEd+vG,2BACHz2G,KAAMuwH,cAAcniF,MACpB1nC,wEAaU+oH,WAAYC,UAAWC,YACrC,OAAOH,eAAeC,WAAYC,UAAWC,8DAUnCe,eACV,OAAOnD,mBAAamD,yDASd1P,WACN,OAAO77G,KAAKooH,aAAapoH,KAAKwrH,YAAY3P,4DASjCA,WACT,GAAI77G,KAAK+W,eAA0BzJ,IAAduuG,UAAyB,CAC1C,IAAM5yE,MAAQjpC,KAAKipC,QACb1nC,MAAQ0nC,MAAM1nC,MAAQ0nC,MAAM1nC,QAAU,KACtCmzC,MAAQ10C,KAAKirH,eAAejyH,MAAMuI,MAA1BvB,CAAiC67G,UAAW5yE,MAAOjpC,KAAK+W,SAAU/W,KAAK6oH,gBACrF,GAAIn0E,MAAO,CACP,GAAqB,iBAAVA,MAAoB,CAC3B,IAAM+7B,IAAM/7B,MAAMhxC,UAAUgxC,MAAMzuC,QAAQ,KAAO,EAAGyuC,MAAMlU,YAAY,MAAMl0B,MAAM,QAClF,OAAOikE,SAAQhpE,WAAR,EAAAkkH,6BAAYh7C,MAEvB,OAAAg7C,6BAAW/2E,QAGnB,OAAA+2E,6BAAWzrH,KAAK4M,SAAS5T,2DAUF,IAAb+d,OAAa3R,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACvB,GAAI2R,OAAOrV,OAAQ,CACf,IAAMunC,MAAQjpC,KAAKipC,QACb1nC,MAAQ0nC,MAAM1nC,MAAQ0nC,MAAM1nC,QAAU,KAEtCmqH,UADgB1rH,KAAKirH,eAAeP,aACxBiB,CAAc50G,OAAQ/W,KAAK4M,SAASu7G,MAAO5mH,OAE7DvB,KAAK+W,OAAO20G,UAAU30G,QACtB20G,UAAUnqH,OAASvB,KAAKipC,QAAQ1nC,MAAMmqH,UAAUnqH,OAChDvB,KAAK6oH,aAAa6C,UAAUvmB,YAC5BnlG,KAAKipC,QAAQlyB,OAAO20G,UAAUhC,aAAe1pH,KAAK+W,UAEtD,OAAO/W,mDAWP,OACInF,KAAMmF,KAAK6lB,YAAYhrB,OACvBouC,MAAOjpC,KAAKipC,QACZlyB,OAAQ/W,KAAK+W,SACbnK,OAAQ5M,KAAK4M,gEAIL8nC,MAAOk3E,mBACnB,IAAM9gG,EAAe,IAAX4pB,MAAM,GACV16C,EAAe,IAAX06C,MAAM,GACV18C,EAAe,IAAX08C,MAAM,GACVv6C,EAAIu6C,MAAM,IAAM,EAChBm3E,KAAO/gG,EAAI8gG,kBAAkB,GAC7BE,KAAO9xH,EAAI4xH,kBAAkB,GAC7BG,KAAO/zH,EAAI4zH,kBAAkB,GAC7BI,KAAO7xH,EAAIyxH,kBAAkB,IAAM,EAEzC,OAASl3E,MAAK,QAAA/4B,OAAUkwG,KAAV,KAAAlwG,OAAkBmwG,KAAlB,MAAAnwG,OAA2BowG,KAA3B,MAAApwG,OAAoCqwG,KAApC,KAA6Cj3E,MAAO82E,KAAO,IAAKC,KAAO,IAAKC,KAAO,IAAKC,uCAQtG,OAAOhsH,KAAKumF,4DAhJZ,OAAO2hC,mDAWP,MpBnDa,yBqBXRA,yBACTlvH,MAAO,GACPuI,OAAQ,GAAI,6qBCShB,IAqFMklG,0BAAUwlB,6BAAAnwB,eAAA,GAAAngF,OACR00F,SADQ,KAAA10F,OACIy0F,YACZnnE,MAAOwmE,OACP14F,OAxFc,SAAhB0yG,cAAiB1yG,QACnB,IAAMouF,WAAapuF,OAEnB,OAASA,OADSA,OAAO9O,IAAI,SAAC5P,EAAGN,GAAJ,OAAWA,GAAMgf,OAAOrV,OAAS,KAClCyjG,sBAAYukB,aAAc,EAAG,KAsFrDnoH,MAzBe,SAAjB2qH,eAAkB1Q,YAAavyE,MAAOlyB,OAAQouF,YAChD,IACMglB,OAASpzG,OADDouF,WAAWl/F,QAAQu1G,cAGjC,OADWlrC,qCAAwBF,kCAAH+7C,gCAA6BljF,MAAM1nC,SAC5D4d,CAAGgrG,WAiBE8B,6BAAAnwB,YAAA,GAAAngF,OAMRy0F,UANQ,KAAAz0F,OAMKy0F,YACbnnE,MAAOwmE,OACP14F,OAjFa,SAAf6yG,aAAgB7yG,QAElB,OAASouF,WADUpuF,OACEA,gBAgFjBxV,MAjBY,SAAd6oH,YAAe5O,YAAavyE,MAAOlyB,QAArB,OAChB+xG,yBAAkBtN,YAAavyE,MAAMuyE,aAAcvyE,MAAMlyB,OAAO,QAOpDk1G,6BAAAnwB,YAAA,GAAAngF,OAWRy0F,UAXQ,KAAAz0F,OAWK00F,WACbpnE,MAAOknE,UACPp5F,OA1Ec,SAAhB8yG,cAAiB9yG,OAAQq1G,WAC3B,IAAIC,gBACJ,GAAID,qBAAqBvjH,MACrBwjH,aAAeD,UAAUhxG,QAAQ7H,YAGjC,IADA,IAAM28C,aAAekgB,kCAAkB7oE,WAAlB,EAAA4kH,gCAAwBp1G,SACpChf,EAAI,EAAGA,EAAIq0H,UAAWr0H,IAC3Bs0H,aAAat0H,GAAKm4D,aAAan4D,GAAKq0H,UAAY,IAOxD,OAJIC,aAAa,GAAKt1G,OAAO,IACzBs1G,aAAa/jH,SAGR68F,WAAYknB,aAAct1G,OADjBs1G,aACoC3qE,MAAM,IA6DxDngD,MAjDc,SAAhB+qH,cAAiB9Q,YAAavyE,MAAOlyB,QACvC,IAAMozG,QAAU3O,YAAczkG,OAAO,KAAOA,OAAOA,OAAOrV,OAAS,GAAKqV,OAAO,IACzEm5C,aAAekgB,kCAAkB7oE,WAAlB,EAAA4kH,gCAAwBljF,MAAM1nC,UACnD,OAAOunH,yBAAkBtN,YAAatrD,aAAai6D,QAASj6D,aAAan5C,OAAO,QAgCpE+kF,aChGHL,uBACT7uF,UACAmK,QACI23D,aAAc,SAAAA,aAACjyC,QAASzjC,OAEpB,OADAyjC,QAAQwM,QAAQlyB,OAAO/d,OAChBA,QAGfuI,SACA0nC,SACA4/E,kTCMiB0D,8BAOjB,SAAAA,SAAa3/G,gKAAQ4/G,CAAAxsH,KAAAusH,UACjBx9C,sBAAsB/uE,KAAMy7F,uBAE5Bz7F,KAAKumF,IAAMj8E,cACXtK,KAAKixF,QAAUx4F,OAAOoU,UAAW7M,KAAK6lB,YAAYk2E,gBAAiBnvF,QAEnE5M,KAAK6qH,YAAoC,WAAtB7qH,KAAKixF,QAAQp2F,KAAoBu1G,UAAYC,SAChErwG,KAAK8qH,WAAa1a,UAElBpwG,KAAKysH,cAAgBzsH,KAAK0nG,YAAY1nG,KAAK6qH,YAAa7qH,KAAK8qH,YAC7D9qH,KAAKu6G,OAASv6G,KAAKsxG,YAAYtxG,KAAKysH,eACpCzsH,KAAKg7G,OAASh7G,KAAKixF,QAAQ1vF,MAE3BvB,KAAKmrH,aAAav+G,OAAOmK,wSAYhBuzG,WAAYC,WACrB,OFyEsB,SAAjBF,eAAkBC,WAAYC,WAAb,OACzB9jB,yBAAU,GAAA9qF,OAAI2uG,WAAJ,KAAA3uG,OAAkB4uG,YE1ElBF,CAAeC,WAAYC,2DASzB7hB,UAAU,IAEfnnG,MACAvB,KAAK4M,SADLrL,MAEJ,OAAO+vG,2BACHz2G,KAAM6tG,SAASz/D,MACf1nC,wDAiCgB,IAAfs6G,UAAez2G,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAAH,EAGbpM,MACAgH,KAAK4M,SADL5T,MAEEiwC,MAAQjpC,KAAKipC,QACblyB,OAAS/W,KAAK+W,WAAa,EAAG,GAEpC,OAAKkyB,OAASlyB,OAAO,KAAOA,OAAO,GAGxB/W,KAAKysH,cAAclrH,MAAMs6G,UAAW5yE,MAAOjpC,KAAK+W,SAAU/W,KAAK6oH,gBAF5D7vH,wDAaJ+d,QACV,GAAIA,OAAQ,CACR,IAEM21G,YAAaC,EAFF3sH,KAAKysH,cAAc11G,QAERA,OAAQ/W,KAAK4M,SAASw/G,WAElDpsH,KAAK+W,OAAO21G,WAAW31G,QACvB/W,KAAK6oH,aAAa6D,WAAWvnB,YAE7BnlG,KAAKipC,QAAQlyB,OAAO21G,WAAWhD,aAAe1pH,KAAK+W,UAEvD,OAAO/W,mDAWP,OACInF,KAAMmF,KAAK6lB,YAAYhrB,OACvBouC,MAAOjpC,KAAKipC,QACZlyB,OAAQ/W,KAAK+W,SACbxV,MAAOvB,KAAKuB,QACZqL,OAAQ5M,KAAK4M,0CASjB,OAAO5M,KAAKumF,4DA/EZ,OAAO2hC,4DAWP,MxB1EY,uByBbPA,oCACT0E,UAAW,KACX5zH,MAAO,SACPuI,OAAQ,SAAU,UAAW,OAAQ,QAAS,SAAU,MAAO,aCHtDk6F,wBACT7uF,UACAmK,UACAkyB,SACA4/E,gBACA+D,kUCWiBC,gCAOjB,SAAAA,UAAajgH,iKAAQkgH,CAAA9sH,KAAA6sH,WACjB99C,sBAAsB/uE,KAAMy7F,wBAE5Bz7F,KAAKumF,IAAMj8E,cACXtK,KAAKixF,QAAUx4F,OAAOoU,UAAW7M,KAAK6lB,YAAYk2E,iBAClD/7F,KAAKixF,QAAUxhB,eAAezvE,KAAKixF,QAASrkF,QAE5C5M,KAAKu6G,OAASjJ,2BACVz2G,KAAM,UACN0G,MAAOvB,KAAKixF,QAAQ1vF,QAExBvB,KAAKmrH,aAAav+G,OAAOmK,sSAgCnB/d,OACN,IAAKgH,KAAKipC,UAAYjpC,KAAK+W,WAAa/d,OAASA,iBAAiB0T,sBAC9D,OAAO1M,KAAK4M,SAAS5T,MAGzB,GAAIgH,KAAK+sH,iBACL,OAAO/sH,KAAK+sH,iBAAiB/zH,OAGjC,IAAMg0H,UAAYhtH,KAAKipC,OAALjpC,CAAahH,OAC/B,MAAkB,WAAdg0H,UACOn7C,uBAAUm7C,WAGdA,8DASgB,IAAbj2G,OAAa3R,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAUvB,OATI2R,OAAOrV,SACP1B,KAAK6oH,aAAa9xG,QAClB/W,KAAK+W,OAAOA,QACZ/W,KAAKipC,QAAQlyB,OAAOA,QAEhB/W,KAAK4M,SAASggH,YACd5sH,KAAK+sH,iBCzFS,SAAjBE,eAAkBl2G,OAAQm2G,aACnC,IAAMC,mBAIN,OAHAp2G,OAAOjO,QAAQ,SAAC9P,OACZm0H,gBAAgBn0H,OAASk0H,YAAYl0H,SAElCm0H,gBDoF6BF,CAAel2G,OAAQ/W,KAAK4M,SAASggH,aAG9D5sH,mDAWP,OACInF,KAAMmF,KAAK6lB,YAAYhrB,OACvBouC,MAAOjpC,KAAKipC,QACZlyB,OAAQ/W,KAAK+W,SACbxV,MAAOvB,KAAK4M,SAASrL,MACrBqL,OAAQ5M,KAAK4M,0CASjB,OAAO5M,KAAKumF,4DA/EZ,OAAO2hC,uEAWP,M3B5Ca,gN6BVrB,IAAMkF,mBAGO,UAHPA,oBAIQ,WCICC,iBDEcC,mCAAAC,qBATd,YAUalc,MADCic,mCAAAC,kBAExBH,mBAAqB/b,QAFGic,mCAAAC,kBAGxBH,oBAAsB/b,MCLZ,SAAC3lG,OAAQX,KAAM6B,QAC1B,IAAMmhB,QAAUnhB,OAAOmhB,mBAAmBllB,MAAQ+D,OAAOmhB,SAAWnhB,OAAOmhB,SACrEy/F,eAAiBz/F,QAAQ9lB,IAAI,SAAA4L,WAAS,OAAInI,OAAO2a,UAAU,SAAAhuB,GAAC,OAAIA,EAAEC,OAASub,cAEjF,QAA2CvG,IAAvCkgH,eAAepiG,KAAK,SAAA/yB,GAAC,OAAW,IAAPA,IACzB,MAAM,IAAI0X,MAAJ,iBAAA4L,OAA2BoS,QAA3B,yBAGV,IAAM3b,YlLg5Ca,SAAjBq7G,eAAkB5rG,QACpB,IAAM6rG,OAAS1lF,WAEf,OADAnmB,OAAO/b,KAAKgD,QAAQ,SAAAxP,KAAG,OAAIo0H,OAAOp0H,IAAI,SAAAjB,GAAC,OAAIA,EAAEiB,SACtCo0H,OAAOz4G,QAAQ4M,OAAO9W,MkLn5CT0iH,EAChB3nH,KAAM0nH,eACNziH,YASJ,OANAqH,YAAYtJ,QAAQ,SAACzQ,GACjB,IAAMiB,IAAMjB,EAAEiB,IACVoT,sBAAkB8L,UAAUlf,OAC5BjB,EAAEiB,IAAMoT,sBAAkB+L,eAAenf,QAG1C8Y,cCZKu7G,uMCPhB,IAAMC,cAAYC,iCAAAC,iBCJO,WFOxB,SAASH,kBAAmBjiH,OAAQX,KAAM6B,QACtC,OAAO7B,OCJM8iH,iCAAAC,cCHI,QDKK9tE,iBAFT6tE,iCAAAC,cCFI,QCgEP,SAACpiH,OAAQX,KAAM6B,QAC1B,IAAMmhH,YAAcnhH,OAAOmhH,YACrBC,WAAaphH,OAAO5T,MACpB+0B,QAAUnhB,OAAOmhB,QACjBxa,KAAO3G,OAAO2G,MAAQ,aACtB06G,eAzDY,SAAhBC,cAAiBnjH,KAAMW,OAAQsiH,WAAYD,YAAahgG,SAC1D,IAAM3b,YAAc4tC,gBAAMt0C,OAAQX,MAC9BgjB,QAASggG,cAEPI,iBAAmBziH,OAAO2a,UAAU,SAAAhuB,GAAC,OAAIA,EAAEC,OAASy1H,cACpDK,gBAAkB1iH,OAAO2a,UAAU,SAAAhuB,GAAC,OAAIA,EAAEC,OAAS01H,aACnDK,eAAiB3iH,OAAO2a,UAAU,SAAAhuB,GAAC,OAAIA,EAAEC,OAASy1B,UAClDugG,WAAavjH,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEg2H,kBAAiBt6G,OAAO,SAAChK,KAAMggF,IAAK34E,KAAZ,OAAoBA,IAAInL,QAAQ8D,QAAUggF,MAAKx2E,OACpG2U,WAAaxc,OAAOoH,OAAO,SAACC,IAAK7K,IAAKnQ,GAExC,OADAgb,IAAIhb,GAAKmQ,IAAI5P,KACNya,SA8BX,OACIhI,KA7BYqH,YAAYnK,IAAI,SAACmJ,KAC7B,IAAMm9G,UACAC,OAASp9G,IAAIuN,OAAO7L,OAAO,SAACC,IAAKsI,KAUnC,OATAtI,IAAMsI,IAAIvI,OAAO,SAAC5K,IAAKlP,MAAOjB,GAO1B,OANIA,IAAMs2H,gBACNnmH,IAAIlP,OAASqiB,IAAI+yG,iBACjBG,OAAOv1H,OAASqiB,KACTtjB,IAAMq2H,kBACblmH,IAAIggB,WAAWnwB,IAAMiB,OAElBkP,KACR6K,UAcP,OAXAy7G,OAAOC,OAASF,OAEhBD,WAAWxlH,QAAQ,SAAC4lH,WAChB,QAA0BphH,IAAtBkhH,OAAOE,WAA0B,CACjCF,OAAOE,WAAa,EACpB,IAAMC,OAAS,IAAI9lH,MAAMuI,IAAIuN,OAAO,GAAGjd,QACvCitH,OAAOR,kBAAoB/8G,IAAI9X,IAC/Bq1H,OAAON,gBAAkBK,UACzBF,OAAOC,OAAOC,WAAaC,UAG5BH,SAKP1oH,KAAMwoH,YAeaJ,CAAcnjH,KAAMW,OAAQsiH,WAAYD,YAAahgG,SACtEjoB,KAAOmoH,eAAenoH,KACtBmC,OACA2mH,QAAUhiH,OAAOgiH,QACjBC,WAAanjH,OAAO2a,UAAU,SAAAhuB,GAAC,OAAIA,EAAEC,OAASs2H,UAC9CE,aAAepjH,OAAO2a,UAAU,SAAAhuB,GAAC,OAAIA,EAAEC,OAASy1B,WAClC,IAAhB8gG,aACA/oH,KAAKgD,QAAQ,SAACxP,KACV,IAAMhB,KAAOyS,KAAKqgB,KAAK,SAAA/yB,GAAC,OAAIA,EAAEy2H,gBAAkBx1H,MAChD2O,IAAI3O,KAAOhB,KAAKu2H,cAEpBZ,eAAenoH,KAAKyN,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAU6E,IAAI9N,GAAG40H,cAAc9mH,IAAI7E,OAGhE,IAAM4rH,UAAYp8C,oBACd9sE,KAAMmoH,eAAenoH,KACrBk9C,OAAQp2C,OAAOo2C,QAAU,YACzBl8B,MAAOvT,KACPxI,KAAMkjH,eAAeljH,OAOzB,OALAikH,UAAUlmH,QAAQ,SAACmmH,YACfA,WAAWnmH,QAAQ,SAACwV,SAChBA,QAAQvT,KAAOuT,QAAQvT,KAAK0jH,OAAOQ,WAAW31H,SAG/C01H,YF5FOlB,eAqBHoB,sBARf,SAASA,iBAAkBr0H,MACvB,IAAMmhD,UAAY4xE,aAAa/yH,MAC/B,GAAyB,mBAAdmhD,UACP,MAAM,IAAIjsC,MAAM,oCAEpB,OAAOisC,urCGbX,IAAM0zD,aAAO2B,2BAAU3B,KAEVyf,cAAgB,SAAhBA,cAAgB16F,KAAAm2C,OAAqE,IAAlEv4D,MAAkEoiB,KAAlEpiB,MAAOpQ,MAA2DwyB,KAA3DxyB,MAAWmtH,cAAgDxkD,MAAhDwkD,cAAe/pB,UAAiCz6B,MAAjCy6B,UAAWgqB,gBAAsBzkD,MAAtBykD,gBACpEC,SAAW,GACX56E,MAAQ,GAQZ,OAPI06E,eAAiBA,cAAcp2H,iBAAiBwc,UAChDk/B,MAAQ06E,cAAcp2H,MAAMqZ,MAAOpQ,OACnCqtH,SAAWF,cAAcp2H,MAAMqZ,MAAOpQ,SAEtCqtH,SAAWjqB,UAAUmmB,YAAYn5G,MAAMk9G,MAAMF,kBAC7C36E,MAAQ2wD,UAAU+iB,aAAakH,YAE1B56E,YAAO46E,oBAGdE,eAAiB,SAAjBA,eAAkBnqB,UAAWhzF,MAAOo9G,UAAWC,WACjDr9G,MAAM8K,KAAKwyG,WAAWF,WAAap9G,MAAM8K,KAAKwyG,WAAWF,YAAcp9G,MAAM8K,KAAKyyG,cAClF,IAAMC,cAAgBxqB,UAAUyqB,eAAez9G,MAAM8K,KAAKwyG,WAAWF,WAAYC,WAGjF,OAFAr9G,MAAM8K,KAAKwyG,WAAWF,WAAaI,cAAc96E,KAE1C86E,eAGExzB,8BAAwB,SAAxBA,sBAAyB5/D,QAASizD,aAAcqgC,kBAAmBnjH,QAC5E,IAAMojH,SAAWvzF,QAAQwzF,uBAAuBvgC,cAE1C2V,UADO5oE,QAAQ+7D,OACE9jD,MACjBntC,MAAQqF,OAAOrF,MACf00F,gBAAkBrvF,OAAOqvF,gBAC/B8zB,kBAAkBjnH,QAAQ,SAACgxB,OACvB,IAAM21F,UAAY31F,MAAMj/B,KACxBm1H,SAASl2F,MAAM21F,UAAY,SAACp3H,GAAM,IAAA63H,QACwB73H,EAAE8kB,KAAhDgzG,eADsBD,QACtBC,eAAgBR,WADMO,QACNP,WAAYC,cADNM,QACMN,cAEpC,GADAO,eAAel0B,iBAAmBk0B,eAAel0B,qBAC7C10F,QAAU4oH,eAAel0B,iBAAiBwzB,WAI1C,OAFAU,eAAel0B,iBAAiBwzB,WAAa31F,MAAM41F,UACrCF,eAAenqB,UAAWhtG,EAAGo3H,UAAW31F,MAAM41F,WAAWh7E,MAG3E,IAAKntC,OAAS4oH,eAAel0B,iBAAiBwzB,WAG1C,OADAU,eAAel0B,iBAAiBwzB,WAAa,KACtCD,eAAenqB,UAAWhtG,EAAGo3H,UAAW31F,MAAM41F,UAAUznH,IAAI,SAAAhO,GAAC,OAAKA,KAAIy6C,MAZnD,IAAA07E,MAAAC,sBAcTV,WAAWF,WAAaE,WAAWF,WAAaG,cAdvC,GAcvB9kG,EAduBslG,MAAA,GAcpBp2H,EAdoBo2H,MAAA,GAcjBp4H,EAdiBo4H,MAAA,GAcdj2H,EAdci2H,MAAA,GAe9B,cAAAz0G,OAAmB,IAAJmP,EAAf,KAAAnP,OAA8B,IAAJ3hB,EAA1B,MAAA2hB,OAA0C,IAAJ3jB,EAAtC,OAAA2jB,OAAmDxhB,GAAK,EAAxD,UAmCCm2H,sBAAgB,SAAhBA,cAAiB93B,MAAS,IAAA+3B,MAAAF,uBACX3hB,SAAS/uD,EAAG+uD,SAASzqG,GAAGgE,IAAI,SAAAhO,GAAC,OAAIu+F,KAAKv+F,KAD3B,GAC5Bw+F,MAD4B83B,MAAA,GACrB73B,MADqB63B,MAAA,GAAAC,MAAAH,uBAET53B,MAAOC,OAAOzwF,IAAI,SAAAhO,GAAC,OAAIA,GAAKA,EAAEgvC,UAFrB,GAGnC,OACIwvD,YACAC,YACA+3B,OAN+BD,MAAA,GAO/BE,OAP+BF,MAAA,KAiF1BG,uBAAyB,SAAzBA,uBAA0Bt4H,EAAGN,EAAGgT,KAAM0xB,SAC/C,IAAMwE,UAAYxE,QAAQ7vB,SAASgkH,oBAC/BC,aAAe,GAInB,OAHI5vF,qBAAqBzrB,WACrBq7G,aAAe5vF,UAAU5oC,EAAGN,EAAGgT,KAAM0xB,UAElCo0F,cAiGEC,oBAAsB,SAAtBA,oBAAuBjpD,QAASgO,QAAW,IAAAk7C,MACpDlpD,QAAQ98D,MAAKgmH,UAAGp1G,OAAHpU,MAAAwpH,MAAAC,0BAAan7C,SAAQ9hE,OAAO,SAAA1b,GAAC,YAAciV,IAAVjV,EAAEkuF,MAAmBt+E,IAAI,SAAC5P,GACpE,IAAMsgE,MAAQtgE,EAAEo9B,OAChB,OACIyI,EAAGy6B,MAAMz6B,EACT16B,EAAGm1D,MAAMn1D,EACTuH,KAAM1S,OAYL44H,oBAAc,SAAdA,YAAevzE,OAAQksC,OAAQliD,QACxC,IAAK,IAAMpuC,OAAOswF,YACP9vF,eAAe5B,KAAK0xF,OAAQtwF,MAC/BokD,OAAO5jB,MAAMxgC,IAAKouC,OAAS,KAAOkiD,OAAOtwF,OAiCxC43H,eAAiB,SAAjBA,eAAkBz0F,QAASo5C,QACpC,IAAMs7C,WAAa10F,QAAQ20F,oBAC3B,OAAID,WACOA,WAAWt7C,OAAQp5C,SAAWmD,WAAYnD,QAAQo4E,cAAcj1E,aAEpEi2C,QAyBEw7C,2BAAqB,SAArBA,mBAAsB50F,QAAS60F,mBACxC,IAAMC,UAAY90F,QAAQ+0F,oBACpBh5B,KAAO/7D,QAAQ+7D,OACfi5B,cAAgBh1F,QAAQg1F,gBACxB7kH,OAAS6vB,QAAQ7vB,SACjBqxF,UAAYxhE,QAAQi1F,WAE1B,OAAQ,IAAK,KAAKzpH,IAAI,SAACpN,MACnB,IAAI82H,KAAO,EACPC,UAAY,EACZjvF,QAAU,EACVkvF,gBACJ,GAAIN,UAAS,GAAA51G,OAAI9gB,KAAJ,gBAAyB+6F,yBAAUh3F,UAAW,CACvD,IAAIkzH,iBAEE3b,SADaob,UAAS,GAAA51G,OAAI9gB,KAAJ,mBAA4BkvE,gCAAiB1rE,SAC3Co+B,QAAQs1F,YAAYjtB,UAAUjqG,MAAQ,EAC9Do3D,KAAOumC,KAAK39F,MACZgF,IAAM+M,OAAM,MAAA+O,OAAO9gB,KAAK+kD,gBACxBoyE,aAAeplH,OAAOolH,aACtBlsH,KAAOwrH,kBACProF,MAAQgpB,KAAKhpB,QACnB2oF,UAjCgB,SAAfK,aAAgBhgE,KAAM36C,SAC/B,IACMskB,MAAQq2B,KAAKssC,eACbt1D,MAAQgpB,KAAKhpB,QACb1nC,MAAQ0nC,MAAM1nC,QACdwV,OAASkyB,MAAMlyB,SAIrB,OAHC6kB,OAAqB/3B,KAAKsoB,IAAI5qB,MAAM,GAAKA,MAAM,IAAMsC,KAAKsoB,IAAIpV,OAAO,GAAKA,OAAO,IAAOO,QA2BrE26G,CAAahgE,KAAMkkD,UAC/B,IAAM+b,gBAAkBjgE,KAAKpsC,YAAYhrB,SAAW60G,aAC9CyiB,YAAclgE,KAAKrlD,SAAS+1B,QAIlC,GAAsB,UAAlB8uF,cAA2B,CAC3B,IAAMW,aAAeF,gBAAkB,EAAIC,YAAcP,UAAY,EACrE3zB,UAAU18F,OAAO6wH,aAAcR,UAAYQ,eAAer7G,OAAOjR,MAAMwjC,aAAa0oF,cACpFL,KAAO1zB,UAAU70D,YACjB0oF,iBAAmBF,WAAaM,gBAAkB,EAAIC,YAAcP,WACpEC,aAAe/rH,KAAKmC,IAAI,SAAA3O,KAAG,OAAI2kG,UAAU3kG,MAAQ44H,gBAAkB,EAAKN,UAAY,UACjF,QAAYtkH,IAARzN,IAAmB,CAC1B,IAAImjD,OACJ,GAAIkvE,gBAAiB,CACjB,IAAM3rF,KAAO0C,MAAM1C,OACnByc,OAAS/Z,MAAMtG,UAAY4D,KAC3BorF,KAAO1oF,MAAMG,YAAc4Z,YAE3B2uE,KAAOC,UAEXC,aAAe/rH,KAAKmC,IAAI,kBAAOiqH,iBAAoBlvE,OAAS,GAAO2uE,KAAO,SAI1EG,iBADAH,KAAOC,WADPjvF,QAAUuvF,gBAAkB,EAAIC,YAAcP,WAG9CC,aAAe/rH,KAAKmC,IAAI,kBAAOiqH,gBAAkB,GAAMP,KAAO,IAGlEC,UAAYE,iBACZnvF,QAAUuvF,gBAAkBC,YAAclgE,KAAKhpB,QAAQ1C,OAAS4rF,YAAcP,UAGlF,OACID,UACAE,0BACAD,oBACAjvF,oBAgBC0vF,oCAA8B,SAA9BA,4BAA+B51F,SAAY,IAAA61F,sBAMhD71F,QAAQ+0F,oBAJR54B,OAFgD05B,sBAEhD15B,OACAE,OAHgDw5B,sBAGhDx5B,OACAC,WAJgDu5B,sBAIhDv5B,WACAC,WALgDs5B,sBAKhDt5B,WAEEu5B,aAAe91F,QAAQ7vB,SAASovC,UAAUjuB,QAC1CvP,aAAeie,QAAQ1xB,OAAO0T,kBAC9B+zG,oBAAsBh0G,aAAa+zG,eAAiB/zG,aAAa+zG,cAAc3zG,IAAI/jB,OAAS+6F,yBAAUj3F,QAC5G,OAAKi6F,SAAWE,QAAU05B,sBAAwBD,cAAgBx5B,aAAenD,yBAAUh3F,WACvFo6F,aAAepD,yBAAUh3F,UzC9bT,WyCicb,MAKE6zH,kCAA4B,SAA5BA,0BAA6Bh2F,SACtC,IAAMi2F,6BAA+BL,oCAA4B51F,SACjE,GAAIi2F,6BACA,OAAOA,6BAHuC,IAAAC,uBAW9Cl2F,QAAQ+0F,oBAJR54B,OAP8C+5B,uBAO9C/5B,OACAE,OAR8C65B,uBAQ9C75B,OACAC,WAT8C45B,uBAS9C55B,WACAC,WAV8C25B,uBAU9C35B,WAEEu5B,aAAe91F,QAAQ7vB,SAASovC,UAAUjuB,QAC1C6kG,gCAAkCzlD,WAAW1wC,QAAQo2F,cAAe,YAAa,QACnFpB,cAAgBh1F,QAAQ7vB,SAASovC,UAAUnhD,KAE/C,IAAK+3H,+BAAiCL,cAAgBx5B,aAAeC,WAAY,CAC7E,IAAMptE,aAAemtE,aAAenD,yBAAUj3F,QAAUi6F,OAASE,OAEjE24B,czCxckB,QyCucgBr7C,4CAA+B35C,QAAQ1xB,OAAQ6gB,cAAxEA,czC1dI,QACA,QyC6djB,OAAO6lG,skBC3dX,oBAQatgD,yBAAc,SAAdA,YAAe10C,QAASrjC,IAAV,QAEnBk7B,OAAO,GAAA3Y,OAAIviB,GAAGm4E,MAAP,KAAA51D,OCdK,SDeZg2D,SAAU,SAAAA,SAAAl9C,MAAc,IAAV1pB,KAAU+nH,2BAAAr+F,KAAA,MACd7nB,OAAS6vB,QAAQ7vB,SACjBmmH,cAAgBnmH,OAAO2/F,SAC7B,GAAIxhG,MAAQgoH,cAAe,CACvB,IAAMv0G,aAAezT,KAAK0T,kBACpB+yG,kBD8Fa,SAAtBwB,oBAAuBzmB,SAAU/tF,cAAiB,IAAAy0G,MAAA5C,uBAEtD3hB,SAAS/uD,EAAG+uD,SAASzqG,EAAGyqG,SAASC,GAAID,SAASE,GAAIJ,MAAOC,MAAOF,MAAMtmG,IAAI,SAAAhO,GAAC,OAAIsyG,SAAStyG,IACrFsyG,SAAStyG,GAAGqR,QAHuC,GACpDstF,OADoDq6B,MAAA,GAC5Cn6B,OAD4Cm6B,MAAA,GACpCC,QADoCD,MAAA,GAC3BE,QAD2BF,MAAA,GAClBG,WADkBH,MAAA,GACNI,WADMJ,MAAA,GACMK,UADNL,MAAA,GAAAM,MAAAlD,uBAKzBz3B,OAAQE,OAAQo6B,QAASC,SAASlrH,IAAI,SAAAhO,GAAC,OAAIukB,aAAavkB,IACtFukB,aAAavkB,GAAG2kB,IAAI/jB,OANmC,GAKpDk+F,WALoDw6B,MAAA,GAKxCv6B,WALwCu6B,MAAA,GAAAC,OAAAnD,uBAQnBz3B,OAAQE,QAAQ7wF,IAAI,SAAAhO,GAAC,OAAIukB,aAAavkB,KAAOukB,aAAavkB,GAAG2kB,IAAItI,SACrGkI,aAAavkB,GAAG2kB,IAAI/jB,QATmC,GAQpD44H,cARoDD,OAAA,GAQrCE,cARqCF,OAAA,GAAAG,OAAAtD,uBAWKz3B,OAAQE,OAAQo6B,QAASC,SACpFlrH,IAAI,SAAAhO,GAAC,OAAIukB,aAAavkB,IAAMukB,aAAavkB,GAAGgI,QAZU,GAc3D,OACI22F,cACAE,cACAs6B,sBACAC,sBACAC,oBACAJ,gBACAC,gBACAp6B,sBACAC,sBACAy6B,4BACAC,4BACAE,YA1BuDD,OAAA,GA2BvDE,YA3BuDF,OAAA,GA4BvDG,aA5BuDH,OAAA,GA6BvDI,aA7BuDJ,OAAA,IC9FrBX,CAAoBD,cAAev0G,cAC7Die,QAAQ+0F,kBAAkBA,mBAC1B/0F,QAAQu3F,uBACRv3F,QAAQw3F,iBAAmBx3F,QAAQy3F,mBAAmBnpH,KAAM6B,OACxD6vB,QAAQg1F,gBAAiBD,mBAC7B/0F,QAAQ03F,gBAAkB13F,QAAQ23F,kBAAkB33F,QAAQw3F,iBAAkBz1G,cAC9E,IAAMzH,OAAS0lB,QAAQ43F,wBAAwB53F,QAAQ03F,gBAAiB13F,QAAQ+0F,oBAC5E/0F,QAAQ1xB,OAAO0T,mBACnBge,QAAQq9E,QAAU/iG,QACjB0lB,QAAQ63F,aAAe73F,QAAQ1lB,OAAOA,UAG/Clc,KAAM,8BAGNy5B,OAAO,GAAA3Y,OAAIviB,GAAGm4E,MAAP,KAAA51D,OClCO,WDmCdg2D,SAAU,SAAAA,SAAA7tD,OAAgB,IAChB8oF,gBADgBkmB,2BAAAhvG,MAAA,MACS8oF,gBACzBt4E,MAAQmI,QAAQ83F,iBAChB5rH,MAAQ8zB,QAAQ9zB,QAChBqkE,cACFC,UAAS,GAAAtxD,OAAK6xF,0BAAiBx8C,sBAAtB,KAAAr1C,OAA+C8gB,QAAQ2wE,UAAUngC,WAC1E3zE,IAAK,kBAETqP,MAAM0rF,YAAYrnB,eACM,IAApB4/B,iBACAt4E,MAAMpuB,KAAN,GAAAyV,OAAcviB,GAAGm4E,MAAjB,KAAA51D,OC9CI,SDgDRhT,MAAM6rH,uBAAuBlgG,MACzB,YA7CI,SAAdmgG,YAAeh4F,SACjB,IAAM5I,MAAQ4I,QAAQ5I,QAClBA,QACA4I,QAAQqmE,OAAOjvE,OACf4I,QAAQxhC,eAAey5H,UAAUC,OAAOnjE,aAAYE,eAAe,IA0CvD+iE,CAAYh4F,WACb,EAAOuwC,eAElBnyE,KAAM,kNElDP,IAAM+5H,gBAAcC,+BAAAC,mBDFL,UCId97H,MAAO,KACPmkB,MACIuxD,aAAc,SAAAA,aAAC9hE,OAAQotG,UAAWv9E,SAC9BA,QAAQo2F,cAAgBjmH,OACxB,IAAMiZ,YAAc4W,QAAQ5W,YACtBkvG,QAAUtlD,kBAAmB5pD,YAAYk2E,iBAC/C,OAAOl2E,YAAYmvG,cAAcD,QAASnoH,YAR/BioH,+BAAAC,gBDHP,QCgBZ97H,MAAO,KACPmkB,MACI0xD,OAAQ,SAAAA,OAAC9jE,KAAM0xB,SACPA,QAAQw4F,cACRx4F,QAAQy4F,YAAYhvH,KAAK6E,MAEzB0xB,QAAQy4F,aAAenqH,UAnBhB+pH,2sFC2CNK,4CAqBjB,SAAAA,UAAapqH,KAAMytF,KAAM5rF,QAA2B,IAAAsI,MAAnBja,aAAmBmK,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,qKAAAgwH,CAAAp1H,KAAAm1H,WAChDjgH,oLAAAmgH,CAAAr1H,KAAAs1H,0BAAAH,WAAAj9H,KAAA8H,OAEA+uE,sBAAsBwmD,kEAAArgH,QAAMof,aAC5Bpf,MAAKnK,KAAKA,MACVmK,MAAKsjF,KAAKA,MACVtjF,MAAKtI,OAAOA,QACZsI,MAAKsgH,MAAMtgH,MAAK2Q,YAAYsmE,aAAe7hF,eAC3C4K,MAAKja,aAAaA,cAClBia,MAAKugH,WACLvgH,MAAKggH,eACLhgH,MAAKqxE,IAAMj8E,cACX4K,MAAKwgH,gBACLxgH,MAAKqmG,0BACLrmG,MAAK29G,cAAgB,KAd2B39G,iYArBjB85F,6SAmD/B,GAAI5pG,UAAO1D,OAAQ,CACf1B,KAAK21H,OAALvwH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACA,IAAMgoG,QAAUptG,KAAKotG,UACfwoB,QAAO,GAAAj6G,OAAM6xF,0BAAiBx8C,sBAAvB,KAAAr1C,OAAgDyxF,QAAQngC,YJuU5C,SAAxB4oD,sBAAyBp5F,SAClC,IAAM9zB,MAAQ8zB,QAAQ9zB,QAChBmtH,YAAcr5F,QAAQ5W,YAAYkwG,WAAW,GAC7C9oD,UAAYxwC,QAAQ2wE,UAAUngC,UACpC,IAAK,IAAM54C,QAAQyhG,YACfntH,MAAMqsB,OAAN,GAAArZ,OAAgB6xF,0BAAiBv8C,uBAAjC,KAAAt1C,OAA2D0Y,MAA3D2hG,0BACK/oD,UAAY,OI5Ub4oD,CAAsB71H,MACtB,IAAM2I,MAAQ3I,KAAK2I,QAenB,OAdAA,MAAMqsB,OAAN,GAAArZ,OAAgB6xF,0BAAiBx8C,qMAAjCilE,IACK7oB,QAAQngC,UAAY,OAGzBY,wBAAW7tE,KAAM40H,eAAgBjsH,MAAMkU,OACnCowD,UAAW2oD,UAEf1kD,+BAAkBlxE,KAAMmxE,0BACpBI,MAAOqkD,QACPM,OAAQ1oB,0BAAiBv8C,yBAEzBklE,aAAc/oB,QAAQ+oB,aACtBC,aAAchpB,QAAQgpB,eAEnBp2H,KAEX,OAAOA,KAAK21H,+CAIZ,IAAMthG,KAAI,GAAA1Y,OAAM6xF,0BAAiBv8C,uBAAvB,KAAAt1C,OFxHI,SEwHJ,KAAAA,OAAiE3b,KAAKotG,UAAUngC,WAC1F,OAAI7nE,UAAI1D,QACJ1B,KAAK2I,QAAQgsH,OAAOtgG,KAApBjvB,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACOpF,MAEJA,KAAK2I,QAAQ/P,IAAIy7B,oEAiExB,OAAIjvB,UAAU1D,QACV1B,KAAKq2H,mBAALjxH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKq2H,iFAIZ,OAAIjxH,UAAkB1D,QAClB1B,KAAKs2H,mBAALlxH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKs2H,yDAmBZ,OAAIlxH,UAAO1D,QACP1B,KAAKu2H,OAALnxH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKu2H,QAAUv2H,KAAK6lB,YAAYsmE,iEAIvC,OAAI/mF,UAAO1D,QACP1B,KAAK60G,cAALzvG,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK60G,oEAKZ,OADA70G,KAAKi1H,eAAgB,EACdj1H,yDAKP,OADAA,KAAKi1H,eAAgB,EACdj1H,KAAK+K,KAAK/K,KAAKk1H,YAAY,kDAWlC,OAAOl1H,KAAK4M,yCAWZ,OAAO5M,KAAKumF,kEAaIloE,UAAWzR,OAAQ6kH,cAAeD,mBAClD,OJ/HqB,SAAhBgF,cAAiBn4G,UAAWzR,OAAQ6kH,cAAegF,kBAC5D,IAAM1rH,KAAOsT,UAAUE,SAAUwI,SAAS,IACpCrb,OAASX,KAAKW,OACdswC,UAAYpvC,OAAOovC,UAErB48C,OAIA69B,iBAJA79B,OACAE,OAGA29B,iBAHA39B,OACAC,WAEA09B,iBAFA19B,WACAC,WACAy9B,iBADAz9B,WAEE+0B,YAAch1B,aAAenD,yBAAUj3F,QAAUm6F,OAASF,OAEhE,OAAOs2B,kBAAiBuC,cAAjBvC,CAAgCxjH,OAAQX,KAAKA,MAChDgjB,QAASiuB,UAAUjuB,QACnBggG,wBACAx6G,KAAMyoC,UAAUzoC,MAAQ,OACxByvC,OAAQhH,UAAUgH,OAClB4rE,QAAS5yE,UAAU4yE,QACnB51H,MAAOggG,aAAepD,yBAAUj3F,QAAUm6F,OAASF,QACpD7tF,KAAKuc,MI4GGkvG,CAAcn4G,UAAWzR,OAAQ6kH,cAAeD,2FAYlCzmH,MACrB,IAAI4/D,WAMJ,OALgB3qE,KAAK+K,OAAO88F,YAGxBl9B,QJ3C2B,SAA1B0pD,wBAA2BtpH,KAAM0rH,iBAAkBhF,eAAkB,IAE1EgC,cAMAgD,iBANAhD,cACAC,cAKA+C,iBALA/C,cACA96B,OAIA69B,iBAJA79B,OACAE,OAGA29B,iBAHA39B,OACAo6B,QAEAuD,iBAFAvD,QACAC,QACAsD,iBADAtD,QAEExoD,WACA+rD,KAAOhoB,SAASzqG,EAChB0yH,KAAOjoB,SAAS/uD,EAUtB,OATIi5C,SACAjuB,QAAQzsC,EAAI0rC,+BAAkB7+D,KAAMmoH,SzC5QvB,UyC4QkCzB,eAA2BkF,KAAMjoB,SAASC,KAAOgoB,KAAMA,MAClGlD,gBAEJ36B,SACAnuB,QAAQnnE,EAAIomE,+BAAkB7+D,KAAMooH,SzChRvB,UyCgRkC1B,eAA2B/iB,SAASE,GAAIF,SAASzqG,IAC3FyyH,KAAMA,MAAOhD,gBAGf/oD,QIsBW0pD,CAAwBtpH,KAAM/K,KAAKwxH,oBAAqBxxH,KAAKyxH,kBAEpE9mD,4DAaIisD,cACX,IAAMjsD,QAAU3qE,KAAK2I,QAChB/P,IADW,GAAA+iB,OACJ6xF,0BAAiBv8C,uBADb,KAAAt1C,OFxTF,SEwTE,KAAAA,OACuD3b,KAAKotG,UAAUngC,YACtF,YAAwB3/D,IAAjBspH,aAA6BjsD,QAAQisD,kBAAsBjsD,oEASnDojC,gBAAiBvvF,cAChC,OJpIyB,SAApB41G,kBAAqBrmB,gBAAiBvvF,aAAci4G,iBAAkBhF,eAC/E,IAAMoF,mBzCjMc,ayCiMOpF,eAA8B1jB,iBAAmBA,gBAExEhV,WAKA09B,iBALA19B,WACA66B,YAIA6C,iBAJA7C,YACAC,YAGA4C,iBAHA5C,YACAC,aAEA2C,iBAFA3C,aACAC,aACA0C,iBADA1C,aAEE+C,UAAYr+H,OAAOqN,KAAK0Y,cAAc9c,OAK5C,OAAOm1H,mBAAmB5uH,IAAI,SAAC8C,MAE3B,OzCjNa,UyCgNE0mH,cAA0B1mH,KAAK4T,OAAS5T,MACzC9C,IAAI,SAAC5P,GACf,IACIgY,MAGI7M,EACAmxD,GACAz2B,EACA0jB,GAPJm1E,YAuCJ,MzC1PS,UyCqNLtF,eACAphH,MAAQhY,EAAE0S,SAKN1S,EAAE,IAAMA,EAAE,IACVmL,EAAIo+C,GAAKvpD,EAAE,GACX6lC,EAAIy2B,GAAKt8D,EAAE,KAEXmL,EAAIo+C,GAAKvpD,EAAE,GACX6lC,EAAIy2B,GAAKt8D,EAAE,KAGf0+H,SAAWh+B,aAAenD,yBAAUj3F,SAChCu/B,IACA0jB,MACAp+C,EAAG6M,MAAMwjH,aACTl/D,GAAItkD,MAAMwjH,eAEV31F,EAAG7tB,MAAMujH,aACThyE,GAAIvxC,MAAMujH,aACVpwH,IACAmxD,QAEK46D,MAAQl/G,MACjB0mH,SAASxwC,IAAMl2E,MAAMymH,cAErBC,UACI74F,EAAG7lC,EAAEu7H,aACLpwH,EAAGnL,EAAEw7H,aACLjyE,GAAIvpD,EAAEy7H,cACNn/D,GAAIt8D,EAAE07H,gBAEDxE,MAAQl3H,EACjB0+H,SAASxwC,IAAMluF,EAAEy+H,YAEdC,aAEZhjH,OAAO,SAAA1b,GAAC,OAAIA,EAAEqJ,SI0EN0yH,CAAkBrmB,gBAAiBvvF,aAAcxe,KAAKwxH,oBAAqBxxH,KAAKyxH,2EAwBvF,OAAO,yEAGYx1B,gBAAiBvM,aAAcnoF,MAAOqiF,QACzD,IAEImmC,mBAFsB/vH,KAAK4M,SAAS8tF,iBAEEuB,kBAC1C8zB,kBAAoBnmC,QAAUmmC,oBAE1B1zB,8BAAsBr8F,KAAM0vF,aAAcqgC,mBACtCxoH,YACA00F,wFAOR,OADAj8F,KAAKs0H,aAAc,EACZt0H,yDAKP,OADAA,KAAKs0H,aAAc,EACZt0H,yEAIPA,KAAKg3H,eJ6EoB,SAApBC,kBAAoBx6F,SAAO,OAAI41F,oCAA4B51F,UAAYA,QAAQ7vB,SAASovC,UAAUnhD,KI7EjFo8H,CAAkBj3H,4DAIxC,OAAOA,KAAKg3H,uDAQZ,OAAOh3H,iDAUP,MAAO,4CAaP,OAJAA,KAAK2I,QAAQ0rF,aACTpnB,UAAS,GAAAtxD,OAAK6xF,0BAAiBx8C,sBAAtB,KAAAr1C,OAA+C3b,KAAKotG,UAAUngC,aAE3E0b,6BAAc3oF,KAAK6zB,SAAS6T,SACrB1nC,mDAUC1G,IAAKyR,MACb,GAAY,OAARzR,IACA,OAAO0G,KAEX,IAAMk3H,SAAWl3H,KAAKm3H,UAGtB,OAFCD,SAAS59H,OAAS49H,SAAS59H,SAC5B49H,SAAS59H,KAAK4M,KAAK6E,MACZ/K,mDAWP,OAAIoF,UAAU1D,QACV1B,KAAKo3H,WAALhyH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKo3H,iFAWQrsH,MACpB,IAAMW,OAAS1L,KAAK+K,OAAOwT,UAAU7S,OAC/B8S,aAAexe,KAAK+K,OAAO0T,kBAC3B+D,oBAHoB60G,sBASlBr3H,KAAKwxH,oBAJLz4B,WALkBs+B,sBAKlBt+B,WACAC,WANkBq+B,sBAMlBr+B,WACAJ,OAPkBy+B,sBAOlBz+B,OACAE,OARkBu+B,sBAQlBv+B,OARkBy3B,MAAA+G,0BAWIv+B,WAAYC,YAAY/wF,IAAI,SAAApN,MAAI,OAAIA,OAAS+6F,yBAAUj3F,UAX3D,GAWnB44H,SAXmBhH,MAAA,GAWTiH,SAXSjH,MAAA,GAoB1B,GARA7kH,OAAO5C,QAAQ,SAACzQ,EAAGN,GACf,IAAMO,KAAOD,EAAEC,KACXkmB,aAAalmB,MAAMsmB,IAAI/jB,OAAS+6F,yBAAUh3F,YAC1C4jB,YAAY,GAAGtc,KAAK5N,MACpBkqB,YAAY,GAAGtc,KAAK6E,KAAKhT,OAI7Bw/H,UAAYC,SAAU,KAAAC,cAAAC,eAChBC,cAAgBn5G,aAAao6E,QAAQ32F,MACrC21H,cAAgBp5G,aAAas6E,QAAQ72F,OAC3Cw1H,cAAAj1G,YAAY,IAAGtc,KAAfqB,MAAAkwH,eAAwB7+B,OAAQE,UAChC4+B,eAAAl1G,YAAY,IAAGtc,KAAfqB,MAAAmwH,gBAAwB3sH,KAAK4sH,eAAgB5sH,KAAK6sH,iBAEtD,OAAOp1G,8DAIP,OAAO,oDAIP,OACI0b,EAAG,EACH16B,EAAG,2DAKP,OACI06B,EAAG,EACH16B,EAAG,6EAyBegf,aAA0B,IAAAiS,KAM5CvM,WACAvJ,OAP+B/R,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC1CyyH,YAAcjrH,OAAOirH,YACrBz7F,QAAUxvB,OAAOwvB,QACvB,IAAKp8B,KAAK+K,OACN,SAIJ,GAAIyX,uBAAuB3kB,oBAAW,CAClC,IAAMygB,QAAUkE,YAAYjE,UAC5B2J,WAAa5J,QAAQ5S,OAAOzD,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OACvCqmB,OAASL,QAAQvT,UAEjBmd,WAAa1F,YAAY,GACzB7D,OAAS6D,YAAYpH,MAAM,EAAGoH,YAAY9gB,QAG9C,IAAMm0E,OAAS71E,KAAKy1H,QACdj3G,aAAexe,KAAK+K,OAAO0T,kBAE3Bq5G,gBAAiBrjG,SAAG9Y,OAAHpU,MAAAktB,KAAAsjG,6BAAaliD,SAAQ9hE,OAAO,SAAC4kD,OAAU,IAClD42D,MAAe52D,MAAf42D,MAAOhpC,IAAQ5tB,MAAR4tB,IAEf,OAAOr+D,WAAWpJ,MAAM,SAACxT,MAAO0H,KAC5B,OAAI1H,SAASkT,cAAgBA,aAAalT,OAAOsT,IAAI/jB,OAAS+6F,yBAAUh3F,WACW,IAAxE+f,OAAO0H,UAAU,SAAAhuB,GAAC,OAAIA,EAAE2a,OAASu8G,MAAM/wG,aAAalT,OAAOrJ,SAC3DqJ,QAAUgmD,gBAAeC,SACkB,IAA3C5yC,OAAO0H,UAAU,SAAAhuB,GAAC,OAAIA,EAAE2a,OAASuzE,UAIpD,OAAOsxC,YAAcC,eAAiBA,eAAe7vH,IAAI,SAAC5P,GACtD,IAAM6P,IAAM0V,MAAMvlB,GAClB,GAAI+jC,QAAS,CACT,IAAM3G,OAASvtB,IAAIutB,QAAUvtB,IAC7B,QAAiBoF,IAAbpF,IAAIuyB,KAAoB,CACxB,IAAMu9F,QAA0C,EAAhCn0H,KAAK8Q,KAAKzM,IAAIuyB,KAAO52B,KAAKkyC,IAC1CtgB,OAAOmG,MAAQo8F,QACfviG,OAAOoG,OAASm8F,QAChBviG,OAAOyI,GAAK85F,QAAU,EACtBviG,OAAOjyB,GAAKw0H,QAAU,YAED1qH,IAAjBmoB,OAAOmG,QACPnG,OAAOmG,MAAQ,QAEGtuB,IAAlBmoB,OAAOoG,SACPpG,OAAOoG,OAAS,GAK5B,OAAO3zB,IAAIutB,QAAUvtB,MACtBqL,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAEqJ,EAAIJ,EAAEI,gGAGKgf,aAAa,IAUxCoiF,aACAqzB,IAXwCC,qBACe11G,YAAYjE,UAAzD45G,eAD8BD,qBACpCntH,KAA8BqtH,iBADMF,qBACdxsH,OACxBuiH,eAAiBjuH,KAAKm0H,gBACtB31G,aAAexe,KAAK+K,OAAO0T,kBAHW45G,uBASxCr4H,KAAKwxH,oBAJL14B,OALwCu/B,uBAKxCv/B,OACAF,OANwCy/B,uBAMxCz/B,OACAI,WAPwCq/B,uBAOxCr/B,WAPwCq/B,uBAQxCt/B,aAIenD,yBAAUj3F,SACzBimG,aAAepmF,aAAao6E,QAAQ32F,MACpCg2H,IAAM,KACCj/B,aAAepD,yBAAUj3F,UAChCimG,aAAepmF,aAAas6E,QAAQ72F,MACpCg2H,IAAM,KAGV,IAAMlqB,mBAsBN,OArBAkgB,eAAenlH,QAAQ,SAACioE,SACpBA,QAAQjoE,QAAQ,SAACwV,SACb,IAAMg6G,SAAWh6G,QAAQixG,MAGzB,GAFc6I,iBAAiBt5G,MAAM,SAAC5W,IAAKnQ,GAAN,OACmD,IAApFogI,eAAe9xG,UAAU,SAAAhuB,GAAC,OAAIigI,SAAS95G,aAAatW,IAAI5P,MAAM2J,SAAW5J,EAAEN,OACpE,CACP,IAAMwgI,eAAiBj6G,QAAQ25G,KACzB58G,IAAMiD,QAAQixG,MACdl/G,SACN,IAAK,IAAM/W,OAAOklB,aAAc,CAC5B,IAAMvc,MAAQuc,aAAallB,KAAK2I,MAChCoO,MAAM/W,KAAO+hB,IAAIpZ,OACbA,QAAU2iG,eACVv0F,MAAM/W,KAAOi/H,gBAGrBxqB,gBAAgB7nG,KAAKmK,aAKzB09F,gBAAiB/tG,KAAK+K,OAAOwT,UAAU7S,8EAa3B8G,KACpB,OAAOm2E,6BAAc3oF,KAAK6zB,SAASi/B,UAAU9yD,KAAK6oF,YAAY90E,OAAO,SAAAhJ,MAAI,QACpEA,OAAkC,IAA3ByH,IAAIvM,QAAQ8E,KAAKw7E,6DAU7B,OAAOsF,QAAQgxB,IAAI78G,KAAKu7G,sGAIxB,IAAItwB,UACEa,QAAU,IAAID,QAAQ,SAACxiE,SACzB4hE,UAAY5hE,UAIhB,OAFArpB,KAAKu7G,uBAAuBr1G,KAAK4lF,SAE1B,WACHb,qEAKJ,IAAMmiB,QAAUptG,KAAKotG,UACrB,OAAO,GAAAzxF,OAAI6xF,0BAAiBt8C,uBAArB,cAAAv1C,OAAwDyxF,QAAQ+oB,aAAhE,QAAAx6G,OACA6xF,0BAAiBt8C,uBADjB,cAAAv1C,OACoDyxF,QAAQgpB,aAD5D,oDAlkBP,QAEQr/G,YAGAnK,UACA7B,kDA4Cc,QAAAqiE,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MACtB,OAAAmrD,qBAAWx4H,KAAQ6hB,8DAcnB,OACIm6B,WACInhD,KAAM,iEAkBIkzE,KAAM0qD,UACxB,OAAOhpD,eAAe1B,KAAM0qD,0DAkB5B,MAAO,qEAoHP,OAAO,mBCzSTplE,cAAOqgB,QAAQrgB,KAEfhkD,kBAAW,SAAXA,SAAYhX,GAAM,IACZo9B,OAAWp9B,EAAXo9B,OACR,OAAoB,OAAbA,OAAOjyB,GAA2B,OAAbiyB,OAAOyI,GAQ1Bw6F,kBAAW,SAAXA,SAAYj8F,SACrB,IAAIq7F,eACI37B,MAAyF1/D,QAAzF0/D,MAAOrjE,UAAkF2D,QAAlF3D,UAAW+8C,OAAuEp5C,QAAvEo5C,OAAQ74B,YAA+DvgB,QAA/DugB,YAAa+xD,gBAAkDtyE,QAAlDsyE,gBAAiB9tE,UAAiCxE,QAAjCwE,UAAWnH,MAAsB2C,QAAtB3C,MAAOy5B,WAAe92B,QAAf82B,WAC5E1/B,MAAQ80D,6BAAc7vD,WAAWs6B,KAAK,QAASnyB,WAC/C03F,oBAAsBtlD,kBAAkBr2B,aACxC47E,SAAWvlE,gBACJ4F,MAAM0/D,qBACNz6F,EAAE,SAAA7lC,GAAC,OAAIA,EAAEo9B,OAAOyI,IAChB16B,EAAE,SAAAnL,GAAC,OAAIA,EAAEo9B,OAAOjyB,IAChBw1D,QAAQ3pD,mBAErByoH,eAAiBjiD,OACbk5B,kBACA+oB,eAAiBjiD,OAAO9hE,OAAO1E,oBAGnC4hH,oBAAYp9F,MAAOiG,OACnB,IAAIq+C,QAAUyQ,YAAY/0D,MAAO,OAAQgiD,OAAOn0E,QAAUm0E,OAAO,GAAG50C,eASpE,OARAk3C,QAAQ/kB,KAAK,QAAS,SAAA/6D,GAAC,OAAIA,IACtBk7D,WAAWwsC,WACZ5nB,QAAUA,QAAQ5kB,aACjB4yB,SAAS5yB,WAAW4yB,UACpBzY,GAAG,MAAOyuB,MAAMmX,8BAErBn7B,QAAQ/kB,KAAK,IAAKwlE,SAASd,iBACVh+F,MAAM,eAAgB,GAChCq+C,SC5CE4jB,mCACTa,Y/CHuB,O+CIvBD,aAAc,aACd17D,UAAW,GACX+b,YAAa,SACbhB,WACInhD,KAAM,SAEV6/F,aACI2Q,YACIxwG,KAAM,SACN60H,WAAY,EAAG,GAAI,GAAI,KAE3BxkB,OACIrwG,KAAM,SACN60H,WAAY,EAAG,EAAG,GAAK,KAE3BtkB,QACIvwG,KAAM,SACN60H,WAAY,EAAG,EAAG,GAAK,MAG/B7gB,sBAAuB,GACvBtC,UACI73D,SACAxW,KACA16B,KACAsrG,eACI91G,MAAO,IAGfu6D,YACI0/B,OAAQ,QACR9M,SAAU,KAEd4oB,iBAAiB,srCCLA8pB,oCAOjB,SAAAA,YAAsB,IAAA3xB,iBAAAhyF,yJAAA4jH,CAAA94H,KAAA64H,WAAA,QAAAzrD,KAAAhoE,UAAA1D,OAANsF,KAAM,IAAA6B,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANrmE,KAAMqmE,MAAAjoE,UAAAioE,MAAA,OAClBn4D,MAAA6jH,+BAAA/4H,MAAAknG,iBAAA8xB,oBAAAH,YAAA3gI,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAAS3U,SACJ6lE,SAAW,IAAIF,qBAFFz3D,qXAPaigH,6RA8B/B,MAAO,qDAqCP,OAAOuD,0EAeM3tH,KAAMymH,kBAAmBh5B,MAAM,IAAAnjF,OAAArV,KACxC61E,UACE4iB,MAAQD,KAAKt6D,EACbw6D,MAAQF,KAAKh1F,EACb6hG,UAAY7M,KAAK9jD,MACjB63D,SAAWvsG,KAAK4M,SAAS2/F,SACvBxT,WAA2By4B,kBAA3Bz4B,WAAYC,WAAew4B,kBAAfx4B,WACdigC,OAASlgC,aAAenD,yBAAUh3F,UAClCs6H,OAASlgC,aAAepD,yBAAUh3F,UAClCtF,IAAM2/H,OAASvqB,SAAS/uD,EAAKu5E,OAASxqB,SAASzqG,EAAI,KACnDmrH,cAAgB7iB,SAAS73D,MACzB0+E,WAAahE,cAAc9jH,MAC3BkT,aAAexe,KAAK+K,OAAO0T,kBAC3B4wG,gBAAkB+D,YAAc50G,aAAa40G,YAAYnxH,MACzD63B,SACA3c,QAqCN,OAnCA04D,OAAS9qE,KAAK9C,IAAI,SAAC5P,EAAGN,GAClB,IAAMohI,IAAM1gC,MAAM6F,cAAcjmG,EAAE6lC,GAAKu6D,MAAM8F,eAAiB,EACxD66B,IAAM1gC,MAAM4F,cAAcjmG,EAAEmL,GAAKk1F,MAAM6F,eAAiB,EAFtC86B,eAGIlK,eAAgB98G,MAAOha,EAAG4J,MAAOlK,IACzDq3H,4BAAe/pB,oBAAWgqB,kCADtB36E,MAHgB2kF,eAGhB3kF,MAAO46E,SAHS+J,eAGT/J,SAGfx1F,MAAMw/F,OAAS5kF,MACf5a,MAAM,gBAAkB,EACxB3c,KAAKwyG,cACLxyG,KAAKyyG,cAAgBN,SACrBnyG,KAAKgzG,kBAEL,IAAMx3D,OACFxF,SACA19B,QACIyI,EAAG7lC,EAAE6lC,aAAaxxB,sBAAoB,KAAOysH,IAC7C31H,EAAGnL,EAAEmL,aAAakJ,sBAAoB,KAAO0sH,KAEjDt/F,YACAy1F,MAAOl3H,EAAEk3H,MACThpC,IAAKluF,EAAEkuF,IACPgzC,MAAOlhI,EAAEkuF,IACT7hE,OAAQrsB,EAAEk3H,MACVpyG,WAIJ,OAFAw7C,MAAM13B,UAAY0vF,uBAAuBt4H,EAAGN,EAAGgT,KAAMsK,QACrDA,OAAKmkH,WAAWnhI,EAAEiB,KAAMq/D,OACjBA,QAIXkd,QAFAA,OAASq7C,eAAelxH,KAAM61E,SAEd9hE,OAAO,SAAC4kD,OAAU,IACtBljC,OAAWkjC,MAAXljC,OACR,OAAQnhB,MAAMmhB,OAAOyI,KAAO5pB,MAAMmhB,OAAOjyB,2CAUzCs1B,WAAW,IACX+8C,OACA4jD,gBACA3/F,MAHWniB,OAAA3X,KAKT4M,OAAS5M,KAAK4M,SAEhB2/F,SAKA3/F,OALA2/F,SACAvvD,YAIApwC,OAJAowC,YACA/b,UAGAr0B,OAHAq0B,UACA07D,aAEA/vF,OAFA+vF,aACAppC,WACA3mD,OADA2mD,WAEE06D,eAAiBjuH,KAAKm0H,gBACtBpmB,gBAAkB/tG,KAAKi0H,iBACvBz1G,aAAexe,KAAK+K,OAAO0T,kBAC3B+5E,KAAOx4F,KAAKw4F,OACZ1yF,KAAOioG,gBAAgB9lG,IAAI,SAAA5P,GAAC,OAAIA,EAAEiB,MAClCkpG,mBAAqBl2B,sBAAsBqwB,aAAc38F,KAAK64B,KAAMjsB,OAAOgwF,aAC3E88B,mBAAqB/wC,6BAAc7vD,WACnCs6F,WAAa7mB,SAAS73D,MAAMppC,MAC5B+jH,gBAAkB7wG,aAAa40G,aAAe50G,aAAa40G,YAAYnxH,MAoD7E,OAlDAjC,KAAKy1H,WACLz1H,KAAKm3H,aACLuC,mBAAmBl7C,QAAQgkB,mBAAmBz/F,KAAK,MAAM,GACzD22H,mBAAmBl7C,QAAQv9C,WAAW,GACtC2nD,YAAY9vD,UAAW,IAAKm1F,eAAgB,MACxC96D,MAAO,SAAAA,MAACnT,QP8GQ,SAAf25E,aAAgB9lG,MAAO4I,SAChC,IAAIm9F,gBACAnkG,OACI89B,WAAkC92B,QAAlC82B,WAAYsmE,kBAAsBp9F,QAAtBo9F,kBACZ1zC,SAA+B5yB,WAA/B4yB,SAAU8M,OAAqB1/B,WAArB0/B,OAAQ8M,SAAaxsC,WAAbwsC,SACtB85B,oBACAlwC,yBAAU91D,MAAMjD,OAAQipG,kBAAkB1mE,OAC1C19B,OAASokG,kBAAkBpkG,OASvBmkG,gBARC75B,SAQiBlsE,MAPAA,MAAM0/B,aACnB6yB,KAAK7a,QAAQ0nB,SACb9M,SAASA,UACTzY,GAAG,MAAO,WACPujD,oBAAYtoC,6BAAc3oF,MAAOy1B,QAAQ,KAKrDw7F,oBAAY2I,gBAAiBnkG,SO/HrBkkG,CAAa35E,OACTuT,sBACAsmE,mBACI1mE,OACI2mE,iBAAkB,EAClBrvC,eAAgB9yE,OAAKoiH,eAAe,iBAExCtkG,QACIqkG,iBAAkBvtB,SAASuC,cAAc91G,WAKzDy8B,OAAQ,SAAAA,OAACuqB,MAAO+wB,QAASh5E,GAKrB,IAAI28C,MAJJmhC,OAASl+D,OAAKqiH,gBAAgBjpD,QAASp5D,OAAK65G,oBAAqBh5B,KAAMzgG,GACvE4f,OAAK89G,QAAQvvH,KAAK2vE,QAClB4jD,gBAAkB,GAAA99G,OAAG6mF,mBAAmB,GAAtB,KAAA7mF,OAA4B7V,KAAK/N,IAAMA,GAAI0J,cAG7D,IAAMw4H,WAAa1tB,SAAS73D,MAAM17C,MAC5BkhI,SAAWrkD,OAAOzqD,KAAK,SAAA/yB,GAAC,OAAiC,OAA7BA,EAAEk3H,MAAMF,uBACL/hH,IAA7BjV,EAAEk3H,MAAMF,mBAGZ36E,MADAulF,WACQA,WAAWlpD,QAASh5E,EAAGk2H,gBAEvBz1B,KAAK9jD,MAAMixD,SAASu0B,UAAYA,SAAS3K,MAAMF,kBAG3Dv1F,MAAQniB,OAAKoiH,aAAarlF,OAC1B/8B,OAAKwiH,WAALxiH,EACIwkF,MAAOxkF,OACPmhB,UAAWknB,MAAMpvB,OACjBosB,wBACA64B,cACA50C,UAAWw4F,gBACXlmE,sBACAz5B,MAAOA,UACPi1E,gBAAiBniG,OAAOmiG,oBAGjC,SAAA12G,GAAC,OAAIA,EAAE,GAAGk3H,MAAMF,kBAAoBh3H,EAAE,GAAGkuF,MAE5CuqC,oBAAoB9wH,KAAK6sE,SAAU7sE,KAAKy1H,SACjCz1H,uDAQG00C,OACV,OACI4kF,OAAQ5kF,MACR+1C,eAAgB,6DAUPvsD,EAAG16B,EAAGoJ,QACnB,IAAIwtH,aAAextH,OAAOwtH,aACpBrvH,KAAO/K,KAAK+K,OAElB,IAAKA,MAASA,MAAQA,KAAK88F,UACvB,OAAO,KAGXuyB,kBAAgC9sH,IAAjB8sH,aAA6BA,aAAep6H,KAAK4M,SAASiiG,sBACzE,IAAMl2C,MAAQ34D,KAAK6sE,SAASzhD,KAAK8S,EAAG16B,EAAG42H,cACjCtxG,WAAaqkD,WAAWxU,MAAO,OAAQ,OAAQ,UAErD,GAAIA,MAAO,KAAA0hE,iBACgB1hE,MAAM5tD,KAAKA,KAA1BwkH,MADD8K,iBACC9K,MAAOhpC,IADR8zC,iBACQ9zC,IAEf,OACI1tD,GAFgB74B,KAAKs6H,uBAAuB/K,MAAOhpC,KAGnDz9D,aACIoV,EAAGpV,WAAWoV,EACd16B,EAAGslB,WAAWtlB,EACdo4B,MAAO,EACPC,OAAQ,IAEZ0+F,QAASv6H,KAAK64B,MAGtB,OAAO,uDAlPP,MAAO,6DAkBP,OAAOkjE,sFAYWhuB,KAAM0qD,UACxB,IAAM7rH,OAASuoH,qBAAUH,cAAcjnD,KAAM0qD,UACvClsB,SAAW3/F,OAAO2/F,SAClBvwD,UAAYpvC,OAAOovC,UACnBo3E,WAAa7mB,SAAS73D,OAAS63D,SAAS73D,MAAMppC,MAKpD,OAHI8nH,aAAep3E,UAAUjuB,UACzBiuB,UAAUjuB,QAAUqlG,YAEjBxmH,qEAYP,OAAO,0jBChGf,IAAM0sD,cAAOoa,QAAQpa,KAsCNkhE,cAhC6B,SAAXA,SAAY34G,QACzC,IAAIi2G,eACI37B,MAAyFt6E,OAAzFs6E,MAAOrjE,UAAkFjX,OAAlFiX,UAAW+8C,OAAuEh0D,OAAvEg0D,OAAQ/7C,MAA+DjY,OAA/DiY,MAAOy5B,WAAwD1xC,OAAxD0xC,WAAYtyB,UAA4Cpf,OAA5Cof,UAAW8tE,gBAAiCltF,OAAjCktF,gBAAiB/xD,YAAgBn7B,OAAhBm7B,YAEjEy9E,WAAyBlnE,WAAjC0/B,OAAoB9M,SAAa5yB,WAAb4yB,SACtBtyD,MAAQ80D,6BAAc7vD,WACtB6/F,oBAAsBtlD,kBAAkBr2B,aACxC6V,UAAYh/B,MAAMi/B,UAAU,QAAQ/nD,KAAK8qE,OAAOn0E,QAAUm0E,OAAO,GAAG50C,eAPtBsvF,MAAAmK,wBAQX,QAAS,UAAUzyH,IAAI,SAAAhO,GAAC,OAAIq/D,gBAAOL,MAAM0/D,qBACjEz6F,EAAE,SAAA7lC,GAAC,OAAIA,EAAE4B,GAAGikC,IACZo2B,GAAG,SAAAj8D,GAAC,OAAIA,EAAE4B,GAAGuJ,IACbmxD,GAAG,SAAAt8D,GAAC,OAAIA,EAAE4B,GAAG06D,KACbqE,QAAQ,SAAA3gE,GAAC,OAAe,OAAXA,EAAE4B,GAAGuJ,MAZiB,GAQ7Cm3H,cAR6CpK,MAAA,GAQ9BqK,eAR8BrK,MAAA,GAepDuH,eAAiBjiD,OACjBhiD,MAAMu/B,KAAK,QAASnyB,WAChB8tE,kBACA+oB,eAAiBjiD,OAAO9hE,OAAO,SAAA1b,GAAC,OAAmB,OAAfA,EAAEo9B,OAAOjyB,KAEjD,IAAMq3H,eAAiBhoE,UAAUM,QAAQn+B,OAAO,QAAQo+B,KAAK,IAAKunE,cAAc7C,iBAChFjlE,UAAUjpD,MAAMixH,gBAAgBtnE,aAAa6yB,KAAK7a,QAAQkvD,aACzCt0C,SAASA,UACTzY,GAAG,MAAOyuB,MAAMmX,6BAChBlgD,KAAK,IAAKwnE,eAAe9C,iBACzBrwF,KAAK,SAAUpvC,GACZ,IAAM8/E,QAAUwQ,6BAAc3oF,MAC9Bm4E,QAAQ/kB,KAAK,QAAS/6D,GACtBI,OAAOqN,KAAKg0B,OAAOhxB,QAAQ,SAAAxP,KAAG,OAAI6+E,QAAQr+C,MAAMxgC,IAAKwgC,MAAMxgC,irDCP9DwhI,4qBAAkBjC,mTAwBV9tH,KAAMymH,kBAAmBhzG,cAC9C,IAAMmsD,QAAUowD,SAAAC,oBAAAF,UAAAjhI,WAAA,0BAAAmG,MAAA9H,KAAA8H,KAA8B+K,KAAMyT,cAQpD,OAPCkwF,SAAS/uD,EAAG+uD,SAASzqG,GAAG6E,QAAQ,SAACjO,MACc22H,kBADL,GAAA71G,OAC3B9gB,KAD2B,gBAErB+6F,yBAAUj3F,cAA6B2O,IAAlBq9D,QAAQ9vE,QAC3C8vE,QAAQ9vE,MAAM,GAAKgJ,KAAK4Q,IAAIk2D,QAAQ9vE,MAAM,GAAI,GAC9C8vE,QAAQ9vE,MAAM,GAAKgJ,KAAK6Q,IAAI,EAAGi2D,QAAQ9vE,MAAM,OAG9C8vE,sDAQP,OAAO6vD,sEAUMzvH,KAAMymH,kBAAmBh5B,MAAM,IAAAtjF,MAAAlV,KACxC61E,UACE47C,cAAgBzxH,KAAKyxH,gBACrBpsB,UAAY7M,KAAK9jD,MACjB9nC,OAAS5M,KAAK4M,SAEdwiH,cADWxiH,OAAO2/F,SACO73D,MACzB0+E,WAAahE,cAAc9jH,MAC3BkT,aAAexe,KAAK+K,OAAO0T,kBAC3B4wG,gBAAkB+D,YAAc50G,aAAa40G,YAAYnxH,MACvD22F,OAA4B44B,kBAA5B54B,OAAQE,OAAoB04B,kBAApB14B,OAAQq6B,QAAY3B,kBAAZ2B,QAVoB8H,eAczC3K,sBAAc93B,MAFbC,MAZwCwiC,eAYxCxiC,MACAC,MAbwCuiC,eAaxCviC,MAEEwiC,YAActuH,OAAOgkH,oBACrBqI,OAASz6G,aAAao6E,SAAWp6E,aAAao6E,QAAQh6E,IAAI/jB,OAAS+6F,yBAAUh3F,UAC7Es6H,OAAS16G,aAAas6E,SAAWt6E,aAAas6E,QAAQl6E,IAAI/jB,OAAS+6F,yBAAUh3F,UAC7EtF,IAAM2/H,OAAS,IAAOC,OAAS,IAAM,KACrCiC,QAAUziC,MAAM3hF,SAAS,GACzBqkH,QAAUD,QAAU,EAAIziC,MAAM4F,cAAc,GAAK5F,MAAM4F,cAAc68B,SA4C3E,OA3CAtlD,OAAS9qE,KAAK9C,IAAI,SAAC5P,EAAGN,GAClB,IAAMohI,IAAM1gC,MAAM6F,cAAcjmG,EAAE6lC,GAAKu6D,MAAM8F,eAAiB,EACxD66B,IAAM1gC,MAAM4F,cAAcjmG,EAAEmL,GAC5B63H,KAAQlI,SlD5GL,UkD4GgB1B,cAA2B/4B,MAAM4F,cAAcjmG,EAAEs8D,IAAMymE,QAHxD/B,eAIIlK,eAAgB98G,MAAOha,EAAG4J,MAAOlK,IACzDq3H,4BAAe/pB,oBAAWgqB,kCADtB36E,MAJgB2kF,eAIhB3kF,MAAO46E,SAJS+J,eAIT/J,SAETx1F,SACA3c,QACN2c,MAAM4kB,KAAOhK,MAEbv3B,KAAKwyG,cACLxyG,KAAKyyG,cAAgBN,SACrBnyG,KAAKgzG,kBACL,IAAMmL,SAAWjjI,EAAEmL,aAAakJ,sBAC1B6uH,UAAYljI,EAAEs8D,cAAcjoD,sBAC5BisD,OACFxF,OACIj1B,EAAGi7F,IACH31H,EAAG83H,SAAW,KAAOF,QACrBzmE,GAAI4mE,UAAY,KAAOH,SAE3B3lG,QACIyI,EAAGi7F,IACH31H,EAAG83H,SAAW,KAAOlC,IACrBzkE,GAAI4mE,UAAY,KAAOF,MAE3B90C,IAAKluF,EAAEkuF,IACPgpC,MAAOl3H,EAAEk3H,MACT7qG,OAAQrsB,EAAEk3H,MACVgK,MAAOlhI,EAAEkuF,IACTtlD,UAAWi6F,YAAcA,YAAY7iI,EAAGN,EAAGgT,KAAMmK,OAAQ,GACzD4kB,YACA3c,WAIJ,OAFAw7C,MAAM13B,UAAY0vF,uBAAuBt4H,EAAGN,EAAGgT,KAAMmK,OACrDA,MAAKskH,WAAWnhI,EAAEiB,KAAMq/D,OACjBA,QAGXkd,QADAA,OAASq7C,eAAelxH,KAAM61E,SACd9hE,OAAO,SAAC4kD,OACpB,IAAMljC,OAASkjC,MAAMljC,OACrB,OAAQnhB,MAAMmhB,OAAOyI,KAAO5pB,MAAMmhB,OAAOjyB,yEAM7CxD,KAAKg3H,eAAiBvE,kCAA0BzyH,wDAQtC00C,OACV,OACIgK,KAAMhK,+DA5HV,OAAOqnD,kFAWP,MAAO,wBChDFA,kCACTa,YnDHuB,OmDIvBD,aAAc,YACdh6D,SAAWF,IAAK,EAAGovB,OAAQ,EAAG9rB,KAAM,EAAGC,MAAO,GAC9C/E,UAAW,GACXu6F,eAAgB,GAChB9gC,aACI2Q,YACIxwG,KAAM,OACN60H,WAAY,EAAG,GAAI,GAAI,KAE3BxkB,OACIrwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,KAE3BtkB,QACIvwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,MAG/B7zF,OAAQ,IACRD,MAAO,IACProB,KAAM,GACN4gE,aAAc,EACdrd,SAAU,EACVsd,UAAW,EACX1d,WAAY,EACZE,SAAU,IACV1d,QAAS,UAAW,OAAQ,QAAS,SAAU,SAAU,UACzD8C,WACInhD,KAAM,YAEV0xG,UACIkvB,gBACIziI,MAAO,OAEX0iI,mBACI1iI,MAAO,SAEXg6G,OACIh6G,MAAO,KAEXwuE,QACIxuE,MAAO,KAEXm8C,SACIn8C,MAAO,KAEX07C,OACI17C,MAAO,KAEX6oG,OACI7oG,MAAO,KAEXyhC,MACIzhC,MAAO,MAGf2iI,iBAAkB,GAClBpoE,YACI0/B,OAAQ,QACR9M,SAAU,KAEdy1C,QACIvwB,WACIpqE,UAAS,GAAAtlB,OnDnEM,OmDmEN,yBAEbkgH,SACI56F,UAAS,GAAAtlB,OnDtEM,OmDsEN,uBAEbmgH,UACI76F,UAAS,GAAAtlB,OnDzEM,OmDyEN,8uDCvDrB,IAAMo4D,QAAML,QAAQK,IACdre,QAAMge,QAAQhe,IAWCqmE,kCAEjB,SAAAA,SAAahxH,KAAMytF,KAAM5rF,OAAQ3R,cAAc,IAAAia,MAAA,wJAAA8mH,CAAAh8H,KAAA+7H,WAC3C7mH,MAAA+mH,8BAAAj8H,KAAAk8H,mBAAAH,UAAA7jI,KAAA8H,KAAM+K,KAAMytF,KAAM5rF,OAAQ3R,gBACrBkhI,gBAFsCjnH,kXAFbigH,yRAoC9B,MAAO,qEAWS92G,UAAWzR,QAAQ,IAAAyI,OAAArV,KAC/Bo8H,WACEC,YAEF3lE,WAKA9pD,OALA8pD,WACAE,SAIAhqD,OAJAgqD,SACA21C,SAGA3/F,OAHA2/F,SACAh5F,KAEA3G,OAFA2G,KACAioH,eACA5uH,OADA4uH,eAEEc,SAAWt8H,KAAKi0H,qBAVasI,iBC0CZ,SAAlBC,gBAAmBjwB,SAAU/tF,cAAiB,IAAA+xG,MAAAkM,0BACGpuB,MAAOC,OAAQE,MAAOD,MACvEtmG,IAAI,SAAAhO,GAAC,OAAIsyG,SAAStyG,GAAGqR,QAFyB,GAChDoxH,WADgDnM,MAAA,GACpCoM,YADoCpM,MAAA,GACvB6C,WADuB7C,MAAA,GAAAC,MAAAiM,0BAGTC,WAHSnM,MAAA,GAGcoM,aAChE10H,IAAI,SAAChO,GACF,IAAM8zE,KAAOvvD,aAAavkB,GAC1B,OAAI8zE,MAAQA,KAAKnvD,IAAI/jB,OAAS+6F,yBAAUj3F,QAC7BovE,KAAK9rE,MAET,OATwC,GAYvD,OACI26H,WAbmDpM,MAAA,GAcnDqM,UAdmDrM,MAAA,GAenDsM,YAfmDtM,MAAA,GAgBnDuM,WALe5vD,WAAW3uD,aAAc40G,WAAY,UDpChDoJ,CAAgBjwB,SANCvsG,KAAK+K,OAAO0T,mBAE7Bm+G,WAb+BL,iBAa/BK,WACAC,UAd+BN,iBAc/BM,UACAC,YAf+BP,iBAe/BO,YACAC,WAhB+BR,iBAgB/BQ,WAEEC,QAAU3+G,UAAUE,UACpBxT,KAAOiyH,QAAQjyH,KACfuc,KAAO01G,QAAQ11G,KAErBtnB,KAAKm8H,gBAELG,SAASxzH,QAAQ,SAAC7O,EAAGgI,OACjBoT,OAAK8mH,aAAaliI,EAAEgjI,MAAQhjI,EAAGgI,OAC/Bo6H,SAASpiI,EAAEgI,OAAShI,IAKxBmiI,QAAUroD,UACLrd,WAAYA,WAAa,IAAO7yD,KAAKkyC,IACrC6gB,SAAS/yD,KAAKkyC,GAAK6gB,SAAW,KAC9B59D,MAAM,SAAAX,GAAC,OAAIA,EAAEukI,aAAe,IAC5B90F,WAAW,MAEhBv0B,KAAK7R,QAAUo7H,aAAeV,QAAQ7oH,KAAK,SAACpZ,EAAGiJ,GAC3C,MpDjGa,QoDiGTmQ,KACOpZ,EAAE2iI,aAAe15H,EAAE05H,aACrB15H,EAAE05H,aAAe3iI,EAAE2iI,eAEhC,IAAM9E,QAAUjtH,KAAK+H,OAAO,SAACC,IAAK1a,GAAN,OAAY0a,KAAO1a,EAAEwkI,YAAc,IAAI,GAgBnE,OAbAT,QAAUA,QAAQrxH,MAAM9C,IAAI,SAAC5P,EAAGN,GAW5B,OAVAM,EAAE6kI,iBAAmBnyH,KAAKhT,GAAG+kI,cAAgBtB,eAC7CnjI,EAAEi+D,YAAc1pD,OAAO0pD,YACvBj+D,EAAE6hI,SAAWnvH,KAAKhT,GAAGglI,YACrB1kI,EAAE8kI,SAAWpyH,KAAKhT,GAAG6kI,YACrBvkI,EAAE2/H,QAAUA,QACZ3/H,EAAE4kI,IAAM31G,KAAKvvB,GACbM,EAAEkhI,MAAQlhI,EAAE4kI,IACZ5kI,EAAEqsB,OAAS3Z,KAAKhT,GAChBM,EAAE+kI,cAAgB/nH,OAAK8mH,aAAa9jI,EAAE4kI,KAAO5nH,OAAK8mH,aAAa9jI,EAAE4kI,KAAK,GC3FlD,SAAnBI,iBAAoBf,SAAUgB,UAAW1wH,QAClD,IAAM2wH,QAAUjB,SAASgB,UAAY,GAC/BE,QAAUlB,SAASgB,WAEzB,OAAIC,SAAWC,SAEP9mE,WAAY6mE,QAAQ3mE,SACpBA,SAAU4mE,QAAQ9mE,YAEd8mE,SAOR9mE,WAAY9pD,OAAO8pD,WAAa7yD,KAAKkyC,GAAK,EAAI,IAC9C6gB,SAAUhqD,OAAO8pD,WAAa7yD,KAAKkyC,GAAK,EAAI,MANxC2gB,WAAY9pD,OAAOgqD,SAAW/yD,KAAKkyC,GAAK,EAAI,IAC5C6gB,SAAUhqD,OAAOgqD,SAAW/yD,KAAKkyC,GAAK,EAAI,KDgFtCsnF,CAAiBhB,SAAUhkI,EAAE4J,MAAO2K,QACjCvU,gEAYI0S,MACf,OAAOA,6EAUcA,MAErB,OACIy8D,OAAQoC,gCAAmB7+D,OpDtJL,iGoDkKbmzB,EAAG16B,GAAgB,IAAboJ,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC1B4lG,UAAYriB,6BAAc/7E,OAAO2tE,MAAM78B,QAAQ3yC,OAAO,GAC5D,GAAIukB,eAAe07E,WAAY,KAAAyyB,iBACLzyB,UAAU34F,MAAxBtH,KADmB0yH,iBACnB1yH,KAAMkyH,IADaQ,iBACbR,IACd,OACIpkG,GAAI74B,KAAKs6H,uBAAuBvvH,KAAMkyH,KACtC1C,QAASv6H,KAAK64B,MAGtB,OAAO,2EAUarmB,KACpB,OAAOm2E,6BAAc3oF,KAAK6zB,SAASi/B,UAAU9yD,KAAK6oF,YAAY90E,OAAO,SAAA1b,GAAC,OAAkC,IAA9Bma,IAAIvM,QAAQ5N,EAAEga,MAAM4qH,6CAU1FnkG,WAAW,IAAAnhB,OAAA3X,KAAA09H,kBAIX19H,KAAKkgG,cAFLrkE,OAFW6hG,kBAEX7hG,OACAD,MAHW8hG,kBAGX9hG,MAHWuuE,aAiBZnqG,KAAK4M,SAXJgwF,YANWuN,aAMXvN,YACAD,aAPWwN,aAOXxN,aACA6+B,eARWrxB,aAQXqxB,eACAllE,YATW6zC,aASX7zC,YACAE,YAVW2zC,aAUX3zC,YACA2d,aAXWg2B,aAWXh2B,aACArd,SAZWqzC,aAYXrzC,SACAsd,UAbW+1B,aAaX/1B,UACAzxC,QAdWwnE,aAcXxnE,QACA4wB,WAfW42C,aAeX52C,WACAooE,iBAhBWxxB,aAgBXwxB,iBAEEp2B,SAAWvlG,KAAKw4F,OAAO/9D,KACvBszE,gBAAkB/tG,KAAKi0H,iBACvB0J,YAAc9hG,OAAS8G,QAAQF,IAAME,QAAQkvB,OAC7C+rE,WAAahiG,MAAQ+G,QAAQoD,KAAOpD,QAAQqD,MAC5C63F,cAAgBvxD,sBAAsBqwB,aAAc38F,KAAK64B,KAAM+jE,aAE/Dr7F,MCpMgB,SAAjBu8H,eAAkBliG,MAAOC,OAAQjvB,QAAW,IAEjD4uH,eAIA5uH,OAJA4uH,eACAllE,YAGA1pD,OAHA0pD,YACAE,YAEA5pD,OAFA4pD,YACAmlE,iBACA/uH,OADA+uH,iBAGJ,OAAQ93H,KAAK6Q,IAAK4hD,YAAcqlE,kBAAoB,EAAIH,gBAAiBhlE,aAAe3yD,KAAK4Q,IAAIonB,OAC7FD,OAAS,GD2LKkiG,CAAeF,WAAYD,aACrCnC,8BACAllE,wBACAE,wBACAmlE,oCAEEt2B,UAAYrlG,KAAKw4F,OAAO9jD,MACxBqpF,cAAgBvnE,aAAe3yD,KAAK4Q,IAAIkpH,YAAaC,YAAc,EACnEI,aAAeh+H,KAAK+W,SAASywD,OAC7By2D,iBAAmB,SAAnBA,iBAAmB5lI,GAAC,OChOL,SAAhB6lI,cAAiB7rH,MAAO9Q,MAAOwV,OAAQgnH,cAAex4B,UAC/D,IAAI44B,iBAAmB,EAEnBjB,iBAEA7qH,MAFA6qH,iBACAlF,QACA3lH,MADA2lH,QAEEoG,eAAiB74B,SAASxuF,SAC1BsnH,eAAiB94B,SAASM,QAAQmyB,UAAYoG,eAAiB74B,SAAShkG,QAAQ,GAAKgkG,SAAS34F,SAAS5T,OAI7G,OAFAmlI,mBAAqB58H,MAAM,GAAKA,MAAM,KAAOwV,OAAO,GAAKA,OAAO,KAC9CxV,MAAM,IAAM27H,iBAAmBnmH,OAAO,IAAMonH,kBAC1CJ,eAAiBM,eDqNHH,CAAc7lI,EAAGkJ,MAAOy8H,aAAcD,cAAex4B,WAE7E3hF,KAAO8xC,UAEJY,YAAYA,YAAczyD,KAAK4Q,IAAIkpH,YAAc,EAAGC,WAAa,EAAGtnE,aAAe,GACnF6d,aAAaA,cACbrd,SAASA,UACTsd,UAAUA,WACnBp0E,KAAKs+H,YAAcV,WACnB59H,KAAKu+H,aAAeZ,YAEpB,IAAM3oF,EAAI4zC,YAAYD,6BAAc7vD,WAAY,KAAM,GAAjC,GAAAnd,OAAwCkiH,cAAc,GAAtD,WACZr/C,QADC,GAAA7iE,OACUkiH,cAAc,GADxB,WACoC,GACrCzqE,KAAK,YAFJ,aAAAz3C,OAE8BiiH,WAAa,EAF3C,KAAAjiH,OAEgDgiH,YAAc,EAF9D,MAyBJa,oBACFC,YAAc,EAqBlB,OAPA71C,YAAY5zC,EAAG,IAAK+4D,gBAAT,GAAApyF,OAA6BkiH,cAAc,KAE9CpoG,OAvCM,SAARwwD,MAAS79D,MACXwgE,YAAYxgE,KAAM,OAAQ,SAAC/vB,EAAGN,GAAJ,QACtBsa,MAAOha,EACP4J,MAAOlK,EACP2mI,MAAO96G,KACPzG,MACIyyG,cAAevqB,UAAUmmB,YAAYnzH,EAAE6hI,UACvCvK,cACAQ,sBAPG,GAAAx0G,OASJkiH,cAAc,GATV,UAUM/jG,MAAM,OAAQ,SAAAzhC,GAAC,OAAIgtG,UAAUM,SAASttG,EAAEga,MAAM6nH,YAC9C3mE,aACA4yB,SAAS5yB,WAAW4yB,UACpBzY,GAAG,MAAO/1D,OAAK27F,6BACfhsB,UAAU,IAAK,mBAAAla,KAAAhoE,UAAA1D,OAAImgB,OAAJ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAIxrD,OAAJwrD,MAAAjoE,UAAAioE,MAAA,OClMpB,SAAXsxD,SAAY/6G,KAAMq6G,iBAAkB76H,GAAM,IAC3CiP,MAAUjP,EAAE,GAAZiP,MACFmkD,YAAcynE,iBAAiB5rH,OAGrC,OAFAA,MAAMmkD,YAAcA,YACpBnkD,MAAM+qH,cAAc5mE,YAAcnkD,MAAM+qH,cAAc5mE,aAAeA,YAC9D,SAAUv9D,GACb,OAAO2qB,KAAKssC,4BAAe79C,MAAM+qH,cAAe/qH,MAApC69C,CAA2Cj3D,KD4LJ0lI,CAAS/6G,KAAMq6G,iBAAkBp8G,UAC/DuxC,KAAK,QAAS,SAAC/6D,EAAGN,GACf,IAAM6mI,gBAAkBjO,uBAAuBt4H,EAAGN,EAAGg2G,gBAAiBp2F,QACtE,SAAAgE,OAAUkiH,cAAc,GAAxB,UAAAliH,OAAmCkiH,cAAc,GAAjD,UAAAliH,OAA4DtjB,EAAE4J,MAA9D,0CAAA0Z,OACMijH,oBAqBtB3rE,KAhBU,SAAZ4rE,UAAaz2G,KAAM/vB,GACrB,IAAIymI,QAAUN,iBAAiBC,aACzBM,eAAiBN,YAClBK,QAEMA,QAAQA,QAAQp9H,OAAS,GAAG2Q,MAAMpQ,QAAU5J,EAAE4J,MAAQ,EAC7D68H,QAAQ54H,MAAOkiB,UAAM/V,MAAOha,IAE5BomI,cAJAK,UAAa12G,UAAM/V,MAAOha,IAM9BmmI,iBAAiBO,gBAAkBD,WAQtB1rE,KAAK,QAAS,SAAC/6D,EAAGN,GAAJ,SAAA4jB,OAAakiH,cAAc,GAA3B,KAAAliH,OAAiCkiH,cAAc,GAA/C,KAAAliH,OAAqD5jB,KC3MhE,SAAfinI,aAAgBR,iBAAkBjrE,WAAY0qE,iBAAkBr6G,MACrE46G,iBAAiB98H,OAAS,GAC1B88H,iBAAiB11H,QAAQ,SAACm2H,oBACtB,IAAMvoE,WAAauoE,mBAAmB,GAAG5sH,MAAMqkD,WACzCE,SAAWqoE,mBAAmBA,mBAAmBv9H,OAAS,GAAG2Q,MAAMukD,SACnEnlD,IAAiB,EAAV5N,KAAKkyC,GAAS2gB,YAA0B,EAAV7yD,KAAKkyC,GAAU2gB,WAAaE,UAEvEqoE,mBAAmBn2H,QAAQ,SAAC7O,GAAM,IACtBmuB,KAAgBnuB,EAAhBmuB,KAAM/V,MAAUpY,EAAVoY,MAEd+V,KAAKqf,KAAK,WACN,IAAMy3F,MAAQv2C,6BAAc3oF,MAC5Bk/H,MAAMpsE,UAAU,QACCS,aACA4yB,SAAS5yB,WAAW4yB,UACpBmB,UAAU,IAAK,kBAAM,SAAUruF,GAC5B,IAAMu9D,YAAcynE,iBAAiB5rH,OAErC,OADAA,MAAMmkD,YAAcA,YACb5yC,KAAKssC,4BAAe79C,OACvBqkD,WAAYjlD,IACZmlD,SAAUnlD,IACV+kD,yBAHQtG,CAITj3D,OAENyuC,SACjBw3F,MAAMx3F,eDmLlBs3F,CAAaR,iBAAkBjrE,WAAY0qE,iBAAkBr6G,MACtD5jB,+EAUewiB,aACtB,IAAKxiB,KAAK+K,OACN,SAEJ,IAAMmd,WAAa1F,YAAY,GACzB7D,OAAS6D,YAAYpH,MAAM,EAAGoH,YAAY9gB,QAC1Cy9H,UAAYx2C,6BAAc3oF,KAAK6zB,SAASi/B,UAAU,QAAQ/nD,OAC1DyT,aAAexe,KAAK+K,OAAO0T,kBAc3B2gH,YAZeD,UAAUprH,OAAO,SAACsrH,OACnC,IAAMt0H,KAAOs0H,MAAMhtH,MAAMtH,KACnBkyH,IAAMoC,MAAMhtH,MAAM4qH,IACxB,OAAO/0G,WAAWpJ,MAAM,SAACxT,MAAO0H,KAC5B,OAAI1H,SAASkT,cAAgBA,aAAalT,OAAOsT,IAAI/jB,OAAS+6F,yBAAUh3F,WACU,IAAvE+f,OAAO0H,UAAU,SAAAhuB,GAAC,OAAIA,EAAE2a,OAASjI,KAAKyT,aAAalT,OAAOrJ,SAC1DqJ,QAAUgmD,gBAAeC,SACkB,IAA3C5yC,OAAO0H,UAAU,SAAAhuB,GAAC,OAAIA,EAAE2a,OAASiqH,UAKnB,GACjC,GAAImC,YAAa,CACb,IAAM3pD,SAAW2pD,YAAYV,MAAMjpD,SAAS2pD,YAAY/sH,OACxD,QACI6rB,EAAGu3C,SAAS,GAAKz1E,KAAKs+H,YAAc,EACpC96H,EAAGiyE,SAAS,GAAKz1E,KAAKu+H,aAAe,EACrC3iG,MAAO,EACPC,OAAQ,IAGhB,iEAIA,OAAO,GAAAlgB,OAAI6xF,0BAAiBt8C,uBAArB,2EApSP,OAAO6qC,iFAWP,MAAO,sBEaAujC,cAvDE,SAAXA,SAAYxmG,UAAW/tB,KAAM6B,OAAQgzB,YACvC,IAAMizB,UAAY81B,6BAAc7vD,WAAWg6B,UAAU,KAAK/nD,KAAKA,MAEzDw0H,eAAiB1sE,UAAUM,QAAQn+B,OAAO,KAC3CyS,KAAK,SAAUnpB,SACZorE,wBAAS1pF,KAAMse,QAAQ60C,SAE1BvpD,MAAMipD,WACL/4B,MAAQuwD,qCAAsB1B,6BAAc7vD,WAAYlsB,OAAOq0B,WAC/D3F,SAAWj6B,SAASy4B,MAAMwB,SAAU,IA2C1C,OAzCAsE,WAAWzF,SAASL,OACpBylG,eAAe93F,KAAK,SAAUnpB,SAC1B,IAGIkhH,cAHErnD,QAAUwQ,6BAAc3oF,MACtBy1B,OAAsDnX,QAAtDmX,OAAQp1B,KAA8Cie,QAA9Cje,KAAMq0C,MAAwCp2B,QAAxCo2B,MAAO+qF,WAAiCnhH,QAAjCmhH,WAAmBC,UAAcphH,QAArBwb,MACnC6lG,WAAarhH,QAAQqhH,WAE3B,GAAIH,cAAgBG,WAAW3mI,MAAO,CAClC,IACIisC,KADE26F,kBAAoBD,WAAWh9F,QADHk9F,sBAGRjgG,WAAWO,WAAW7hB,QAAQje,MAAhDu7B,MAH0BikG,sBAG1BjkG,MAAOC,OAHmBgkG,sBAGnBhkG,OACTikG,aAAel3C,YAAYzQ,QAAS,QAAS,IAG/ClzC,KADe,QAAfw6F,WACO7jG,MACe,UAAf6jG,WACA,EAEA7jG,MAAQ,EAGnB8tD,wBAASo2C,aAAalvG,QAClBsN,EAAGzI,OAAOyI,EAAI+G,KAAO26F,kBAAoB,EACzCp8H,EAAGiyB,OAAOjyB,EAAI83B,SAAWskG,kBAAoB,EAC7ChkG,MAAOA,MAAQgkG,kBACf/jG,OAAQA,OAAS+jG,oBAErBD,YAAch2C,yBAAUm2C,cACpBH,WAAYH,gBAGpB,IAAMj1C,OAAS3B,YAAYzQ,QAAS,OAAQ,SAAA9/E,GAAC,OAAKA,KAAIgI,KAAKA,MACrDozG,SAAWlpB,OAAO35D,OACxB8uG,WAAa/1C,yBAAU8pB,SAAUisB,WACjChrF,OAASi1C,yBAAU8pB,UACf/0D,KAAMhK,QAEVp2B,QAAQ2iB,WAAaspD,OAAO/L,QAAQlgE,QAAQ2iB,WAAW,GACvDyoD,wBAAS+pB,SAAUh+E,QACnB80D,OAAOn3B,KAAK,cAAeqsE,cAE/B5sE,UAAUI,OAAOvrB,SACVmrB,WChEEkpC,mCACTY,aAAc,aACdC,YvDJuB,OuDKvB37D,UAAW,GACX+a,WACInhD,KAAM,YAEV6/F,aACI2Q,YACIxwG,KAAM,OACN60H,WAAY,EAAG,GAAI,GAAI,KAE3BxkB,OACIrwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,KAE3BtkB,QACIvwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,MAG/Bn8D,YACI0/B,OAAQ,QACR9M,SAAU,KAEdomB,UACI73D,SACAr0C,MACIrH,MAAO,GACPoJ,UAAW,SAAAA,UAAClB,IAAKnJ,EAAGgT,KAAM0xB,SAEtB,OADoBA,QAAQi/D,aACrBA,CAAYx6F,MAEvBy+H,YACIh9F,QAAS,MAIrBi5F,QACIvwB,WACIpqE,UAAS,GAAAtlB,OvD1CM,OuD0CN,0BAEbkgH,SACI56F,UAAS,GAAAtlB,OvD7CM,OuD6CN,wBAEbmgH,UACI76F,UAAS,GAAAtlB,OvDhDM,OuDgDN,quDCvBAokH,4qBAAkB5K,6RAc/B,MAAO,+DAUMpqH,KAAMwhG,SAAU/T,MAgB7B,IAhBmC,IAAAtjF,MAAAlV,KAC/B61E,UACEwvB,UAAY7M,KAAK9jD,MACjBsrF,aAAezzB,SAASlsG,KACf4/H,UAA+CD,aAAtD10H,MAAkBtS,MAAoCgnI,aAApChnI,MAAkBknI,cAAkBF,aAA7B59H,UAC3BgtH,cAAgB7iB,SAAS73D,MACzB0+E,WAAahE,eAAiBA,cAAc9jH,MAC5CkT,aAAexe,KAAK+K,OAAO0T,kBAE3B0hH,mBAAqB5zB,SAASlsG,KAAKs/H,WACnCC,kBAAoBO,mBAAmBx9F,QACvCy9F,gBAAkBD,mBAAmBnnI,MACrCq2H,gBAAkB7wG,aAAa40G,YAAc50G,aAAa40G,YAAYnxH,OAAS,EAC/Eo+H,eAAiBJ,UAAYzhH,aAAayhH,YAAczhH,aAAayhH,WAAWh+H,OAAS,EACzF00H,KAAOjoB,SAAS/uD,EAChB+2E,KAAOhoB,SAASzqG,EAfa+lE,MAAA,SAAAA,MAgB1BjyE,EAAO0Q,KACZ,IAAMpQ,EAAI0S,KAAKhT,GACTsjB,IAAMhjB,EAAEk3H,MACR+Q,UAAYL,UAAY5kH,IAAIglH,gBAAkBrnI,MAnBrBu3H,MAAAgQ,oBAqBX5J,KAAMD,MAAMzuH,IAAI,SAAApN,MAAI,OAAK29F,KAAK39F,MAAQ29F,KAAK39F,MAAMyjG,cAAcjmG,EAAEwC,OAC7E29F,KAAK39F,MAAM0jG,eAAiB,EAAI,IAtBT,GAqBxB46B,IArBwB5I,MAAA,GAqBnB6I,IArBmB7I,MAAA,GAAA8I,eAwBHlK,eAAgB98G,MAAOha,EAAG4J,MAAOlK,IACvDq3H,4BAAe/pB,oBAAWgqB,kCADxB36E,MAxBuB2kF,eAwBvB3kF,MAAO46E,SAxBgB+J,eAwBhB/J,SAGT32D,OACFxF,SACA19B,QACIyI,EAAGi7F,IACH31H,EAAG41H,KAEP/4H,KAAM6/H,cAAcI,UAAWvoI,EAAGgT,KAAMmK,OACxCw/B,YACAirF,YACI3mI,MAAOonI,2BAA2B5qH,SAAW4qH,gBAAgB/nI,EAAGN,EAAGgT,KAAMmK,OAAQ,KACjFytB,QAASi9F,mBAEbziH,MACIwyG,cACAC,cAAeN,SACfa,mBAEJr2F,SACAy1F,MAAOl0G,IACPkrE,IAAKluF,EAAEkuF,IACP7hE,OAAQrsB,EAAEk3H,MACVgK,MAAOlhI,EAAEkuF,KAGb5tB,MAAM13B,UAAY0vF,uBAAuBt4H,EAAGN,EAAGgT,KAAMmK,OACrD2gE,OAAO3vE,KAAKyyD,QApCP5gE,EAAI,EAAG0Q,IAAMsC,KAAKrJ,OAAQ3J,EAAI0Q,IAAK1Q,IAAKiyE,MAAxCjyE,GA4CT,OAJA89E,QADAA,OAASq7C,eAAelxH,KAAM61E,SACd9hE,OAAO,SAAC1b,GACpB,IAAMo9B,OAASp9B,EAAEo9B,OACjB,OAAQnhB,MAAMmhB,OAAOyI,KAAO5pB,MAAMmhB,OAAOjyB,2CAUzCs1B,WAAW,IACX+8C,OADWxgE,OAAArV,KAET4M,OAAS5M,KAAK4M,SACd2/F,SAAW3/F,OAAO2/F,SAClB0hB,eAAiBjuH,KAAKm0H,gBACtBlzF,UAAYr0B,OAAOq0B,UACnBuhE,mBAAqBl2B,sBAAsB1/D,OAAO+vF,aAAc38F,KAAK64B,KAAMjsB,OAAOgwF,aAClFpE,KAAOx4F,KAAKw4F,OAoBlB,OAnB2B7P,6BAAc7vD,WAEtB0lD,QAAnB,GAAA7iE,OAA8B6mF,mBAAmBz/F,KAAK,KAAtD,KAAA4Y,OAA8DslB,YAAa,GAC3E4oD,+BACI9+E,KAAMkjH,eACNj5F,OAAQ,IACR6iD,SAAU,IACV/+C,oBACA2O,KAAM,SAAAA,KAACspC,QAAS/wB,MAAOjoD,GACnB,IAAM64B,KAAOovB,MAAMpvB,OACnBilD,OAASxgE,OAAK2kH,gBAAgBjpD,QAASw7B,SAAU/T,KAAMzgG,GACvD4xF,yBAAU/4D,MACN4vG,cxD/Hc,WwDiIlBlB,cAAS1uG,KAAMilD,QACX50C,UAAWuhE,mBAAmB,IAC/BntF,OAAKw/F,cAAcj1E,eAGvB5/B,6DAjHP,OAAO+7F,kFAIP,MAAO,wBC2EA0kC,eAtCgC,SAAdA,YAAe5+G,QAAW,IAC/Cs6E,MAAoDt6E,OAApDs6E,MAAOrjE,UAA6CjX,OAA7CiX,UAAW+8C,OAAkCh0D,OAAlCg0D,OAAQtiB,WAA0B1xC,OAA1B0xC,WAAYtyB,UAAcpf,OAAdof,UACtCklD,SAA+B5yB,WAA/B4yB,SAAU8M,OAAqB1/B,WAArB0/B,OAAQ8M,SAAaxsC,WAAbwsC,SACpBlsE,MAAQ80D,6BAAc7vD,WAG5B,OADAjF,MAAMu/B,KAAK,QAASnyB,WACb2nD,YAAY/0D,MAAO,IAAKgiD,OAAQ,MACnC1iB,MAAO,SAAAA,MAACnT,MAAO3nD,GAAM,IACT86D,MAAU96D,EAAV86D,MACRnT,MAAMoT,KAAK,YAAX,aAAAz3C,OAAqCw3C,MAAMj1B,EAA3C,KAAAviB,OAAgDw3C,MAAM3vD,EAAtD,OAEJiyB,OAAQ,SAAAA,OAACuqB,MAAO3nD,IAvDJ,SAAdqoI,YAAwBroI,EAAGsoI,cAAc,IACnC9+B,MAAwBxpG,EAAxBwpG,MAAOpnE,KAAiBpiC,EAAjBoiC,KAAMhF,OAAWp9B,EAAXo9B,OAErB,GAAIosE,iBAAiBhW,QACjBgW,MAAM5V,KAAK,SAAC97D,KACR93B,EAAEwpG,MAAQ1xE,IACVuwG,YAAYroI,EAAGsoI,qBAEhB,GAAI9+B,iBAAiB++B,QAAS,CACjC,IAAIC,SAAWh/B,MAAMznB,WAAU,GAE/B,GAAwC,QAApCymD,SAASC,SAASr/H,cAAyB,CAC3C,IAAMs/H,IAAMF,SAASE,KAAOF,SAASG,MACrCH,SAAWxoG,SAASyM,gBAAgB,6BAA8B,UACzDhB,aAAa,OAAQi9F,KAElC,IAAME,aAAet4C,6BAAck4C,UACT,SAAtBA,SAASC,UAA6C,UAAtBD,SAASC,SACzCG,aAAa7tE,KAAK,YAAlB,SAAAz3C,OAAwC8e,KAAO,IAA/C,OAEAwmG,aAAa7tE,KAAK,SAAU34B,MAC5BwmG,aAAa7tE,KAAK,QAAS34B,OAE/BwmG,aAAa7tE,KAAK,KAAM34B,KAAO,GAC/BwmG,aAAa7tE,KAAK,KAAM34B,KAAO,GAC/BmuD,YAAY+3C,aAAc,kBAAME,WAAW,SACxC,GAAqB,iBAAVh/B,MAAoB,CAClC,IAAIq/B,QAIAA,QA5CM,SAAZC,UAAaj3H,KACf,SAAI,0CAA0C7M,KAAK6M,MAAQ,UAAU7M,KAAK6M,MAAQA,IAAIxI,OAAS,GAwCvFy/H,CAAUt/B,OACAA,MAEAhwB,uBAAUgwB,OAAOpnE,KAAKA,KAAtBo3C,CAA4Bp8C,QAE1CmzD,YAAY+3C,aAAc,OAAQ,SAAA51H,MAAI,OAAKA,QAAOqoD,KAAK,IAAK8tE,cAE5D7oI,EAAEwpG,MAAQ,SACV6+B,YAAYroI,EAAGsoI,cAoBXD,CAAYroI,EAAG2nD,OADG,IAEVvqB,OAAkBp9B,EAAlBo9B,OAAQqE,MAAUzhC,EAAVyhC,MAChB4yC,eAAe5yC,MAAO,SAAAxgC,KAAG,OAAI0mD,MAAMlmB,MAAMxgC,IAAKwgC,MAAMxgC,QACpD0mD,MAAMoT,KAAK,QAASnyB,WACpB+e,MAAMw+B,QAAQnmF,EAAE4oC,WAAW,GACtB8+D,WACD//C,MAAQA,MAAMuT,aACT4yB,SAAS5yB,WAAW4yB,UACpBzY,GAAG,MAAOyuB,MAAMmX,8BAEzBtzD,MAAMoT,KAAK,YAAX,aAAAz3C,OAAqC8Z,OAAOyI,EAA5C,KAAAviB,OAAiD8Z,OAAOjyB,EAAxD,OAEJyvD,KAAM,SAAAA,KAACmuE,WACErhC,SAODqhC,UAAU15F,SANV05F,UAAU7tE,aAAa6yB,KAAK7a,QAAQ0nB,SACnC9M,SAASA,UACTzY,GAAG,MAAO,kBAAM0zD,UAAU15F,WAC1B5N,MAAM,eAAgB,GACtBA,MAAM,iBAAkB,KAKlCjY,OAAOknE,QCzGDgT,oCACTY,aAAc,cACd17D,UAAW,GACX27D,Y1DLuB,O0DMvBykC,cAAe,SACf3mC,aACI2Q,YACIxwG,KAAM,OACN60H,WAAY,EAAG,GAAI,GAAI,KAE3BxkB,OACIrwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,KAE3BtkB,QACIvwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,MAI/BsC,aAAc,GACdnjB,sBAAuB,GACvB7yD,WACInhD,KAAM,YAEV04D,YACI0/B,OAAQ,QACR9M,SAAU,KAEdomB,UACI9xE,MACIzhC,MAAO,IAEX07C,SACAmtD,OACI7oG,MAAO,UAEXklC,KACA16B,KACAsrG,eACI91G,MAAO,IAEXsoI,aACItoI,MAAO,KAGfuoI,QAAS,SAAU,QAAS,UAAW,SAAU,OAAQ,MAAO,YAChEC,OAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,mrEChBXC,sCAOjB,SAAAA,aAAsB,IAAAv6B,iBAAAhyF,0JAAAwsH,CAAA1hI,KAAAyhI,YAAA,QAAAr0D,KAAAhoE,UAAA1D,OAANsF,KAAM,IAAA6B,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANrmE,KAAMqmE,MAAAjoE,UAAAioE,MAAA,OAClBn4D,MAAAysH,gCAAA3hI,MAAAknG,iBAAA06B,qBAAAH,aAAAvpI,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAAS3U,SACJ6lE,SAAW,IAAIF,qBACpBz3D,MAAKw8G,WAAah8C,OAAOvsC,OAHPj0B,wXAPcigH,iSAoBhC,MAAO,4DAoDMpqH,KAAMwhG,SAAU/T,MA2B7B,IA3BgD,IAAAnjF,OAAArV,KAAb4M,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC5CywE,UAEMgsD,aAKNt1B,SALA9xE,KACOqnG,cAIPv1B,SAJA1K,MACOutB,cAGP7iB,SAHA73D,MACAxW,EAEAquE,SAFAruE,EACA16B,EACA+oG,SADA/oG,EAEE8vH,UAAYuO,aAAav2H,MACzBy2H,UAAYF,aAAa7oI,MACzBq6H,WAAayO,cAAcx2H,MAC3BstF,OAAS16D,EAAE5yB,MACXwtF,OAASt1F,EAAE8H,MACHi6F,SAA+B/M,KAArC/9D,KAAuB6qE,UAAc9M,KAArBqJ,MAClBrjF,aAAexe,KAAK+K,OAAO0T,kBAC3Bw6G,OAASz6G,aAAao6E,SAAWp6E,aAAao6E,QAAQh6E,IAAI/jB,OAAS+6F,yBAAUh3F,UAC7Es6H,OAAS16G,aAAas6E,SAAWt6E,aAAas6E,QAAQl6E,IAAI/jB,OAAS+6F,yBAAUh3F,UAC7EtF,IAAM2/H,OAASvqB,SAAS/uD,EAAKu5E,OAASxqB,SAASzqG,EAAI,KACnDmvH,WAAahE,eAAiBA,cAAc9jH,MAC5C+jH,gBAAkB7wG,aAAa40G,aAAe50G,aAAa40G,YAAYnxH,MACvEi+F,YAAclgG,KAAKkgG,cACnB8hC,gBAAkBxjH,aAAa60G,aAAe70G,aAAa60G,YAAYpxH,MACvEggI,eAAiBzjH,aAAa80G,YAAc90G,aAAa80G,WAAWrxH,MACpEojG,UAAY7M,KAAK9jD,MAxByBwtF,eAyBbt1H,OAAOo2C,OAA/Bm/E,QAzBqCD,eAyBxChkG,EAAekkG,QAzByBF,eAyB5B1+H,EAzB4BwmE,MAAA,SAAAA,MA2BvCjyE,EAAO0Q,KACZ,IAAMpQ,EAAI0S,KAAKhT,GACTsjB,IAAMhjB,EAAEk3H,MACR90F,KAAOsnG,qBAAqBvsH,SAAWusH,UAAU1pI,EAAGN,GAAKwtG,SAASM,QAAQxqF,IAAI4mH,iBAC9EpgC,MAAQyD,UAAUM,SAASvqF,IAAI2mH,kBA/BOzR,MAAA8R,qBAiC1B3zB,SAAS/uD,EAAG+uD,SAASzqG,GAAGgE,IAAI,SAACpN,MAC3C,IAAM7B,MAAoB,OAAZX,EAAEwC,WAAiByS,EAAYjV,EAAEwC,MACzCkd,QAAUld,OAAS6zG,SAAS/uD,EAAIugD,YAAYtkE,MAAQskE,YAAYrkE,OACtE,OAAQ0wE,SAAS1xG,MAAMyQ,MAAsBktF,KAAK39F,MAAMyjG,cAActlG,OAAvC+e,QAAU,IApCD,GAiCvCohH,IAjCuC5I,MAAA,GAiClC6I,IAjCkC7I,MAAA,GAuC5C4I,KAAOgJ,QACP/I,KAAOgJ,QAxCqC,IAAA/I,eA0ChBlK,eAAgB98G,MAAOha,EAAG4J,MAAOlK,IACvDq3H,4BAAe/pB,oBAAWgqB,kCADxB36E,MA1CoC2kF,eA0CpC3kF,MAAO46E,SA1C6B+J,eA0C7B/J,SAGTx1F,OACF4kB,KAAMhK,MACN4kF,OAAQ5kF,OAGZ,IAAKpgC,MAAM6kH,OAAS7kH,MAAM8kH,KAAM,CAC5B,IAAMzgE,OACFxF,OACIj1B,EAAGi7F,IACH31H,EAAG41H,KAEP3jG,QACIyI,EAAGi7F,IACH31H,EAAG41H,KAEPv3B,YACApnE,KAAM52B,KAAKsoB,IAAIsO,MACftd,MACIwyG,cACAC,cAAeN,SACfa,mBAEJr2F,YACAy1F,MAAOl0G,IACPkrE,IAAKluF,EAAEkuF,IACP7hE,OAAQrsB,EAAEk3H,MACVgK,MAAOlhI,EAAEkuF,KAEb5tB,MAAM13B,UAAY0vF,uBAAuBt4H,EAAGN,EAAGgT,KAAMsK,QACrDwgE,OAAO3vE,KAAKyyD,OACZtjD,OAAKmkH,WAAWnhI,EAAEiB,KAAMq/D,SAhDvB5gE,EAAI,EAAG0Q,IAAMsC,KAAKrJ,OAAQ3J,EAAI0Q,IAAK1Q,IAAKiyE,MAAxCjyE,GAoDT,OADA89E,OAASq7C,eAAelxH,KAAM61E,8CAU1B/8C,WAAW,IAEX2gG,gBAFW9hH,OAAA3X,KACXsiI,QAAU,EAER11H,OAAS5M,KAAK4M,SACd9G,KAAO9F,KAAKi0H,iBAAiBhsH,IAAI,SAAA5P,GAAC,OAAIA,EAAEiB,MACtCi6D,WAAqD3mD,OAArD2mD,WAAYtyB,UAAyCr0B,OAAzCq0B,UAAW07D,aAA8B/vF,OAA9B+vF,aAAcC,YAAgBhwF,OAAhBgwF,YACvCqxB,eAAiBjuH,KAAKm0H,gBACtBuF,mBAAqB/wC,6BAAc7vD,WACnC0pE,mBAAqBl2B,sBAAsBqwB,aAAc38F,KAAK64B,KAAM+jE,aAC1E58F,KAAKy1H,WACLz1H,KAAKm3H,aAELuC,mBAAmBl7C,QAAQgkB,mBAAmBz/F,KAAK,MAAM,GAAMy7E,QAAQv9C,WAAW,GAElFjhC,KAAKy1H,QAAUz1H,KAAKuiI,mBAAmBtU,eAAgBnoH,MACvD,IAAM4F,OAAS1L,KAAK+K,OAAO8hB,YAiB3B,OAhBA+7D,YAAY9vD,UAAW,IAAK94B,KAAKy1H,QAAS,MACtChgG,OAAQ,SAAAA,OAACuqB,MAAO61B,QACZysD,QAAUz+H,KAAK6Q,IAALnN,MAAA1D,MAASy+H,SAAL3mH,OAAA6mH,wBAAiB3sD,OAAO5tE,IAAI,SAAA5P,GAAC,OAAIA,EAAEoiC,UACjDg/F,gBAAe,GAAA99G,OAAM6mF,mBAAmB,IACxC7qF,OAAKkO,YAAY48G,QAAjB9qH,EACIwkF,MAAOxkF,OACPmhB,UAAWknB,MAAMpvB,OACjBilD,cACA50C,UAAWw4F,gBACXlmE,sBACAw1B,MAAO,SAAAA,MAAArgF,GAAC,OlBuQH,SAAZg6H,UAAah+G,OAAQhZ,QAAT,OAAoBgZ,OAAO3Q,OAAO,SAAC7S,IAAKnJ,GAAN,OAAY2T,OAAO3T,IAC1E2T,OAAO3T,GAAG8C,OAAS+6F,yBAAUh3F,YAAWmE,OkBxQZ2/H,CAAUh6H,EAAEgc,OAAQhZ,aAGzC,SAAAX,MAAI,OAAIA,KAAK,GAAGw7E,MACnBvmF,KAAK2iI,SAA0C,EAA/B9+H,KAAK8Q,KAAK2tH,QAAUz+H,KAAKkyC,IACzC+6E,oBAAoB9wH,KAAK6sE,SAAU7sE,KAAKy1H,SACjCz1H,mEAGSiuH,eAAgBnoH,MAAM,IAAA0vB,OAAAx1B,KAChCusG,SAAWvsG,KAAK4M,SAAS2/F,SACzB/T,KAAOx4F,KAAKw4F,OAFoBoqC,qBAAAP,oBAGAhR,2BAAmBrxH,KAAM8F,MAHzB,GAG/B+8H,aAH+BD,qBAAA,GAGjBE,cAHiBF,qBAAA,GAIhCG,cAAgBF,aAAahR,iBAC7BmR,cAAgBF,cAAcjR,iBACpC,OAAO5D,eAAehmH,IAAI,SAAC8oE,QAASh5E,GAChC,IAAMkrI,gBAAkBztG,OAAK0tG,qBAAqBH,cAAchrI,GAAIirI,cAAcjrI,GAAI8qI,aAAalR,KAC/FmR,cAAcnR,MAClB,OAAOn8F,OAAKwkG,gBAAgBjpD,QAASw7B,SAAU/T,KAAMyqC,mBACtDlvH,OAAO,SAAA1b,GAAC,OAAIA,EAAEqJ,2EAGCygI,QAASC,QAASe,UAAWC,YAC/C,OACIpgF,QACI9kB,GAAIikG,SAAW,GAAKgB,UAAY,EAChC3/H,GAAI4+H,SAAW,GAAKgB,WAAa,GAErCzR,MACIzzF,EAAGilG,UACH3/H,EAAG4/H,qEAWEllG,EAAG16B,GAChB,IAAM6/H,cAAgBx/H,KAAK6Q,IAAI1U,KAAK2iI,SAAU3iI,KAAK4M,SAASiiG,uBAE5D,IAAK7uG,KAAK+K,OACN,OAAO,KAGX,IAAM4tD,MAAQ34D,KAAK6sE,SAASzhD,KAAK8S,EAAG16B,EAAG6/H,eACjCv6G,WAAa6vC,OAASA,MAAM5tD,KAAKA,KAAK0qB,OACtC+xC,OAAS7O,MAAQ90D,KAAK8Q,KAAKgkD,MAAM5tD,KAAKA,KAAK0vB,KAAO52B,KAAKkyC,IAAM,EAEnE,GAAI4iB,MAAO,KAAA0hE,iBACgB1hE,MAAM5tD,KAAKA,KAA1BwkH,MADD8K,iBACC9K,MAAOhpC,IADR8zC,iBACQ9zC,IAEf,OACI1tD,GAFgB74B,KAAKs6H,uBAAuB/K,MAAOhpC,KAGnDz9D,aACIoV,EAAGpV,WAAWoV,EACd16B,EAAGslB,WAAWtlB,EACdo4B,MAAO4rC,OACP3rC,OAAQ2rC,SAEZ+yD,QAASv6H,KAAK64B,MAGtB,OAAO,6DAhOP,OAAOkjE,uFAGWhuB,KAAM0qD,UACxB,IAAM7rH,OAASuoH,qBAAUH,cAAcjnD,KAAM0qD,UACvClsB,SAAW3/F,OAAO2/F,SAClBvwD,UAAYpvC,OAAOovC,UACnBo3E,WAAa7mB,SAAS73D,OAAS63D,SAAS73D,MAAMppC,MAKpD,OAHI8nH,aACAp3E,UAAUjuB,QAAUqlG,YAEjBxmH,uDAWP,MAAO,gDAWP,OAAO6zH,iCCnDyB6C,mBAAY,SAAZA,UAAazhH,QAAW,IACpDs6E,MAAoCt6E,OAApCs6E,MAAOtmB,OAA6Bh0D,OAA7Bg0D,OAAQ/8C,UAAqBjX,OAArBiX,UAAWiwD,MAAUlnE,OAAVknE,MAKlC,OAAOH,YAAY9vD,UAAW,OAAQ+8C,OAAQ,MAH1C1iB,MADc,SAAAA,MACP/qC,KAAM/vB,IAdF,SAAbkrI,WAAcn7G,KAAM/vB,GACtB,IAAMw6D,UAAYzqC,KACZ+qC,MAAQ96D,EAAE86D,UAChB16D,OAAOwc,QAAQk+C,OAAOrqD,QAAQ,SAAAsqD,MAAI,OAAM9+C,MAAM8+C,KAAK,KAAOP,UAAUO,KAAKA,KAAK,GAAIA,KAAK,MAWjEmwE,CAAWn7G,KAAM/vB,IACnCo9B,OAFc,SAAAA,OAENrN,KAAM/vB,EAAGN,IAtCF,SAAjByrI,eAAkBrnC,MAAO/zE,KAAM/V,MAAOpQ,MAAOw6B,SAAY,IACnD82B,WAAe92B,QAAf82B,WACA4yB,SAA+B5yB,WAA/B4yB,SAAU4Z,SAAqBxsC,WAArBwsC,SAAU9M,OAAW1/B,WAAX0/B,OACtBpgC,UAAYzqC,KAEZq7G,cAAgB1jC,SAAWltC,UAC7BA,UAAUU,aACT4yB,SAASA,UACTC,KAAK7a,QAAQ0nB,SACbvlB,GAAG,MAAOyuB,MAAMmX,6BACf79E,OAASpjB,MAAMojB,QAAUpjB,MACzB4+G,YAAc5+G,MAAMynB,UAC1BznB,MAAM4uB,WAAa4xB,UAAU2rB,QAAQnsE,MAAM4uB,WAAW,GACtDxoC,OAAOwc,QAAQwgB,QAAQ3sB,QAAQ,SAAAsqD,MAAI,OAAM9+C,MAAM8+C,KAAK,KAAOqwE,cAAcrwE,KAAKA,KAAK,GAAIA,KAAK,MAC5F36D,OAAOwc,QAAQg8G,aAAanoH,QAAQ,SAAAs7B,UAAQ,OAAIyuB,UAAU/4B,MAAMsK,SAAS,GAAIA,SAAS,MAwB5Do/F,CAAernC,MAAO/zE,KAAM/vB,EAAGN,EAAG8pB,UAEGknE,QChDtDgT,kCACTa,Y7DHuB,O6DIvBD,aAAc,YACd17D,UAAW,GACXy5D,aACI2Q,YACIxwG,KAAM,OACN60H,WAAY,EAAG,GAAI,GAAI,KAE3BxkB,OACIrwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,KAE3BtkB,QACIvwG,KAAM,OACN60H,WAAY,EAAG,EAAG,GAAK,MAG/B1zE,WACInhD,KAAM,SAEV04D,YACI0/B,OAAQ,QACR9M,SAAU,KAEd6rC,aAAc,GACdzlB,UACI73D,SACAxW,KACA16B,KACAo+C,MACA+S,OAEJinE,QACIvwB,WACIpqE,UAAS,GAAAtlB,O7DrCM,O6DqCN,yBAEbkgH,SACI56F,UAAS,GAAAtlB,O7DxCM,O6DwCN,uBAEbmgH,UACI76F,UAAS,GAAAtlB,O7D3CM,O6D2CN,imBCvCrB,IAAM+nH,mBACFxlG,EAAG,SAAAA,EAACi7F,IAAKwK,cAAeC,YAArB,OAAqCD,eAAiBxK,IAAKyK,aAAeA,WAAYzK,MACzF31H,EAAG,SAAAA,EAAC41H,IAAKuK,cAAeC,YAArB,OAAqCD,eAAiBC,WAAYxK,MAAQA,IAAKwK,cAYhFC,6BAAoB,SAApBA,kBAAqBhpI,KAAMipI,SAAUl3H,OAAQ7B,MAC/C,IAWIg/E,IAXEg6C,UAAqB,MAATlpI,KAAe,QAAU,SADa45B,MAE7B7nB,OAAM,GAAA+O,OAAI9gB,KAAJ,cAAsBipI,SAAQ,GAAAnoH,OAAI9gB,KAAJ,UAAxDgvE,UAFiDp1C,KAAA,GAEtCw9B,KAFsCx9B,KAAA,GAIpDg9F,cAIA7kH,OAJA6kH,cACAoQ,aAGAj1H,OAHAi1H,aACAmC,WAEAp3H,OAFAo3H,WACA9jC,YACAtzF,OADAszF,YAGE6hC,UAAYF,aAAa7oI,MAC3Bm6D,MAAQ,EAERikB,MAAQ,EACR6sD,WAAa,EACjB,QAAkB32H,IAAdu8D,UACA,GAAIj9D,OAAM,GAAA+O,OAAI9gB,KAAJ,WAAmB,CACzB,IAEI4Z,IACAC,IAHEwvH,OAASn5H,KAAKlQ,MACdspI,OAASp5H,KAAI,GAAA4Q,OAAI9gB,KAAJ,MAGnB,GAAe,OAAXqpI,QAA8B,OAAXC,OACnB,OACIF,gBAAY32H,EACZ6lD,WAAO7lD,EACPy8E,SAAKz8E,EACL8pE,WAAO9pE,GAEJu8D,YAAcwvB,8BAAe56F,YAAcorE,YAAcE,gCAAiB1rE,UACjFoW,IAAM5Q,KAAK4Q,IAAIyvH,OAAQC,QACvBzvH,IAAM7Q,KAAK6Q,IAAIwvH,OAAQC,UAEvB1vH,IAAMyvH,OACNxvH,IAAMyvH,QAEV,IAAM3zB,OAAkB,MAAT31G,MAAgB4Z,IAAKC,MAAQA,IAAKD,KACjDs1E,IAAM93B,KAAKqsC,cAAckS,OAAO,IAAMv+C,KAAKssC,eAAiB,EAC5DnnB,MAAQvzE,KAAKsoB,IAAI8lC,KAAKqsC,cAAckS,OAAO,IAAMzmB,KAAO93B,KAAKssC,eAAiB,EAE9EprC,MAAQ42B,IACRk6C,WAAa,OACV,GAAIp6D,YAAcE,gCAAiB3rE,aAAeyrE,YAAcE,gCAAiB1rE,SAAU,CAK9F,GAJA0rF,IAAM93B,KAAKqsC,cAAcvzF,KAAKlQ,QACzBmpI,WAAoB,MAATnpI,KAAe,iBAAmB,oBAAsB,GAExEu8E,MAAQ4sD,WAAoB,MAATnpI,KAAe,WAAa,kBAC7ByS,IAAdy0H,UAAyB,CACzB,IAAMqC,OAASrC,UAAY3qD,MAC3BA,OAASgtD,OACTr6C,KAAOq6C,OAAS,EAEpBjxE,MAAQ42B,IACRk6C,WAAa7sD,UACV,CACH,IAAMitD,UAAYpyE,KAAKl7C,SAAS,GAC1B6sH,WAAaS,UAAY,EAAIpyE,KAAKqsC,cAAc,GAAKrsC,KAAKqsC,cAAc+lC,WAC9Et6C,IAAM93B,KAAKqsC,cAAcvzF,KAAKlQ,OAC9B,IAAIs+F,OAASlnC,KAAKqsC,cAAcvzF,KAAI,GAAA4Q,OAAI9gB,KAAJ,OAEpCopI,WAAa,EACb,IAAMN,cAAgB54H,KAAKlQ,MAAQ,EACnC,G9D9ES,U8D8EL42H,cAAyB,KAAA6S,uBAAAC,yBACTb,kBAAkB7oI,MAAMkvF,IAAK45C,cAAeC,YADnC,GACxB75C,IADwBu6C,uBAAA,GACnBnrC,OADmBmrC,uBAAA,GAG7BltD,MAAQvzE,KAAKsoB,IAAI49D,IAAMoP,QACvBhmC,MAAQywE,gBAGZ75C,IAAM,EACN3S,MAAQ8oB,YAAY6jC,WAGxB,OACIE,sBACA9wE,YACA42B,QACA3S,cAYFotD,kBAAoB,SAApBA,kBAAqBz5H,KAAM6B,OAAQ4rF,MACrC,IAAMsrC,UACFrrC,MAAOD,KAAKt6D,EACZw6D,MAAOF,KAAKh1F,GAH8BihI,mBAU1CZ,6BAAkB,IAAKC,SAAUl3H,OAAQ7B,MAJ7B25H,WAN8BD,mBAM1CR,WACOU,OAPmCF,mBAO1CtxE,MACKyxE,KARqCH,mBAQ1C16C,IACOnuD,MATmC6oG,mBAS1CrtD,MAT0CytD,oBAiB1ChB,6BAAkB,IAAKC,SAAUl3H,OAAQ7B,MAJ7B+5H,YAb8BD,oBAa1CZ,WAKJ,OACI9wE,OACIj1B,EAAGymG,OACHnhI,EArBsCqhI,oBAc1C1xE,MAQIv3B,MAAO8oG,WACP7oG,OAAQipG,aAEZrvG,QACIyI,EAAG0mG,KACHphI,EA3BsCqhI,oBAe1C96C,IAaInuD,YACAC,OA7BsCgpG,oBAgB1CztD,smFCxGR,IAAMz4E,QAAUi3F,yBAAUj3F,QACpBg3E,cAAYD,OAAOvsC,KAaJ47F,kCAIjB,SAAAA,WAAwB,IAAA79B,iBAAAhyF,wJAAA8vH,CAAAhlI,KAAA+kI,UAAA,QAAA33D,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAA+vH,8BAAAjlI,MAAAknG,iBAAAg+B,mBAAAH,WAAA7sI,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJ6vG,WAAa/7C,gBAClBzgE,MAAKiwH,cACDjnG,EAAG,EACH16B,EAAG,GAEP0R,MAAKkwH,WACDlnG,EAAG,EACH16B,EAAG,GAEP0R,MAAKiiH,aAXejiH,kXAJUigH,yRAyB9B,MAAO,+EAmDcpqH,KAAM0rH,iBAAkBj4G,cAC7C,IAAMzH,OAASsuH,QAAAH,mBAAAH,SAAAlrI,WAAA,0BAAAmG,MAAA9H,KAAA8H,KAA8B+K,KAAM0rH,iBAAkBj4G,cAWrE,OAVC,IAAK,KAAK1V,QAAQ,SAACzQ,GACZo+H,iBAAgB,GAAA96G,OAAItjB,EAAJ,gBAAsBsG,SAAWoY,OAAO1e,KACpDo+H,iBAAgB,GAAA96G,OAAItjB,EAAJ,WAChB0e,OAAO1e,GAAK0e,OAAO1e,GAAGkb,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,KAEzC2T,OAAO1e,GAAG,GAAKwL,KAAK4Q,IAAIsC,OAAO1e,GAAG,GAAI,GACtC0e,OAAO1e,GAAG,GAAKwL,KAAK6Q,IAAI,EAAGqC,OAAO1e,GAAG,QAI1C0e,+DAWMhM,KAAMi5H,YACnB,ODgB2B,SAAtBsB,oBAAuB7oG,QAAS1xB,KAAMi5H,YAsB/C,IArBA,IAAInuD,UACE02B,SAAW9vE,QAAQ7vB,SAAS2/F,SAC5B/T,KAAO/7D,QAAQ+7D,OACf6M,UAAY7M,KAAK9jD,MACjBl2B,aAAeie,QAAQ1xB,OAAO0T,kBAC9B2wG,cAAgB7iB,SAAS73D,MACzB0+E,WAAahE,cAAc9jH,MAC3Bu2H,aAAet1B,SAAS9xE,SARgC63F,sBActD71F,QAAQ+0F,oBAJR0B,QAVsDZ,sBAUtDY,QACAC,QAXsDb,sBAWtDa,QACAM,cAZsDnB,sBAYtDmB,cACAC,cAbsDpB,sBAatDoB,cAEFxzB,YAAczjE,QAAQyjE,cACtB+4B,OAASxF,gBAAkB1pD,gCAAiB3rE,aAAeq1H,gBAAkB1pD,gCAAiB1rE,SAC9F66H,OAASxF,gBAAkB3pD,gCAAiB3rE,aAAes1H,gBAAkB3pD,gCAAiB1rE,SAC9F/E,IAAM2/H,OAAS,IAAOC,OAAS,IAAM,KACrCzH,cAAgBh1F,QAAQg1F,gBACxBpC,gBAAkB+D,YAAc50G,aAAa40G,aAAe50G,aAAa40G,YAAYnxH,MAElFlK,EAAI,EAAG0Q,IAAMsC,KAAKrJ,OAAQ3J,EAAI0Q,IAAK1Q,IAAK,CAC7C,IAAMM,EAAI0S,KAAKhT,GACT+hC,SACA3c,QACA2L,WAAa07G,kBAAkBnsI,GACjC0gG,WAAY06B,cACZz6B,WAAY06B,cACZR,gBACAC,gBACA1B,4BACAvxB,wBACA8jC,sBACAnC,2BACDrpC,MAb0C6gC,eAejBlK,eAAgB98G,MAAOha,EAAG4J,MAAOlK,IACvDq3H,4BAAe/pB,oBAAWgqB,kCADxB36E,MAfqC2kF,eAerC3kF,MAAO46E,SAf8B+J,eAe9B/J,SAGfx1F,MAAM4kB,KAAOhK,MACbv3B,KAAKwyG,cACLxyG,KAAKyyG,cAAgBN,SACrBnyG,KAAKgzG,kBAEL,IAAM16F,OAAS3M,WAAW2M,OAE1B,IAAKnhB,MAAMmhB,OAAOyI,KAAO5pB,MAAMmhB,OAAOjyB,SAAgB8J,IAAVjV,EAAEkuF,IAAmB,CAC7D,IAAI5tB,MAAQ,MACZA,OACIxF,MAAOrqC,WAAWqqC,MAClB19B,cACAqE,YACAy1F,MAAOl3H,EAAEk3H,MACThpC,IAAKluF,EAAEkuF,IACP7hE,OAAQrsB,EAAEk3H,MACVgK,MAAOlhI,EAAEkuF,IACTppE,YAEE8jB,UAAY0vF,uBAAuBt4H,EAAGN,EAAGgT,KAAM0xB,SACrDo5C,OAAO3vE,KAAKyyD,OAEZl8B,QAAQ+8F,WAAWnhI,EAAEiB,KAAMq/D,QAKnC,OADAkd,OAASq7C,eAAez0F,QAASo5C,QClFtByvD,CAAoBtlI,KAAM+K,KAAMi5H,kDAQnClrG,WAAW,IAAAzjB,OAAArV,KACT4M,OAAS5M,KAAK4M,SACd2mD,WAAa3mD,OAAO2mD,WACpBgyE,kBAAoBvlI,KAAKm0H,gBAEzBruH,KADkB9F,KAAKi0H,iBACAhsH,IAAI,SAAA5P,GAAC,OAAIA,EAAEiB,MAClCklB,aAAexe,KAAK+K,OAAO0T,kBAC3B+5E,KAAOx4F,KAAKw4F,OACZ38D,OAAS28D,KAAKh1F,GAAKg1F,KAAKh1F,EAAEylC,QAAQ1nC,QAAQ,GAC1Cq6B,MAAQ48D,KAAKt6D,GAAKs6D,KAAKt6D,EAAE+K,QAAQ1nC,QAAQ,GACzCo7F,aAAe/vF,OAAO+vF,aACtB6F,mBAAqBl2B,sBAAsBqwB,aAAc38F,KAAK64B,KAAMjsB,OAAOgwF,aAC3E37D,UAAYr0B,OAAOq0B,UACnBy4F,mBAAqB/wC,6BAAc7vD,WACnChQ,WAAarwB,OAAOkmB,OAAOH,cAAczK,OAAO,SAAA9Z,GAAC,OAAIA,EAAE2kB,IAAI/jB,OAAS+6F,yBAAUh3F,YAC/EqJ,IAAI,SAAAhO,GAAC,OAAIA,EAAEgI,QA+BhB,OA9BAy3H,mBAAmBl7C,QAAQgkB,mBAAmBz/F,KAAK,MAAM,GACzD22H,mBAAmBl7C,QAAQv9C,WAAW,GrH+D1B,SAAdukG,YAAe1sG,UAAWonE,YAAarnE,IACzC,IAAM4sG,gBAAkB78C,YAAY1pE,WAAO4Z,WAAY,YAAa,GAAjC,IAAAnd,OAAyCkd,KACvD+vD,YAAY68C,gBAAiB,QAAS,IAC9CryE,KAAK,IAAK8sC,YAAYhiE,GAClBk1B,KAAK,IAAK8sC,YAAYhiE,GACtBk1B,KAAK,QAAS8sC,YAAYtkE,OAC1Bw3B,KAAK,SAAU8sC,YAAYrkE,QAC5C4pG,gBAAgBryE,KAAK,YAArB,QAAAz3C,OAA0Ckd,GAA1C,MqHrEI2sG,CAAY1sG,WACRoF,EAAG,EACH16B,EAAG,EACHo4B,YACAC,eAJO,MAAAlgB,OAKF3b,KAAK64B,OAEd74B,KAAKy1H,QAAUz1H,KAAKuiI,mBAAmBgD,kBAAmBz/H,MAE1D+jF,+BACI9+E,KAAM/K,KAAKy1H,QACX38F,oBACA++C,SAAU,IACV7iD,OAAQ,IACRyS,KAAM,SAAAA,KAACouC,OAAQ71B,MAAOjoD,GAClB,IAAM0hI,gBAAkB,GAAA99G,OAAG6mF,mBAAmB,GAAtB,KAAA7mF,OAA4B7V,KAAK/N,IAAMA,GAAI0J,cACnEu+C,MAAMlmB,MAAM,UAAW,SACvBwpG,oBACInnC,MAAO9mF,OACPyjB,UAAWknB,MAAMpvB,OACjBilD,cACA50C,UAAWw4F,gBACXlmE,sBACAz5B,SACAivD,MAAO,SAAAA,MAAA1wF,GAAC,OAAIywB,WAAW7gB,IAAI,SAAA3O,KAAG,OAAIjB,EAAEk3H,MAAMj2H,OAAMyJ,KAAK,WAI1D/C,mEAWSiuH,eAAgBnoH,MAAM,IAAA6R,OAAA3X,KAAA4iI,qBAAA8C,kBACMrU,2BAAmBrxH,KAAM8F,MAD/B,GAC/B6/H,gBAD+B/C,qBAAA,GACdgD,iBADchD,qBAAA,GAEhCiD,gBAAkBF,gBAAgB9T,iBAClCiU,iBAAmBF,iBAAiB/T,iBAW1C,OAVA7xH,KAAKolI,WACDlnG,EAAGynG,gBAAgB/T,WAAa,EAChCpuH,EAAGoiI,iBAAiBhU,WAAa,GAErC5xH,KAAKmlI,cACDjnG,EAAGynG,gBAAgBhjG,SAAW,EAC9Bn/B,EAAGoiI,iBAAiBjjG,SAAW,GAGnC3iC,KAAKm3H,aACElJ,eAAehmH,IAAI,SAAC8C,KAAMhT,GAAP,OAAa4f,OAAKqiH,gBAAgBjvH,MAEpDg7H,SAAUJ,gBAAgBhU,KAC1BqU,eAAgBH,gBAAgB9tI,IAAM,EACtCkuI,UAAWL,iBAAiBjU,KAC5BuU,gBAAiBJ,iBAAiB/tI,IAAM,8DAKhD,OAAOiI,KAAKmlI,iFAIZnlI,KAAKg3H,eAAiBvE,kCAA0BzyH,8DASnCk+B,EAAG16B,GAChB,IAAKxD,KAAK+K,OACN,OAAO,KAEX,IACI/R,MACA68E,OACAswD,gBACAhY,iBACA/hD,WACA5pD,YACA4jH,WAAa,KACX/nH,UAAYre,KAAK+K,OACjBuT,QAAUD,UAAUE,UACpBC,aAAeH,UAAUI,kBACzB+5E,KAAOx4F,KAAKw4F,OACZztF,KAAOuT,QAAQvT,KACfmsH,SAAWl3H,KAAKm3H,UAjBHE,sBAuBXr3H,KAAKwxH,oBAJL54B,OAnBWy+B,sBAmBXz+B,OACAE,OApBWu+B,sBAoBXv+B,OACA26B,cArBW4D,sBAqBX5D,cACAC,cAtBW2D,sBAsBX3D,cAGJD,gBAAkBp6B,8BAAe56F,YAEjCzF,MADOw/F,KAAKh1F,EACCymC,OAAOzmC,GACpB2qH,iBAAmB3vG,aAAas6E,QAAQ72F,MACxCkkI,gBAAkBzS,gBAGlB16H,MADOw/F,KAAKt6D,EACC+L,OAAO/L,GACpBiwF,iBAAmB3vG,aAAao6E,QAAQ32F,MACxCkkI,gBAAkB1S,eAGlB0S,kBAAoBp8D,gCAAiB3rE,cACrCy3E,OAASqhD,SAASl+H,QAGlBmtI,kBAAoBp8D,gCAAiB1rE,WACrC+tE,WAAai6D,sBAAI,IAAIvvH,IAAI/L,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE81H,sBAEzCt4C,OAASqhD,SADTl+H,MAAQmzE,gBAAgBC,WAAYpzE,SAGxC,IAAMyP,IAAMotE,QAAUA,OAAOn0E,OAC7Bm0E,QAAUA,OAAOtiE,KAAK,SAACyhE,GAAIsxD,IAAL,OAAYtxD,GAAGv/C,OAAOjyB,EAAI8iI,GAAG7wG,OAAOjyB,IAC1D,IAAK,IAAIzL,EAAI,EAAGA,EAAI0Q,IAAK1Q,IAAK,CAC1B,IAAM4gE,MAAQkd,OAAO99E,GACf09B,OAASkjC,MAAMljC,OACrB,GAAIyI,GAAKzI,OAAOyI,GAAKA,GAAMzI,OAAOmG,MAAQnG,OAAOyI,GAAM16B,GAAKiyB,OAAOjyB,GAAKA,GAAMiyB,OAAOoG,OAASpG,OAAOjyB,EAAI,CACrG4iI,WAAaztE,MACb,MAEJytE,WAAa,KAGjB,IAAMznH,OAASynH,YAAcA,WAAW7W,MAIxC,OAHI5wG,SACA6D,YAAcxiB,KAAKs6H,uBAAuB37G,OAAQynH,WAAW7/C,MAE1D6/C,YACHt9G,YAAas9G,WAAW3wG,QACxBoD,GAAIrW,YACJ+3G,QAASv6H,KAAK64B,MACdutG,6DAIJ,OAAOpmI,KAAKolI,4DAIZ,OAAO,oDAhPP,MAAO,4DAQP,OAAOrpC,qFAYWhuB,KAAM0qD,UACxB,IAAM7rH,OAASuoH,qBAAUH,cAAcjnD,KAAM0qD,UAEvCrF,WADWxmH,OAAO2/F,SACI73D,MAAMppC,MAC5B0wC,UAAYpvC,OAAOovC,UAKzB,OAHIo3E,aACAp3E,UAAUjuB,QAAUqlG,YAEjBxmH,uBC/FFmvF,mCACTY,aAAc,aACd17D,UAAW,GACX27D,YhELuB,OgEMvBlC,aACI2Q,YACIxwG,KAAM,SACN60H,WAAY,EAAG,GAAI,GAAI,KAE3BxkB,OACIrwG,KAAM,SACN60H,WAAY,EAAG,EAAG,GAAI,KAE1BtkB,QACIvwG,KAAM,SACN60H,WAAY,EAAG,EAAG,GAAI,MAG9BsC,aAAc,GACdh2E,WACInhD,KAAM,YAEV04D,YACI0/B,OAAQ,QACR9M,SAAU,KAEdomB,UACI73D,SACAxW,KACA16B,KACAo+C,MACA+S,MACAm6C,eACI91G,MAAO,IAEXsoI,aACItoI,MAAO,KAGf4iI,QACIvwB,WACIpqE,UAAS,GAAAtlB,OhE3CM,OgE2CN,0BAEbkgH,SACI56F,UAAS,GAAAtlB,OhE9CM,OgE8CN,wBAEbmgH,UACI76F,UAAS,GAAAtlB,OhEjDM,OgEiDN,2BC1CqB4qH,cAAA,SAAC1kH,QAAW,IAC1Cg0D,OAAwCh0D,OAAxCg0D,OAAQ/8C,UAAgCjX,OAAhCiX,UAAWiwD,MAAqBlnE,OAArBknE,MAAO9nD,UAAcpf,OAAdof,UAC5BpN,MAAQ80D,6BAAc7vD,WACtB+N,MAAQhT,MAAMi/B,UAAU,QAAQ/nD,KAAK8qE,OAAQkT,OAC7Cy9C,WAAa3/F,MAAMssB,QAAQn+B,OAAO,QAUxC,OARAnB,MAAMu/B,KAAK,QAASnyB,WAAa,IACjCulG,WAAW/+F,KAAK,SAAUpvC,GACtB,IAAMw6D,UAAY81B,6BAAc3oF,MAC1BmzD,MAAQ96D,EAAE86D,UAChB16D,OAAOwc,QAAQk+C,OAAOrqD,QAAQ,SAAAsqD,MAAI,OAAM9+C,MAAM8+C,KAAK,KAAOP,UAAUO,KAAKA,KAAK,GAAIA,KAAK,QAG3FvsB,MAAMosB,OAAOvrB,SACNb,MAAMj9B,MAAM48H,YACF/+F,KAAK,SAAUpvC,GACZ,IAAMw6D,UAAY81B,6BAAc3oF,MAC1By1B,OAASp9B,EAAEo9B,OACXw7F,YAAc54H,EAAEyhC,UAChB8nB,QAAmBt0C,IAAdmoB,OAAOmsB,GAAmBnsB,OAAOmsB,GAAKnsB,OAAOyI,EAClDy2B,QAAmBrnD,IAAdmoB,OAAOk/B,GAAmBl/B,OAAOk/B,GAAKl/B,OAAOjyB,EAClDogB,KAAI,KAAAjI,OAAQ8Z,OAAOyI,EAAf,KAAAviB,OAAoB8Z,OAAOjyB,EAA3B,OAAAmY,OAAkCimC,GAAlC,KAAAjmC,OAAwCg5C,IAClDt8D,EAAE4oC,WAAa4xB,UAAU2rB,QAAQnmF,EAAE4oC,WAAW,GAC9C4xB,UAAUO,KAAK,IAAKxvC,MACpBnrB,OAAOwc,QAAQg8G,aAAanoH,QAAQ,SAAAs7B,UAAQ,OAAIyuB,UAAU/4B,MAAMsK,SAAS,GAAIA,SAAS,4rCCbzFqiG,6qBAAkBhF,yRA0C/B,MAAO,+DAUM12H,KAAMwhG,SAAU/T,MAyB7B,IAzBgD,IAAb5rF,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC5CywE,UAD4ColD,eAKxC3K,sBAAc93B,MAFdC,MAHwCwiC,eAGxCxiC,MACAC,MAJwCuiC,eAIxCviC,MAEFl6E,aAAexe,KAAK+K,OAAO0T,kBANe44G,sBAcxCr3H,KAAKwxH,oBANL54B,OARwCy+B,sBAQxCz+B,OACAE,OATwCu+B,sBASxCv+B,OACAo6B,QAVwCmE,sBAUxCnE,QACAC,QAXwCkE,sBAWxClE,QACAp6B,WAZwCs+B,sBAYxCt+B,WACAC,WAbwCq+B,sBAaxCr+B,WAEFigC,OAASlgC,aAAenD,yBAAUh3F,UAClCs6H,OAASlgC,aAAepD,yBAAUh3F,UAClCtF,IAAM2/H,OAASvqB,SAAS/uD,EAAKu5E,OAASxqB,SAASzqG,EAAI,KACnDmrH,cAAgB7iB,SAAS73D,MACzB0+E,WAAahE,eAAiBA,cAAc9jH,MAC5C+jH,gBAAkB7wG,aAAa40G,aAAe50G,aAAa40G,YAAYnxH,MACvEi+F,YAAclgG,KAAKkgG,cACnBmF,UAAY7M,KAAK9jD,MAtByBwtF,eAuBbt1H,OAAOo2C,OAA/Bm/E,QAvBqCD,eAuBxChkG,EAAekkG,QAvByBF,eAuB5B1+H,EAvB4BkjI,aAwBjB95H,OAAO+kH,KAA3BgV,MAxBqCD,aAwBxCxoG,EAAa0oG,MAxB2BF,aAwB9BljI,EACTzL,EAAI,EAAG0Q,IAAMsC,KAAKrJ,OAAQ3J,EAAI0Q,IAAK1Q,IAAK,CAC7C,IAAIohI,SAAG,EACH0N,UAAI,EACJxL,UAAI,EACJjC,SAAG,EACD/gI,EAAI0S,KAAKhT,GACTsjB,IAAMhjB,EAAEk3H,MACV32B,SAEAiuC,MADA1N,IAAM1gC,MAAM6F,cAAcjmG,EAAE6lC,GAAKikG,SACpBwE,OAGb7tC,SAEAuiC,KAAe,QADfjC,IAAM1gC,MAAM4F,cAAcjmG,EAAEmL,GAAK4+H,SACXhJ,IAAMwN,MAAQ,MAGnChuC,SACDugC,IAAM,EACN0N,KAAO3mC,YAAYtkE,MACdtnB,MAAM8kH,OAEPiC,KADAjC,KAAOwN,MAAQ,IAKlB9tC,SACDsgC,IAAM,EACNiC,KAAOn7B,YAAYrkE,OACnBgrG,KAAO1N,KAAOwN,MAAQ,GAGtBzT,UACA2T,KAAOpuC,MAAM6F,cAAcjmG,EAAEupD,IAAM+kF,MACnCvN,KAAOwN,MAAQ,EACfvL,MAAQuL,MAAQ,GAGhBzT,UACAkI,KAAO3iC,MAAM4F,cAAcjmG,EAAEs8D,IAAMiyE,MACnCzN,KAAOwN,MAAQ,EACfE,MAAQF,MAAQ,GAEpB,IAAM7sG,SACA3c,QA5CuCk8G,eA6CjBlK,eAAgB98G,MAAOha,EAAG4J,MAAOlK,IACvDq3H,4BAAe/pB,oBAAWgqB,kCADxB36E,MA7CqC2kF,eA6CrC3kF,MAAO46E,SA7C8B+J,eA6C9B/J,SAOf,GAJAx1F,MAAMw/F,OAAS5kF,MACfv3B,KAAKwyG,cACLxyG,KAAKyyG,cAAgBN,SACrBnyG,KAAKgzG,mBACA77G,MAAM6kH,OAAS7kH,MAAM8kH,KAAM,CAC5B,IAAMzgE,OACFxF,SACA19B,QACIyI,EAAGi7F,IACH31H,EAAG41H,IACHx3E,GAAIilF,KACJlyE,GAAI0mE,MAERvhG,YACAy1F,MAAOl0G,IACPkrE,IAAKluF,EAAEkuF,IACP7hE,OAAQrJ,IACRk+G,MAAOlhI,EAAEkuF,IACTppE,WAEJw7C,MAAM13B,UAAY0vF,uBAAuBt4H,EAAGN,EAAGgT,KAAM/K,MACrD61E,OAAO3vE,KAAKyyD,OACZ34D,KAAKw5H,WAAWnhI,EAAEiB,KAAMq/D,QAIhC,OADAkd,OAASq7C,eAAelxH,KAAM61E,0EAIZssD,QAASC,QAASe,UAAWC,YAC/C,OACIpgF,QACI9kB,EAAIikG,SAAW,EACf3+H,EAAI4+H,SAAW,GAEnBzQ,MACIzzF,EAAGilG,UACH3/H,EAAG4/H,qEAxJX,OAAOrnC,kFAWP,MAAO,+CAWP,OAAO+qC,+BClDFC,uBAAa,OACbC,sBAAY,MACZC,uBAAa,OACbC,uBAAa,OACbC,wBAAc,QACdC,sBAAY,MACZC,uBAAa,OACbC,yBAAe,SACfC,uBAAa,6fCN1B,oBAqBMC,iBAAmB,SAAnBA,iBAAoBj7B,UAEtB,IAAK,IAAMjzG,OAAOizG,SACe,iBAAlBA,SAASjzG,OAChBizG,SAASjzG,MACLgS,MAAOihG,SAASjzG,QC1BjBmuI,kBDyCO,WAClB,IAAMC,mBACAC,YACFC,iBAAkB,SAAAA,iBAACC,KACfF,WAAWG,eAAiBD,KAEhCE,kBAAmB,SAAAA,kBAAC57B,KAAMD,UACtB,IAAI87B,eACEC,KAAOP,gBAAgBv7B,MACvB4oB,QAAUtlD,kBAAmBy8B,UAGnC,GAAI+7B,KACAD,eAAiBC,KAAKhgI,IAAI,SAACigI,cACvB,IAAMC,QAGN,OA1DS,SAAvBC,qBAAwB14D,KAAMllC,WAAY0hE,SAAUm8B,WACtD,IAAK,IAAM/uI,OAAOkxC,WACd,GAAI/xC,OAAOqB,eAAe5B,KAAKsyC,WAAYlxC,KAAM,CAC7C,IAAIgvI,UAAI,EACJ/zC,eAAS,EACP31E,IAAM4rB,WAAWlxC,KACnBg2B,eAAe1Q,MACf8wD,KAAKp2E,QACL8uI,qBAAqB14D,KAAKp2E,KAAMslB,IAAKstF,SAAUm8B,YACzB,iBAARzpH,MAAqB0pH,KAAO1pH,IAAItS,MAAM,OAASg8H,KAAK,KAAOD,eAEvD/6H,KADlBinF,UAAYpnB,WAAU5lE,WAAV,GAAW2kG,UAAXvwF,OAAA4sH,gCAAwBD,KAAKltH,MAAM,EAAGktH,KAAK5mI,cAEnDguE,KAAKp2E,KAAOi7F,WAGhB7kB,KAAKp2E,KAAOslB,KAyCRwpH,CAAqBD,KAAMD,aAAcnT,QAAS5oB,MAClDq7B,iBAAiBW,KAAK57B,UACf47B,WAER,CACH,IAAM57B,SAAWwoB,QAAQxoB,SAEzBi7B,iBAAiBj7B,UACjBy7B,eAAiBjT,QAGrB,OAAOiT,gBAEXQ,iBAAkB,SAAAA,iBAACt8B,UAAwB,QAAA9+B,KAAAhoE,UAAA1D,OAAXmgB,OAAW,IAAAhZ,MAAAukE,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXxrD,OAAWwrD,KAAA,GAAAjoE,UAAAioE,MACvC,IAAM4+B,cAAgB07B,WAAWG,eAE3Bp7B,WADNR,SAAaA,oBAAoBrjG,MAAsBqjG,UAAZA,WAChBjkG,IAAI,SAACwkG,UAC5B,IAAMg8B,iBAAmBx8B,cAAcQ,SAASN,MAChD,OAAOs8B,iBAAiBpvI,OAAjBkO,MAAAkhI,iBAA2B5mH,UAEtC,OAA4B,IAArB6qF,UAAUhrG,OAAegrG,UAAU,GAAKA,WAEnDg8B,cAAe,SAAAA,cAAAv8B,MAAI,OAAIw7B,WAAWG,eAAe37B,OASjDw8B,cAAe,SAAAA,cAACN,UAAWr8B,WACvB07B,gBAAgBW,WAAar8B,WAEjC48B,oBAAqB,SAAAA,oBAAC18B,UAClB,IAAM6oB,QAAUtlD,kBAAmBy8B,UAEnC,OADAs7B,iBAAiBzS,QAAQxoB,UAClBwoB,UAGf,OAAO4S,WAvDW,+KEjCf,0BAAMkB,gBAAcC,wBAAAC,mBACtBC,uBAAyBlO,gBADHgO,wBAAAC,gBAEtBC,sBAAwBjN,cAFF+M,wBAAAC,gBAGtBC,uBAAyBnQ,gBAHHiQ,wBAAAC,gBAItBC,uBAAyBjJ,gBAJH+I,wBAAAC,gBAKtBC,wBAA0BvH,kBALJqH,wBAAAC,gBAMtBC,uBAAyBvC,gBANHqC,wBAAAC,gBAOtBC,sBAAwBjE,cAPF+D,wBAAAC,gBAQtBC,uBAAyB7T,sBARH4T,qDCHdppF,EAAI,IAIJ17C,EAAI,IA0EJglI,KAAO,OAKPC,QAAU,UAKVC,IAAM,MAKNC,IAAM,MAUN56B,sBAAQ,QAKRC,sBAAQ,QAKRF,qBAAO,OA6BPY,eAAO,OAIPC,gBAAQ,QAiBRi6B,KAAO,OAIPC,OAAS,QAITC,OAAS,QAITC,YAAc,YAQdC,WAAa,WA4Bbn7B,iBAAS,SAITD,gBAAQ,QAoCRq7B,QAAU,UAIVC,UAAY,6LChPzB,IAAAC,eAAAC,6BAAAC,yBDQsB,aCRtBD,6BAAAC,sBAEKb,SAFLY,6BAAAC,sBAGKZ,YAHLW,6BAAAC,sBAIKt7B,0BAJLq7B,6BAAAC,sBAKKr7B,0BALLo7B,6BAAAC,sBAMKv7B,yBANLs7B,6BAAAC,sBDuGsB,aCvGtBD,6BAAAC,sBD4GsB,aC5GtBD,6BAAAC,sBDiHyB,gBCjHzBA,2TC+BeC,6fArCP,MAAM,IAAIh6H,MAAMw/D,UAAUC,wDAY1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8DAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,kEAW1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,mUCzCbw6D,yeAQb,MAAM,IAAIj6H,MAAMw/D,UAAUC,4DAS1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,qxCCmFnBy6D,kCAzFX,SAAAA,eAAsB,IAAA/0H,kKAAAg1H,CAAAlqI,KAAAiqI,cAClB/0H,MAAAi1H,wCAAAnqI,KAAAoqI,6BAAAH,cAAA/xI,KAAA8H,OADkB,QAAAotE,KAAAhoE,UAAA1D,OAAN2oI,KAAM,IAAAxhI,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANg9D,KAAMh9D,MAAAjoE,UAAAioE,MAAA,OAElBn4D,MAAKm1H,KAAKA,MAFQn1H,0YAPC80H,gTAanB,OAAI5kI,UAAO1D,QACP1B,KAAKsqI,MAALllI,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKsqI,0CAGH,QAAAj8D,MAAAjpE,UAAA1D,OAAJ+R,GAAI,IAAA5K,MAAAwlE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAJ76D,GAAI66D,OAAAlpE,UAAAkpE,OACT,OAAI76D,GAAG/R,QACH1B,KAAKqqI,OAAOvhI,QAAQ,SAAAzQ,GAAC,OAAIA,EAAE0S,KAAK0I,GAAG,MACnCzT,KAAKuvH,MAAQ97G,GAAG,GACTzT,MAEJA,KAAKuvH,sDAWZ,OADavvH,KAAKqqI,OACNpiI,IAAI,SAAAsiI,QAAM,OAAIA,OAAO1xC,aAAa,yCAS9C,OAAO74F,KAAKqqI,OAAO,GAAGxvI,mDAItB,OAAOmF,KAAKqqI,OAAOpiI,IAAI,SAAA5P,GAAC,OAAIA,EAAEiK,aAAYS,KAAK,yDAS/C,OAAO/C,KAAKqqI,OAAO,GAAGnyH,qDAGlByG,QACJ,OAAO3e,KAAKqqI,OAAO,GAAGtqI,OAAO4e,kDAU7B,OAAO3e,KAAKqqI,OAAO,GAAG/zH,0DAUtB,OAAOtW,KAAKqqI,OAAO,GAAGG,+DAStB,OAAOxqI,KAAKqqI,OAAOpiI,IAAI,SAAA5P,GAAC,OAAIA,EAAEke,gBAAexT,KAAK,gvCC9FrC0nI,8CAOjB,SAAAA,eAAanyI,MAAM,IAAA4c,MAAA,+JAAAw1H,CAAA1qI,KAAAyqI,iBACfv1H,MAAAy1H,qCAAA3qI,KAAA4qI,0BAAAH,gBAAAvyI,KAAA8H,QACK6qI,OAAOvyI,MAFG4c,sYAPqB80H,6SAmBpC,OAAI5kI,UAAK1D,QACL1B,KAAK8qI,QAAL1lI,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK8qI,4CAIZ,OAAI1lI,UAAG1D,QACH1B,KAAKuvH,MAALnqH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKuvH,kDAIZ,OAAOvvH,KAAK6qI,6DAUZ,MAAoB,YAAhB7qI,KAAKnF,OACamF,KAAK+K,OAAO2E,gBAAgBnE,aAAavL,KAAK6qI,UAC/C3yH,eACZ,SAAAhX,KAAG,OAAIA,2CAGZyd,QACJ,GAAIA,QAA6B,aAAnB3e,KAAKsW,UAA0B,CACzC,IAAMlU,UAAYpC,KAAK+K,OAAO2E,gBAAgB/D,eAAe3L,KAAK6qI,UAAUn/H,SAAS3L,OAC/EgrI,SAAW,IAAIjrI,iCAAkBsC,WACvCuc,OAASA,OAAO1W,IAAI,SAAAhO,GAAC,OAAI8wI,SAASxiI,cAActO,KAEpD,OAAO0kB,qDAUP,GAAI3e,KAAKsW,YAAcyzD,gCAAiB1rE,SAAU,CAC9C,IAAM2sI,WAAahrI,KAAK+K,OAAO2E,gBAAgB/D,eAAe3L,KAAK6qI,UAAUn/H,SAAS3L,OACtF,OAAO,SAAAmB,KAAG,OAAIpB,iCAAkBsG,SAASlF,IAAK8pI,aAElD,OAAO,SAAA9pI,KAAG,OAAIA,qDAUd,OAAQlB,KAAK6qI,8CAWb,OADiB7qI,KAAK+K,OAAO0T,kBAAkBze,KAAK6qI,UAAUjsH,IAC9C/jB,+CAWhB,IAAMsrB,SAAWnmB,KAAK+K,OAAO0T,kBAAkBze,KAAK6qI,UAAUjsH,IAC9D,OAAOuH,SAAS7P,SAAW6P,SAAStrB,qDAUpC,OADmBmF,KAAK+K,OAAO2E,gBACbtE,YAAYpL,KAAK6qI,UAAUI,qEAQzCC,SACJ,OAAOlrI,KAAK6qI,WAAaK,QAAQL,2DASjC,OAAOj0D,yBAAyB52E,KAAK+K,OAAQ/K,KAAK6qI,imCCpI1D,IAmFMM,6BAAe,SAAfA,aAAgBp6H,UAAWnI,QAC7B,IAAMyhI,QAUN,OARAzhI,QAAUA,OAAOE,QAAQ,SAACwC,OAClBA,iBAAiB2+H,eACjBI,KAAKnkI,KAAKoF,OACVA,MAAMP,KAAKgG,YAEXs5H,KAAKnkI,KAAK,IAAIukI,0BAAen/H,OAAOP,KAAKgG,cAG1Cs5H,MAWEe,gCAAkB,SAAlBA,gBAAmBr6H,UAAWnE,QAAW,IAAA2jH,MAAA8a,+BACjBpC,KAAMC,SAASjhI,IAAI,SAACW,QACjD,IAAM0iI,iBA5CU,SAAlBC,gBAAmB3+H,OAAQ/R,MAC7B,IAAM2tB,aACA5f,OAASgE,OAAO/R,MAQtB,OANM+N,OAAO,aAAcC,OAGvB2f,UAAU,GAAK5f,OAAO,OACtB4f,UAAU,GAAK5f,OAAO,QAHtB4f,UAAU,GAAK5f,OAKZ4f,UAkCsB+iH,CAAgB3+H,OAAQhE,QAC3C4iI,WAAaL,6BAAap6H,UAAWu6H,iBAAiB,KAK5D,OAHIA,iBAAiB,KACjBE,UAAU,GAAKL,6BAAap6H,UAAWu6H,iBAAiB,KA/GhD,SAAdG,YAAeC,WAAY7wI,MAC7B,IAAM2uB,qBACAC,mBACAkiH,oBACAC,uBAENF,WAAW5iI,QAAQ,SAAC+iI,UAAW5pI,OAC3B4pI,UAAU/iI,QAAQ,SAACwC,ONsCF,cMrCTA,MAAMzQ,QACN2uB,aAAavnB,OAAOiE,KAAKoF,ON+NjB,aM9NRA,MAAMgL,UAAyBq1H,YAAY1pI,OAAOiE,KAAKoF,OAASsgI,eAAe3pI,OAAOiE,KAAKoF,QAE3Fme,WAAWxnB,OAAOiE,KAAKoF,WAKnC,IAAMwgI,cAAgBriH,WAAW,GAAG/nB,QAAU+nB,WAAW,GAAKA,WAAW,GAAG/nB,OAAS,GAGrF,IAAKgqI,WAAW,KAEZjiH,WAAW,GAAK5uB,OAASquI,QAAUz/G,WAAW,MAE9CA,WAAW,GAAK5uB,OAASquI,QAAUz/G,WAAW,MAE9CD,aAAa,MAEbA,aAAa,GAAKA,aAAa,GACT,IAAlBsiH,eAAqB,CACrB,IAAMC,iBAAapwH,OAAAqwH,kCAAOxiH,aAAa,IAApBwiH,kCAA2BxiH,aAAa,KACvD3uB,OAASquI,SACT1/G,aAAa,GAAKuiH,cAAcA,cAAcrqI,OAAS,IAAMqqI,cAAcA,cAAcrqI,OAAS,OAElGqqI,cAAczkI,QAAQ,EAAG,IAEzBkiB,aAAa,MAEjBA,aAAa,GAAbwiH,kCAAsBD,eAQ9B,OAJIviH,aAAa,GAAG9nB,QAAU8nB,aAAa,GAAG9nB,QAAUoqI,cAAgB,IACpEtiH,aAAa,MAAb7N,OAAAqwH,kCAAsBxiH,aAAa,IAAnCwiH,kCAA0CxiH,aAAa,KACvDA,aAAa,QAGb5gB,OAAQ4gB,aAAavhB,IAAI,SAACipB,KAAMn5B,GAAP,OAAoB,IAANA,EACnC0xB,WAAW1xB,GAAG4jB,OAAO6N,aAAazxB,IAAMyxB,aAAazxB,GAAG4jB,OAAO8N,WAAW1xB,MAC9E+wB,cAAUnN,OAAAqwH,kCAAMxiH,aAAa,IAAnBwiH,kCAA0BxiH,aAAa,KACjDR,YAAQrN,OAAAqwH,kCAAMviH,WAAW,IAAjBuiH,kCAAwBviH,WAAW,KAC3CxS,YAAQ0E,OAAAqwH,kCAAML,YAAY,IAAlBK,kCAAyBL,YAAY,KAC7C/0H,eAAW+E,OAAAqwH,kCAAMJ,eAAe,IAArBI,kCAA4BJ,eAAe,MA6D/CH,CAAYD,UAAW5iI,UARgB,GAC3CqjI,SAD2C1b,MAAA,GACjC2b,YADiC3b,MAAA,GAWtCx1G,KAKRkxH,SALArjI,OACYujI,cAIZF,SAJAnjH,WACUsjH,YAGVH,SAHAjjH,SACUqjH,kBAEVJ,SAFAh1H,SACaq1H,qBACbL,SADAr1H,YAGQkD,QAKRoyH,YALAtjI,OACY2jI,iBAIZL,YAJApjH,WACU0jH,eAGVN,YAHAljH,SAIJ,OACIjO,UACAoxH,4BACAC,wBACAC,oCACAC,0CACAxyH,gBACA2yH,qBARAP,YAFAj1H,SAWAy1H,wBATAR,YADAt1H,YAWA21H,kCACAC,q4BC1IaG,uiBAQb,MAAM,IAAI58H,MAAMw/D,UAAUC,0EAS1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wEAS1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8DAI1B,OAAIpqE,UAAK1D,QACL1B,KAAK4sI,WAAan9D,eAAezvE,KAAK4sI,eAANxnI,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACzBpF,MAEJA,KAAK4sI,iEAWA77H,UAAWnE,QAEvB,OADA5M,KAAKuxH,UAAU6Z,gCAAgBr6H,UAAWnE,SACnC5M,KAAKuxH,wDAWZ,OAAInsH,UAAO1D,QACP1B,KAAK6sI,UAALznI,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK6sI,0DAWZ,OAAIznI,UAAO1D,QACP1B,KAAK8sI,YAAL1nI,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK+sI,2EAU0B,IAAvBC,SAAuB5nI,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAARwD,OAAQxD,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAA2/H,oBAAAC,6BACTC,8BAAkB/D,IAAKxgI,OAAOmS,KAAMiyH,UAD3B,GAC/BI,UAD+BH,oBAAA,GACpBI,QADoBJ,oBAAA,GAAAK,oBAAAJ,6BAETC,8BPKf,SOLyCvkI,OAAOkR,QAASkzH,UAFjC,GAE/BO,UAF+BD,oBAAA,GAEpBE,QAFoBF,oBAAA,GAYtC,OARAttI,KAAKgtI,UACD3xH,IAAKgyH,QACL3xH,OAAQ8xH,UAEZxtI,KAAKytI,YACDpyH,IAAK+xH,UACL1xH,OAAQ6xH,YAELvtI,0BC5GF0tI,WACTn1F,OAAQ6kE,6BACRj0E,KAAMi1E,mBACNnnG,SAAUwnG,mBACVhkF,KAAM8xF,mBACN73E,MAAOi2E,qBACP9oB,MAAOgrB,sBCHE8gB,sCACTl3H,UAAW46F,2BAAU3B,KACrB94F,YAAay6F,2BAAU3B,KACvBz4F,SAAUo6F,2BAAU1B,KACpB53F,QAASs5F,2BAAU5B,OACnBt3F,WAAYk5F,2BAAU5B,kgBCK1B,IA8Gam+B,mCAAsB,SAAtBA,oBAAuBC,SAAUtc,UAAWuc,aAAchK,SAAUv7B,QAASwlC,aACtF,IAAIC,QACIC,UAA2BnK,SAA3BmK,UAAWvyC,YAAgBooC,SAAhBpoC,YACbwyC,eACEtlI,OAAkB2oH,UAAlB3oH,OAAQ3G,MAAUsvH,UAAVtvH,MAEVgG,IADgB6lI,aAAdK,UACa,GAAAxyH,OAAIkyH,SAAJ,YAEfO,cAAgBC,WAAWR,SAAU5rI,OAuB3C,OAtBA2G,OAAOE,QAAQ,SAACwC,MAAOi/F,WACnByjC,QAAUK,WAAWR,SAAU5rI,MAAOsoG,UAAWojC,qCAAiBriI,MAAMgL,YACxE,IAEI27C,KAFEq8E,WAzHQ,SAAhBC,cAAiBC,SAAUljI,MAAOwiI,aAAcvlC,QAASwlC,aAC3D,IAAIU,gBACIxsI,MAA+BusI,SAA/BvsI,MAAOsoG,UAAwBikC,SAAxBjkC,UAAWsjC,SAAaW,SAAbX,SAClBjhI,OAAqBkhI,aAArBlhI,OAAQ41B,SAAasrG,aAAbtrG,SACRksG,SAA0BnmC,QAA1BmmC,SAAUC,YAAgBpmC,QAAhBomC,YACZC,kBAAoBhiI,OAAO4rF,MAAQ5rF,OAAO4rF,KAAKq1C,cAK/CgB,gBAFgD,mBAAtBD,kBAChC,kBAAMA,mBAAoBA,mBACcF,SAAUC,aAC9Ch2C,WAAYrtF,MAAMutF,aAClBk1C,0BAIJ,IAAKc,eACD,SAYAJ,gBV8NY,SU/NZjsG,UAFoBqrG,WAAa5pI,GADjCurG,iCAJAL,KAIAK,iCAHAJ,QAGAI,iCAFAN,IAEAM,iCADAP,SAKkC1E,WAEhB/nE,SAEtB,IAAM8rG,YACFz1G,GAAE,GAAAld,OAAKkyH,SAAL,KAAAlyH,OAAiB1Z,MAAjB,KAAA0Z,OAA0B4uF,WAC5BjyG,KAAMgT,MAAMiL,cACZjL,MAAOA,MAAMhJ,WACb4V,aAAc5M,MAAM4M,eACpBorF,YAAamrC,gBACbz8B,cAAc,EACdjT,MAAM,EACNlkG,KAAM8yI,qCAAiBriI,MAAMgL,YAKjC,OAHAu4H,eAAez8E,WAAa9mD,MAAMvL,OAAO8uI,eAAez8E,YACxDy8E,eAAe93H,OAASzL,MAAMvL,OAAO8uI,eAAe93H,QAE7C04D,eAAe6+D,WAAYO,gBA2EXN,EAAgBtsI,YAAOsoG,oBAAWsjC,mBAAYviI,MAAOwiI,aAAcvlC,QAASwlC,aAG1F9lI,IAAIsK,IAAIy7H,WAGT/7E,KAAOhqD,IAAIrP,IAAIo1I,UACVc,eAAgB,EACrB78E,KAAKrlD,OAAO0hI,aAJZr8E,KApEa,SAAnB88E,iBAAoBT,WAAYhjI,MAAOwiI,cAAiB,IAClDv7B,aAAiBu7B,aAAjBv7B,aAGR,OADmB,IAAIy8B,EADXtB,UAAUC,qCAAiBriI,MAAMgL,aAClBg4H,YAAc/7B,4BAiE1Bw8B,CAAiBT,WAAYhjI,MAAOwiI,cAM/C77E,KAAKypC,YAAYA,aACjBwyC,YAAYhoI,KAAK+rD,MACjBhqD,IAAIuK,IAAIw7H,QAAS/7E,QAGjBi8E,YAAYxsI,SACZuG,IAAIuK,IAAI47H,cAAeF,aACvBD,UAAUj3H,IAAIo3H,gBAGXF,aA+EEe,SAAW,SAAXA,SAAY79H,IAAKlQ,KAI1B,IAHA,IAAInJ,EAAI,EACJm3I,UAAY,GAEK,IAAdA,UAAmBn3I,EAAIqZ,IAAI1P,QAC1B0P,IAAIrZ,GAAGuK,aAAepB,IAAIoB,aAC1B4sI,SAAWn3I,GAEfA,IAEJ,OAAOm3I,o1EChOUC,iyBAAyBxC,qVAoB9BmB,aAAcvc,UAAW90F,QAASsxG,aAAa,IAAA74H,MAAAlV,KACjDovI,gBAEF52C,KACAs1C,aADAt1C,KAGA62C,YAEA9d,UAFA8d,YACA9mC,QACAgpB,UADAhpB,QAGA+mC,UAEAD,YAFAC,UACAC,aACAF,YADAE,aAME52C,aACF/vF,OAAQ0mI,UACRrtI,MAHAsmG,QAFCmmC,WAOD9lI,OAAQ2mI,aACRttI,MANAsmG,QADComC,cASCa,MAAQh3C,KAAKt6D,MACbuxG,MAAQj3C,KAAKh1F,MAgBnB,OAdC8rI,UAAWC,cAAczmI,QAAQ,SAACF,OAAQ7Q,GACvC,IAAM8C,KAAa,IAAN9C,EAAUqxI,IXoCb,SWnCJn3E,KAAa,IAANl6D,EAAUkM,EAAI07C,EAEvB/2C,OAAOlH,OAAS,EAChBosI,aAAatrG,SXiMT,OW/LJsrG,aAAatrG,SAAWttB,MAAK83H,WAAWnyI,MAE5Cu0I,aAAan9E,MAAQ27E,mCAAoB37E,KAAM0mC,WAAW5gG,GAAI+1I,cAC1DG,UAAWh8E,OAAStS,EAAI6vF,MAAQC,MAChC/zC,YAAaj/D,QAAQhL,SAASiqE,eAC/B6M,QAASwlC,eAETqB,iEAGIzmI,MAAO6vF,MAClB,IAAMg3C,MAAQh3C,KAAKt6D,EACbuxG,MAAQj3C,KAAKh1F,EACnBmF,MAAMkU,MAAM6yH,OACZ,IAAK,IAAI33I,EAAI,EAAGA,EAAIy3I,MAAM9tI,OAAQ3J,IAC9B,IAAK,IAAIojB,EAAI,EAAGA,EAAIq0H,MAAMz3I,GAAG2J,OAAQyZ,IACjCxS,MAAMgsH,OAAN,GAAAh5G,OAAgB6xF,0BAAiBt8C,uBAAjC,aAAoE,GAApEv1C,OAAwE5jB,EAAxE,KAA8Ey3I,MAAMz3I,GAAGojB,GAAGpE,UAGlG,IAAK,IAAIhf,GAAI,EAAGA,GAAI03I,MAAM/tI,OAAQ3J,KAC9B,IAAK,IAAIojB,GAAI,EAAGA,GAAIs0H,MAAM13I,IAAG2J,OAAQyZ,KACjCxS,MAAMgsH,OAAN,GAAAh5G,OAAgB6xF,0BAAiBt8C,uBAAjC,cAAAv1C,OAAoE5jB,GAAI,EAAxE,KAA8E03I,MAAM13I,IAAGojB,IAAGpE,UAC1F04H,MAAM13I,IAAGojB,IAAG8/F,aAAc,EAIlCtyG,MAAMkU,MAAM8yH,mEAGElzG,SAUd,IATA,IAAM9zB,MAAQ8zB,QAAQ9zB,QAChBinI,YAAcjnI,MAAM/P,IAAN,GAAA+iB,OAAa6xF,0BAAiB18C,sBAA9B,YACdr/B,SAAWgL,QAAQhL,WACnBo+G,MAAQp+G,SAASo+G,QACjBllE,SACFlkB,KACAqpF,MAPmB9lE,MAAA,SAAAA,MAUd+lE,KAAUtnI,KAEf,IADA,IAAMunI,SAAWH,MAAME,MAXJE,OAAA,SAAAA,OAYVC,KAAUC,MACf,IACMx3C,WADOq3C,SAASE,MACEtnI,UACvB+vF,WAAWz6D,EAAGy6D,WAAWn1F,GAAGsF,QAAQ,SAACoC,SAAU2iI,UAC5C3iI,SAASpC,QAAQ,SAACwC,MAAOi/F,WACrB,IAAMjxG,IAAOu0I,SAAD,GAAAlyH,OAAwCo0H,KAAxC,KAAAp0H,OAAgD4uF,WAAhD,IAAA5uF,OAAgBu0H,MAAhBv0H,OAAuB4uF,WAC7B1/B,IAAM+kE,YAAW,GAAAj0H,OAAIo0H,MAAJp0H,OAAWu0H,OAE9BrlE,KAAmC,IAA5BpyE,OAAOqN,KAAK+kE,KAAKnpE,SACxBipE,QAAQkjE,UAAUv0I,KAAOoxE,0BAAcC,QAAQkjE,WAAaljE,QAAQkjE,UAAUv0I,SAC1EuxE,IAAG,GAAAlvD,OAAIrQ,SAAWA,MAAMgL,iBAVnC45H,KAAO,EAAGC,KAAOH,SAAStuI,OAAQwuI,KAAOC,KAAMD,OAAQD,OAAvDC,OAFJH,KAAO,EAAGtnI,IAAMonI,MAAMnuI,OAAQquI,KAAOtnI,IAAKsnI,OAAQ/lE,MAAlD+lE,MAVc,IAAAK,eA6BQ3+G,SAAS+mE,OAA7Bg3C,MA7BYY,eA6BflyG,EAAauxG,MA7BEW,eA6BL5sI,EAClBmF,MAAMkU,MAAM6yH,QACXF,MAAOC,OAAO3mI,QAAQ,SAACunI,QAASxC,UAC7BwC,QAAQvnI,QAAQ,SAAC0vF,KAAMxlF,KACnB,IAAMyB,OACAC,OACFqC,UACAu5H,kBACA93C,KAAK92F,OAAS,GAAoC,WAA/B82F,KAAK,GAAG3yE,YAAYhrB,QAAuB29F,KAAK,GAAG5rF,SAAS2jI,gBAC/E/3C,KAAK1vF,QAAQ,SAACmpD,KAAMl6D,GAChB,IAAMuB,IAAOu0I,SAAD,GAAAlyH,OAA+B3I,IAA/B,KAAA2I,OAAsC5jB,GAAtC,IAAA4jB,OAAgB3I,KAAhB2I,OAAsB5jB,GAClCgf,OAAS4zD,QAAQkjE,UAAUv0I,KAC3Bmb,IAAI1c,GAAKgf,OAAO,GAChBrC,IAAI3c,GAAKgf,OAAO,KAEpBu5H,eDrEa,SAApBE,kBAAqB97H,IAAKD,KACnC,IAAMg8H,QAAU/7H,IAAI,IAAMA,IAAI,GAAKD,IAAI,IACjCi8H,QAAUh8H,IAAI,IAAMA,IAAI,GAAKD,IAAI,IAGnCk8H,aAAc,EA0BlB,OAvBIl8H,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKC,IAAI,GAAK,IACnDi8H,aAAc,EACdl8H,IAAI,GAAK,EACTA,IAAI,GAAK,GAITA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKC,IAAI,GAAK,IACnDi8H,aAAc,EACdj8H,IAAI,GAAK,EACTA,IAAI,GAAK,GAIRi8H,aAAeF,UAAYC,UACxBD,QAAUC,QAEVj8H,IAAI,GAAKA,IAAI,GAAKC,IAAI,GAAKA,IAAI,GAG/BD,IAAI,GAAKA,IAAI,GAAKC,IAAI,GAAKA,IAAI,MAIlCD,IAAI,GAAIC,IAAI,KACZD,IAAI,GAAIC,IAAI,KCoCgB87H,CAAkB97H,IAAKD,MAG5C+jF,KAAK1vF,QAAQ,SAACmpD,KAAMhwD,OAChB,IAAM3I,IAAOu0I,SAAD,GAAAlyH,OAAmC3I,IAAnC,KAAA2I,OAA0C1Z,OAA1C,IAAA0Z,OAAgB3I,KAAhB2I,OAAsB1Z,QAClC8U,OAASu5H,eAAeruI,QAAU0oE,QAAQkjE,UAAUv0I,OAE1C24D,KAAKl7C,OAAOA,QACtB,IAAMlc,KAAQgzI,SAAiB,IAAN,IACzBllI,MAAMgsH,OAAN,GAAAh5G,OAAgB6xF,0BAAiBt8C,uBAAjC,YAAAv1C,OAAkE9gB,KAAlE,KAAA8gB,OAA0E3I,KAA1E2I,OAAgF1Z,OAAS8U,cAIrGpO,MAAMkU,MAAM8yH,iFAUS/mI,OAAQ/N,MAY7B,IAXA,IAAI+1I,UACAvB,eACAwB,QAAU,EACRC,iBACAC,mBACAC,cAAgBpoI,OAAO,GACvBqoI,gBAAkBroI,OAAO,GACzBsoI,WAAaF,cAActvI,OAC3ByvI,aAAeF,gBAAgBvvI,OAC/BsrI,SAAWhtI,KAAKgtI,WAEbj1I,EAAI,EAAGA,EAAIm5I,WAAYn5I,IAAK,CACjC,IAAIq5I,SAAWJ,cAAcj5I,IACvBs5I,aAAeL,cAAcj5I,GAEnC,GX/HW,YW+HPs5I,aAAax2I,OAAoB,CACjC,IAAMy2I,eAAiBL,gBAAgBJ,SACnCS,gBXjIG,YWiIeA,eAAez2I,SACjCg2I,UACAO,SAAWC,aAAcC,iBAE7BjC,YAAYnpI,KAAKkrI,cAEjBR,OAAO1qI,KAAKmrI,cACZP,cAAc5qI,KAAKmrI,cAG3B,GAAIF,aAAeN,QACf,IAAK,IAAI94I,IAAI84I,QAAS94I,IAAIo5I,aAAcp5I,MAAK,CACzC,IAAMu5I,gBAAiBL,gBAAgBl5I,KACjCq5I,UAAWE,iBX9IV,YW+IHA,gBAAez2I,OACfw0I,YAAYnpI,KAAKkrI,WAEjBR,OAAO1qI,KAAKorI,iBACZP,gBAAgB7qI,KAAKorI,kBAIjC,IAAKR,cAAcpvI,QAAUqvI,gBAAgBrvI,UAAY2tI,YAAY3tI,OAEjE,GAAKsrI,SADLnyI,KAAOA,OAASsuI,IX3GN,SW2GqBtuI,QACPs0G,gBXxDjB,QWwDyB69B,SAASnyI,QAAkBi2I,cAAcpvI,OAUlE,CACH,IACM6vI,OAAQR,gBADQ,GAEtB1B,cAAgBkC,SAChB,IAAMC,YAAavC,SAAS6B,cAAeS,QACvCC,aAAc,IACdnC,cAAgBkC,OAAOA,SACvBT,cAAcxpI,OAAOkqI,YAAY,IAErCT,gBAAgBzpI,OARM,EAQgB,OAnBuC,CAC7E,IAAMmqI,cAAgBX,cAAcpvI,OAAS,EACvC6vI,MAAQT,cAAcW,eAC5BpC,cAAgBkC,QAChB,IAAMC,WAAavC,SAAS8B,gBAAiBQ,OACzCC,YAAc,IACdnC,cAAgBkC,MAAOA,QACvBR,gBAAgBzpI,OAAOkqI,WAAY,IAEvCV,cAAcxpI,OAAOmqI,cAAe,GAgB5C,OACIb,OAFJA,QADAA,UAAMj1H,OAAOm1H,cAAkBC,kBACfh9H,OAAO,SAAC6tF,GAAI3/F,MAAO+jF,MAAZ,OAAqB/jF,QAAU+jF,KAAK3/D,UAAU,SAAAptB,GAAC,OAAKA,EAAEqJ,aAAes/F,GAAGt/F,eAG3F+sI,+EAYQt+H,UAAWnE,QACvB,OAAA8kI,sBAAAC,iCAAAxC,iBAAAt1I,WAAA,iBAAAmG,MAAA9H,KAAA8H,KAA4B+Q,UAAWnE,8EAUnBo7F,WAAYuE,UAChC,IAAMqlC,aAAe5pC,WAAW4pC,aAC1BjnE,WACN,IAAK,IAAMrxE,OAAOizG,SACd,MAAOzyG,eAAe5B,KAAKq0G,SAAUjzG,KAAM,CACvC,IAAMu4I,YAActlC,SAASjzG,KACvBgS,MAAQumI,YAAYvmI,MAC1B,IAAKumI,YAAY96H,QAAUzL,MAAO,CAC9B,IAAMyL,OAAS+6H,sBAAsBF,aAActmI,OACnDq/D,QAAQr/D,OAASyL,QAI7B,OAAO4zD,0EASWonE,YAClB,IAAMC,oBAON,OALAD,WAAWrwI,QAAUqwI,WAAWjpI,QAAQ,SAACqzF,MAAOpkG,GAC5C,IAAM6mB,IAAM6oH,kBAAamB,oBAAoBzsC,OAC7Cv9E,IAAIkI,MAAQ/uB,EACZi6I,iBAAiB9rI,KAAK0Y,OAEnBozH,uEAWKppI,OAAQqpI,iBACpB,IAAMC,eAEF3C,aAEA3mI,OAFA2mI,aACAD,UACA1mI,OADA0mI,UAiDJ,OA7CAC,aAAazmI,QAAQ,SAACqpI,UAClB,IAAMC,aAAeD,SAAS7vI,WAC9BgtI,UAAUxmI,QAAQ,SAACupI,UACf,IAAIC,WACEC,aAAeF,SAAS/vI,WACxBiqG,UACFruE,GACI5yB,MAAO8mI,cAEX5uI,GACI8H,MAAOinI,eAGTC,aAAeH,SAAS/7H,UAExB61F,KDnIQ,SAAjBsmC,eAAkBC,aAAcF,cAWzC,MV+BuB,gBUvCnBE,cVuCmB,gBUvCaF,aV+CrB,MAJK,aUzCTE,cVyCS,aUzCoBF,aViDxB,OAIC,QWyEQC,CADQN,SAAS77H,UACYk8H,cAEpCG,aACFxmC,UACAvtF,KACIutF,UACAI,qBAIFqmC,aDhFgB,SAAzBC,uBAA0BC,UAAWxD,UAAW2C,iBAAvB,OAA2CA,gBAAgBl+H,OAAO,SAACg6D,MAAS,IAAAt5C,KAAAm2C,MAAA9mD,MACxG20G,SAAW1qD,gBAAgBllE,MAAQklE,MAAQA,MAC3CglE,aAAct+G,SAAG9Y,OAAHpU,MAAAktB,KAAAu+G,iCAAava,SAASxwH,IAAI,SAAA5P,GAAC,OAAIA,EAAEk0G,WAAUx4F,OAAO,SAAA1b,GAAC,YAAUiV,IAANjV,MAE3E,IAAK06I,YAAYrxI,OACb,OAAO,EAGX,IAAM+zF,SAAU7qB,UAAGjvD,OAAHpU,MAAAqjE,MAAAooE,iCAAaD,YAAY9qI,IAAI,SAAA5P,GAAC,OAAKA,EAAE6lC,GAAK7lC,EAAE6lC,EAAE5yB,MAAOjT,EAAEupD,IAAMvpD,EAAEupD,GAAGt2C,WACrEyI,OAAO,SAAA1b,GAAC,YAAUiV,IAANjV,GAAyB,OAANA,IACtCq9F,SAAU5xE,UAAGnI,OAAHpU,MAAAuc,MAAAkvH,iCAAaD,YAAY9qI,IAAI,SAAA5P,GAAC,OAAKA,EAAEmL,GAAKnL,EAAEmL,EAAE8H,MAAOjT,EAAEs8D,IAAMt8D,EAAEs8D,GAAGrpD,WACrEyI,OAAO,SAAA1b,GAAC,YAAUiV,IAANjV,GAAyB,OAANA,IAE5C,IAAKo9F,QAAQ/zF,SAAWg0F,QAAQh0F,OAC5B,OAAO,EAGX,IAAMuxI,gBAAgBx9C,QAAQ/zF,QAAS+zF,QAAQ32E,MAAM,SAAAzmB,GAAC,OAA8B,IAA1By6I,UAAU7sI,QAAQ5N,KACtE66I,gBAAgBx9C,QAAQh0F,QAASg0F,QAAQ52E,MAAM,SAAAzmB,GAAC,OAA8B,IAA1Bi3I,UAAUrpI,QAAQ5N,KAC5E,OAAIo9F,QAAQ/zF,QAAUg0F,QAAQh0F,OACnBuxI,eAAiBC,cAErBD,eAAiBC,gBC0DSL,CAAuBV,SAASt5C,aACjDw5C,SAASx5C,aAAco5C,qBAEvBK,QADAM,aAAalxI,OACHkxI,aAAa3qI,IAAI,SAACkrI,WACxB,IAAMC,gBAAkB3jE,eAAeA,kBAAmBkjE,WAAW,GAAG/zH,KAAMu0H,WACxEE,sBAAwB5L,kBAAaM,kBAAkBqL,gBAAgBjnC,KACzEinC,iBACJ,OACIjnC,KAAMinC,gBAAgBjnC,KACtBrlF,MAAOssH,gBAAgBtsH,MACvBlI,IAAKy0H,yBAIHV,WAGdT,YAAYhsI,KAAZqB,MAAA2qI,YAAWoB,oCAAShB,cAGrBJ,kDAvUP,MXwMiB,syEY1NJqB,qvBAAqB5G,qUAU1BmB,aAAcvc,WAAW,IAI3B6d,aADFtB,aADAt1C,KAIA+P,QACAgpB,UADAhpB,QAGAmmC,SAEAnmC,QAFAmmC,SACAC,YACApmC,QADAomC,YAGE6E,QAAUpE,aAAar7D,QAS7B,OAPAy/D,QAAQ9E,UAAY8E,QAAQ9E,cAC5B8E,QAAQ9E,UAAUC,gBAElBS,aAAar7D,IAAMy/D,QACnBpE,aAAalxG,EAAI,KACjBkxG,aAAa5rI,EAAI,KAEV4rI,qFAUcxmI,QASrB,IARA,IAAIioI,QAAU,EACRD,UACAvB,eACA2B,cAAgBpoI,OAAO,GACvBqoI,gBAAkBroI,OAAO,GACzBsoI,WAAaF,cAActvI,OAC3ByvI,aAAeF,gBAAgBvvI,OAE5B3J,EAAI,EAAGA,EAAIm5I,WAAYn5I,IAAK,CACjC,IAAMs5I,aAAeL,cAAcj5I,GACnC,GZLW,YYKPs5I,aAAax2I,OAAoB,CACjC,IAAMy2I,eAAiBL,gBAAgBJ,WACjCO,QAAUE,gBAAkBD,aAAcC,iBAAmBD,cACnEhC,YAAYnpI,KAAKkrI,cAEjBR,OAAO1qI,KAAKmrI,cAGpB,GAAIF,aAAeN,QACf,IAAK,IAAI94I,GAAI84I,QAAS94I,GAAIo5I,aAAcp5I,KAAK,CACzC,IAAMu5I,gBAAiBL,gBAAgBl5I,IACjCq5I,UAAWE,iBZhBV,YYiBHA,gBAAez2I,OACfw0I,YAAYnpI,KAAKkrI,UAEjBR,OAAO1qI,KAAKorI,iBAIxB,OACIV,cACAvB,mFAIU5yG,SACd,IAAM9zB,MAAQ8zB,QAAQ9zB,QAChBgiE,WACA8oE,aACFjsE,QAASvmB,KAAWA,MASxB,IAAK,IAAM3nD,OAPXmjC,QAAQi3G,iBAAiB16I,MAAMyuC,KAAK,SAAAi7B,MAAI,OAAIiI,QAAQzkE,KAAKw8D,KAAK1jD,UAAU20H,mBACxEl7I,OAAOkmB,OAAOgsD,SAAS7hE,QAAQ,SAAC+yG,WAC5B,IAAK,IAAMviH,OAAOuiH,UACd43B,YAAYn6I,MAAQuK,KAAK4Q,IAAIonG,UAAUviH,KAAK,GAAIm6I,YAAYn6I,KAAK,IAC7DuK,KAAK4Q,IAAIonG,UAAUviH,KAAK,GAAIm6I,YAAYn6I,KAAK,OAGvCm6I,YACd9qI,MAAMgsH,OAAN,GAAAh5G,OAAgB6xF,0BAAiBt8C,uBAAjC,YAAAv1C,OAAkEriB,KAAOm6I,YAAYn6I,gEAYzF,OAAO0G,6CAcP,OAAIoF,UAAO1D,QACP1B,KAAK0tG,QAALtoG,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK0tG,8DAUA38F,UAAWnE,QACvB,IAAIgnI,sBACAC,yBACEjrI,OAASkrI,kBAAAC,6BAAAR,aAAA15I,WAAA,iBAAAmG,MAAA9H,KAAA8H,KAAqB+Q,UAAWnE,QAE3CsvF,OACAtvF,OADAsvF,OAGAnhF,KAEAnS,OAFAmS,KACAjB,QACAlR,OADAkR,QAGEyyF,SADQrQ,OAAO,GACEqQ,SACjB/kC,OAAS+kC,UAAYA,SAAS/kC,OAAS+kC,SAAS/kC,OAAOl8D,MAAQ,KAC/D0nG,MAAQzG,UAAYA,SAASyG,MAAQzG,SAASyG,MAAM1nG,MAAQ,KAC5D0oI,iBAAmBJ,cAAeC,kBAYxC,OAVC94H,KAAMjB,SAAShR,QAAQ,SAAC+gE,UAAWoqE,WAChCpqE,UAAU/gE,QAAQ,SAACorI,SAAUn8I,GAAX,OAAiBm8I,SAASprI,QAAQ,SAACwC,OAC7CA,MAAMhJ,aAAeklE,QAAUl8D,MAAMhJ,aAAe0wG,OZvGjD,YYuG0D1nG,MAAMzQ,QACnEm5I,gBAAgBC,WAAWl8I,GAAGmO,KAAKoF,aAI/CuoI,iBAAmBM,gCAAI,IAAIr9H,IAAI+8H,mBAC/BD,cAAgBO,gCAAI,IAAIr9H,IAAI88H,gBAC5B5zI,KAAKuxH,WAAYx2G,KAAM64H,cAAe95H,QAAS+5H,mBACxC7zI,KAAKuxH,kFAGQvpB,WAAYuE,SAAUwhC,YAAahgH,SACvD,IAAIulG,UACAF,WACExqH,UACAszF,OAASl8F,KAAKk8F,SACd79E,UAAY2pF,WAAW4pC,aACvBpzH,aAAeH,UAAUI,kBACzBksD,WACN,GAAIuxB,QAAUA,OAAO,GAAI,CACrB,IACMk4C,cADQl4C,OAAO,GACOt9E,IAAI2tF,cAE/B+B,iBAAQD,gBAAOE,qBAAMC,uBAAO1lG,QAAQ,SAACurI,SAClC,IAAM/oI,MAAQ8oI,cAAcC,SAAWD,cAAcC,SAAS/oI,MAAQ,GAChEsgB,aAAepN,aAAalT,QZhI3B,YYgIqCkT,aAAalT,OAAOsT,IAAI/jB,KAChEw5I,UAAY9lC,sBAAQ3iF,eACpB0nG,UAAYhoH,OAEZ+oI,UAAY7lC,wBACZ4kB,WAAa9nH,OAEjBkT,aAAalT,SAAWsgB,cAAgBhjB,OAAO1C,KAAKoF,SAU5D,GANIgoH,YACA3oD,QAAQ2oD,WAAaj1G,UAAU0P,QAAQggH,6LAAlBuG,IAChBhhB,UAAYr0H,kCAAmBC,MACjCwQ,gBAAgBtE,YAAYkoH,WAAWv8G,UAG1Cq8G,WAAY,CACZ,IAAM3/G,GAAK4K,UAAU0P,WAAVpS,OAAAw4H,gCAAsBpG,aAAgBnlI,QAASmlB,QAAQ/E,UAClE2hD,QAAQyoD,YAAc3/G,GAAG/D,gBAAgBtE,YAAYgoH,YAAYr8G,SAErE,OAAO4zD,8DAUK/hE,OAAQqpI,iBACpB,IAAIC,eAEI3C,aAEA3mI,OAFA2mI,aACAD,UACA1mI,OADA0mI,UAsBR,SApBe3zH,OAAAw4H,gCAAO5E,cAAP4E,gCAAwB7E,YAE7BxmI,QAAQ,WACd,IACI8D,QACAu/F,KZJG,MYKHvtF,KACI2tF,cAGJ0lC,iBAAmBA,gBAAgBvwI,OAAS,IAC5CkL,OAAS6iE,eAAe7iE,OAAQqlI,gBAAgB,KAEpDC,YAAYhsI,KAAK0G,UAEM,IAAvBslI,YAAYxwI,SACZwwI,YAAcD,iBAGlBjyI,KAAKk8F,OAAOg2C,aACLA,8EAUWH,YAClB,IAAMC,oBASN,OAPAD,WAAWrwI,QAAUqwI,WAAWjpI,QAAQ,SAACqzF,OACrC,IAAMv9E,IAAM6oH,kBAAaM,kBAAkB5rC,MAAMgQ,KAAMhQ,OACvD61C,iBAAiB9rI,MACbimG,KAAMhQ,MAAMgQ,KACZvtF,YAGDozH,uDA3IP,MZ4Ga,qyCa/NAuC,2wBAAuB5H,6UAS5BmB,cAAc,IACdtvH,aAAyBsvH,aAAzBtvH,aAAc5R,OAAWkhI,aAAXlhI,OAChB4nI,WAKN,OAHChmC,sBAAOC,sBAAOF,sBAAMzlG,QAAQ,SAAC+kI,UAC1B2G,QAAO,GAAA74H,OAAIkyH,WHgMU,SAApB4G,kBAAqB3G,cAAkC,IAApB4G,WAAoBtvI,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACxDyoI,SAA2BC,aAA3BD,SAAUrvH,aAAiBsvH,aAAjBtvH,aACZlT,MAAQopI,WAAWppI,MACnB2mD,QACA+8E,IAAMtB,UAAUG,UAItB,OAFA6G,WAAW75I,KAAO65I,WAAW75I,KAAO65I,WAAW75I,KAAO85I,wBAAYn2H,aAAclT,OAAS,MACzF2mD,KAAK/rD,KAAK,IAAI8oI,IAAI0F,aACXziF,KGxM0BwiF,EAAoB5G,kBAAUrvH,2BAAgB5R,OAAOihI,aAE3E2G,8DAsBKI,gBAAiB3C,iBAC7B,IAAMC,eAqBN,OApBAD,gBAAgBnpI,QAAQ,SAAC7O,GACrB,IAAM2S,OAAS3S,GACdu0G,sBAAOC,sBAAOF,sBAAMzlG,QAAQ,SAACmpD,MAC1B,GAAI2iF,gBAAgB3iF,OAAS2iF,gBAAgB3iF,MAAM3mD,MAAO,CACtD,IAAMsT,IAAMhS,OAAOgS,IACfhS,OAAOgS,eAAe/V,MACtB+V,IAAI9V,QAAQ,SAACilE,MACTA,KAAKw+B,SAAWx+B,KAAKw+B,cACpBx+B,KAAKw+B,SAASt6C,QAAU8b,KAAKw+B,SAASt6C,UACvC8b,KAAKw+B,SAASt6C,MAAM3mD,MAAQspI,gBAAgB3iF,MAAM3mD,SAGtDsT,IAAI2tF,SAAW3tF,IAAI2tF,cAClB3tF,IAAI2tF,SAASt6C,QAAUrzC,IAAI2tF,SAASt6C,UACrCrzC,IAAI2tF,SAASt6C,MAAM3mD,MAAQspI,gBAAgB3iF,MAAM3mD,UAI7D4mI,YAAYhsI,KAAK0G,UAEdslI,oEAUMz1G,SAAS,IACdkuC,QAA4BluC,QAA5BkuC,QAAS6tB,KAAmB/7D,QAAnB+7D,KAAM+T,SAAa9vE,QAAb8vE,SAevB,OAbA9zG,OAAOwc,QAAQs3F,UAAUzjG,QAAQ,SAACmvH,KAC9B,GAAIA,IAAI,IAAMA,IAAI,GAAG3sH,MAAO,CACxB,IAAM+oI,QAAUpc,IAAI,GACd3sH,MAAQ2sH,IAAI,GAAG3sH,MAEjBA,OACAktF,KAAK67C,SAASvrI,QAAQ,SAACmpD,MACnB,IAAMl7C,OAAS4zD,QAAQr/D,QACtB2sH,IAAI,GAAGlhH,QAAUk7C,KAAKk5D,aAAap0G,aAK7CyhF,2CA3DP,MAAO,wwCCFR,wBASMq8C,gCAAsB,SAAtBA,oBAAsBzjI,KAAG,SAAIuK,OAAAm5H,8BAAI1jI,IAAI,IAAR0jI,8BAAe1jI,IAAI,KAAI0B,OAAO,SAACo8D,QAAS7zD,KAC9E,IAAM05H,QAAU15H,IAAIxgB,OAKpB,MdSmB,YcZfk6I,SdkMgB,aclMOA,UACvB7lE,SAAU,GAEPA,UACR,IAMU8lE,oBAAsB,SAAtBA,sBAAsB,OAC/BC,QAAS,IAAI9iI,IACb+iI,SAAU,IAAI/iI,IACdgjI,SAAU,IAAIhjI,IACdijI,aAAc,IAAIjjI,IAClBkjI,YAAa,IAAIljI,MASRk8H,WAAa,SAAbA,WAAc58B,UAAD,QAAArkC,KAAAhoE,UAAA1D,OAAcmgB,OAAd,IAAAhZ,MAAAukE,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAcxrD,OAAdwrD,KAAA,GAAAjoE,UAAAioE,MAAA,SAAA1xD,OAA4B81F,SAA5B,UAAA91F,OAA6CkG,OAAO9e,KAAK,OA6DtEuyI,0BAAgB,SAAhBA,cAAiB1sI,OAAQ2sI,aAAcC,SAAvB5qE,OAAmE,IAAhCgyB,YAAgChyB,MAAhCgyB,YAAa2V,aAAmB3nC,MAAnB2nC,aAQzE,OAPgB3pG,OAAOlH,OAAS,EAAIkH,OAAO,GAAGX,IAAI,SAACy6D,KAAM3qE,GAAP,OAAa,IAAIy9I,UAC/D36I,KdmJc,SclJdomC,UAAS,GAAAtlB,OAAKihF,YAAL,mBAET2V,4BACD7tF,OA9BsB,SAAhB+wH,cAAiBl8H,QAAStX,MAAOyzI,WAC1C,IAAIj8H,OAAS,GAEb,GAAIxX,QAAUyzI,UAAY,GAAKn8H,QAAQ7X,OAASg0I,UAAW,CACvD,IAAK,IAAI39I,EAAIkK,MAAOlK,EAAIwhB,QAAQ7X,OAAS,EAAG3J,IACxC0hB,QAAM,GAAAkC,OAAOpC,QAAQxhB,GAAGuK,WAAlB,OAGV,OADAmX,QAAUF,QAAQA,QAAQ7X,OAAS,GAAGY,WAEnC,OAAIiX,QAAQtX,OACRsX,QAAQtX,OAAOK,WAEnB,GAkBGmzI,CAAcF,aAAcx9I,EAAG6Q,OAAO,GAAGlH,SAClCkL,QAASmyF,KAAMr8B,KAAK91D,SAASmyF,aAyDrC41C,wBAAc,SAAdA,YAAen2H,aAAclT,OACtC,IAAIu+D,Ud1De,Uc+DnB,OAHIv+D,OdjJiB,cciJRkT,aAAalT,OAAOsT,IAAI/jB,OACjCgvE,UdxDc,Uc0DXA,WAUEioE,sBAAwB,SAAxBA,sBAAyB/gI,UAAW8C,WAE7C,OADc9C,UAAUrB,gBAAgB9G,OAAOwiB,KAAK,SAAA/yB,GAAC,OAAIA,EAAEC,SAAWub,UAAUvR,aACnEyU,UA6DJo2H,8BAAoB,SAApBA,kBAAqBtyI,KAAM+N,OAAQ+sI,oBAC5C,IAAI3I,SAAW2I,mBAAmB96I,MAC9B4yI,WAAa,GACX9mI,QAAU9L,OAASuuI,KAAOj6B,eAAMC,kBdtHpB,SAJH,OcuHoDnlC,QAAA2rE,0BAIjChtI,OAJiC,GAI5DitI,WAJ4D5rE,QAAA,GAIhD6rE,YAJgD7rE,QAAA,GAK7D8rE,eAAiB,SAAjBA,eAAiBh+I,GAAC,OAAK89I,WAAWn0I,OAASm0I,WAAW99I,GAAG8C,OAAS,MAClEm7I,gBAAkB,SAAlBA,gBAAkBj+I,GAAC,OAAK+9I,YAAYp0I,OAASo0I,YAAY/9I,GAAG8C,OAAS,MAwB3E,Md3PqB,ccqOjBk7I,eAAeF,WAAWn0I,OAAS,IdrOlB,ccqOsCs0I,gBAAgB,IACvEvI,WAAaT,SAAWrmI,QAAQ,EAAIA,QAAQV,QAAQ+mI,WAAarmI,QAAQ,GAGrEqmI,SdvLU,WcsLVnyI,MAAoBg7I,WAAWA,WAAWn0I,OAAS,GAAGY,aAAewzI,YAAY,GAAGxzI,WdlI7E,McqII0qI,UAAYrmI,QAAQ,Id3OlB,cc6OVqvI,gBAAgBF,YAAYp0I,OAAS,IAC5C+rI,WAAa5yI,OAASuuI,IAAMh6B,gBdpId,ScqId49B,SAAWnyI,OAASuuI,IAAMh6B,gBdrIZ,WcuIdq+B,WAAa5yI,OAASuuI,IAAMj6B,ed3IjB,Mc4IX69B,SAAWnyI,OAASuuI,IAAMj6B,ed5If,OAjGI,Yc+Of4mC,eAAeF,WAAWn0I,OAAS,Id/OpB,Yc+OsCs0I,gBAAgB,GACrEhJ,SAAWnyI,OAASuuI,IAAMj6B,ed/If,MAjGI,YciPR6mC,gBAAgB,GACvBhJ,SAAWnyI,OAASuuI,IAAMh6B,gBd7IZ,SArGC,YcmPR2mC,eAAeF,WAAWn0I,OAAS,KAC1CsrI,SAAWnyI,OAASuuI,IAAMj6B,ednJf,QcqJPs+B,WAAYT,WAYXiJ,wBAA0B,SAA1BA,wBAA2Bx5G,QAAS80F,UAAW2kB,SAAY,IAEhEttI,OAEA2oH,UAFA3oH,OACA/N,KACA02H,UADA12H,KAHgEs7I,sBAKpCD,QAAQE,cAAcC,wBAAwBztI,OAAQ/N,MAA9E+1I,OAL4DuF,sBAK5DvF,OAAQvB,YALoD8G,sBAKpD9G,YAKhB,OAHA5yG,QAAQm0G,OAAR0F,8BAAA,GAAA36H,OAAqB9gB,KAArB,UAAoC+1I,SACpCn0G,QAAQ4yG,YAARiH,8BAAA,GAAA36H,OAA0B9gB,KAA1B,eAA8Cw0I,eAErCuB,cAAQvB,wBAAazmI,gBAiDrB2tI,uBAAa,SAAbA,WAAcC,SAAUN,SACjC,IAAIO,gBAAmBh0G,KAAK,EAAOovB,QAAQ,GACvC6kF,gBAAmB3wG,MAAM,EAAOC,OAAO,GACvC2wG,kBAAqBl0G,KAAK,EAAOovB,QAAQ,EAAO9rB,MAAM,EAAOC,OAAO,GAEpEjrB,KAGAy7H,SAHAz7H,KACAjB,QAEA08H,SAFA18H,QACQ88H,YACRJ,SADA73H,OAPyCk4H,MAAAjB,0BASf76H,KATe,GAStC+7H,SATsCD,MAAA,GAS5BE,UAT4BF,MAAA,GAAAG,SAAApB,0BAUT97H,QAVS,GAUtCm9H,WAVsCD,SAAA,GAU1BE,cAV0BF,SAAA,GAAAG,mBAkBzCjB,QAAQ3kB,YANR4a,cAZyCgL,mBAYzChL,cACAI,iBAbyC4K,mBAazC5K,iBACAF,kBAdyC8K,mBAczC9K,kBACAI,qBAfyC0K,mBAezC1K,qBACAD,eAhByC2K,mBAgBzC3K,eACAJ,YAjByC+K,mBAiBzC/K,YAEEgL,mBAAqBjL,cAAczqI,OAAS6qI,iBAAiB7qI,OAC7D21I,kBAAoBjL,YAAY1qI,OAAS8qI,eAAe9qI,OACxD41I,wBAA0BjL,kBAAkB3qI,OAAS+qI,qBAAqB/qI,OAEhF,GdtKiB,UcsKbw0I,QAAQrwH,YAAYhrB,QACpB,IAAKu8I,mBACD,OAASX,8BAAgBC,8BAAgBC,wCAE1C,IAAKU,oBAAsBC,yBAA2BF,oBAAsB,EAC/E,OAASX,8BAAgBC,8BAAgBC,mCAe7C,OAZAF,eA7EkB,SAAhBc,cAAiBxxG,KAAMC,OACzB,IAAMwxG,SACNA,KAAc,EACdA,QAAiB,GAKjB,OAJIzxG,KAAKrkC,OAAS,GAAKskC,MAAMtkC,OAAS,KAClC81I,QAAQ/0G,KAAM,EACd+0G,QAAQ3lF,QAAS,GAEd2lF,QAqEUD,CAAcT,SAAUC,WACzCL,eAnEsB,SAApBe,kBAAqBh1G,IAAKovB,QAC5B,IAAM2lF,SACNA,MAAe,EACfA,OAAgB,GAOhB,OANI/0G,IAAI/gC,QAAUmwD,OAAOnwD,UAChB+gC,IAAI,IAAMA,IAAI,GAAG/gC,OAAS,GAAOmwD,OAAO,IAAMA,OAAO,GAAGnwD,OAAS,KAClE81I,QAAQzxG,MAAO,EACfyxG,QAAQxxG,OAAQ,GAGjBwxG,QAyDUC,CAAkBR,WAAYC,eAC/CP,iBAvDoB,SAAlBe,gBAAmB38H,KAAMjB,SAC3B,IAAM09H,SAAY/0G,KAAK,EAAMsD,MAAM,EAAM8rB,QAAQ,EAAM7rB,OAAO,GACxD2xG,eAAiBxoC,eAAMC,iBACvBwoC,edzMS,MAIG,UcqNlB,OAfA78H,KAAKjS,QAAQ,SAAC7O,EAAGlC,GACTkC,EAAE,IAAMA,EAAE,GAAGyH,OACb81I,QAAQG,cAAc5/I,KAAM,EAE5By/I,QAAQG,cAAc5/I,KAAM,IAGpC+hB,QAAQhR,QAAQ,SAAC7O,EAAGlC,GACZkC,EAAEyH,OACF81I,QAAQI,cAAc7/I,KAAM,EAE5By/I,QAAQI,cAAc7/I,KAAM,IAI7By/I,QAoCYE,EAAiBZ,SAAUC,YAAaE,WAAYC,gBAEnEN,YAAYl1I,OAAS,IACrBi1I,iBAAiBl0G,KAAM,EACvBk0G,iBAAiB9kF,QAAS,GAE1B+kF,YAAYl1I,QAAUk1I,YAAY,GAAGl1I,OAAS,IAC9Ci1I,iBAAiB5wG,MAAO,EACxB4wG,iBAAiB3wG,OAAQ,IAEpBywG,8BAAgBC,8BAAgBC,4NClatC,IAAMziD,oBAAkB2jD,oCAAA7mD,uBAC1B8mD,wBAAQhrD,MACLmF,YAAamc,2BAAW3W,OACxB9W,OAAO,IAHgBk3D,oCAAA7mD,oBAK1B8mD,wBAAQ/qD,OACLkF,YAAamc,2BAAW1W,aANDmgD,oCAAA7mD,oBAQ1B8mD,wBAAQ5qD,WACL+E,YAAamc,2BAAWpgG,QACxB2yE,OAAO,IAVgBk3D,oCAAA7mD,oBAY1B8mD,wBAAQ3qD,WACL8E,YAAamc,2BAAW3W,OACxB9W,OAAO,IAdgBk3D,oCAAA7mD,oBAgB1B8mD,wBAAQ7qD,OACLgF,YAAamc,2BAAWpgG,QACxB2yE,OAAO,IAlBgBqQ,+fCaxB,IA0FM+mD,wBAAmB,SAAnBA,iBAAoB/rC,WAC7B,IAAMgsC,iBAoBN,OAnBAhsC,UAAUljG,QAAQ,SAACojG,SAAUn0G,GACzB,IAAM6mB,IAAMstF,SAASttF,IACfutF,KAAOD,SAASC,KACtB,GAAKvtF,IAUIA,IAAItmB,OACLsmB,IAAItmB,KAAJ,GAAAqjB,OAAcwwF,KAAd,KAAAxwF,OAAsB5jB,IAE1BigJ,cAAc9xI,KAAKgmG,cAbb,CACN,IAAM+rC,MAAQxQ,kBAAaM,kBAAkB77B,SAASC,KAAMD,UACvD+rC,MAAM3/I,OACP2/I,MAAM3/I,KAAN,GAAAqjB,OAAgBwwF,KAAhB,KAAAxwF,OAAwB5jB,IAE5BigJ,cAAc9xI,MACVimG,KAAMD,SAASC,KACfvtF,IAAKq5H,WASVD,eAiFEE,oBAAe,SAAfA,aAAgBz7G,QAAS3D,UAAWojE,OAAQgE,aACrDzjE,QAAQ07G,kBAAkBC,QAAShsD,OAAQ8P,OAAQ54E,OAAQ,aAAc6oE,WAAY,UACrF,IACMyQ,YADSngE,QAAQ7vB,SACIgwF,YACrBy7C,cAAgB57G,QAAQy/D,SAAS3oF,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAEyS,SAASka,MAAQ1jB,EAAEwJ,SAASka,QAC9EwxH,iBAAmB1vD,YAAY9vD,UAAW,KAAM,GAAlB,GAAAnd,OAAyBihF,YAAzB,iBAC9B27C,crO0MiB,SAArBC,mBAAsBviH,OA4BxB,IA3BA,IAAMwiH,mBACAC,WACA5yI,KAAOrN,OAAOqN,KAAKmwB,OAQnB0iH,MAAQ,SAARA,MAASrgJ,MACX,GAAImgJ,gBAAgB/2I,SAAWoE,KAAKpE,OAChC,OAAO,EAEXg3I,QAAQpgJ,OAAQ,EAEhB,IADA,IAAM45B,MAAQ+D,MAAM39B,MACX2B,EAAI,EAAGA,EAAIi4B,MAAMxwB,OAAQzH,IAAK,CACnC,IAAM83B,IAAMG,MAAMj4B,GACby+I,QAAQ3mH,MACT4mH,MAAM5mH,KAKd,OADA0mH,gBAAgBvyI,KAAK5N,OACd,GAGFP,EAAI,EAAGA,EAAI+N,KAAKpE,SACjBi3I,MAAM7yI,KAAK/N,IADcA,KAIjC,OAAO0gJ,gBqO1OeD,CAAmB/7G,QAAQm8G,gBAC3C18D,UACN0M,YAAY0vD,iBAAkB,IAAKD,cAAe,MAC9C5iH,OAAQ,SAAAA,OAACuqB,MAAOm8C,OACZjgB,OAAOigB,MAAMq5B,UACTx1E,YACAm8C,gBAIKo8C,cAActwI,IAAI,SAAA3P,MAAI,OAAI4jF,OAAO5jF,QACzCwQ,QAAQ,SAACtQ,GACd,IAAM2jG,MAAQ3jG,EAAE2jG,MACVn8C,MAAQxnD,EAAEwnD,MAChBm8C,MAAM+D,YAAYA,aAClB/D,MAAM41B,WACFjtB,UAAWroE,QAAQo8G,cAEG,IAA1B18C,MAAMvvF,SAASk2F,QAAoB3G,MAAMtoE,MAAMmsB,MAAMpvB,WAmChDkoH,YAAc,SAAdA,YAAe58C,OAAQ68C,SAAU//I,OAAnB,OAA6BkjG,OAAOnoF,OAAO,SAACooF,OAEnE,OAD0B,SAAb48C,SAAsB58C,MAAMt2E,YAAYsmE,aAAegQ,MAAMq5B,WAC1Dx8H,SAGPggJ,eAAiB,SAAjBA,eAAkB98C,OAAQ68C,SAAU//I,OAC7CkjG,OAAOnoF,OAAO,SAACo8D,MAEX,OAD0B,SAAb4oE,SAAsB5oE,KAAKvjE,SAASu/F,KAAOh8B,KAAKqlD,WAChDx8H,QACTm3E,KAAKzoC,UACE,MAQNuxG,oBAAsB,SAAtBA,oBAAuBjhI,MACRA,KAAKkhI,iBACbjtD,KAAK,WACjBj0E,KAAKkhI,iBAAmB,IAAIrtD,QAAQ,SAACxiE,SACjCrR,KAAKmhI,iBAAmB9vH,UAE5B4vH,oBAAoBjhI,SC3RfohI,UAAY,YACZC,UAAY,6uCCGjBjS,qBAA0B4B,4BAA1B5B,UAAWC,sBAAe2B,4BAAf3B,WAEb53B,kBAAS4B,2BAAU5B,OAiEZ6pC,mCAA0B,SAA1BA,wBAA2B78G,QAAS7vB,OAAQ/R,MAAlB,OAA4B,IAAK,KAAKoN,IAAI,SAAC4lI,UAC9E,IAAMr1C,KAAO/7D,QAAQ+7D,OACrB,OAAKA,KAAKq1C,WAGGphE,aAAa7/D,OAAOihI,WAAajhI,OAAOihI,UAAU9uC,KAZvC,SAAtBw6C,oBAAuBx6C,KAAM9sC,MAC/B,OAAIA,KAAKpsC,YAAYhrB,SAAW40G,mBACrB1Q,KAWPw6C,CAAoB3sI,OAAOmyF,KAAMvG,KAAKq1C,UAAU,KArE7B,SAArB2L,mBAAsB/8G,QAAS+7D,KAAM39F,KAAMyoG,aAAgB,IAAAm2C,YACzDltC,SAUqCmtC,UATnC9sI,OAAS6vB,QAAQ7vB,SACfgwF,YAAsChwF,OAAtCgwF,YAAa+8C,UAAyB/sI,OAAzB+sI,UAAWC,UAAchtI,OAAdgtI,UAC1BC,cAAgBF,UAAUjlG,MAC1BolG,cAAgBH,UAAUG,cAC1Bn9C,aAAe9hG,OAASu+I,UAAYQ,UAAUj9C,aAAeg9C,UAAUh9C,aACvEo9C,cAAgBH,UAAUt2C,aAAa5uD,MACvCud,KAAOumC,KAAK8K,aAAa,GACzB02C,cAAgB/nF,KAAKpsC,YAAYhrB,SAAW40G,kBAE9C50G,OAASu+I,WAAaY,eACdC,0BAAAP,aACHp2C,YADG,GAAA3nF,OACc2nF,YADd,UAAA22C,0BAAAP,UAAA,GAAA/9H,OAEA2nF,YAFA,QAAA3nF,OAEoB2nF,YAFpB,WAARiJ,SAAQmtC,WAKRntC,SAAW0tC,6BACN32C,YAA2B,GAAA3nF,OAAM2nF,YAAnB02C,cAAa,gBAapC,OAVAztC,SAAS73D,OACL17C,MAAO,SAAAA,MAAC+R,KAAMhT,GACV,IAAMmiJ,iBAAmBF,eAAiB/nF,KAAKl7C,SAAS,GAAK,EAC7D,OAAIlc,OAASu+I,UACFW,cAAchiJ,EAAI,GAEtBmiJ,kBAA0C,IAAtBnvI,KAAKu4F,aAAqBw2C,cAAgBD,iBAKzErvG,YAAUivG,aACN98C,aAAY,GAAAhhF,OAAKghF,aAAL,KAAAhhF,OAAqB2nF,aACjCriE,UAAWr0B,OAAOq0B,UAClB3oC,KAAMgrG,YACNstB,oBAAqB,SAAAA,oBAAC7lH,KAAMhT,GAQxB,OANyBiiJ,eAAiB/nF,KAAKl7C,SAAS,GAAK,GAC1B,IAAXhM,KAAKvH,GAAW3I,OAASu+I,UACpC,GAAAz9H,OAAMihF,YAAN,mBAEA,GAAAjhF,OAAMihF,YAAN,UAAAjhF,OAA0B9gB,KAA1B,KAAA8gB,OAAkC2nF,YAAlC,KAAA3nF,OAAiD5jB,EAAI,KAVhEkiJ,0BAAAR,YAAA,MAAA99H,OAcC2nF,YAAY1jD,eAAkB/kD,OAASu+I,UAAY,OAAI9rI,GAdxD2sI,0BAAAR,YAAA,WAeNltC,UAfMktC,aAiBVjhD,KAAMyhD,6BACD32C,YAAcrxC,MAEnBmqC,aAAa,GAmBHo9C,CAAmB/8G,QAAS+7D,KAAM39F,KAAMgzI,UAL3C,OAMZ95H,OAAO,SAAA1b,GAAC,OAAU,OAANA,KA2FF8hJ,2BAA6B,SAA7BA,2BAA8B19G,SAAY,IAAAhI,KAC7C+jE,KAAO/7D,QAAQ+7D,OACf0H,aACFtkE,MAAOa,QAAQb,QACfC,OAAQY,QAAQZ,UAEd89G,UAAYl9G,QAAQ29G,WACpBR,UAAYn9G,QAAQ49G,WACpBC,cAjGsB,SAAnBC,iBAAoB/hD,KAAM5vF,OAAQ4V,cAC3C,IAAMg8H,YAyCN,OAxCC,IAAK,KAAK1xI,QAAQ,SAACjO,MAChB,IAAIgsC,MAAQ2xD,KAAK39F,MAAM,GAAG28G,gBACpBlhG,QAAU62D,WAAW3uD,aAAc2uD,WAAWvkE,OAAQ/N,KAAM,GAAGg+F,aAAa,GAAI,MAAO,WACvF4hD,YACA/uI,SAEEpT,KAAM,SACNuC,KAAM,YAENvC,KAAM,SACNuC,KAAM,YAGNvC,KAAM,UACNuC,KAAM,YAENvC,KAAM,UACNuC,KAAM,YAENvC,KAAM,OACNuC,KAAM,YACNyb,kBAEAhe,KAAM,OACNuC,KAAM,YACNyb,kBAGF7N,IAAM5E,KAAK6Q,IAAImyB,MAAMnlC,QAC3BmlC,MAAQvwB,UAAYyzD,gCAAiB1rE,SAAWwoC,MAAM5+B,IAAI,SAAA5P,GAAC,OAAIA,EAAEkS,YAAas8B,MAC9E,IAAK,IAAI9uC,EAAI,EAAGA,EAAI0Q,IAAK1Q,GAAK,EAAG,KAAA2iJ,eAC7BD,SAASv0I,MAAT+zI,0BAAAS,kBAAA,GAAA/+H,OACQ9gB,KADR,SACsBgsC,MAAM9uC,IAD5BkiJ,0BAAAS,eAAA,GAAA/+H,OAEQ9gB,KAFR,UAEuBgsC,MAAM9uC,EAAI,IAFjCkiJ,0BAAAS,eAAA,GAAA/+H,OAGQ9gB,KAHR,OAGoBgsC,MAAM9uC,IAH1BkiJ,0BAAAS,eAAA,GAAA/+H,OAIQ9gB,KAJR,OAIoBgsC,MAAM9uC,IAJ1B2iJ,iBAOJF,SAAS3/I,MAAQ,IAAIgD,oBAAU48I,SAAU/uI,UAEtC8uI,SAuDeD,CAAiB/hD,KAAM/7D,QAAQ7zB,SAAU6zB,QAAQ1xB,OAAO0T,oBAC9EgW,SAAG9Y,OAAHpU,MAAAktB,KAAAkmH,6BAAaf,WAAbj+H,OAAAg/H,6BAA2BhB,aAAW7wI,QAAQ,SAACqnE,MAC3CA,KAAKplE,KAAKolE,KAAKqoB,OAAOt6D,EAAIo8G,cAAcp8G,EAAIo8G,cAAc92I,GAAG08F,YAAYA,gBCtLpEnE,kCACTa,YFPuB,OEQvBD,aAAc,cACd17D,UAAW,GACX25G,iBAAkB,sBAClBjB,WACIh9C,aAAc,kBACd17D,UAAW,GACX89D,MAAM,EACNrqD,MAAO,UACPolG,cAAe,WAEnBF,WACIj9C,aAAc,kBACd17D,UAAW,GACX89D,MAAM,EACNv7F,GACIkxC,OAAQ,OAAQ,YAEpBxW,GACIwW,OAAQ,OAAQ,aAGxBmmG,kBAAmB,YACnBngD,aACIC,SACIzhG,KFvBgB,iBE0BxB4hJ,oBAAqB,osBC9BzB,IAAAC,mBAAAC,iCAAAC,yBCLsB,UDOdjiJ,MAAO,KACPmkB,MACIuxD,aAAc,SAAAA,aAAC9hE,OAAQotG,WAAT,OACVvqC,eAAeuqC,WAAavqC,kBAAmBssB,kCAAgBnvF,YAL/EouI,iCAAAC,sBCFyB,YDYjBjiJ,MAAO,KACPmkB,MACI0xD,OAAQ,SAAAA,OAAAq9B,UAAQ,OAAI6rC,wBAAiB7rC,cAZjD8uC,iCAAAC,sBCEyB,aDcjBjiJ,MAAO,OAhBfgiJ,iCAAAC,sBCOsB,UDYdjiJ,MAAO,OAnBfgiJ,iCAAAC,sBCJoB,QD0BZjiJ,MAAO,KACPmkB,MACIwxD,UAAW,SAAAA,UAAAt2E,GAAC,OAAIA,aAAawF,qBAC7BgxE,OAAQ,SAAAA,OAAC9jE,KAAM0xB,SACX,GAAIA,QAAQC,OAAQ,CAChB,IAAMw+G,WAAaz+G,QAAQy+G,aAC3Bz+G,QAAQy+G,cAARv/H,OAAAw/H,gCAAuBD,aAAYnwI,YAChC,CACH,IAAMqwI,QAAU3+G,QAAQy+G,aAAa,GACrCE,SAAWA,QAAQ/mD,YAAY,eAC/B53D,QAAQy+G,YAAYnwI,YAhCxCiwI,iCAAAC,sBCG+B,mBDmCvBjiJ,MAAO,KACPmkB,MACI8wD,aAAa,KAxCzBgtE,8lBEOA,WAgBaI,qCAA0B,SAA1BA,wBAA2B5+G,QAASwwC,WAAV,OAAwB,WAC3D,IAAMl2D,ONkJ2B,SAAxBukI,sBAAyBp/C,OAAQvD,WAAY4iD,eAAgB/8H,cACtE,IAAImsD,WA4BJ,OA3BAuxB,OAASA,OAAOnoF,OAAO,SAAAooF,OAAK,OAA8B,OAA1BA,MAAMw3C,mBAC/B7qI,QAAQ,SAACqzF,OACZ,IAAIq/C,gBACE5uI,OAASuvF,MAAMvvF,SACf2/F,SAAW3/F,OAAO2/F,SAClBkvC,YAAct/C,MAAMw3C,gBACpBpZ,QAAUp+B,MAAMtjE,KAEF,OAAhB4iH,cAAmD,IAA3B7uI,OAAOggG,kBAC/B4uC,aAAe/iJ,OAAOwc,QAAQwmI,aAC9B9wE,QAAU6wE,aAAa1oI,OAAO,SAAC4oI,YAAa3kI,QACxC,IAAM6/G,aAAe7/G,OAAO,GACtBzL,MAAQihG,SAASqqB,cAActrH,MAC/Bi/F,UAAYgxC,eAAehhB,SAAS3D,cAC1C,GAAIA,gBAAgBj+B,WAAY,CAC5B,IAAMgjD,SAAQ,GAAAhgI,OAAMg9E,WAAWi+B,cAAcrsB,YAC7CmxC,YAAYC,UAAYD,YAAYC,cACpCD,YAAYC,UAAYjxE,0BAAcgxE,YAAYC,UAAW5kI,OAAO,IAChEyH,aAAalT,OAAOsT,IAAItI,QAAUkI,aAAalT,OAAOsT,IAAItI,QAClDkI,aAAalT,OAAOsT,IAAI/jB,WAEpC6gJ,YAAY9kB,cAAgB7/G,OAAO,GAEvC,OAAO2kI,aACR/wE,YAGJA,QM/KQ2wE,CAAsB7+G,QAAQy/D,SAAUz/D,QAAQ7zB,SAAU6zB,QAAQm/G,gBAC7En/G,QAAQ1xB,OAAO0T,mBACnBge,QAAQ9zB,QAAQgsH,OAAhB,GAAAh5G,OAA0B6xF,0BAAiB18C,sBAA3C,KAAAn1C,ODlBkB,SCkBlB,KAAAA,OAAoFsxD,WAAal2D,UAGxFo6D,6BAAc,SAAdA,YAAe10C,QAASwwC,UAAWmgC,SAArB,QAEnBvyG,KAAM,4BACNy5B,OAAO,GAAA3Y,OAAIsxD,UAAUsE,MAAd,KAAA51D,ODrCO,WCsCdg2D,SAAU,SAAAA,SAAAl9C,MAAgB,IAAZ7nB,OAAYivI,+BAAApnH,KAAA,MACtB7nB,QAAU6vB,QAAQ45D,WAAWzpF,OAAOA,OAAO8tF,gBAI/C7/F,KAAM,4BACNy5B,OAAO,GAAA3Y,OAAIsxD,UAAUsE,MAAd,KAAA51D,ODzCU,aC0CjBg2D,SAAU,SAAAA,SAAA7tD,OAAmB,IAAfkoF,UAAe6vC,+BAAA/3H,MAAA,MACnBg4H,UAAYr/G,QAAQ7zB,SAC1B,GAAIojG,WAAa8vC,UAAW,EAnCf,SAAnBC,iBAAoB/vC,UAAWvvE,SACjC,IAAMu/G,UAAYv/G,QAAQywE,WACpB+uC,WAMN,IAAK,IAAM3iJ,OALX0yG,UAAUljG,QAAQ,SAACojG,SAAUn0G,GACzB,IAAM8gC,GAAE,GAAAld,OAAMuwF,SAASC,KAAf,KAAAxwF,OAAuB5jB,GAC/BkkJ,QAAQpjH,KAAM,IAGAmjH,UACR1iJ,OAAO2iJ,UACTD,UAAU1iJ,KAAKwP,QAAQ,SAAAqzF,OAAK,OAAIA,MAAMz0D,kBAC/Bs0G,UAAU1iJ,MAyBbyiJ,CAAiB/vC,UAAWvvE,SAC5B,IAAM+7D,KAAO/7D,QAAQ+7D,OACrB,GAAIA,KAAKt6D,GAAKs6D,KAAKh1F,EAAG,CAClB,IAAM8wB,OAAQ,GAAA3Y,OAAI6xF,0BAAiBt8C,uBAArB,cAAAv1C,OAAwDyxF,QAAQshC,SAAhE,QAAA/yH,OACP6xF,0BAAiBt8C,uBADV,cAAAv1C,OAC6CyxF,QAAQ8uC,SADrD,MAERvzI,MAAQ8zB,QAAQ9zB,QAChBwzI,aACFlvE,UAAWA,UAAUsE,MACrBj4E,IAAK,oBAETqP,MAAM0rF,YAAY8nD,aAClBxzI,MAAM6rH,uBAAuBlgG,MAAO,WAChC6lH,2BAA2B19G,WAC5B,EAAO0/G,aAGd1/G,QAAQsvE,SAASC,WACjB,IAAMwF,YAAc/0E,QAAQy/D,SAASr9E,KAAK,SAAAsxD,MAAI,OAAIA,KAAKisE,iBACtD,IAAK,KAAKtzI,QAAQ,SAACjO,MACA4xE,aAAaU,WAAW1wC,QAAQ+7D,OAAQ39F,UAChDiO,QAAQ,SAACmpD,MACbA,KAAKrlD,QACD4kG,8BAIZ/0E,QAAQ07G,kBAAkBC,QACtBhsD,OAAQ3vD,QAAQy/D,SAChB54E,OAAQ,cACR6oE,WAAY,cAMxBtxF,KAAM,4BACNy5B,OAAO,GAAA3Y,OAAIsxD,UAAUsE,MAAd,KAAA51D,ODnFK,SCoFZg2D,SAAU,SAAAA,SAAAo/C,OAAmB,IAAf1yG,UAAew9H,+BAAA9qB,MAAA,MACnBsrB,QAAU5/G,QAAQ+7D,OAClBsM,aACAwE,oBAEN7wG,OAAOwc,Q3O84CI,SAAjBqnI,eAAkBj+H,WACpB,IAAMk+H,kBAMN,OALA9jJ,OAAOwc,QAAQoJ,UAAU3O,gBAAgB/D,gBAAgB7C,QAAQ,SAAAioH,OAA2B,IAAAyrB,MAAAtyE,eAAA6mD,MAAA,GAAzBl9G,UAAyB2oI,MAAA,GAAdl2C,SAAck2C,MAAA,GACpFl2C,SAAShwF,YAAcyzD,gCAAiB1rE,WACxCk+I,eAAe1oI,WAAayyF,YAG7Bi2C,e2Or5CgBD,CAAej+H,YAAYvV,QAAQ,SAAA2zI,OAA2B,IAAAC,MAAAb,+BAAAY,MAAA,GAAzB5oI,UAAyB6oI,MAAA,GAAdp2C,SAAco2C,MAAA,GACzEpzC,iBAAiBz1F,WAAayyF,SAAS2kC,iCAG3CxyI,OAAOwc,QAAQwnB,QAAQ7zB,UAAUE,QAAQ,SAAA6zI,OAAqB,IAAAC,OAAAf,+BAAAc,MAAA,GAAnB9hJ,KAAmB+hJ,OAAA,GAAZtxI,MAAYuwI,+BAAAe,OAAA,SAC1D,GAAItxI,MAAO,CACP,IAAM6qG,SAAW7M,iBAAgB,GAAA3tF,OAAIrQ,QACjC6qG,WACArR,UAAUjqG,MAAQs7G,SAClBkmC,QAAQxhJ,MAAMiO,QAAQ,SAAAmpD,MAAI,OAAIA,KAAK36C,QAAQ6+F,gBAKvD15E,QAAQogH,kBAAoBvzC,iBAC5B7sE,QAAQo8G,WAAa/zC,aAIzBjqG,KAAM,4BACNy5B,OAAO,GAAA3Y,OAAIsxD,UAAUsE,MAAd,KAAA51D,OD9GO,WC+Gdg2D,SAAU,SAAAA,YJuBiB,SAAtBmrE,oBAAuBrgH,SAChC,IAAMsgH,OAAStgH,QAAQ7vB,SACjBwgG,QAAU3wE,QAAQ2wE,UAClBzkG,MAAQ8zB,QAAQ9zB,QAChBm8F,UAAYroE,QAAQo8G,YACzBO,UAAWC,WAAWvwI,QAAQ,SAACjO,MAC5B,IAAIsxG,KACAv/F,OACA/R,OAASu+I,WACTjtC,KAAOi7B,qBACPx6H,OAASmwI,OAAOnD,YAEhBztC,KAAOk7B,sBACPz6H,OAASmwI,OAAOpD,WAEpB,IAAMx1I,YAAcm1I,mCAAwB78G,QAAS7vB,OAAQ/R,MAEvD+0E,IAAG,IAAAj0D,OAAO9gB,KAAP,aACT4hC,QAAQmzC,KAAOD,6BAAgBlzC,QAAQmzC,KAAM,WACzC,IAAMO,KAAOs3D,kBAAae,kBAAmBr8B,YAE7C,OADAh8B,KAAKl1E,aAAawhC,QAAQugH,YACnB7sE,MACRhsE,YAAa,SAAA84I,WAAS,OAAIA,UAAUzyG,WAAWlyC,OAClDmkC,QAAQmzC,KAAKnoC,KAAK,SAAC00D,MAAO8gD,WACtB,IAAMzyG,WAAayyG,UAAUzyG,WACvBlyC,KAAOkyC,WAAWlyC,KAClB2/I,MAAQxQ,kBAAaM,kBAAkB57B,KAAM3hE,YAC7C6xG,QAAUY,UAAUzkD,KAC1B2D,MAAMiR,SACF+oB,aAAc/oB,QAAQshC,SACtBtY,aAAchpB,QAAQ8uC,SACtBjvE,UAAS,GAAAtxD,OAAKyxF,QAAQngC,WAAbtxD,OAAyB9gB,MAAzB8gB,OAAgCrjB,QAExCqQ,MAAMA,OACNiE,OAAOqrI,OACPlmB,WACGjtB,sBAEHtM,KAAK6jD,WAEd5/G,QAAO,IAAA9gB,OAAK9gB,OAAU4hC,QAAQmzC,KAAKM,eI9D/B4sE,CAAoBrgH,YAIxB5hC,KAAM,4BACNy5B,OAAO,GAAA3Y,OAAIsxD,UAAUsE,MAAd,KAAA51D,ODpHK,QCoHL,GAAAA,OACAsxD,UAAUsE,MADV,KAAA51D,OD9GU,cCgHjBg2D,SAAU,SAAAA,SAAAurE,OAAAC,QAAkC,IAA9B9+H,UAA8Bw9H,+BAAAqB,OAAA,MAAflhG,UAAe6/F,+BAAAsB,OAAA,MACxC,GAAI9+H,UAAW,CACX,IAAM2pF,WN7Ea,SAAtBo1C,oBAAuBphG,UAAW39B,WAC3C,IAAM2pF,cACN,IAAK,IAAM1uG,OAAO0iD,UACd,MAAOliD,eAAe5B,KAAK8jD,UAAW1iD,KAAM,CACxC,IAAM+jJ,aAAerhG,UAAU1iD,KAC/B0uG,WAAW1uG,KAAO+jJ,aAAah/H,WAIvC,OAAO2pF,WMoEwBo1C,CAAoBphG,UAAW39B,WAClDoe,QAAQ9zB,QAAQgsH,OAAhB,GAAAh5G,OAA0BsxD,UAAUsE,MAApC,KAAA51D,ODlHe,mBCkHuDqsF,gBAK9EntG,KAAM,4BACNy5B,OAAO,GAAA3Y,OAAIsxD,UAAUsE,MAAd,KAAA51D,ODxHgB,mBCwHhB,GAAAA,OACAsxD,UAAUsE,MADV,KAAA51D,ODpHO,WCsHdg2D,SAAU,SAAAA,SAAA2rE,OAAAC,QAAqC,IAAjCxvC,gBAAiC8tC,+BAAAyB,OAAA,MAAZphD,OAAY2/C,+BAAA0B,OAAA,MACrCC,kBAAoB/gH,QAAQm/G,gBAC5B6B,QAAUhhH,QAAQ+7D,OAClBn6E,UAAYoe,QAAQ1xB,OAC1B,GAAIgjG,iBAAmB7R,QAAUuhD,SAAWD,kBAAmB,CAC3D/gH,QAAQ07G,kBAAkBC,QAAShsD,OAAQ8P,OAAQ54E,OAAQ,eAAgB6oE,WAAY,UACvF,IAAMtvE,MAAQ4f,QAAQ9zB,QAAQkU,MAC9Bq/E,OAAOpzF,QAAQ,SAAA40I,KAAG,OAAIA,IAAIC,kBNRR,SAArBC,mBAAsB1hD,OAAQzoF,GAAIoqI,uBAC3C3hD,OAAOpzF,QAAQ,SAACqzF,OACZ,IAAM2hD,WAAa3hD,MAAMvvF,SAAS8X,OAC5BrG,UAAYy/H,sBAAsBtoI,SAAWsoI,WAAWrqI,IACzDoqI,sBAAsBC,aAAerqI,GACtC0oF,MAAMpxF,SAAWsT,WACjB89E,MAAMpxF,KAAKsT,aMGPu/H,CAAmB1hD,OAAQ79E,UAAW0vF,iBACtClxF,MAAM6yH,OACNxzC,OAAOpzF,QAAQ,SAAC40I,KACZA,IAAIK,eAAehnI,OAAO2mI,IAAI5jC,WAElCj9F,MAAM8yH,SACNlzG,QAAQuhH,qBNjIc,SAAzBC,uBAA0B/hD,OAAQ19E,cAC3C,IAAM0/H,+BAoBN,IAAK,IAAM5kJ,OAlBX4iG,OAAOpzF,QAAQ,SAACqzF,OAAU,IAAAgiD,sBAOlBhiD,MAAMq1B,oBALN4B,WAFkB+qB,sBAElB/qB,WACAE,UAHkB6qB,sBAGlB7qB,UACAD,WAJkB8qB,sBAIlB9qB,WAIErqG,UARgBm1H,sBAKlBvlD,OALkBulD,sBAMlBrlD,QAE8B/kF,OAAO,SAAAzI,OAAK,OAAIkT,aAAalT,QAAUkT,aAAalT,OAAOsT,IAAI/jB,OAC7F+6F,yBAAUj3F,WACby0H,WAAYE,UAAWD,YAAYvqH,QAAQ,SAACwC,OACwC,IAAA8yI,sBAA7E5/H,aAAalT,QAAUkT,aAAalT,OAAOsT,IAAI/jB,OAAS+6F,yBAAUh3F,aACjEs/I,4BAA4B5yI,SAAW4yI,4BAA4B5yI,YACpE8yI,sBAAAF,4BAA4B5yI,QAAOpF,KAAnCqB,MAAA62I,sBAAAC,6BAA2Cr1H,gBAKrCk1H,iCACPpkJ,eAAe5B,KAAKgmJ,4BAA6B5kJ,OACpD4kJ,4BAA4B5kJ,KAA5B+kJ,6BAAuC,IAAIvnI,IAAIonI,4BAA4B5kJ,QAGnF,OAAO4kJ,4BMuGoCD,CAAuB/hD,OAClD79E,UAAUI,kBAAmBge,QAAQ6hH,iBNLvB,SAArBC,mBAAsB/lD,KAAM0D,OAAQq/C,gBAC7Cr/C,OAAOpzF,QAAQ,SAACqzF,OACZ,IAAMo+B,QAAUp+B,MAAMtjE,KAChBwjH,WAEN3vE,eAAe8rB,KAAM,SAACl/F,KAClB,IAAMklJ,QAAUjD,eAAehhB,SAC3BikB,SACAhmD,KAAKl/F,OAAS+iJ,QAAQ/iJ,KAAOk/F,KAAKl/F,KAAKklJ,QAAQllJ,MAAQ,MAG/Db,OAAOqN,KAAKu2I,SAAS36I,QAAUy6F,MAAM3D,KAAK6jD,WMLlCkC,CAAmBd,QAASvhD,OAAQshD,mBACpC/gH,QAAQ07G,kBAAkBC,QAAShsD,OAAQ8P,OAAQ54E,OAAQ,UAAW6oE,WAAY,wLCjJ3F,IAAMsP,iBAAKgjD,qBAAAC,UNSa,oBMTbD,qBAAAC,ONUY,oBMVZD,qBAAAC,ONWU,kBMXVD,qBAAAC,ONYI,aMZJD,qBAAAC,ONaS,iBMbTD,qBAAAC,OAAA,mBAAAD,qBAAAC,OAAA,QAQVjyE,cACIvuC,KACA16B,QAVMi7I,qBAAAC,OAAA,aAAAD,qBAAAC,OAAA,cAAAD,qBAAAC,OAAA,eAAAD,qBAAAC,OAAA,YAAAD,qBAAAC,OAAA,aAAAD,qBAAAC,OAAA,yBAAAD,qBAAAC,OAAA,eAoBVjyE,aAAc,SAAAA,aAAAvrE,KAAG,OAAIA,OApBXw9I,ykCCEX,IA8BMxtE,yBAAoB,SAApBA,kBAAqBmlB,UAC9B,IAAM55D,QAAU45D,SAAS55D,QACnB9zB,MAAQ8zB,QAAQ9zB,QAEtBA,MAAM4kG,2BAA0B,eAAA5xF,OAAgB8gB,QAAQ2wE,UAAUngC,UAAlC,KAAAtxD,OHrChB,SGqCwE,SAAC0C,WAGrF,GAFWA,UAAU,GAEb,CACJg4E,SAASsoD,mBAAmBtoD,SAAS55D,QAAQ1xB,OAAOwT,UAAU+I,MAC9D+uE,SAAS/D,wBACT,IAAMssD,aAAevoD,SAAS55D,QAAQy+G,aAAa,GACnD7kD,SAASwoD,0BAA0BD,iBAI3Cj2I,MAAM6rH,wBAAuB,eAAA74G,OAAgB8gB,QAAQ2wE,UAAUngC,UAAlC,KAAAtxD,OHhDb,SGgDqE,WAC5E06E,SAAS55D,QAAQ5I,SACGwiE,SAAS55D,QAAQy+G,aAAa,GACtC7mD,YAAY,iBAIjC53D,QAAQugH,WAAWtoB,UAAUF,wBAAwBhjE,aAAYE,eAC7D,SAAAj9B,MAAqBqqH,8BAAArqH,KAAA,QAhCY,SAA5BsqH,0BAA6BtiH,SACtC,IAAMg2D,kBAAoBh2D,QAAQ40D,mBAClC54F,OAAOwc,QAAQw9E,mBAAmB3pF,QAAQ,SAACua,OACvC,IAAMqvE,WAAarvE,MAAM,GACzBoZ,QAAQ62D,mBAAR/rF,MAAAk1B,SAA2Bi2D,WAAWp6F,MAA/BqjB,OAAAqjI,kCAAwCtsD,WAAW7wE,YAE9D4a,QAAQ40D,sBA4BI0tD,CAA0B1oD,UA3CR,SAArB4oD,mBAAsBxiH,SAC/B,IAAM+1D,cAAgB/1D,QAAQ20D,eAC9B,IAAK,IAAM93F,OAAOk5F,cACVA,cAAcl5F,KAAK4xB,wBACZuR,QAAQ20D,eAAe93F,KAwC1B2lJ,CAAmB5oD,ohBC1DnC,IAoCa6oD,kBACTC,MAAO,SAAAA,MAAC9sC,SAAU+sC,mBAAoBp7H,YAClC,IAAMq7H,YAAcr7H,WAAWmH,QACzB/N,SAvCW,SAAnBkiI,iBAAoBjtC,SAAU+sC,mBAAoBp7H,YACpD,IACM1F,QAAU8gI,mBAAmB,GAAG7gI,UAChCghI,aAAev7H,WAAWmH,QAAQ/N,SAClC6G,kBAAoBD,WAAWC,kBAC/BvY,OAAS4S,QAAQ5S,OACjBsqF,SAAWqc,SAAStnG,OAAO0T,kBAC3B1T,KAAOuT,QAAQvT,KA0BrB,OAzB2BsnG,SAASx5E,OAAS7U,WAAWlB,SAGzCy8H,aAEuB,OAAtBt7H,kBAA8BvY,OAAOoH,OAAO,SAACC,IAAK7K,IAAKjG,OAC/D,IAAIV,MACE+J,MAAQpD,IAAI5P,KACZguG,SAAWtQ,SAAS1qF,OAEpBk0I,aADOl5C,WAAaA,SAAS1nF,IAAItI,QAAUgwF,SAAS1nF,IAAItI,QAAUgwF,SAAS1nF,IAAI/jB,SACxDkvE,gCAAiB3rE,YAE9C,OAAKkoG,UAOD/kG,MAHCi+I,YAGOz0I,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE4J,UAFf4B,KAAK4Q,IAALlN,MAAA1D,KAAI47I,oCAAQ10I,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE4J,WAAU4B,KAAK6Q,IAALnN,MAAA1D,KAAI47I,oCAAQ10I,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE4J,YAI/E8Q,IAAIzH,OAAS/J,MACNwR,KATIA,SAUN,KAQQusI,CAAiBjtC,SAAU+sC,mBAAoBp7H,YAC1DmH,QAAU1yB,OAAOoU,UAAWwyI,aAElC,OADAl0H,QAAQ/N,SAAWA,SACZ+N,SAGXu0H,UAAW,SAAAA,UAACrtC,SAAU+sC,mBAAoBp7H,YACtC,IAAMq7H,YAAcr7H,WAAWmH,QACzBlH,kBAAoBD,WAAWC,kBAC/B3F,QAAU8gI,mBAAmB,GAAG7gI,UAClC7S,OAAS4S,QAAQ5S,OACfyf,QAAU1yB,OAAOoU,UAAWwyI,aAClC3zI,OAAS4S,QAAQ5S,OACjB,IAAMX,KAAOuT,QAAQvT,KACfu9F,aAAe58F,OAAOzD,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OAIvC,OAHA6yB,QAAQ/N,UAAY6G,mBAAqBm7H,mBAAmB,GAAGv3C,UAAY,MACtES,cADc3sF,OAAA8jI,oCACG10I,OACtBogB,QAAQm9E,aAAerkF,kBAAoBA,kBAAkB4I,YAAY5kB,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,UAC7E6yB,wgBCzDf,IAyBaw0H,gCAAkB,SAAlBA,gBAAmBttC,SAAU/uF,QAAwB,IAC1DqsE,gBAD0C/iF,OAAgBxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAExD+lB,QAAUve,OAAOue,QACjBukE,aAAe9iF,OAAO8iF,aACtBkwD,oBAAsBhzI,OAAOizI,kBAAkBv8H,YAC/Cu8H,kBAAoBD,oBAAoBh3I,WACxCosB,OAAS4qH,oBAAoB5qH,OAC7B5X,SAAW+N,QAAQ/N,SACnBqf,QAAU41E,SAAS51E,QACnBpe,UAAYoe,QAAQy+G,aAAa,GACjCp4H,SAAW2Z,QAAQ5D,KACnBinH,aAAeztC,SAAS3jB,cACxBuB,mBAAqBoiB,SAASnhB,oBAC9B6uD,YAAcrwD,aAAaN,YAAYvyE,MACvC2B,aAAeH,UAAUI,kBAC/B0M,QAAQ60H,WAAal9H,SACrBqI,QAAQ7H,OAASA,OACjB6H,QAAQ80H,aAAexjH,QAAQyjH,cAC/B,IACMC,qBAD0B9tC,SAASvhB,yBACYxtE,SAAWA,OAE5D88H,cACa,OAAbhjI,SACAuyE,gBAAkB,KACXrgE,eAAelS,WACtBgjI,WAAa3nJ,OAAOqN,KAAKsX,cACzBuyE,gBAAkBowD,YAAcA,YAAYjyH,QAAQsyH,YAAc,OAElEA,WAAahjI,SAAS,GACtBuyE,gBAAkBowD,YAAcA,YAAYjyH,QAAQsyH,YAAc,MAGtE,IAAMC,cAAgB5jH,QAAQ4jH,gBAC9B,GAAwB,OAApB1wD,iBAA4BkwD,kBAAkBn+I,OAAQ,CACtD,IAAMkH,OAAS+mF,gBAAgBpxE,UAAU7S,OAAOzD,IAAI,SAAA5P,GAAC,OAAIA,EAAEC,OAC3Dq3F,gBA5DsB,SAAxB2wD,sBAAyB7sI,GAAI1I,MAC/B,IAAMuT,QAAU7K,GAAG8K,UACbgiI,QAAUjiI,QAAQ5S,OAClB80I,MAAQliI,QAAQvT,KAChB0vI,YACAgG,QAAU11I,KAAK,GAAG9C,IAAI,SAAA5P,GAAC,OACzBC,KAAI,GAAAqjB,OAAKtjB,GACTwC,KAAM+6F,yBAAUh3F,aAEd8hJ,MAAQ31I,KAAK,GAanB,OAXAy1I,MAAM13I,QAAQ,SAACzQ,GACX,IAAMgY,SACNkwI,QAAQz3I,QAAQ,SAACZ,IAAKnQ,GAClBsY,MAAMnI,IAAI5P,MAAQD,EAAEN,KAExB0oJ,QAAQ33I,QAAQ,SAACZ,IAAKnQ,GAClBsY,MAAMnI,IAAI5P,MAAQooJ,MAAM3oJ,KAE5B0iJ,SAASv0I,KAAKmK,SAGX,IAAIxS,oBAAU48I,YAAd9+H,OAAAglI,kCAA4BJ,SAA5BI,kCAAwCF,WAsCzBH,CAAsB3wD,gBAAiB0wD,eACzDD,WAAaprH,UAAMrZ,OAAAglI,kCAAO/3I,QAAP+3I,kCAAkBd,oBAAqBA,kBAC1DlwD,gBAAkBA,gBAAgB7hE,QAAQsyH,YAG9C,IAAIr9H,6BAA8B,EAC9Bq9H,WAAW1+I,QAAU0+I,WAAWthI,MAAM,SAAAxT,OAAK,OAAIkT,aAAalT,QAC5DkT,aAAalT,OAAOsT,IAAI/jB,OAAS+6F,yBAAUj3F,YAC3CokB,6BAA8B,GAGlC,IAAM69H,QAAUnkH,QAAQyjH,cACxB/0H,QAAQ7H,OAASA,OACjB,IAAMu9H,kBAAoBxuC,SAAS/hB,SAASC,YAAY4vD,sBAClDj1H,kBAAkB21H,mBAAoBA,kBAAkBh7H,YAAYwtE,UAEpEhkF,SAAW,SAAXA,SAAYgU,MAAOy9H,iBACrB,IAAM/uD,QAAU9B,mBAAmB5sE,MAAMzW,OAAO0W,QAC1C+vE,SAAUhwE,MAAMzW,OAAOg0I,SACzB7uD,QAAQlzE,KAAK,SAAAxmB,GAAC,OAAIynJ,aAAaznJ,EAAEC,MAAQD,GAAGwtB,YAAYwtE,YAC5D,OAAOhwE,MAAMzW,OAAOg0I,UAAYE,gBAAgBF,SAAWvtD,SAGzD0tD,gBAAkB1uC,SAAS/hB,SAASC,YAAYjtE,QAChD+vE,UAAU0tD,iBAAkBA,gBAAgBl7H,YAAYwtE,UAC1DrvE,YACAmH,gBACA7H,cACAlG,SAAUuyE,gBACVzkE,gBAAiBmoE,QACjBtwE,wDACA69H,gBACA99H,SAAUuwE,QAAUutD,QAAU99H,SAC9BzT,kBACA2xI,QAAS,SAAAA,QAACC,SAAU5qD,UAAX,OAAyB/yE,SAAW68H,sBACzCc,SAAS91H,QAAQ80H,eAAiB5pD,SAAS55D,QAAQyjH,gBAG3D7hI,UAAUm1E,UAAU7D,gBAAiB3rE,YAAY,GAE7CV,SAAW68H,uBACXn8H,YACImH,gBACArI,SAAUoI,gBAAkB01H,QAAU99H,SACtC1F,SAAUuyE,gBACVzkE,gCACAnI,wDACAO,OAAQ68H,qBACRS,gBACAl9H,cAAeJ,SAAW68H,qBAC1Ba,QAAS,SAAAA,QAACC,SAAU5qD,UAAX,OAAwB4qD,SAAS91H,QAAQ80H,eAAiB5pD,SAAS55D,QAAQyjH,eACpF7wI,mBAGJgP,UAAUm1E,UAAU7D,gBAAiB3rE,YAAY,GAC7CsH,sBAAuB,SAAAA,sBAAC9H,UAAW09H,SAAZ,OAAwB19H,UAAUo9H,UAAYM,QAAQN,qlDC3GpEO,0CACjB,SAAAA,eAAwB,IAAAj6C,iBAAAhyF,iKAAAksI,CAAAphJ,KAAAmhJ,cAAA,QAAA/zE,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,kLAAAmsI,CAAArhJ,MAAAknG,iBAAAo6C,wBAAAH,eAAAjpJ,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,UACTqvD,yBAAkBqwE,8DAAArsI,SAFEA,gYADc66E,qTAM3B8C,UAAW1nE,QAASukE,aAAchB,aACzCixD,gCAAgB3/I,KAAM6yF,WAClB1nE,gBACAukE,0BACAhB,wBACAmxD,kBAAmB7/I,KAAK2wF,+FAINjC,YAAavjE,QAASzI,gBAC5C,IAAM+Z,QAAUz8B,KAAKy8B,QACf+kH,OAAS/kH,QAAQ5D,KACjB4oH,UAAYhlH,QAAQyjH,cACpBwB,wBAA0Bh/H,eAAe28H,aAAe38H,eAAe28H,YAAYY,aACnF0B,aAAej/H,eAAe28H,aAAe38H,eAAe28H,YAAYW,WACxE4B,kBAAoB5hJ,KAAK4wF,mBACzBixD,oBAAsB7hJ,KAAK0uF,cAC3BozD,gBAAiBH,cAAeA,eAAiBH,OAEjD1tD,sBAAwB3oE,QAAQujE,cAClCqD,QAAS5mE,QAAQujE,YACjBuD,YAAa9mE,QAAQ7H,UACpBorE,YAoBL,OAnBAoF,sBAAsBhrF,QAAQ,SAACzQ,GAC3B,IAAI0pJ,cAAgB1pJ,EAAE05F,QACtBgwD,cAAgBA,cAAchuI,OAAO,SAACiuI,IAElC,GADgBH,oBAAoBG,GAAG1pJ,MAAQ0pJ,IAAIn8H,YAAYwtE,YACb,IAAnC3wE,eAAewI,gBAC1B,OAAO,EAEX,IAAK42H,gBAAuC,OAArB32H,QAAQ/N,SAAmB,CAC9C,IAAM6kI,kBAAoBL,kBAAkBI,GAAG1pJ,MAAQ0pJ,IACvD,OAAOC,mBAAoBA,kBAAkBv/H,eAAe28H,YAAa5iH,SAE7E,OAAIilH,0BAA4BD,YAAaK,iBACb,IAArBE,GAAGt+H,gBAKlBrrB,EAAE05F,QAAUgwD,gBAETjuD,4FAGaN,WACpB,OAAqB,IAAdA,kFAGe,IAAAn+E,OAAArV,KACtB,OAAO,SAAC+K,KAAM6B,QACV,IAAIsqF,sBAAuB,EACvBhsE,iBAAkB,EAChBm0H,YAAczyI,OAAOue,QACrBlH,kBAAoBrX,OAAOqX,kBAC3Bi+H,UAAYt1I,OAAOo0I,QACnB19H,OAAS1W,OAAO0W,OAChB6+H,UAAYjD,iBAAiB57H,SAAW47H,iBAAiBQ,UAE/D,GAAIz7H,kBAAmB,CACnB,IAAMzF,aAAeyF,kBAAkBxF,kBACjC2jI,uBAAyB3pJ,OAAOqN,KAAK0Y,cACrC4hI,WAAa3nJ,OAAOqN,KAAKiF,KAAK,GAAG0T,mBAClChmB,OAAOkmB,OAAOH,cAAcK,KAAK,SAAAxmB,GAAC,OAAIA,EAAEumB,IAAI/jB,OAAS+6F,yBAAUj3F,YAChEu4F,qBAAuBkrD,uBAAuBvjI,KAAK,SAAAxmB,GAAC,OAA+B,IAA3B+nJ,WAAWn6I,QAAQ5N,MAInF,IAAM8yB,QAAUg3H,UAAU9sI,OAAKonB,QAAS1xB,KAAM6B,QACxCy1I,iBAAmBhtI,OAAK07E,kBACxB1hF,SAAWgzI,iBAAiB/+H,SAAW++H,iBAAiB,KAC1DrB,SAAU,EAUd,GARI3xI,WACA2xI,QAAU3xI,SAASgwI,gBAAmBhqI,OAAKonB,UAG3CylH,YACAlB,QAAUkB,UAAUt1I,OAAQyI,UAAqB,IAAZ2rI,SAGrCA,QAAS,CACT,IAAMjvD,QAAU18E,OAAK67E,oBAAoB5tE,QACnCu+H,oBAAsBxsI,OAAKq5E,cACjCxjE,gBAAkBte,OAAOg0I,QACrB7uD,QAAQlzE,KAAK,SAAAxmB,GAAC,OAAIwpJ,oBAAoBxpJ,EAAEC,MAAQD,GAAGwtB,YAAYwtE,YAAazmF,OAAOse,gBAEvF,IAAMxI,gBACF8wE,WAAW,EACXzoF,UACAs0I,wBACAp7H,oCACAhB,YAAY,EACZi0E,0CACAp0E,SAAUlW,OAAOiW,oBACjBqI,gBAAiBte,OAAOse,iBAG5B7V,OAAK+7E,eAAe9tE,SAChB6H,gBACAzI,8BACAwI,iCAEJ7V,OAAKm/E,kBAAkBlxE,OAAQ6H,QAASzI,oFAK9BuvE,YAClB,IAAMlnF,KAAO/K,KAAKy8B,QAAQ1xB,OAI1B,OAHIA,MACA/K,KAAK2+I,mBAAmB5zI,KAAKwT,UAAU+I,KAAM2qE,YAE1CjyF,2EAOP,OAHIA,KAAKy8B,QAAQ1xB,QACbu3I,aAAAhB,wBAAAH,aAAAtnJ,WAAA,wBAAAmG,MAAA9H,KAAA8H,MAEGA,6CAKP,OADAA,KAAKy8B,QAAQy+G,aAAa,GAAG7mD,YAAY,eAClCr0F,uuDClGf,IAYqBuiJ,kCAQjB,SAAAA,WAAal1C,SAAUpyG,cAAc,IAAAia,MAAAlV,+JAAAwiJ,CAAAxiJ,KAAAuiJ,YACjCviJ,KAAKumF,IAAMj8E,cACXtK,KAAK60G,cAAgB55G,aACrB+E,KAAKg9I,YACDtoB,UAAW,IAAIpnD,mBAAJm1E,8BACNjxF,aAAYE,eAAgB,IAEjC9xB,WAAY3kC,aAAa2kC,WACzB8iH,iBAAkBznJ,aAAaynJ,kBAEnC1iJ,KAAKm5I,iBAAmB,KACxBn5I,KAAKk5I,iBAAmB,IAAIrtD,QAAQ,SAACxiE,SACjCnU,MAAKikI,iBAAmB9vH,UAE5B4vH,oBAAoBj5I,MACpBA,KAAKg9I,WAAWtoB,UAAUF,wBAAwBhjE,aAAYE,eAAgB,WAC1Ex8C,MAAKikI,mBACLjkI,MAAKijI,kBAAkBC,QAAShsD,OAAQl3E,MAAKgnF,SAAU54E,OAAQ,QAAS6oE,WAAY,YAGxFnsF,KAAKm4I,kBAAoBl9I,aAAaynJ,iBACtC1iJ,KAAKktG,cACLltG,KAAK2iJ,oBAAsB,KAC3B3iJ,KAAK4iJ,oBAAsB,KAC3B5iJ,KAAKo6I,cACLp6I,KAAKq6I,cACLr6I,KAAK6iJ,oBACL7iJ,KAAK47I,mBACL57I,KAAK8iJ,0BACLrb,kBAAaG,iBAAiBv6B,SAASpB,eACvCl9B,sBAAsB/uE,KAAMy7F,iBAC5Bz7F,KAAKqtG,SAASA,UACdrtG,KAAKk7I,6SAiBL,GAAI91I,UAAO1D,OAAQ,CACf1B,KAAK21H,OAALvwH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACA,IAAMgoG,QAAUptG,KAAKotG,UACrBptG,KAAK2I,QAAQqsB,OAAb,GAAArZ,OAAuB6xF,0BAAiBz8C,sBAAxC0xF,8BAAA,GAAA9mI,OACQyxF,QAAQngC,WAAc,OAE9B,IAAM2oD,QAAO,GAAAj6G,OAAM6xF,0BAAiBz8C,qBAAvB,KAAAp1C,OAA+CyxF,QAAQngC,WAgBpE,OAfAY,wBAAW7tE,KAAM+iJ,kBAAc/iJ,KAAK2I,QAAQkU,OACxCowD,UAAW2oD,UAEf1kD,+BAAkBlxE,KAAMmxE,8BACpBI,MAAOqkD,QACPM,OAAQ1oB,0BAAiB18C,wBAEzB49E,SAAUthC,QAAQshC,SAClBwN,SAAU9uC,QAAQ8uC,WAEtBl8I,KAAKq2F,SAAS,IAAI8qD,sBAAanhJ,MAC3BwwF,SAAU0E,gBACV3E,YAAamE,4BACbhD,uBAAwBwC,oBACzBxF,6BAAauB,0CACTjwF,KAEX,OAAOA,KAAK21H,mDAyBZ,OAAIvwH,UAAS1D,QACT1B,KAAKgjJ,UAAL59I,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKgjJ,0CAUZ,OAAOhjJ,KAAKumF,kDAKZ,OADAvmF,KAAK21H,OAAO94G,MAAM6yH,OACX1vI,uDAKP,OADAA,KAAK21H,OAAO94G,MAAM8yH,SACX3vI,iEAIP,OAAIoF,UAAO1D,OACA1B,KAEJA,KAAK68I,wDAQR/jH,WACJ,IAAMlsB,OAAS5M,KAAK4M,SACZq0B,UAA8Dr0B,OAA9Dq0B,UAAW07D,aAAmD/vF,OAAnD+vF,aAAcm+C,oBAAqCluI,OAArCkuI,oBAAqBl+C,YAAgBhwF,OAAhBgwF,YAChD4F,mBAAqBl2B,sBAAsBqwB,aAAc38F,KAAK64B,KAAMjsB,OAAOgwF,aAC3EhhE,MAAQ57B,KAAK47B,QACbC,OAAS77B,KAAK67B,SACd69F,mBAAqB/wC,6BAAc7vD,WAAWgB,MAAM,WAAY,YAEtE95B,KAAKijJ,SAAWr6D,YAAY8wC,mBAAoB,OAAQ,MAAOz4F,WAC9CnH,MAAM,QADP,GAAAne,OACmBigB,MADnB,OAC8B9B,MAAM,SADpC,GAAAne,OACiDkgB,OADjD,OAGhB,IAAMjL,KAAO5wB,KAAKijJ,SAASryH,OAC3B84D,wBAAS94D,MACLgL,YACAC,cACAqnH,MAAO1gD,mBAAmBz/F,KAAK,OVvBP,SAAvBogJ,qBAAwB1mH,QAAS3D,WAC1C,IACM8jE,YADSngE,QAAQ7vB,SACIgwF,YACrB+8C,UAAYl9G,QAAQ29G,WACpBR,UAAYn9G,QAAQ49G,WAEpB+I,oBAAsBx6D,YAAY9vD,UAAW,KAAM,GAAlB,GAAAnd,OAAyBihF,YAAzB,KAAAjhF,ODlMV,wBCmM3Bg+H,UAAD,GAAAh+H,OAAeihF,YAAf,KAAAjhF,ODrMuC,gBCsM/Bi+H,UAAD,GAAAj+H,OAAeihF,YAAf,KAAAjhF,ODrMgC,gBCqM+B7S,QAAQ,SAACua,OAAU,IAAAggI,OAAAC,yBACxCjgI,MADwC,GACvEqpF,UADuE22C,OAAA,GAC5DE,iBAD4DF,OAAA,GAExEjtH,WAAawyD,YAAYw6D,oBAAqB,KAAM,GAA5B,IAAAznI,OAAoC4nI,mBAC5DtiH,UAAS,GAAAtlB,OAAM4nI,iBAAN,UACf36D,YAAYxyD,WAAY,IAAKs2E,UAAlB,IAAA/wF,OAAiCslB,YACxCxL,OAAQ,SAAAA,OAACuqB,MAAOqyD,UACZA,SAAS0f,WAAYjtB,UAAWroE,QAAQo8G,aAAchlH,MAAMmsB,MAAMpvB,aUWlFuyH,CAAqBnjJ,KAAM4wB,MAC3BsnH,oBAAal4I,KAAM4wB,KAAM5wB,KAAKk8F,UAC1BtgE,YACAC,gBAEJ77B,KAAKwjJ,iBZ4DwB,SAAxBC,sBAAyB3qH,UAAWmI,WAAZ,OAA0B2nD,YAAY9vD,UAAW,KAAM,GAAImI,WAAWrQ,OY5D3E6yH,CAAsB7yH,KAAD,GAAAjV,OAAUihF,YAAV,KAAAjhF,OAAyBm/H,sBACtE,IAAMzkD,SAAWr2F,KAAKq2F,WAEtB,OJ7NuB,SAAlBqtD,gBAAmBh1D,YAAa2H,UACzC,IAAK,IAAM/8F,OAAOo1F,iBACP50F,eAAe5B,KAAKw2F,YAAap1F,OACpCo1F,YAAYp1F,eAAgBgjG,+BAAuB5N,YAAYp1F,KAAK0jG,eAAe,WAE/E,OADgB3G,SAAS55D,QACV49D,sBAEnB3L,YAAYp1F,KAAKoiG,YAAYrF,SAAS55D,QAAQi/D,gBIqNlDgoD,CAAgBrtD,SAAS3H,cAAe2H,UACjCr2F,yCAIP,OAAOA,KAAKk5I,uEAaZ,OADAl5I,KAAK08B,QAAS,EACP18B,yDAaP,OAFAA,KAAK08B,QAAS,EACd18B,KAAKk7I,YAAYl7I,KAAKk7I,aAAa,KAC5Bl7I,mEAwBP,IAAM2jJ,QAAU3jJ,KAAKijJ,UAAYjjJ,KAAKijJ,SAASryH,OACzCgL,MAAQ57B,KAAK47B,QACbC,OAAS77B,KAAK67B,SAHH+nH,sBAIU5jJ,KAAK6jJ,qBAAxBjiD,GAJSgiD,sBAIThiD,GAAI94E,WAJK86H,sBAIL96H,WACZ,OACIi5E,cAAe/hG,KAAK6zB,QACpB+mE,aAAc+oD,QACd/nH,YACAC,cACA4gE,gBAAiBz8F,KAAKwjJ,iBACtBzpH,gBAAiB6nE,GACjBqH,0BAA2BngF,WAC3B2hF,QAAS,EACT0H,QAAS,iDAUb,OACIjW,OAAQl8F,KAAKk8F,SAASj0F,IAAI,SAAAk0F,OAAK,OAAIA,MAAMvvE,cACzChgB,OAAQ5M,KAAK4M,SACb4rF,KAAMx4F,KAAKw4F,OAAOvwF,IAAI,SAAAgqD,MAAI,OAAIA,KAAKrlC,qDAKvC,OAAIxnB,UAAM1D,QACN1B,KAAKuhG,OAALn8F,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACApF,KAAK8iG,OAAL19F,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACApF,KAAKq2F,WAAWjC,yBACTp0F,MAEJA,KAAKuhG,iDAyBNuiD,iBAAiB,IAAAl5E,MAAA9mD,MAAAzO,OAAArV,KACjB+jJ,iBAAmBhM,wBAAiB3iH,QAAQ0uH,kBAE5C9H,UAAYh8I,KAAKktG,WACjB+uC,WACAtzI,OACFuzF,UACA8nD,YACIhsI,KAAMhY,OAGVikJ,WAAa,EACbC,YAAat5E,UAAGjvD,OAAHpU,MAAAqjE,MAAAu5E,8BAAa1rJ,OAAOkmB,OAAO3e,KAAKktG,cAAaxrG,OACxD0rG,QAAUptG,KAAKotG,UACf94E,MAAQt0B,KAAK6iJ,iBACb3mD,OAAS6nD,iBAAiBxwI,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAE2sB,MAAQ1jB,EAAE0jB,QAAOhU,OAAO,SAACsxI,UAAWl4C,UAAa,IAAAm4C,WACxF75G,WAAa0hE,SAASttF,IACtB0lI,OAAS95G,WAAWlyC,KACpBisJ,OAASnvH,QAAQoV,YACjB2sC,cACNotE,OAAOz7I,QAAQ,SAAC8V,KACZA,IAAIkI,MAAQolF,SAASplF,MAAQm9H,WAC7B,IAAMh3E,UAAS,GAAAtxD,OAAMyxF,QAAQngC,WAAdtxD,OAA0BuoI,YACpClI,UAAUsI,UACXJ,cACmC,IAA/B15G,WAAWoiE,kBACXt4E,MAAK,GAAA3Y,OAAI6xF,0BAAiBv8C,uBAArB,KAAAt1C,OPlWP,SOkWO,KAAAA,OAAyDsxD,aAAe,IAGrFkK,WAAWjxE,KAAK+mE,aAEpBg3E,YAAcM,OAAO7iJ,OACrB,IAAMgrG,UZ7Ta,SAAlB83C,gBAAmB/nH,QAAS+N,WAAYi6G,cAAettE,YAChE,IAAIu1B,UAAY+3C,cACVxpJ,aAAewhC,QAAQugH,WACvB5vC,QAAU3wE,QAAQ2wE,UACnBq3C,gBACD/3C,UAAY+6B,kBAAae,iBAAiBh+F,YAC1CpV,QAAQs3E,WAAW5jG,QAAQ,SAACqnE,KAAMp4E,GAC9Bo4E,KAAKi9B,SACD+oB,aAAc/oB,QAAQshC,SACtBtY,aAAchpB,QAAQ8uC,SACtBjvE,UAAWkK,WAAWp/E,KAE1Bo4E,KAAKxnE,MAAM8zB,QAAQ9zB,YAG3B,IAAMuzF,UACAwoD,YAActvH,QAAQs3E,WAgB5B,OAfAliE,WAAapV,QAAQoV,aACV13B,OAAO,SAACC,IAAK6L,IAAK5L,KACzB,IAAMq/F,SAAWqyC,YAAY1xI,KAW7B,OAVAq/F,SAASzlG,OAAOgS,KAChByzF,SAAS3W,YAAYj/D,QAAQi/D,eAC7B2W,SAASp3G,aAAaA,cACtBo3G,SAAS0f,WACLjtB,UAAWroE,QAAQo8G,aAEnBj6H,IAAItmB,MACJ+5G,SAASmjB,MAAM52G,IAAItmB,MAEvB4jG,OAAOmW,SAASmjB,SAAWnjB,SACpBt/F,SAEJmpF,OY6RmBsoD,CAAgBnvI,OAAMm1B,WAAYwxG,UAAUsI,QAASntE,YACvExuE,MAAMuzF,OAASzjG,OAAOoU,OAAOlE,MAAMuzF,OAAQwQ,WAC3C,IAAMi4C,eAAiBlsJ,OAAOkmB,OAAO+tF,WAIrC,OAHA03C,WAAYC,WAAAD,WAAUzoI,OAAVpU,MAAA88I,WAAAF,8BAAoBQ,iBAChC3I,UAAUsI,QAAUK,eACpB1I,QAAQqI,QAAUA,OACXF,eAGXz7I,MAAMqP,KAAOhY,KACb,IAAM4kJ,aACAR,WAAYtgI,UAAGnI,OAAHpU,MAAAuc,MAAAqgI,8BAAa1rJ,OAAOkmB,OAAO3e,KAAKktG,cAElDk3C,UAAUt7I,QAAQ,SAACqzF,OACf,IAAMq5B,MAAQr5B,MAAMq5B,QACpB7sH,MAAMuzF,OAAOs5B,OAASr5B,MACtByoD,UAAUpvB,YAEdt5B,OAAOpzF,QAAQ,SAACqzF,OACZ,IAAM0oD,OZ7SsB,SAA3BC,yBAA4BC,UAAWp8I,OAChD,IAAMyoH,kBAAoB2zB,UAAUn4I,SAASwkH,sBACvC4zB,WAAa5zB,kBAAkB4zB,WACjCH,UACJ,GAAIG,WAAY,CACZ,IAAMtvH,SAAWsvH,WAAWr8I,OAC5Bk8I,OAASnvH,SAASmvH,OAClBE,UAAU3zB,kBAAkB17F,SAASvW,SAC9BiyG,6BAA6B57G,UACpCuvI,UAAU3zB,kBAAkBA,mBAEhC,OAAOyzB,OYkSgBC,CAAyB3oD,MAAOxzF,OAC/Ci8I,UAAUzoD,MAAMq5B,SAAWqvB,SAG/B7kJ,KAAK44I,eAAiBgM,UACtB5kJ,KAAK47I,gBAAkBnjJ,OAAOoU,OAAO7M,KAAK47I,gBZlPjB,SAApBqJ,kBAAqB/oD,OAAQtzF,QACtC,IAAM2yI,kBAgBN,OAfAr/C,OAAOpzF,QAAQ,SAACqzF,OAAU,IAAA+oD,cACK/oD,MAAMvvF,SAAzBqlD,KADcizF,cACdjzF,KAAMs6C,SADQ24C,cACR34C,SACR1zE,GAAKsjE,MAAMtjE,MAChB,IAAK,KAAK/vB,QAAQ,SAACjO,MAChB,IAAIoH,MACEqJ,MAAQmhE,aAAaU,WAAWlb,KAAMp3D,MAAO0xG,SAAS1xG,OAAS0xG,SAAS1xG,MAAMyQ,OAEhFrJ,MADA2G,OAAO/N,MACC+N,OAAO/N,MAAMwrB,UAAU,SAAAmkF,WAAS,OAA+C,IAA3CA,UAAU3R,aAAa5yF,QAAQqF,SAEnE,GAEXiwI,eAAe1iH,MAAQ0iH,eAAe1iH,QACvC0iH,eAAe1iH,IAAIh+B,MAAQoH,UAG5Bs5I,eYiOwD0J,CAAkB/oD,OAAQl8F,KAAK4I,WAC1F,IAAMu8I,WAAanlJ,KAAK2I,QAYxB,OAVAw8I,WAAW9wD,aACP/6F,IAAK,0BACL2zE,UAAS,GAAAtxD,OAAK6xF,0BAAiBz8C,qBAAtB,KAAAp1C,OAA8CyxF,QAAQngC,aAEnEk4E,WAAW53C,0BAA0B90G,OAAOqN,KAAKwuB,OAAQ+mH,qCAAwBr7I,KAAMotG,QAAQngC,YAC3F,GACI3zE,IAAK,0BACL2zE,UAAS,GAAAtxD,OAAK6xF,0BAAiBz8C,qBAAtB,KAAAp1C,OAA8CyxF,QAAQngC,aAEvEjtE,KAAKk8F,OAAOkoD,WACLloD,+CAUP,IAAMwmD,iBAAmB1iJ,KAAK60G,cAAc6tC,iBAY5C,OAXAA,iBAAiBtK,QAAShsD,OAAQpsF,KAAMsjB,OAAQ,eAAgB6oE,WAAY,SAC5EnsF,KAAK2I,QAAQ0rF,aACTpnB,UAAS,GAAAtxD,OAAK6xF,0BAAiBz8C,qBAAtB,KAAAp1C,OAA8C3b,KAAKotG,UAAUngC,aAE1E0b,6BAAc3oF,KAAK6zB,SAAS6T,SAC5B1nC,KAAKq2F,WAAW3uD,SAEhBg7G,iBAAiBtK,QAAShsD,OAAQpsF,KAAKk8F,SAAU54E,OAAQ,eAAgB6oE,WAAY,UACrFnsF,KAAKk8F,SAASpzF,QAAQ,SAAAqzF,OAAK,OAAIA,MAAMz0D,WACrCg7G,iBAAiBtK,QAAShsD,OAAQpsF,KAAKk8F,SAAU54E,OAAQ,UAAW6oE,WAAY,UAChFu2D,iBAAiBtK,QAAShsD,OAAQpsF,KAAMsjB,OAAQ,UAAW6oE,WAAY,SAChEnsF,qFAUkBwiB,YAAatpB,KAAMksJ,aAC5C,GAAoB,OAAhB5iI,YACA,OAAO,KAEX,IAAMnE,UAAY+mI,aAAeplJ,KAAK+K,OACtC,OAAO8lE,yCAA4BxyD,UAAWmE,YAAatpB,oDAY3D,OADA8G,KAAK+K,KAAK/K,KAAKk7I,aAAa,IACrBl7I,2DAUP,OACI6kG,oBAAqB7kG,KAAKg+I,qBAC1Bp1I,OAAQ5I,KAAK4I,SACbmC,KAAM/K,KAAK+K,OACXytF,KAAMx4F,KAAKw4F,8DAKf,OAAOx4F,KAAK2I,QAAQ/P,IAAb,GAAA+iB,OAAoB6xF,0BAAiB18C,sBAArC,YAAAn1C,OAAqE3b,KAAKotG,UAAUngC,0FASlE,IAAAk9B,aACanqG,KAAK4M,SAAnCgwF,YADiBuN,aACjBvN,YAAaD,aADIwN,aACJxN,aACrB,OAAO,IAAAhhF,OAAKihF,YAAL,KAAAjhF,OAAoBghF,uEAYd9hG,MAEb,OADei+I,YAAY94I,KAAKk8F,SAAU,OAAQrhG,4DAatCvC,MAEZ,OADewgJ,YAAY94I,KAAKk8F,SAAU,OAAQ5jG,MACpC,2DA2BD4lC,EAAG16B,EAAGoJ,QACnB,IAAImqH,UACAl+F,GAAI,MAEFwsH,SZxT4B,SAA7BC,2BAA8B7oH,QAAS+F,UAChD,IAAM55B,OAAS6zB,QAAQ7zB,SACvB,IAAKA,OAAOs1B,EAAEx8B,SAAWkH,OAAOpF,EAAE9B,OAC9B,OAAO,KAEX,IAAMqJ,KAAO0xB,QAAQ1xB,OACfytF,KAAO/7D,QAAQ+7D,OACfh6E,aAAezT,KAAK0T,kBACpBm6E,OAASzrB,WAAWvkE,OAAQ,IAAK,GAAGiwF,aAAa,GACjDC,OAAS3rB,WAAWvkE,OAAQ,IAAK,GAAGiwF,aAAa,GACjDE,WAAav6E,aAAao6E,QAAQh6E,IAAItI,QACtC0iF,WAAax6E,aAAas6E,QAAQl6E,IAAItI,QAEtCivI,WAAa,IAAKxsD,WAAYH,SAAU,IAAKI,WAAYF,SAAS1tE,KAAK,SAAA/H,OAAK,OAC9EA,MAAM,KAAO0mD,gCAAiB3rE,aAAeilB,MAAM,KAAO0mD,gCAAiB1rE,WAE/E,IAAKknJ,UAAaxsD,aAAeM,8BAAe56F,YAAcu6F,aAAeK,8BAAe56F,WACxF,OAAO,KAEX,IAAM6M,MAAQi6I,SAAS,GACjBtjJ,MAAQuc,aAAalT,OAAOrJ,MAC9B3I,IAAMk/F,KAAK+sD,SAAS,IAAI,GAAGt7G,OAAOzH,SAAS+iH,SAAS,KACxD,GAAIA,SAAS,KAAOx7E,gCAAiB1rE,SAAU,CAC3C,IAAM+tE,WAAaiyE,6BAAI,IAAIvnI,IAAI/L,KAAKwT,UAAUxT,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAE4J,WAC9D3I,IAAM6yE,gBAAgBC,WAAY9yE,KAGtC,YAAegU,IAARhU,MAAsBgS,QAAShS,MAAQ,KY6RzBgsJ,CAA2BtlJ,MACxCk+B,IACA16B,MAGJ,GAAiB,OAAb6hJ,UAAqBz4I,OAAOmuF,aAAc,CAC1Cg8B,SAASl+F,GAAKwsH,SACd,IAAMG,SAAWxlJ,KAAKylJ,qBAAqBvnH,EAAG16B,EAAGoJ,QAEjD,OADAmqH,SAASr5E,OAAS8nG,UAAYA,SAAS3sH,GAAK2sH,SAAS3sH,GAAKk+F,SAASl+F,GAC5Dk+F,SAGX,IAAM2uB,QAAU1lJ,KAAKylJ,qBAAqBvnH,EAAG16B,EAAGoJ,UAAaisB,GAAI,MAIjE,OAHAk+F,SAAWt+H,OAAOoU,UAAW64I,UAEpBhoG,OAASgoG,QAAQ7sH,GACnBk+F,2EAGW74F,EAAG16B,EAAGwD,MAMxB,IALA,IAAMk1F,OAASl8F,KAAKk8F,SACdzzF,IAAMyzF,OAAOx6F,OACfi3D,MAAQ,KAGH5gE,EAAI,EAAGA,EAAI0Q,IAAK1Q,IAAK,CAC1B,IAAMokG,MAAQD,OAAOnkG,GAKrB,IAH2B,IADZokG,MAAMvvF,SACVwvF,cACPzjC,MAAQwjC,MAAMrB,gBAAgB58D,EAAG16B,EAAGwD,OAEpC2xD,MACA,OAAOA,MAGf,OAAOA,wFAsDmBn2C,aAA0B,IAAb5V,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAChDywE,UACA8vE,kBAAoBnjI,YACxB,GAAoB,OAAhBA,YACA,SAEJ,IAAM05E,OAASl8F,KAAKk8F,SACdzzF,IAAMyzF,OAAOx6F,OACf4tB,eAAe9M,eACfmjI,mBAAqBltJ,OAAOqN,KAAK0c,cACjCmjI,qBAAiBhqI,OAAAwoI,8BAAOwB,mBAAPxB,8BjP8rBN,SAAjByB,eAAiBx0I,KAAG,OAAIA,IAAI,GAAGnJ,IAAI,SAACwoE,IAAK14E,GAAN,OAAYqZ,IAAInJ,IAAI,SAAAoT,KAAG,OAAIA,IAAItjB,OiP9rBd6tJ,CAAentJ,OAAOkmB,OAAO6D,iBAE/E,IAAK,IAAIzqB,EAAI,EAAGA,EAAI0Q,IAAK1Q,IAAK,CAC1B,IAAMokG,MAAQD,OAAOnkG,IACc,IAA/BokG,MAAMvvF,SAASwvF,cACfvmB,UAAMl6D,OAAAwoI,8BAAOtuE,QAAPsuE,8BAAkBhoD,MAAM0pD,yBAAyBF,kBAAmB/4I,WAGlF,OAAOipE,mEAWQv9E,MAEf,OADA0gJ,eAAe,OAAQ1gJ,MAChB0H,mEAWSnF,MAEhB,OADAm+I,eAAe,OAAQn+I,MAChBmF,uDAtkBP,MAxDY,mDA4DZ,QAEQ+W,WAEJgsI,2DAyCkB,QAAA31E,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MACtB,OAAAy4E,sBAAW9lJ,KAAQ6hB,mkCC1I3B,IAAMkkI,cAAgB,SAAhBA,cAAiBC,SAAD,OAA4BA,QAA5B5gJ,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,OAA8C6C,IAAI,SAAAW,QAAM,OAAIA,OAAOkK,OAAO,SAACC,IAAK1a,GAElG,OADA0a,OAAG4I,OAAAsqI,+BAAOlzI,KAAPkzI,+BAAe5tJ,EAAEwgG,uBAYlBqtD,wBAA0B,SAA1BA,wBAA2Bn1I,UAAWmX,WAAYg+E,aAAxB,OAC5Bn1F,UAAUmO,OAAO,SAAAtW,QAAM,OAAIsf,WAAWpJ,MAAM,SAACxT,MAAOs9B,GAAR,OAAchgC,OAAO0C,OAAOtS,QAAUktG,YAAYt9D,QAS5Fu9G,gCAAqB,SAArBA,mBAAsBC,SAAU3pH,SAAiC,IAAxByL,MAAwB9iC,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAAhB,EAAGlE,IAAakE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAE/DwrI,OAGAn0G,QAHAm0G,OACAvyH,UAEAoe,QAFApe,UACAwqG,aACApsF,QADAosF,aAIJ,GAAI+nB,OAAO1oG,MAAQ,GAAI,CACnB,IAAM58B,MAAQslI,OAAO1oG,OACrB2gF,aAAa//G,QAAQ,SAAC9P,OAClB,IAAMukB,MAAQc,UAAUa,OAAO,SAAAtW,QAAM,OAAIA,OAAO0C,OAAOtS,QAAUA,QAC3DqtJ,sBAAwBvU,sBAAsBv0H,MAAOqzH,OAAO1oG,MAAQ,IAO1Ei+G,mBAAmBC,UALfxV,cACAvyH,UAAWd,MACXsrG,aAAcw9B,uBAGuBn+G,MAAQ,KAA/BvsB,OAAAsqI,+BAAsC/kJ,MAAKlI,gBAGjE6vH,aAAa//G,QAAQ,SAAC9P,OAClBotJ,SAASlgJ,QAATyV,OAAAsqI,+BAAkB/kJ,MAAKlI,YAW7BstJ,YAAc,SAAdA,YAAev1I,UAAWs+H,aAAgB,IAExCkX,qBAGAlX,YAHAkX,qBACAC,eAEAnX,YAFAmX,eACAC,oBACApX,YADAoX,oBAGJ,OAAID,eAAe9kJ,OAAS,EACjB8kJ,eAAev+I,IAAI,SAAC4gG,eAAkB,IAAA69C,gBAAAC,2BACGZ,cAAcl9C,cAAe09C,sBADhC,GAClCK,eADkCF,gBAAA,GAClBG,kBADkBH,gBAAA,GAEzC,OAAO31I,UAAU+c,WAAVnS,OAAAsqI,+BAAsBW,gBAAtBX,+BAAyCY,mBAAzCZ,+BAA+DQ,0BAGtE11I,YASN+1I,aAAe,SAAfA,aAAgBrqH,QAASsqH,kBAAqB,IAAAC,iBAC5CvlF,SAEAllB,OAIA9f,QAJA8f,OACAxrC,UAGA0rB,QAHA1rB,UACAk2I,UAEAxqH,QAFAwqH,UACA11B,UACA90F,QADA80F,UAIAi1B,eAGAj1B,UAHAi1B,eACAU,eAEA31B,UAFA21B,eACAT,oBACAl1B,UADAk1B,oBAGA/X,SAEAuY,UAFAvY,SACAC,YACAsY,UADAtY,YAEEwY,QAAUX,eAAgB9X,SAAY8X,eAAe9kJ,YAIvDwlJ,eAAexlJ,OAAS,EACxB+/D,MAAQylF,eAAej/I,IAAI,SAAC4gG,cAAeu+C,SAAY,IAAAC,gBAAAV,2BACJZ,cAAcl9C,cAAes+C,SADzB,GAC5CN,kBAD4CQ,gBAAA,GACzBC,kBADyBD,gBAAA,GAE7CE,YAAcx2I,UAAU+c,WAAVnS,OAAAsqI,+BAAsBY,mBAAtBZ,+BAA4CqB,mBAA5CrB,+BAAkEQ,uBAChFpX,aAAgBC,UAAW6X,QAAS5X,aAAc1mC,eAClDN,SAAYmmC,kBAAUC,YAAaA,YAAcuY,eAAexlJ,OAAS0lJ,SAE/E,OAAOL,iBAAiBQ,aAAelY,wBAAa9mC,iBAAW0+C,aAMnExlF,OAASslF,iBAAiBh2I,WAAas+H,aAHjBC,UAAW6X,QAAS5X,iBAGUhnC,SAFlCmmC,kBAAUC,0BAEmCsY,YAGnE1qG,OAAOmyF,UAAYnyF,OAAOmyF,eAC1BsY,iBAAAzqG,OAAOmyF,WAAUxoI,KAAjBqB,MAAAy/I,iBAAAf,+BAAyBxkF,SASvB+lF,WAAa,SAAbA,WAAc1hJ,KAAM2hJ,eACtB3hJ,KAAKgD,QAAQ,SAAC4+I,OACVA,MAAM5+I,QAAQ,SAACxP,IAAK0Z,KAChB00I,MAAM10I,KAAOy0I,cAAcz0I,KAAK1Z,mjCClH5C,IAoBaquJ,8BAAmB,SAAnBA,iBAAoBlrH,QAAS1rB,UAAWwgH,UAAWqf,QAAW,IAEnEvB,YAEA9d,UAFA8d,YACA9mC,QACAgpB,UADAhpB,QAGA+mC,UAEAD,YAFAC,UACAC,aACAF,YADAE,aAGCb,SAEDnmC,QAFCmmC,SACAC,YACDpmC,QADComC,YAGDiZ,eAMAnrH,QANAmrH,eACMC,SAKNprH,QALAimC,KACAjxC,SAIAgL,QAJAhL,SACA7kB,OAGA6vB,QAHA7vB,OACAspI,QAEAz5G,QAFAy5G,QACA/vC,aACA1pE,QADA0pE,aAEE3N,KAAO/mE,SAAS+mE,OAChB21C,UAAY18G,SAAS08G,YACrB2Z,aAAer2H,SAASq2H,eACxBv1C,aAAe9gF,SAASx2B,eAAeo/B,WACvC0tH,eAAiBt2H,SAASs2H,iBAC1BC,aAAev2H,SAASu2H,eACxBC,mBAAqBx2H,SAASw2H,qBAEhC7S,aAEAjH,UAFAiH,aACAC,YACAlH,UADAkH,YAEE6S,eAAiBhS,QAAQiS,gBAAiB5Y,0BAAcD,qBAAasY,oBACrE9Z,cAAiBlhI,cAAQ2lG,0BAAc/Z,UAAM21C,qBAEnD5c,UAAU62B,kBAAoBJ,aAAap/I,OAC3C2oH,UAAU82B,eAAiBN,eAAen/I,OAE1C,IAAM0/I,cAAY3sI,OAAA4sI,+BACV3X,OAAO4X,UAAU,IADPD,+BACc3X,OAAO6X,UAAU,QAD/B9sI,OAAA4sI,+BAEV3X,OAAO4X,UAAU,IAFPD,+BAEc3X,OAAO6X,UAAU,MAE3C1a,YAAcua,UAAUltI,QAC9B2yH,YAAY,GAAKA,YAAY,GAAG9lI,IAAI,SAAAygJ,YAAU,OAAIA,WAAW7d,WAC7D,IAAMoD,UAAYiI,QAAQz7B,WAAWqzB,aAAcvc,UAAW90F,QAASsxG,aAEvE+Z,aAAapZ,UAAYoZ,aAAapZ,UAAYoZ,aAAapZ,aAC/DoZ,aAAapZ,UAAUC,aAAeuZ,eAGtC,IAAMS,YhBjBgB,SAAbC,WAAcrvB,MAAOsvB,UAAR,cAAAltI,OAA6B49G,MAA7B,KAAA59G,OAAsCktI,UgBiBxCD,CAAWla,SAAUC,aACnC/lI,QACFpF,EAAG8rI,UACHpxG,EAAGqxG,cAGDuZ,SAAYzT,YAAY9iI,IAAIo2I,aAAgCtT,YAAYz8I,IAAI+vJ,aAAjC,IAAId,SAarD,OAXAiB,SAAS/9I,KAAKgG,WACGynF,KAAKy1C,WACLrlI,OAAOA,QACPozC,UAAUisG,oBACV9hD,aAAaA,cACbk6C,cAAciI,WAC/BlT,aAAa5iI,IAAIm2I,YAAaG,UAC9BzT,YAAY9/H,OAAOozI,aArFH,SAAdI,YAAet3H,SAAUm/G,OAAQkY,WAClC1f,IAAKD,KAAKrgI,QAAQ,SAACwC,OAChB,IAAMm2D,MAAQhwC,SAAQ,GAAA9V,OAAIrQ,MAAJ,YAChB09I,SAAWpY,OAAM,GAAAj1H,OAAIrQ,MAAJ,WAAmB,GAAGvI,QAE5C0+D,MAAMunF,YAAcvnF,MAAMunF,cAC3BvnF,MAAMunF,UAAU9iJ,KAAK4iJ,UACrBr3H,SAAQ,GAAA9V,OAAIrQ,MAAJ,UAAkBm2D,SAgF9BsnF,CAAYt3H,SAAUm/G,OAAQkY,UAEvB1T,aAAax8I,IAAI+vJ,cAatBM,6BAAkB,SAAlBA,gBAAmBp2F,UAAW2lC,KAAM+R,UAAW9oC,OAA7B,OACpBkO,6BAAgB9c,UAAW,SAAAZ,MAAI,OAAIA,MAAMumC,KAAM,SAACzuF,KAAMhS,GAAP,OAAaA,EAAIgS,KAAK+I,OAAO,SAAC7Y,EAAGT,GAE5E,OAAOS,GADIT,EAAEq/B,GAAK0xE,YAEnB,MAAKtiG,IAAI,SAACihJ,QAASj3F,MAClB,GAAIA,MAAQA,KAAKs4C,WAAY,CACzB,IAAM4+C,SAAWl3F,KAAKs4C,WADG6+C,iBAEKD,SAASv8I,SAA/B02F,YAFiB8lD,iBAEjB9lD,YAAavE,KAFIqqD,iBAEJrqD,KAErB,OAAO,IAAIt9B,MAAM4nF,UAAW3kI,OAAOykI,UAAUv8I,QACzCgqG,SAAUtT,cAAgBkM,iCAAgBL,MAAQ7L,cAAgBkM,iCAAgBN,IAClFnQ,YAGR,OAAO,IAAIt9B,MAAM6nF,WAAY18I,QAASmyF,MAAM,OA0E9CwqD,iCAAsB,SAAtBA,oBAAuB9sH,QAAS+sH,aAAc/nF,MAAO8wC,cAAiB,IAEpEtgD,KAIAx1B,QAJAw1B,KACAnsD,KAGA22B,QAHA32B,KACAjL,KAEA4hC,QAFA5hC,KACA02I,MACA90G,QADA80G,MAEEV,QAAU5+E,KAAKvwD,OAASoE,KAAKpE,OAC7B+nJ,cAAgB3jJ,KAAKpE,OAASuwD,KAAKhqD,IAAI,SAAC5P,EAAGN,GAAJ,OAAU+N,KAAKjC,KAAK6N,MAAM3Z,EAAI84I,eAK3E,OAHsBlhE,6BAAgB65E,aAAY,GAAA7tI,OAAI9gB,KAAJ,YAAoB,SAAA6uJ,QAAM,OAAIA,QAAQD,cACxF,SAACC,OAAQ3xJ,GAAT,SAAA4jB,OAAkB+tI,OAAO3mJ,KAAK,KAA9B,KAAA4Y,OAAsC5jB,KAEjBkQ,IAAI,SAACyhJ,OAAQ3+I,MAC9B,IAAI4+I,UA9BY,SAAlBC,gBAAmB/2F,UAAWt5C,QAASkoD,MAAO8wC,cAA5B,OAA6C5iC,6BAAgB9c,UACjF,SAAChgD,OACG,IAAMg3I,SAAW,IAAIpoF,MAAM+zE,aAAejjC,4BAE1C,OADAs3C,SAASnlI,OAAO7R,OACTg3I,UACRtwI,QAAS,SAACjgB,IAAKvB,GAAN,OAAYuB,IAAMvB,IAyBV6xJ,CAAgB,KAAM7+I,KAAM02D,MAAO8wC,cAEnD,OADAo3C,UAAYA,UAAU1hJ,IAAI,SAACy6D,KAAM95B,GAAP,OAAa85B,KAAKh+C,OAAOkkB,GAAGh8B,OAAO2kI,YAe/DuY,kCAAuB,SAAvBA,qBAAwBrtH,QAASglC,MAAO8wC,cAC1C,IAAIi3C,aAEAhT,SAOA/5G,QAPA+5G,SACA5tI,OAMA6zB,QANA7zB,OACAmhJ,qBAKAttH,QALAstH,qBACAl3F,UAIAp2B,QAJAo2B,UACA0+E,MAGA90G,QAHA80G,MACAyY,SAEAvtH,QAFAutH,SACAv4H,SACAgL,QADAhL,SAGA1W,KAEAnS,OAFAmS,KACAjB,QACAlR,OADAkR,QAGAmwI,aACAzT,SADAyT,aAGAzD,eAEAuD,qBAFAvD,eACAU,eACA6C,qBADA7C,eAGAgD,QAEAD,aAFAC,QACAC,WACAF,aADAE,WAEEC,aAAeJ,SAAS5T,cAAcvJ,UACtCwd,eAAiBL,SAAS5T,cAActJ,YAE9C0c,aAAe32F,eAEd,MAAOlT,EAAG17C,GAAG6E,QAAQ,SAACmpD,MACnB,IAAM+6E,SAAW/6E,OAAStS,EAAIyqG,aAAa1uI,OAAS0uI,aAAa/uI,IACjEmuI,aA9HkB,SAApBc,kBAAqB7tH,QAAS8tH,OAAQ9oF,OAAU,IAK9C+oF,WAFA/tH,QADA+5G,SAGAgU,WAGJ,OAAO,SAAC3vJ,KAAMmyI,UACV,IAAMx0C,KAAOgyD,WAAU,GAAA7uI,OAAI9gB,OAE3B,GAAI29F,MAAQA,KAAK92F,OACb,GAAI7G,OAAS8kD,GAAK9kD,OAASoJ,EAAG,CAC1B,IAAMikB,WAAartB,OAASoJ,EAAIglI,KAAOC,SAEtCQ,QAASC,WAAW7gI,QAAQ,SAAC+gE,UAAW5nE,OACrC,IAAMwoJ,WAAU,GAAA9uI,OAAMuM,YAANvM,OAAmBkuD,WAC/B0gC,UAAYtoG,MACZyoJ,YAAclyD,KACdw0C,WAAa59B,iB9BZf,W8BYwB49B,WACtBziC,UAAY,EAAIA,WAEfp9B,WAAWqrB,KAAM,EAAG+R,aACrBmgD,gBAEJH,OAAOE,YAAcxB,6BAAgBsB,OAAOE,YAAaC,YAAangD,UAAW9oC,cAGrF8oF,OAAOI,YAAc1B,6BAAgBsB,OAAOK,SAAUpyD,KAAKvwF,IAAI,sBAAW,EAAGw5D,OAC7E8oF,OAAOM,cAAgB5B,6BAAgBsB,OAAOO,OAAQtyD,KAAKvwF,IAAI,sBAAW,EAAGw5D,OAC7E8oF,OAAOQ,eAAiB9B,6BAAgBsB,OAAOS,SAAUxyD,KAAK,GAAI,EAAG/2B,OACrE8oF,OAAOU,iBAAmBhC,6BAAgBsB,OAAOW,OAAQ1yD,KAAK,GAAI,EAAG/2B,OAG7E,OAAO8oF,QA4FQD,CAAkB7tH,QAAS+sH,aAAc/nF,MAAzC6oF,CAAgDr4F,KAAM+6E,YAjCd,IAAAme,cAyCvD3B,aAJAmB,YArCuDQ,cAqCvDR,YACAE,cAtCuDM,cAsCvDN,cACAE,eAvCuDI,cAuCvDJ,eACAE,iBAxCuDE,cAwCvDF,iBAGE5d,QAAUsd,aAAeA,YAAYz6E,aAAaxuE,OAASipJ,YAAYz6E,aACxE26E,eAAiBA,cAAc36E,aAAaxuE,OAASmpJ,cAAc36E,gBAClEs9D,QAAUud,gBAAkBA,eAAe76E,aAAaxuE,OAASqpJ,eAAe76E,aACjF+6E,kBAAoBA,iBAAiB/6E,aAAaxuE,OAASupJ,iBAAiB/6E,gBA6CjF,QA1CMr1E,KAAMs0G,eAAMi8C,QAASrwI,KAAK,GAAIk3C,KAAMo7E,QAASI,WAAY4c,eAAehvI,MACxExgB,KAAMu0G,gBAAOg8C,QAASrwI,KAAK,GAAIk3C,KAAMo7E,QAASI,WAAY4c,eAAehvI,MACzExgB,K9B7IS,M8B6IEuwJ,QAAStxI,QAAQ,GAAIm4C,KAAMu7E,QAASC,WAAY4c,eAAe3uI,SAC1E7gB,K9B1IY,S8B0IEuwJ,QAAStxI,QAAQ,GAAIm4C,KAAMu7E,QAASC,WAAY4c,eAAe3uI,SAGtE5S,QAAQ,SAAC8D,OAAQ3K,OAC1B,IAAI6D,KACApE,OAEA7G,KAIA+R,OAJA/R,KACAuwJ,QAGAx+I,OAHAw+I,QACAn5F,KAEArlD,OAFAqlD,KACAw7E,WACA7gI,OADA6gI,WAWJ,GARIxrI,MAAQ,GACR6D,KAAOokJ,QACPxoJ,OAAS8kJ,eAAe9kJ,OAAS,EAAI8kJ,eAAe9kJ,OAAS,IAE7DoE,KAAOqkJ,WACPzoJ,OAASwlJ,eAAexlJ,OAAS,EAAIwlJ,eAAexlJ,OAAS,GAEjEoE,KAAOA,KAAKmC,IAAI,SAAAmJ,KAAG,OAAIA,IAAInJ,IAAI,SAAA/G,KAAG,OAAIuwB,SAASiqE,aAATjqE,CAAuBvwB,SACzDkqJ,QAAQ1pJ,QAAU+rI,aAAe5yI,MAAQo3D,MAAQnsD,KAAKpE,OAAQ,CAC9D,IAAM2pJ,UAAap5F,UAAMvwD,cAAQ7G,WAC7B0e,WACAtX,MAAQ,GACRopJ,SAASvlJ,KAAOA,KAChBulJ,SAAS9Z,MAAQA,MAAMx2H,KACvBxB,QAAUgwI,iCAAoB8B,SAAU7B,aAAc/nF,MAAO8wC,gBAE7D84C,SAAS9Z,MAAQA,MAAMz3H,QACvBuxI,SAASvlJ,KAAOA,KAAK,GAAGmC,IAAI,SAAC3O,IAAKvB,GAAN,OAAY+N,KAAKmC,IAAI,SAAAhO,GAAC,OAAIA,EAAElC,OAExDwhB,QAAUgwI,iCAAoB8B,SAAU7B,aAAc/nF,MAAO8wC,eAEjEi3C,aAAY,GAAA7tI,OAAI9gB,KAAJ,YAAqB0e,aAEjCiwI,aAAY,GAAA7tI,OAAI9gB,KAAJ,YAAqB,OAGlC2uJ,cA2HL8B,2BAAgB,SAAhBA,cAAiBjc,aAAD,IAAckc,YAAdnmJ,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,aACMiqI,YAAYv8H,OAAO,SAACC,IAAKhJ,MAAN,SAAA4R,OAAA4sI,+BACXx1I,KADWw1I,+BACHx+I,KAAK+I,OAAO,SAAC04I,GAAIlgJ,OAAL,OACpBA,iBAAiBm/H,6BAAjB9uH,OAAA4sI,+BAAsCiD,KAAIlgJ,MAAMu/H,WAAY2gB,WAAWD,cAsB9FE,6BAAkB,SAAlBA,gBAAmBhvH,QAAS7vB,QAAW,IAE5C6kB,SAIAgL,QAJAhL,SACA1gB,UAGA0rB,QAHA1rB,UACA26I,kBAEAjvH,QAFAivH,kBACA1B,SACAvtH,QADAutH,SAGI2B,aAGA/+I,OAHA++I,aACA94F,UAEAjmD,OAFAimD,UACA7W,UACApvC,OADAovC,UAEFjuB,QAAU49H,aAAaC,YACTr5C,aAAiB9gF,SAASx2B,eAAtCo/B,WACF27D,SAAWjlF,UAAU0N,kBACrByzH,YAAczgH,SAASygH,cACvB7kC,SAAW57E,SAAS47E,WACVg7C,eAAmB52H,SAASs2H,iBAApCn/I,OACQw/I,kBAAsB32H,SAASu2H,eAAvCp/I,OACFijJ,eAAiBp6H,SAASg1H,oBAAoB75I,OAAQslI,aACtD6X,qBAAuBt4H,SAASzK,eAChC8kI,iBAGF1D,oCACAC,8BACA0B,0CACA7tD,OAAQg2C,YACRl8C,kBACA61D,8BACA7B,kBACAzY,MAAOoa,aAAapa,UACpBvE,SAAU2e,aAAa3e,aACvBn6E,oBACAphC,mBAEEgwC,OACFomF,SAAUp2H,SAASs6H,WAAW1+C,SAASw6C,UACvCwB,SAAU53H,SAASs6H,WAAW1+C,SAASg8C,UACvCC,UAAW73H,SAASs6H,WAAW1+C,SAASi8C,WACxC9T,SAAU/jH,SAASs6H,WAAW1+C,SAASmoC,WAErCwW,eAAiBnX,gCAAoBwT,gBACrC4D,kBAAoBpX,gCAAoBuT,mBAE9C32H,SAASy6H,aACTz6H,SAAS06H,aACT16H,SAASw2H,mBAAmBjsG,eAG5BvqB,SAAS26H,kBAlDuC,IAuD1CC,aACFhX,YAFA5jH,SAAS08G,YADTiH,aAIAA,aAAc,IAAIjjI,KAGtBsf,SAAS08G,UAAUke,aAEnB,IAAMC,kBACF1/I,OAAQ++I,aACR/D,eAAgBoC,SAAS5T,cAAcmW,qBAAqB96H,SAASygH,eACrEzgH,kBACAixC,KAAMjB,MAAMomF,SACZ3R,QAAS8T,SAAS5T,cAClBiW,wBACAlmD,aAAcv5F,OAAOqvE,QAEnBz9D,aAAezN,UAAU0N,kBAC3BmzH,aAAe7gI,UACnB,IAAKgd,QAAQgyE,SAAU,CACnB,IACM1/E,UhBlIe,SAAhBmsI,cAAiBzC,qBAAsB0C,aAAgB,IAAAjQ,MAC1D5zI,OAASnQ,OAAOkmB,OAAOorI,sBAAsB9hJ,IAAI,SAACmJ,KAAQ,IAAAg/G,MAAAW,MACtD27B,cAAet8B,UAAGz0G,OAAHpU,MAAA6oH,MAAA0kB,8BAAa1jI,MAClC,OAAO2/G,UAAGp1G,OAAHpU,MAAAwpH,MAAA+jB,8BAAa4X,aAAazkJ,IAAI,SAACqD,OAClC,OAAIA,iBAAiB0+H,kBACV1+H,MAAMutF,aAEVvtF,YAGf,OAAOkxI,UAAG7gI,OAAHpU,MAAAi1I,MAAA1H,8BAAalsI,QAAb+S,OAAAm5H,8BAAwB2X,egBwHTD,CAAczC,qBhB1IG,SAA9B4C,4BAA+BC,oBAAqBpuI,cAAiB,IAAAsF,MAC1Elb,UACEmqI,YAAc6Z,oBAAoB3kJ,IAAI,SAAA8lE,MAAI,OAAKA,KAAKw+B,eAG1D,OADA3jG,QADAA,UAAM+S,OAAAm5H,8BAAOlsI,UAAQkb,UAAGnI,OAAHpU,MAAAuc,MAAAgxH,8BAAa/B,YAAY9qI,IAAI,SAAAgwH,KAAG,OAAIx/H,OAAOkmB,OAAOs5G,KAAKhwH,IAAI,SAAA5P,GAAC,OAAIA,EAAEiT,eACvEyI,OAAO,SAAAzI,OAAK,OAAIkT,aAAalT,QAAUkT,aAAalT,OAAOsT,IAAI/jB,OAAS+6F,yBAAUh3F,YgBqI/E+tJ,CAA4BL,iBAAiB1E,eAAgB72I,UAAU0N,oBAGhFqK,WAAazI,UAAUtM,OAAO,SAAAzI,OAAK,OACrCkT,aAAalT,QAAUkT,aAAalT,OAAOsT,IAAI/jB,OAAS+6F,yBAAUh3F,YAChEiuJ,eAAiB9+H,QAAQ/E,SACzB69E,aAAepuG,OAAOqN,KAAKiL,UAAUrB,gBAAgBnE,cACrDuhJ,cAAgB12E,4CAA8B7uE,WAA9B,GAA+BwJ,WAA/B4K,OAAA4sI,+BAA6C1hD,gBAC7DkmD,eAAiBt9E,eAAeq9E,cAAeD,gBACrDjb,aAAe7gI,UAAUgd,QAAQjF,WAAWpnB,OAASonB,YAAc,IAAKikI,gBAAgBj/H,QAAQzN,WAMpG,IAEM2sI,gBDtaoB,SAAjBC,eAAkB5uI,UAAW0rI,qBAAsBhD,kBAC5D,IAAImG,iBACEhD,WACAC,cACA5D,wBACAhqG,UACA0qG,aAEA11B,UAAY94H,OAAOoU,UAAWk9I,sBAEhCvB,UAGAj3B,UAHAi3B,UACAC,UAEAl3B,UAFAk3B,UAUJ,GARIl3B,UADA21B,eAGWp+I,QAAQ,SAACqkJ,SACpB5G,qBAAqBrgJ,KAArBqB,MAAAg/I,qBAAoBN,+BAASkH,YAEjC57B,UAAUg1B,qBAAuBA,qBAG7BiC,UAAU9mJ,OAAS,EAAG,CAEtB,IAAM4J,MAAQk9I,UAAU,GAAGlmJ,WACrB8qJ,kBAAoBtb,sBAAsBzzH,UAAW/S,OAG3D66I,gCAAmB+D,SAAWtZ,OAAQ4X,UAAWnqI,oBAAWwqG,aAAcukC,oBAG1ElD,QAAQphJ,QAAQ,SAAC5H,KAAQ,IAAAmsJ,eAEdC,mBAFc3G,2BAEQZ,cAAcyC,WAFtB,MAGf+E,kBAAoBrH,wBAAwB7nI,UAAWivI,mBAAoBpsJ,KAG3EssJ,uBAAyBlH,YAAYiH,kBAAmBh8B,YAC9D87B,eAAAH,eAAchnJ,KAAdqB,MAAA8lJ,eAAApH,+BAAsBuH,yBAEtBA,uBAAuB1kJ,QAAQ,WAC3Bm+I,UAAU/gJ,MAAMsiJ,UAAWtnJ,cAGhC,KAAAusJ,iBAEHA,gBAAAP,eAAchnJ,KAAdqB,MAAAkmJ,gBAAAxH,+BAAsBK,YAAYjoI,UAAWkzG,aAOjD,GAHA27B,cAAgBA,cAAcxrJ,OAAS,EAAIwrJ,mBAGvCzE,UAAU/mJ,OAAS,EAAG,CACtB,IAAMgsJ,cAAgBjF,UAAUxgJ,IAAI,SAAA5P,GAAC,SAAAsjB,OAAOtjB,KAEtCiT,OAAQoiJ,cAAc,GACtBC,qBAAuB7b,sBAAsBzzH,UAAW/S,QAG9D66I,gCAAmBgE,YACfvZ,OAAQ8c,cACRrvI,oBACAwqG,aAAc8kC,uBAGlBT,cAAcpkJ,QAAQ,SAAC8kJ,IAAKC,QACxB5G,UAAU4G,QAAU5G,UAAU4G,iBAC9B1D,WAAWrhJ,QAAQ,SAAC5H,IAAK4sJ,QACrBvxG,OAAOsxG,QAAUtxG,OAAOsxG,YAGxB,IAAM98I,UAAY68I,eAAe/vJ,oBAAY+vJ,IAAMvvI,UAG7CkvI,kBAAoBrH,wBAAwBn1I,UAAW28I,cAAexsJ,KACtEu7B,SACF8f,cACAxrC,UAAWw8I,kBACXtG,WACIuB,UAAWvB,UAAU4G,QACrBpF,WAAYA,UAAWvnJ,KACvBwtI,SAAUmf,OACVlf,YAAamf,QAEjBv8B,qBAEJu1B,aAAarqH,QAASsqH,2BAK9BmG,cAAcpkJ,QAAQ,SAAC8kJ,IAAKC,QACxB5G,UAAU4G,QAAU5G,UAAU4G,iBAC9B,IAAMpxH,SACF8f,cACAxrC,UAAW68I,KAAOvvI,UAClB4oI,WACIuB,UAAWvB,UAAU4G,QACrBpF,kBACA/Z,SAAUmf,OACVlf,YAAa,GAEjBpd,qBAGJu1B,aAAarqH,QAASsqH,oBAI9BS,WAAW2C,WAAY1B,UAAUxgJ,IAAI,SAAAygJ,YAAU,OAAIA,WAAWqF,eAC9DvG,WAAW0C,QAAS1B,UAAUvgJ,IAAI,SAAAygJ,YAAU,OAAIA,WAAWqF,eAG3D,IAAMC,kBAAoB7D,WAAWzoJ,OAAS,EAAIyoJ,WAAW,GAAGliJ,IAAI,SAACwoE,IAAK14E,GAAN,OACpDoyJ,WAAWliJ,IAAI,SAAAoT,KAAG,OAAIA,IAAItjB,OAAOoyJ,WAEjD,OAAS5tG,cAAQ2tG,gBAASC,WAAY6D,mBCkTdf,CAJxBrb,aA3GyB,SAAvBqc,qBAAwBx8H,SAAU1gB,WACpC,IAAI4nF,cACE02C,YAAc59G,SAAS49G,cAC7B12C,WAAa2yD,2BAAcjc,YAAYmX,eAAgB8E,2BAAcjc,YAAY6X,iBAEjF,IAAMnhI,YAAchV,UAAU0N,kBACxB69H,eAAiB3jD,WAAW7lF,OAAO,SAACC,IAAKzH,OAAN,M9BtOrB,a8BuOcya,YAAYza,OAAOsT,IAAItI,WAAxBqF,OAAA4sI,+BAAoDx1I,OAAMzH,SAAUyH,SACrG,OAAOupI,eAAe56I,OAASqP,UAAUwC,KAAK+oI,gBAAkBl9H,WAAW,IAAUrO,UAmGtEk9I,CAAqBx8H,SAAUmgH,cAIOmY,qBAFjCt4H,SAASy8H,kBAAkB5B,mBAI/C76H,SAAS08G,YAAYkH,YAAYvsI,QAAQ,SAACqlJ,aACtCA,YAAYzmH,WAEhBjW,SAAS08G,YAAYkH,YAAY1tG,QACjClW,SAASmlH,YAAYoW,gBAAgBzwG,QAjGW,IAAA6xG,mBhBvQnB,SAApBC,kBAAqBlgB,UAAW31C,MACzC,IAAIg3C,MAAQ,KACRC,MAAQ,KAERyF,SAEA/G,UAFA+G,SACAC,SACAhH,UADAgH,SAGGmZ,SAEH91D,KAFAt6D,EACGqwH,SACH/1D,KADAh1F,EAeJ,OAZA8qJ,UAAYA,SAASxlJ,QAAQ,SAAC0lJ,QAC1B,IAAM/1D,MAAQy8C,SAASt8I,IAAI41J,SAC3Bhf,MAAQA,WACFtpI,KAAKuyF,SAGf81D,UAAYA,SAASzlJ,QAAQ,SAAC0lJ,QAC1B,IAAM91D,MAAQy8C,SAASv8I,IAAI41J,SAC3B/e,MAAQA,WACFvpI,KAAKwyF,UAIX82C,YAAOC,agBiVc4e,CAAkB58H,SAAS08G,YAAa18G,SAAS+mE,QAAlEg3C,MAnGwC4e,mBAmGxC5e,MAAOC,MAnGiC2e,mBAmGjC3e,MAEfh+G,SAAS+mE,MACLt6D,EAAGsxG,MACHhsI,EAAGisI,QAEP,IAAM9mI,MAAQ8oB,SAAS9oB,SAEtB6mI,MAAOC,OAAO3mI,QAAQ,SAACunI,QAASx1I,MAC7B,IAAMmzE,eACNqiE,QAAUA,aACFvnI,QAAQ,SAAC0vF,KAAMxlF,KACnBwlF,KAAK1vF,QAAQ,SAACmpD,KAAMs4C,WAChBv8B,WAAU,GAAAryD,OAAI3I,KAAJ2I,OAAU4uF,YAAe,SAG3C5hG,MAAMqsB,OAAN,GAAArZ,OAAgB6xF,0BAAiBt8C,uBAAjC,YAAAv1C,OAAkE9gB,KAAO,IAAM,KAAOmzE,cAE1Fv8C,SAASg9H,YAAY/C,kBAAmB9+I,QAExC,IAvHgD8hJ,kBAxIpB,SAAnBC,iBAAoBlyH,QAAS+5G,SAAU/0E,MAAO8wC,cAAiB,IAEpErV,WAUCzgE,QAVDygE,WACAD,UASCxgE,QATDwgE,UACA8sD,qBAQCttH,QARDstH,qBACA1B,eAOC5rH,QAPD4rH,eACAD,kBAMC3rH,QAND2rH,kBACAv1F,UAKCp2B,QALDo2B,UACAm6E,SAICvwG,QAJDuwG,SACAuE,MAGC90G,QAHD80G,MACAyY,SAECvtH,QAFDutH,SACAv4H,SACCgL,QADDhL,SAgBE+3H,aAAeM,mCAbjBlhJ,QACImS,KAAMstI,eACNvuI,QAASsuI,mBAEb5R,kBACAuT,0CACAl3F,oBACAm6E,kBACAuE,YACAyY,kBACAv4H,mBAG0DgwC,MAAO8wC,cAEjEw4C,eAQAvB,aARAuB,eACAE,iBAOAzB,aAPAyB,iBACAN,YAMAnB,aANAmB,YACAE,cAKArB,aALAqB,cACA+D,YAIApF,aAJAoF,YACAC,WAGArF,aAHAqF,WACAC,cAEAtF,aAFAsF,cACAC,aACAvF,aADAuF,aApCoEx+B,MAAAy+B,4BAsC1BrE,YAAaE,cAAeE,eAAgBE,kBACrFhjJ,IAAI,SAAA5P,GAAC,OAAKA,EAAIA,EAAE63E,kBAvCmD,GAsCjE06E,SAtCiEr6B,MAAA,GAsCvDu6B,OAtCuDv6B,MAAA,GAsC/Cy6B,SAtC+Cz6B,MAAA,GAsCrC26B,OAtCqC36B,MAAA,GAAAC,MAAAw+B,4BAwCrCJ,YAAaG,cAC3C9mJ,IAAI,SAAAhO,GAAC,OAAKA,EAAIA,EAAEi2E,aACAjoE,IAAI,SAAA6S,GAAC,OAAIA,EAAEo1D,oBA1CwC,GAwCjE++E,WAxCiEz+B,MAAA,GAwCrD0+B,YAxCqD1+B,MAAA,GA2CpE2+B,YAAcrE,OAAOppJ,OAAS,GAAK,EACvCkpJ,SAASlpJ,QAAUytJ,cACnB,IAAIC,YAAclE,OAAOxpJ,OAAS,GAAK,EACvCspJ,SAAStpJ,QAAU0tJ,cAGnB,IAAIC,WAAaJ,WAAWvtJ,OAASutJ,WAAWhnJ,IAAI,SAAC5P,EAAGN,GAEpD,OADA6yJ,SAAS7yJ,GAAK6yJ,SAAS7yJ,IAAM6yJ,SAAS7yJ,UACtC4jB,OAAA4sI,+BAAWlwJ,GAAXkwJ,+BAAiBqC,SAAS7yJ,OACxB6yJ,SAAWA,SAAS3iJ,IAAI,SAAA5P,GAAC,OAAKA,QAG9Bi3J,YAAcxE,OAAOppJ,OAASopJ,OAAO7iJ,IAAI,SAAC5P,EAAGN,GAAJ,OAAWM,GAAXsjB,OAAA4sI,+BAAkB2G,YAAYn3J,WAAem3J,YAAYxtJ,OACpGwtJ,YAAYjnJ,IAAI,SAAA5P,GAAC,OAAAkwJ,+BAAQlwJ,QAEvBk3J,aACFV,YACgBA,WAAW3+E,aACnBpnE,QAAQ,SAAC7O,GACQA,EAAEi2E,aACVpnE,QAAQ,SAACo1B,EAAGnmC,GACrBw3J,UAAUx3J,GAAKw3J,UAAUx3J,OACzBw3J,UAAUx3J,GAAGmO,KAAKg4B,OAK1B8sH,SAAStpJ,QACT6tJ,UAAUrpJ,KAAK8kJ,UAInB,IAAIwE,gBACAtE,OAAOxpJ,QACP8tJ,aAAatpJ,KAAKglJ,QAEtB,IAAMuE,oBAAsBD,aAAa9tJ,OACrCotJ,eACgBA,cAAc5+E,aACtBpnE,QAAQ,SAAC7O,GACQA,EAAEi2E,aACVpnE,QAAQ,SAACo1B,EAAGnmC,GACrBy3J,aAAaz3J,EAAI03J,qBAAuBD,aAAaz3J,EAAI03J,yBACzDD,aAAaz3J,EAAI03J,qBAAqBvpJ,KAAKg4B,OAKvD,IAAKmxH,WAAW3tJ,SAAW4tJ,YAAY5tJ,OAAQ,CAC3C,IAAMghE,KAAO,IAAIjB,MAAM6nF,UACvB5mF,KAAKgtF,kBAAkBzyD,UAAWC,YAClCmyD,aAAe3sF,OAGnB,KAAK6sF,UAAU7tJ,QAAY8tJ,aAAa9tJ,QAAW8tJ,aAAa,GAAG9tJ,QAAS,CACxE,IAAMghE,MAAO,IAAIjB,MAAM6nF,UACvB5mF,MAAKgtF,kBAAkBzyD,UAAWC,YAClCsyD,eAAiB9sF,QAGrB,OACI3nD,MAAOs0I,WAAYC,aACnBx1I,SAAUy1I,UAAWC,cACrBhG,0BACA4F,wBACAD,yBA8JAR,CAAiB7C,iBAVjB7B,aAAc+C,gBACdxC,WAAY/4H,SAAS+mE,QASuB/2B,MAAO8wC,cALnDx3F,KA7H4C2zI,kBA6H5C3zI,KACAjB,QA9H4C40I,kBA8H5C50I,QACA0vI,aA/H4CkF,kBA+H5ClF,aACA2F,YAhI4CT,kBAgI5CS,YACAC,YAjI4CV,kBAiI5CU,YAMJ,OAHA39H,SAASk+H,UAAU50I,MACnB0W,SAASm+H,aAAa91I,UAGlBiB,KAAM0W,SAASk+H,YACf71I,QAAS2X,SAASm+H,eAClBjxI,OAAQ8S,SAASmlH,cACjBqV,oCACAD,8BACAjuE,UACI1iE,IAAK8zI,YACL1+E,IAAK2+E,aAETv8F,UAAW22F,aACXxhD,YACI4pC,0BACAwT,YAAar0I,aC1nBZ8+I,gBACT50J,gBACA40I,SACAoY,sBACA/V,eACA4V,gBACAoE,YACAC,YACAwD,aACAC,gBACAhZ,eACAV,WACAx6C,w3CCSiBo0D,0CAOjB,SAAAA,eAAa70J,4KAAc80J,CAAA/vJ,KAAA8vJ,gBACvB9vJ,KAAKgwJ,aACLhwJ,KAAKiwJ,gBACLjwJ,KAAKkwJ,iBACLlwJ,KAAK60G,cAAgB55G,aACrB+E,KAAKmwJ,cACLnwJ,KAAKowJ,iBACLpwJ,KAAKqwJ,gBACLrwJ,KAAKswJ,SAAY9H,aAAeC,cAChCzoJ,KAAKuwJ,cAAiB/J,kBAAoBU,mBAC1ClnJ,KAAKwwJ,uBACLxwJ,KAAKywJ,UACLzwJ,KAAK0wJ,cACL1wJ,KAAK2wJ,OACDzyH,KACA16B,KACAkxC,SACAja,QACAonE,UAEJ9yB,sBAAsB/uE,KAAM6vJ,gBAC5B7vJ,KAAKmuI,UAAU6G,2UAUQ,IAAA9/H,MAAAlV,KACvB,OAAIoF,UAAa1D,QACbjJ,OAAOwc,QAAP7P,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAAgC0D,QAAQ,SAAC5H,KACrCgU,MAAK86I,UAAU9uJ,IAAI,IAAMA,IAAI,KAE1BlB,MAEJA,KAAKgwJ,wDAUI,QAAA36I,OAAArV,KAAAotE,KAAAhoE,UAAA1D,OAANkvJ,KAAM,IAAA/nJ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANujF,KAAMvjF,MAAAjoE,UAAAioE,MAChB,OAAIujF,KAAKlvJ,SACJ2nI,KAAMC,OAAQC,OAAQC,YAAaC,YAAY3gI,QAAQ,SAAC7O,GACrDob,OAAKq7I,WAAL,GAAA/0I,OAAmB1hB,EAAnB,QAA6B22J,KAAK,GAAL,GAAAj1I,OAAW1hB,EAAX,SAAsBob,OAAKq7I,WAAL,GAAA/0I,OAAmB1hB,EAAnB,UAEhD+F,MAEJA,KAAK0wJ,+CAWZ,OAAItrJ,UAAK1D,QACL1B,KAAK2wJ,MAAQl4J,OAAOoU,UAAW7M,KAAK2wJ,MAAvBvrJ,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACNpF,MAEJA,KAAK2wJ,8CAUG,IAAAh5I,OAAA3X,KACf,OAAIoF,UAAO1D,QACPjJ,OAAOwc,QAAP7P,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAA0B0D,QAAQ,SAAC7O,GAC/B0d,OAAK24I,QAAQr2J,EAAE,IAAMA,EAAE,KAEpB+F,MAEJA,KAAKswJ,0DAUa,IAAA96H,OAAAx1B,KACzB,OAAIoF,UAAY1D,QACZjJ,OAAOwc,QAAP7P,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAA+B0D,QAAQ,SAAC7O,GACpCu7B,OAAK+6H,aAAat2J,EAAE,IAAMA,EAAE,KAEzB+F,MAEJA,KAAKuwJ,6EAWK3jJ,OAAQslI,aACzB,IAAM2Z,kBACApF,uBA2BN,OA1B4Bl4C,qBAAMC,sBAAOC,uBAEtB3lG,QAAQ,SAACjO,MACxB,GAAI+R,OAAO/R,OAAS+R,OAAO/R,MAAMyQ,MAAO,CACpC,IAAM2sH,IAAMrrH,OAAO/R,MACnBgxJ,eAAehxJ,MAAQo9H,IAAI3sH,MAC3Bm7I,oBAAoBvgJ,KAAK+xH,IAAI3sH,UAIjCsB,OAAM,QACN65I,oBAAoBvgJ,KAApBqB,MAAAk/I,oBAAmBoK,kCAASjkJ,OAAOqvE,SAGnCi2D,YAAYxwI,QACZwwI,YAAYppI,QAAQ,SAACqzF,OACbA,MAAMoQ,UACN9zG,OAAOkmB,OAAOw9E,MAAMoQ,UAAUzjG,QAAQ,SAACmvH,KAC/BA,MAAmD,IAA5CwuB,oBAAoBxgJ,QAAQgyH,IAAI3sH,QACvCm7I,oBAAoBvgJ,KAAK+xH,IAAI3sH,MAAQ2sH,IAAI3sH,MAAQ2sH,SAMrEj4H,KAAKqvI,aAAcoX,0CACZoF,qEAUK9wI,KAAMm7H,SAClB,OAAIn7H,MACA/a,KAAK8wJ,gBAAkB7a,wBAAwBj2I,MAAQnF,KAAMuuI,IAAKxgI,OAAQmS,MAAQm7H,SAC3El2I,MAEJA,KAAK8wJ,kEAUFh3I,QAASo8H,SACnB,OAAIp8H,SACA9Z,KAAK+wJ,cAAgB9a,wBAAwBj2I,MAAQnF,KAAMsuI,IAAKvgI,OAAQkR,SAAWo8H,SAC5El2I,MAEJA,KAAK+wJ,4DAWJruF,MACR,IAAM2qC,SAAWrtG,KAAKqtG,WAOtB,OALA50G,OAAOkmB,OAAO0uF,UAAUvkG,QAAQ,SAAC7O,GACzBA,EAAEJ,qBAAqB6oE,OACvBA,KAAOzoE,KAGRyoE,iEAWQjmC,SAIf,OAFAz8B,KAAK8nJ,iBAEE,SAAC/2I,UAAWwgH,UAAWqf,QAAvB,OAAkC+W,8BAAiBlrH,QAAS1rB,UAAWwgH,UAAWqf,iDAUpFogB,WAAY3kJ,UACjBrM,KAAKgxJ,cAAcloJ,QAAQ,SAACuS,IAAKwyI,QAC7BxyI,IAAIvS,QAAQ,SAAC2nE,IAAKq9E,QACdzhJ,SAASwhJ,OAAQC,OAAQr9E,6DAYjC,IAAMppD,OAASrnB,KAAKqvI,cAKpB,OAHA52I,OAAOwc,QAAQjV,KAAK4wI,UAAU9nI,QAAQ,SAAC7O,GACnCotB,OAAOptB,EAAE,IAAMA,EAAE,KAEdotB,iEASP,OAAOrnB,KAAKw4F,MACRt6D,EAAG,IAAIpnB,IACPtT,EAAG,IAAIsT,sDAWF40I,kBAAmB9+I,QAAQ,IAAAqkJ,OAAAjxJ,KAEhC2rJ,aAEA/+I,OAFA++I,aACAn2B,MACA5oH,OADA4oH,MAGAvpB,cAEAy/C,kBAFAz/C,cACAilD,mBACAxF,kBADAwF,mBAPgCC,mBAYhCnxJ,KAAK/E,eAFO2kC,WAVoBuxH,mBAUhC92H,WACAqoH,iBAXgCyO,mBAWhCzO,iBAGE7S,WAEAuhB,WlBxNmB,SAApBC,kBAAqBzkJ,QAC9B,IAAMwkJ,cAQN,Od6KuB,cAID,YAIA,ac1LZtoJ,QAAQ,SAACsqD,WACM9lD,IAAjBV,OAAOwmD,QACPg+F,WAAWh+F,MAAQxmD,OAAOwmD,SAG3Bg+F,WkB+MgBC,CAAkB1F,kBAC/B71B,YAAcysB,uBAAWxsB,WAAW,GACpCu7B,gBACA3oJ,MAAQ3I,KAAK2I,QA6BnB,IAAK,IAAMrP,OA5BX0G,KAAK8I,QhClGe,cgCkGO,SAAC/Q,EAAGojB,EAAGymF,IAC9B,IAAI5pF,KAAO4pF,GAAGl9E,SACd,IAAK1M,KAAM,CACP,IAAMi1D,UAAS,GAAAtxD,OAAM5jB,GAAN4jB,OAAUR,GAEzBnD,KAAOuqI,uBAAWlpJ,QACd4yG,4BACAilD,wCAEAtxH,sBACA8iH,oCAEJ4O,aAAarkF,WAAa,KAC1Bj1D,KAAKo1F,SACDshC,SAAU32I,EACVmkJ,SAAU/gI,EACV8xD,sBAEJj1D,KAAKrP,MAAMA,OACXi5F,GAAGl9E,OAAO1M,OAEb63H,MAAM93I,KAAO83I,MAAM93I,OACpB83I,MAAM93I,GAAGojB,GAAKnD,KACdA,KAAKkoI,YAAY1qB,OACjBx9G,KAAK0jF,YAAYu1D,OAAKv1D,eACtBkG,GAAGh1F,OAAOwkJ,cAGIt7B,YACdntH,MAAMqsB,OAAN,GAAArZ,OAAgB6xF,0BAAiB18C,sBAAjC,KAAAn1C,OAA0DriB,KAAOg4J,cAIrE,OADA5O,iBAAiBtK,QAAShsD,OAAQyjD,MAAOvsH,OhC1JtB,cgC0J2C6oE,WhC9IlD,SgC+ILnsF,KAAK6vI,MAAMA,qDASVjjI,OAAQmE,UAAWi5I,UAAU,IAEjCt1G,MAIA9nC,OAJA8nC,MACAmtD,MAGAj1F,OAHAi1F,MACApnE,KAEA7tB,OAFA6tB,KAGE1M,QADFnhB,OADA++I,aAEyBC,YAPQ2F,mBAWjCvxJ,KAAKgnB,eAFLwhI,UATiC+I,mBASjC/I,UACAC,UAViC8I,mBAUjC9I,UAEEl8C,UACF73D,YACAmtD,YACApnE,WAEEszG,eAAWpyH,OAAAk1I,kCAAOrI,UAAUvgJ,IAAI,SAAAhO,GAAC,OAAIA,EAAEqI,cAA5BuuJ,kCAA4CpI,UAAUxgJ,IAAI,SAAAhO,GAAC,OAAIA,EAAEqI,eAC5EkvJ,YACF7mF,QAASq/E,SAAS5T,cAAcqb,uBAAuB1gJ,UAAWw7F,SAAUwhC,YAAahgH,SACzFyqE,KAAMx4F,KAAKw4F,OACX+T,mBAGJ,OADAy9C,SAAS0H,eAAeC,gBAAgBH,YACjCxxJ,mFAMP,OAFAA,KAAKswJ,WACLtwJ,KAAKuwJ,gBACEvwJ,6DASO,IAAA4xJ,WAKV5xJ,KAAKw4F,OAHL9jD,MAFUk9G,WAEVl9G,MACAmtD,MAHU+vD,WAGV/vD,MACApnE,KAJUm3H,WAIVn3H,KAGJ,OACIia,MAAOm8G,kCAAIn8G,OACXmtD,MAAOgvD,kCAAIhvD,OACXpnE,KAAMo2H,kCAAIp2H,2DAWH5/B,MACX,OAAOmF,KAAKw4F,OAAL,GAAA78E,OAAe9gB,mEAUP2jB,aAAc5R,OAAQo9I,UAAU,IAAA6H,OAAA7xJ,KACzCkyI,YAAclyI,KAAKkyI,cACzBlyI,KAAKymJ,oBAAoB75I,OAAQslI,aACjC,IAAM4f,YAAc9H,SAAS0H,eAAej3C,YACxCj8F,0BACA5R,cACA4rF,KAAMx4F,KAAKw4F,SAGXkqD,iBACA1iJ,KAAK/E,eADLynJ,kBAGHl0C,sBAAOC,sBAAOF,sBAAMzlG,QAAQ,SAAC7O,GAC1B43J,OAAKr5D,OAAOv+F,GAAK63J,YAAY73J,KAGjCyoJ,iBAAiBtK,QAAShsD,OAAQpsF,KAAKw4F,OAAQl1E,OhC3P5B,cgC2PiD6oE,WhCnPxD,SgCoPZu2D,iBAAiBtK,QAAShsD,OAAQpsF,KAAK6vI,QAASvsH,OhCxO3B,egCwOkD6oE,WhChP3D,SgCkPZ,IAAM0jD,SACAiY,aAAe9nJ,KAAK8nJ,eAY1B,OAVA9nJ,KAAK8I,QhCzOe,cgCyOO,SAAC/Q,EAAGojB,EAAGymF,IAC9BA,GAAGpJ,KAAKs5D,aACRlwD,GAAGl9E,UAAYk9E,GAAGl9E,SAAS45H,cAAc1xI,QACzCg1F,GAAGsK,SAAS89C,SAAS0H,eAAevJ,eAAev7I,OAAQk7I,aAAa/vJ,GAAGojB,KAC3EymF,GAAGmwD,cAEHliB,MAAM3pI,KAAK07F,GAAGl9E,YAGlBg+H,iBAAiBtK,QAAShsD,OAAQyjD,MAAOvsH,OhC1P1B,UgC0P2C6oE,WhC9P9C,SgC+PLnsF,yDAWIgyJ,aAAc9pI,WAAYtb,QACrC,IAAIqlJ,cACAC,eAEAn3I,KAEAi3I,aAFAj3I,KACAjB,QACAk4I,aADAl4I,QALyCq4I,oBAUzCnyJ,KAAK/E,eAFOs3G,aAR6B4/C,oBAQzC93H,WACAqoH,iBATyCyP,oBASzCzP,iBAGA0P,YAEAxlJ,OAFAwlJ,YACAx1D,YACAhwF,OADAgwF,YAEE44C,SAAWx1I,KAAK+rJ,WAAW/rJ,KAAKqtG,WAAWmoC,UAC3C8T,UAAYtpJ,KAAK+rJ,WAAW/rJ,KAAKqtG,WAAWi8C,WAhBLzS,MAAAwb,8BAiBft3I,KAjBe,GAiBtC+7H,SAjBsCD,MAAA,GAiB5BE,UAjB4BF,MAAA,GAAAG,SAAAqb,8BAkBfv4I,QAlBe,GAkBtCw4I,QAlBsCtb,SAAA,GAkB7Bub,WAlB6Bvb,SAAA,GAmBvCwb,WAAatqI,WAAWnN,KACxB03I,iBAAmB,SAAnBA,iBAAmB/vF,MAAI,OAAI,IAAI4mF,WAAY18I,QAASmyF,KAAMr8B,KAAK91D,SAASmyF,QAIxExlF,SACFwsB,KAAMuvG,0BAAcwB,SAAU0b,WAAW,GAAIJ,YAAc5c,SAAW8T,WAChE1sD,wBAAa2V,4BACnBvsE,MAAOsvG,0BAAcyB,UAAWyb,WAAW,GAAIJ,YAAc5c,SAAW8T,WAClE1sD,wBAAa2V,6BAEjBmgD,SACF3sH,KAAM+wG,SAASp1I,OAAS,EAAIo1I,SAAS,GAAG7uI,IAAIwqJ,qBAC5CzsH,MAAO+wG,UAAUr1I,OAAS,EAAIq1I,UAAU,GAAG9uI,IAAIwqJ,sBAhCNliC,MAAA8hC,+BAkChBljD,eAAMC,iBAAOnnG,IAAI,SAAApN,MAAI,OAAIy3J,QAAQrqJ,IAAI,SAACwoE,IAAK14E,GACpE,OAAIA,IAAMu6J,QAAQ5wJ,OAAS,EAChB6X,QAAQ1e,MAEZ63J,QAAQ73J,UAtC0B,GAkCtC83J,QAlCsCpiC,MAAA,GAkC7BqiC,SAlC6BriC,MAAA,GA0C7C,GAAuB,IAAnB+hC,QAAQ5wJ,OAAc,KAAA8uH,MAAA6hC,+BACOljD,eAAMC,iBAAOnnG,IAAI,SAAApN,MAAI,OAAI03J,WAAWtqJ,IAAI,SAACwoE,IAAK14E,GACvE,OAAU,IAANA,EACOwhB,QAAQ1e,MAEZ63J,QAAQ73J,UALG,GACrBo3J,WADqBzhC,MAAA,GACT0hC,YADS1hC,MAAA,QAQtByhC,WAAaM,WAAWtqJ,IAAI,kBAAO6uI,SAASp1I,OAAS,EAAIo1I,SAAS,GAAG7uI,IAAIwqJ,uBACzEP,YAAcK,WAAWtqJ,IAAI,kBAAO8uI,UAAUr1I,OAAS,EAAIq1I,UAAU,GAAG9uI,IAAIwqJ,uBAShF,OANA/P,iBAAiBtK,QACbhsD,QAASumE,QAASC,SAAUX,WAAYC,aACxC5uI,OhC9Ue,cgC+Uf6oE,WhCnTiB,mBgCsTZwmE,gBAASC,kBAAUX,sBAAYC,yEAa/BnhJ,UAAWnE,OAAQ8+I,kBAAmB1B,UAQ/C,OAAOyB,8BANH16I,oBACA26I,oCACA1B,kBACAv4H,SAAUzxB,MAGkB4M,8CAIhC,OAAIxH,UAAO1D,QACP1B,KAAK21H,OAALvwH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK21H,iUClaLk9B,wBAzHX,SAAAA,YAAaC,sKAAWC,CAAA/yJ,KAAA6yJ,aACpB,IAAMG,iBAENhzJ,KAAKu8C,OAAOu2G,eACZ9yJ,KAAK+T,OAAO,kBAAM,IAElB/T,KAAKynC,KAAK,SAACm6D,GAAImuC,KAAMG,MACjB,IAAM+iB,UAAYrxD,GAAG5iF,UACrB,GAAIi0I,WAAaA,UAAUp6H,GAAI,CAC3B,IAAMA,GAAKo6H,UAAUp6H,KACrBm6H,cAAcn6H,KACVw5E,SAAU4gD,UACVvkB,SAAUqB,KACVmM,SAAUhM,SAKtBlwI,KAAKgzJ,cAAcA,iUAInB,OAAI5tJ,UAAG1D,QACH1B,KAAKkzJ,eAAL9tJ,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKkzJ,uDAUZ,OAAI9tJ,UAAO1D,QACP1B,KAAKmzJ,QAAL/tJ,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKmzJ,gDAYZ,OAAI/tJ,UAAG1D,QACH1B,KAAKozJ,UAALhuJ,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKozJ,gDASZ,IAAIC,SAAW,EASf,OAPArzJ,KAAKu8C,SAASzzC,QAAQ,SAACuS,KACnB,IAAIi4I,gBAAkB,EACtBj4I,IAAIvS,QAAQ,SAAC45D,MACT4wF,iBAAmB5wF,KAAK6wF,kBAAkB33H,QAE9Cy3H,SAAWxvJ,KAAK6Q,IAAI2+I,SAAUC,mBAE3BD,iDASP,IAAIG,UAAY,EAShB,OAPAxzJ,KAAKu8C,SAASzzC,QAAQ,SAACuS,KACnB,IAAIo4I,iBAAmB,EACvBp4I,IAAIvS,QAAQ,SAAC45D,MACT+wF,iBAAmB5vJ,KAAK6Q,IAAI++I,iBAAkB/wF,KAAK6wF,kBAAkB13H,UAEzE23H,WAAaC,mBAEVD,4CAULr0I,IACF,IAAMo9B,OAASv8C,KAAKu8C,SACdltC,SAAWrP,KAAK+T,SAStB,OAPAwoC,OAAOzzC,QAAQ,SAACuS,IAAKwyI,QACjBxyI,IAAIvS,QAAQ,SAAC2nE,IAAKq9E,QACVz+I,SAASohE,MACTtxD,GAAGsxD,IAAKo9E,OAAQC,OAAQvxG,YAI7Bv8C,qEAGU64B,IACjB,OAAO74B,KAAKgzJ,gBAAgBn6H,0mBC3H7B,6BAgCM66H,0BAAqB,SAArBA,mBAAsBj3H,QAAS0xH,aAAgB,IAEpDxvI,OAGAwvI,YAHAxvI,OACA5D,KAEAozI,YAFApzI,KACAjB,QACAq0I,YADAr0I,QAcJ,OAZA6E,OAASA,WACT5D,KAAOA,SACPjB,QAAUA,YACV2iB,QAAQk3H,aAAand,UACjBx9I,MAAO,IAAI65J,aAAYl0I,QACvBonB,KAAM,IAAI8sH,aAAY93I,KAAK,IAC3BirB,MAAO,IAAI6sH,aAAY93I,KAAK,IAC5B0nB,IAAK,IAAIowH,aAAY/4I,QAAQ,IAC7B+3C,OAAQ,IAAIghG,aAAY/4I,QAAQ,KAGpC2iB,QAAQo4E,cAAc6f,UAAUC,OAAOnjE,aAAYG,gBAAgB,GAC5Dl1B,SAGEm3H,sBAAiB,SAAjBA,eAAkBn3H,SAC3B,IAAM1hB,KAAO0hB,QAAQ1hB,OACfjB,QAAU2iB,QAAQ3iB,UAClB46B,MAAQjY,QAAQiY,QAChB3jC,UAAY0rB,QAAQ1xB,OACpB0vB,KAAOgC,QAAQhC,OACfwhD,OAASx/C,QAAQw/C,SACjBigB,OAASz/D,QAAQy/D,SACjBlgD,UAAYvf,QAAQuf,YACpBpvC,OAAS6vB,QAAQ7vB,SACjBi1F,MAAQplE,QAAQolE,QAGhBpwE,SAAWgL,QAAQhL,WACzBA,SAAS9oB,MAAM8zB,QAAQ9zB,SACvB8oB,SAASiqE,YAAYj/D,QAAQi/D,eAE7B,IAAIm4D,cACAhhG,UAAWp2B,QAAQo2B,YACnB2iE,MAAO/4F,QAAQ+4F,QACfm2B,aAAc/+I,WACdmO,UACAjB,gBACAmiE,cACAigB,cACAlgD,sBCxDkC,SAA7B83G,2BAA8Br3H,SACvCA,QAAQ9zB,QAAQ0rF,aACZpnB,UAAW,QACX3zE,IAAK,gBDwDTw6J,CAA2Br3H,SAE3B,IAAMs3H,cAlEoB,SAAxBC,sBAAyBC,aAC3B,IAAMlmF,QACN,IAAK,IAAMz0E,OAAO26J,YAAa,CAC3B,IAAMC,UAAYD,YAAY36J,KAM1By0E,KAAKz0E,KALgB,iBAAd46J,WAA2BA,UAKtBA,WAHR5oJ,MAAO2oJ,YAAY36J,MAM/B,OAAOy0E,KAsDeimF,EAClBt/G,YACAmtD,YACApnE,YAGJo5H,aAAep7J,OAAOoU,OAAOgnJ,aAAcE,eAE3C,IAAM/J,YACNA,SAAS0H,eAAiB,IAAInd,+BAC9ByV,SAAS5T,cpB6Ja,SAAb+d,WAAcj4D,QACvB,IAAIg6C,QAAU,IAAI/G,mCAMlB,OAJIjzC,OAAOx6F,SAEPw0I,QAAUh6C,OAAOp9E,MAAM,SAAA7kB,GAAC,MAAe,QAAXA,EAAEkyG,OAAkB,IAAIonC,2BAAiB2C,SAElEA,QoBpKkBie,CAAWj4D,QACpCzqE,SAASykH,QAAQ8T,SAAS5T,eAG1B35G,QAAQ23H,UAAUpK,SAAS5T,cAAcvwH,YAAYhrB,QAGrD,IAAM+N,OAASohJ,SAAS5T,cAAcie,eAAetjJ,UAAW8iJ,cAChE7J,SAAS5T,cAAcke,kBAAkB1nJ,OAASA,OAAOogI,YAAepkI,QAExEszF,QAAUzqE,SAASygH,YAAYh2C,QAE/BzqE,SAASs2H,eAAen/I,OAAOmS,KAAMivI,UAAUhC,aAAap/I,OAAOkR,QAASkwI,UAE5E,IAAMuK,gBAAkB9iI,SAAS+iI,YAAYzjJ,UAAW8iJ,aAAcp3H,QAAQ4wE,WAAY28C,UA6B1F,OA5BAvtH,QAAQg4H,kBAAoBF,gBAAgBvsD,WAAW4pC,aAEvDn1G,QAAQo2B,UAAU0hG,gBAAgB1hG,WAGlCphC,SAASijI,kBAAkBH,gBAAgBvsD,WAAWo9C,YAAY3mI,kBAAmBs1I,cAC7E/J,UAGRv4H,SAASkjI,WAAWd,aAAcU,gBAAgBvsD,WAAYgiD,UAG9D0J,0BAAmBj3H,QAAS83H,iBAG5B93H,QAAQm4H,eAAenjI,SAASojI,cAAcN,gBAAiB3rJ,OAAQgE,SAGvE6vB,QAAQ83H,gBAAgBA,iBAExB93H,QAAQk3H,aAAan7D,KAAO/mE,SAAS+mE,OACrC/7D,QAAQq4H,UACJC,OAAQxe,uBAAWge,gBAAiBvK,SAAS5T,iBAGjD3kH,SAASykH,UAAU8e,iBAAiBv4H,SCzHI,SAA/Bw4H,6BAAgCx4H,SAC3BA,QAAQ9zB,QAChB6rH,wBAAuB,GAAA74G,OAAI6xF,0BAAiB18C,sBAArB,YAAsD,WAC/Er0B,QAAQhL,WAAWykH,UAAU8e,iBAAiBv4H,WAC/C,GACCwwC,UAAW,QACX3zE,IAAK,gBDqHT27J,CAA6Bx4H,SACtBA,+LE9IJ,IAAMg/D,8BAAKy5D,kCAAAC,0BACd3/B,SACAzqH,QACA6pJ,gBACInoF,cACIkmF,WACAC,YACAX,cACAC,iBAGRkC,aAEAU,UACIroF,cACIsoF,YAGRR,iBACI9nF,iBAEJh7C,YACAiqE,aACIjvB,aAAc,SAAAA,aAAAvrE,KAAG,OAAIA,MAEzBmsG,UACI3+B,aAAc,SAAAA,aAACjyC,QAASzjC,OAIpB,OAHIyjC,QAAQhL,UACRgL,QAAQhL,WAAW47E,SAASr0G,MAAMo8J,cAE/Bp8J,QAGf65D,cpCLkB,aoC5BJqiG,kCAAAC,yBAmCblsB,SAnCaisB,kCAAAC,yBAoCbjsB,YApCagsB,kCAAAC,yBAqCb3mD,0BArCa0mD,kCAAAC,yBAsCb1mD,0BAtCaymD,kCAAAC,yBAuCb5mD,yBAvCa2mD,kCAAAC,yBpC2HI,aoC3HJD,kCAAAC,yBpCgII,aoChIJD,kCAAAC,yBpCqIO,gBoCrIPA,myCC0PHE,oCApNX,SAAAA,YAAahoD,SAAUpyG,cAAc,IAAAia,iKAAAogJ,CAAAt1J,KAAAq1J,aACjCngJ,0LAAAqgJ,CAAAv1J,KAAAw1J,4BAAAH,aAAAn9J,KAAA8H,OADiC,IAI7By1J,qBACApoD,SADAooD,qBAJ6B,OAOjCvgJ,MAAK2/F,cAAgB55G,aAKrB8zE,sBAAsB2mF,sEAAAxgJ,QAAMumF,8BAC5B1sB,sBAAsB2mF,sEAAAxgJ,QAAM6tI,eAG5B7tI,MAAKy+I,gBAELz+I,MAAKq6G,SAELr6G,MAAKqsF,OAAS,KAEdrsF,MAAKygJ,cAELzgJ,MAAKuc,SAAS,IAAIq+H,+BAAe56I,MAAK2/F,gBAEtC6+C,0BAAmBgC,sEAAAxgJ,YAEnBA,MAAKm4F,UACDpB,cAAewpD,qBAAqBxpD,cAAcrzG,MAClDw8J,aAAcK,qBAAqBL,aAAax8J,QA9BnBsc,uYAVf60H,ySAuDlB,OAAI3kI,UAAO1D,QACP1B,KAAK21H,OAALvwH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GHxEyB,SAAxBywH,sBAAyBp5F,SAClC,IAAMq5F,YAAcr5F,QAAQ5W,YAAYkwG,WAAW,GACrCt5F,QAAQ9zB,QAChBqsB,OAAOw4E,0BAAiBt8C,uBAAwB4kE,aGsE9CD,CAAsB71H,MH/EH,SAAlB41J,gBAAmBn5H,SAAY,IACjCq5F,YADiC+/B,kCAClBtT,uBAAWxsB,WADO,MAE1Bt5F,QAAQ9zB,QAChBqsB,OAAOw4E,0BAAiB18C,sBAAuBglE,aG6E7C8/B,CAAgB51J,MHpEI,SAAnB81J,iBAAoBr5H,SAAY,IAClCq5F,YADkC+/B,kCACnB1gC,qBAAUY,WADS,MAEzCt5F,QAAQ9zB,QAAQqsB,OAAOw4E,0BAAiBv8C,uBAAwB6kE,aGmExDggC,CAAiB91J,MFvFO,SAAvB+1J,qBAAwBt5H,SACjC,IAAM9zB,MAAQ8zB,QAAQ9zB,QAEtBA,MAAM6rH,wBAAuB,GAAA74G,OAAI6xF,0BAAiBt8C,uBAArB,cAAyD,WAChEz0B,QAAQhL,WAAW+mE,OAC3Bt6D,EAAEp1B,QAAQ,SAAA0vF,MAAI,OAAIA,KAAK1vF,QAAQ,SAACmpD,MACtCA,KAAK6wC,eAIbn6F,MAAM6rH,wBAAuB,GAAA74G,OAAI6xF,0BAAiBt8C,uBAArB,cAAyD,WAChEz0B,QAAQhL,WAAW+mE,OAC3Bh1F,EAAEsF,QAAQ,SAAA0vF,MAAI,OAAIA,KAAK1vF,QAAQ,SAACmpD,MACtCA,KAAK6wC,eE4ELizD,CAAqB/1J,MACdA,MAEJA,KAAK21H,+DASZ,OAAIvwH,UAAS1D,OACF1B,KAEJA,KAAKgrF,cAAcwrD,2DA8B1B,OAAIpxI,UAAO1D,OACA1B,KAEJA,KAAK2zJ,2DAWZ,OADA3zJ,KAAK2I,QAAQkU,MAAM6yH,OACZ1vI,uDAUP,OADAA,KAAK2I,QAAQkU,MAAM8yH,SACZ3vI,yCAWJg2J,UACH,OvBrBmB,SAAdC,YAAeD,SAAU31I,WAClC,IAAI61I,QAAU,KAQd,OANC1nD,sBAAOD,qBAAME,uBAAO3lG,QAAQ,SAAC7O,GACtBk8J,iBAAKxtJ,MAAM/P,IAAIqB,IAAM+7J,WAAaG,iBAAKxtJ,MAAM/P,IAAIqB,GAAG,KACpDi8J,QAAUj8J,KAIdi8J,SACSA,mBAEZ9sB,IAAKD,KAAKrgI,QAAQ,SAACstJ,WAChB/1I,UAAS,GAAA1E,OAAIy6I,UAAJ,WAAuBttJ,QAAQ,SAAC7O,GACjCA,EAAEqI,aAAe0zJ,WACjBE,SAAYA,QdwHP,QcxHuBr7J,KAAMu7J,YAAcjtB,Id7D1C,Sc6DyDC,UAKvE8sB,WAIH9sB,IAAKD,KAAKrgI,QAAQ,SAACutJ,UAChBh2I,UAAS,GAAA1E,OAAI06I,SAAJ,gBAA2BvtJ,QAAQ,SAAC7O,GACzCA,EAAE6O,QAAQ,SAAC3Q,GACHA,EAAEmK,aAAe0zJ,WACjBE,QAAUG,WAAaltB,IAAMxpF,EAAI17C,SAM7CiyJ,SACSA,iBAEN,OuBhBID,CAAYD,SAAUh2J,KAAKyxB,WAAWzK,wDAWxCnsB,MACL,MrClBe,YqCkBXA,KACOmF,KAAKyxB,WAAW6kI,iBAEpBt2J,KAAKyxB,WAAW8kI,cAAc17J,gDAS/BA,MACN,OAAOmF,KAAKyxB,WAAL,GAAA9V,OAAmB9gB,KAAnB,8EAGWq7J,SAAS,IAAAM,sBAIvBx2J,KAAKyxB,WAAWzK,eAFhBw/H,eAFuBgQ,sBAEvBhQ,eACAU,eAHuBsP,sBAGvBtP,eAEJ,OAAOgP,UAAYjyJ,EAAIuiJ,eAAiBU,6EAGxB8B,UAChB,IAAMv3H,SAAWzxB,KAAKyxB,WAEtB,OADcA,SAAS06H,WAAWnD,WAAav3H,SAASy6H,WAAWlD,0EAIpDnb,SAAUmb,UACzB,IAAMv3H,SAAWzxB,KAAKyxB,WAItB,OAHcA,SAAS06H,WAAWnD,WAAav3H,SAASy6H,WAAWlD,WAChD,GAAGhqI,UAAUw5E,OAAOq1C,4DAW9B,IAAAp5G,KACH9rB,MAAQ3I,KAAK2I,QAEnB,OAAA8tJ,4BAAAhiI,QrCzMc,SqC0MA9rB,MAAM/P,IrC1MN,WqCyMd69J,4BAAAhiI,KrC5Ja,QqC8JA9rB,MAAM/P,IrC9JN,UqC4Jb67B,6DAaA,OAAOz0B,KAAKy0J,0EAIZb,sBAAe5zJ,oDA7Kf,QACI+W,QACImnB,KACA16B,KACAgkE,y3DC7EK6wB,wyBAAwBJ,mWAKxB5J,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa2H,aACV,GAAIhJ,OAAO3sF,OAAQ,CAEtB,IAAMg1J,kBAAoBroE,OAAOt6E,OAAO,SAAA1b,GAAC,OAAIq3F,aAAa3gE,KAAK12B,KAAO62F,gCAAUzB,oBACzEiC,aAAa3gE,KAAK12B,KAAO62F,gCAAU5B,qBAEtCopE,kBAAkBh1J,QAClBguF,aAAawI,cACbxI,aAAa14E,IAAI0/I,qBAEjBhnE,aAAa6H,aACb7H,aAAahoD,OAAO2mD,SAVF,IAYdF,QAAYuB,aAAasH,UAAzB7I,QACFgK,iBAAax8E,OAAAg7I,yBAAO,IAAI7/I,IAAIq3E,QAAQ,KAAvBwoE,yBAA+B,IAAI7/I,IAAIq3E,QAAQ,MAC5DiK,iBAAmB1I,aAAa8H,iBAAiB91F,OACnDysF,QAAQ,GAAGzsF,SAAW02F,kBAAoBD,cAAcz2F,SAAW02F,kBACnE1I,aAAa2H,aAGjB3H,aAAahoD,OAAOgoD,aAAa8H,kBAErC,OAAOx3F,uDA3BP,MAAO,iOCFf,2EAEak0F,kDAAkB0iE,6CAAAC,2CAC1B/e,wBAAQhrD,MACLpvC,OAAM,IAAA/hC,OAJM,OAIN,kBACNs2E,YAAamc,2BAAW3W,SAHDm/D,6CAAAC,wCAK1B/e,wBAAQ/qD,OACLrvC,QAAQ,IAAA/hC,OARI,OAQJ,oBACRs2E,YAAamc,2BAAW1W,aAPDk/D,6CAAAC,wCAS1B/e,wBAAQ7qD,OACLvvC,QAAQ,IAAA/hC,OAZI,OAYJ,oBACRs2E,YAAamc,2BAAWpgG,UAXD6oJ,yCAelBC,8CAAuBF,6CAAAG,yBAC/B3oD,2BAAWpgG,OAASogG,2BAAWxW,QADAg/D,6CAAAG,sBAE/B3oD,2BAAW3W,MAAQ2W,2BAAW1W,WAFCq/D,wNChB7B,IAAM9mE,sDAAkB+mE,6CAAAC,oDCHV,SCAO,gBFKpB3+J,KEJmB,cFKnBqO,SACI+hG,SAAU,WAJSsuD,6CAAAC,iDCFN,aCAE,gBFEID,6CAAAC,iDAAA,WASvB3+J,KEXmB,cFYnBqO,SACI+hG,SAAU,WAXSuuD,kDAgBlBC,wBAAsBF,6CAAAG,yBCnBd,UDqBb7+J,KEpBmB,cFqBnBqO,SACI+hG,SAAU,WAJasuD,6CAAAG,sBClBV,cD0BjB7+J,KE1BmB,cF2BnBqO,SACI+hG,SAAU,WAVasuD,6CAAAG,sBCfb,UD4BI,WAbSA,uBGCtBC,iBACT38H,KAAM,UACNonE,MAAO,WACPntD,MAAO,YASE2iH,MAAQ,shBC3Bd,IAAM7jE,iBAAY,SAAZA,UAAa6C,SAAU/yE,OAAQosE,cAA8B,IAClEC,gBADkD/iF,OAAgBxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAEhEvK,KAAOw7F,SAAS55D,QAAQ5W,YAAYhrB,OACpCswB,QAAUve,OAAOue,QACjBpgB,KAAOsrF,SAAS55D,QAAQ1xB,OACxB+pJ,SAAWz+D,SAAS55D,QAAQq4H,WAC5BjrF,UAAYirF,SAASv2I,UAAU7S,OAAO,GAAG7Q,KAEzCwkJ,eACAv8H,SAAWuzE,SAAS55D,QAAQ8pD,IAClC84D,YAAY/7H,OAASwzI,6CAAwBxzI,SAAWA,OACxD+7H,YAAY3wD,YAAcwoE,uBAAuB5zI,QACjD+7H,YAAYY,aAAe5pD,SAAS55D,QAAQ66H,cAC5C,IAAMpsI,gBAAkBmrE,SAAS/F,SAASC,YAAY8uD,YAAY/7H,QAAQuC,YAAYwtE,UACtF,GAAyB,OAArBloE,QAAQ/N,SACRuyE,gBAAkB,SACf,CACH,IAAMzB,SAAWwB,aAAaN,YAC1BzwE,OAAS5T,KAAKgJ,OAAO,SAAA1b,GAAC,OAAqC,IAAjC61F,SAAS5mE,KAAKrhB,QAAQ5N,EAAEwgC,MAAY5wB,IAAI,SAAA5P,GAAC,OAAIA,EAAEk/J,SAC7E,GDPY,SCOR18J,MDkBY,aClBMA,MDmBP,YCnB4BgvE,UAAwB,CAC/D,IAAMv+D,MAAQ7S,OAAOqN,KAAKqlB,QAAQ/N,cAAgB,GAElDuyE,iBADAhxE,OAAS5T,KAAKgJ,OAAO,SAAA1b,GAAC,OAAqC,IAAjC61F,SAAS5mE,KAAKrhB,QAAQ5N,EAAEwgC,MAAY5wB,IAAI,SAAA5P,GAAC,OAAIA,EAAEkJ,SAChDG,OAASozJ,SAAS51I,OAAO,SAACtW,QAE/C,IADA,IAAI4uJ,OAAQ,EACHz/J,EAAI,EAAGA,EAAI4mB,OAAOjd,SAET,KADd81J,MAAQ5uJ,OAAO0C,OAAOtS,OAAS2lB,OAAO5mB,GAAG,IAAM6Q,OAAO0C,OAAOtS,OAAS2lB,OAAO5mB,GAAG,IADjDA,KAMnC,OAAOy/J,QAEPp4I,WAAW,IACV,SDpBO,aCqBLvkB,KACP80F,gBAAkBjf,sBAAsBokF,SAAU3pI,QAAQ/N,UACnDuB,OAAOjd,OACdiuF,gBjQwoCyB,SAA/B8nE,6BAAgC56I,MAAO2F,aACzC,IACIzX,KADAW,UAEEsqF,SAAWn5E,MAAM4B,kBA2BvB,OA1BI+D,YAAY9gB,OAAQ,WAGpB,IAFA,IAAMkH,OAAS4Z,YAAY,GACrB/Z,IAAMG,OAAOlH,OACV3J,EAAI,EAAGA,EAAI0Q,IAAK1Q,IAAK,CAC1B,IAAMuT,MAAQ1C,OAAO7Q,GACfuuG,SAAWtQ,SAAS1qF,QAAU7S,OAAOoU,UAAWmpF,SAAS1qF,OAAOsT,KAClE0nF,UACA56F,OAAOxF,KAAKzN,OAAOoU,OAAOy5F,WAIlCv7F,QAEA,IADA,IAAM0O,OAAS+I,YAAY,GAZPytH,OAAA,SAAAA,OAaXl4I,KACL,IACM2/J,QADOl1I,YAAYzqB,KAEpB+Q,QAAQ,SAACwJ,SAAU49H,MACpBwnB,KAAKj+I,OAAOy2H,OAAS59H,WAEzBvH,KAAK7E,KAAKwxJ,OANL3/J,IAAI,EAAGA,IAAIyqB,YAAY9gB,OAAQ3J,KAAK,EAAGk4I,OAAvCl4I,KAbW,IAsBpBgT,QACAW,WAGG,IAAImR,MAAMgJ,YAAY9a,KAAMW,QiQtqCT+rJ,CAA6B3C,UAAW3pI,QAAQ/N,SAAS,IAA7BzB,OAAAg8I,sCAAoCh5I,OAAO1W,IAAI,SAAA5P,GAAC,OAAKA,SAEnGgnJ,YAAYjiI,SAAW,KACvBuyE,gBAAkBmlE,SAAS51I,OAAO,kBAAM,IACpCE,WAAW,KAKvB,IAAI2D,6BAA8B,EAE9B4sE,kBAEA5sE,4BADe4sE,gBAAgB9iE,YACM/N,MAAM,SAAAzmB,GAAC,MDZ7B,YCYiCA,EAAEwC,QAGtD,IAAMmpB,YACFlB,SAAQ,UAAAnH,OAAYmH,UACpBqI,QAASk0H,YACTjiI,SAAmC,OAAzBiiI,YAAYjiI,SAAoB,KAAOuyE,gBACjDzkE,gCACAnI,wDACAO,OAAQ+7H,YAAY/7H,QAGxBwxI,SAASthE,UAAU7D,gBAAiB3rE,YAAY,ywCCzD7C,IAAM4zI,+BAAb,SAAAC,WACI,SAAAD,iBAAwB,IAAA1wD,iBAAAhyF,oKAAA4iJ,CAAA93J,KAAA43J,gBAAA,QAAAxqF,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAA6iJ,0CAAA/3J,MAAAknG,iBAAA8wD,+BAAAJ,iBAAA1/J,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJywE,wBAFep9E,MAD5B,0XAAA+iJ,CAAAL,eAAoC7nE,qQAApCmoE,CAAAN,iBAAAt+J,IAAA,6BAAAN,MAAA,SAAA26F,2BAMgCjE,cACxB,OAAOA,aAAa,MAP5Bp2F,IAAA,YAAAN,MAAA,SAAAw6F,UAUe2kE,cAAehtI,QAASukE,cAC/B8D,iBAAUxzF,KAAMm4J,cAAezoE,cAC3BvkE,qBAZZ7xB,IAAA,wBAAAN,MAAA,SAAA29F,sBAgB2Bv5E,UACnB,IAAIuB,OACA81E,UACE55F,KAAOmF,KAAKy8B,QAAQ5W,YAAYhrB,OAkBtC,OAhBiB,OAAbuiB,SACAq3E,UAAY,KFfJ,SEgBD55F,MACP8jB,OAASlmB,OAAOkmB,OAAOvB,UACvBq3E,UAAYz0F,KAAKy8B,QAAQ1xB,OAAOgJ,OAAO,SAAA1b,GAAC,OAAiC,IAA7BsmB,OAAO1Y,QAAQ5N,EAAEkJ,SAAe0G,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,MFjB3E,aEkBLh+B,KACP45F,cAEA91E,OAASvB,SAAS,IAEdq3E,UAAYz0F,KAAKy8B,QAAQ1xB,OAAOgJ,OAAO,SAAA1b,GAAC,OAAkC,IAA9BsmB,OAAO1Y,QAAQ5N,EAAEk/J,UAAgBtvJ,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,MAExFla,OAASlmB,OAAOkmB,OAAOvB,UACvBq3E,UAAYz0F,KAAKy8B,QAAQ1xB,OAAOgJ,OAAO,SAAA1b,GAAC,OAAiC,IAA7BsmB,OAAO1Y,QAAQ5N,EAAEkJ,SAAe0G,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,OAI3FvR,KAAMmtE,UACN53E,MAAO,SAvCnBvjB,IAAA,cAAAN,MAAA,SAAAi9F,cA4CQ,OAAO,SA5Cf2hE,eAAA,2KCC2B,6BCkBZn9D,wBArB0B,SAARA,MAAQpE,UAAQ,OAAI,SAAC4D,SAAUhI,YAC5D,IAAMuC,kBAAoB,SAApBA,kBAA8BxtF,MAChC,IAAMuzE,MAAQ0P,0BACR9+D,SACF/N,SAAUi5E,SAAS55D,QAAQ27H,oBAAoBpxJ,OAEnDirF,WAAWnpF,QAAQ,SAAA+pF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW1nE,WACtEovD,MAAMtjD,mBAGVgjE,SAASvsB,GAAG,YAAa8mB,mBACR9mB,GAAG,YAAa8mB,mBAChB9mB,GAAG,WAAY,WACZ,IAAM6M,MAAQ0P,0BACdgI,WAAWnpF,QAAQ,SAAA+pF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,WACvDz1E,SAAU,SAEdm9D,MAAMtjD,sBCRfikE,wBAXD,SAARA,MAAQ7E,UAAQ,OAAI,SAAC4D,SAAUhI,YAQjCgI,SAASvsB,GAAG,QAPc,SAApB8mB,kBAA8BxtF,MAChC,IAAMmkB,SACF/N,SAAUi5E,SAAS55D,QAAQ27H,oBAAoBpxJ,OAEnDirF,WAAWnpF,QAAQ,SAAA+pF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW1nE,oMCNvE,IAAM+pE,mCAAemjE,iCAAAC,4BCLR,OJWoB,SAAP91E,KAAO6T,UAAQ,OAAI,SAAC4D,SAAUhI,YAC3D,IAEI9mE,QAFA+tE,YACAC,UAEEiB,OAASjQ,2BACT1tD,QAAU45D,SAAS55D,QACnB87H,YAAc97H,QAAQyjE,cAAcs4D,mBACpC3qB,SAAsC,eAA3BpxG,QAAQ7vB,SAAS48B,MAAyB,IAAM,IAC3DivH,UAAYh8H,QAAQw1B,OAAOvtC,SAASukB,QACpCyvH,aAAeD,UAAUl3J,QAAqB,MAAbssI,SAAmB,EAAI,GAE9D5zC,SAAS/hG,KAAKkiG,SAAS1sB,GAAG,QAAS,WAC/B,IAAM6M,MAAQ0P,0BACdiP,UACIh7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,KAEdkqE,GAAG,OAAQ,WACV,IAAM6M,MAAQ0P,2BAEdkP,QACIj7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,IAEN06B,EAAIr6B,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAOj7D,EAAGq6H,YAAY38H,QACtDu9D,OAAO31F,EAAIK,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAO31F,EAAG+0J,YAAY18H,SAEtD1Q,SACI/N,SAAUu7I,uBACLl8H,QAAQ5oB,aAAe4kJ,UAAUxuH,OAAOivD,SAAS20C,UAA2B,EAAf6qB,cAC1DD,UAAUxuH,OAAOkvD,OAAO00C,UAA2B,EAAf6qB,eAAmBnlJ,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,MAGtF6uF,WAAWnpF,QAAQ,SAAA+pF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW1nE,aACvEuiD,GAAG,MAAO,WACT,IAAM6M,MAAQ0P,2BAEdkP,QACIj7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,IAEN06B,EAAIr6B,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAOj7D,EAAGq6H,YAAY38H,QACtDu9D,OAAO31F,EAAIK,KAAK6Q,IAAI,EAAG7Q,KAAK4Q,IAAI0kF,OAAO31F,EAAG+0J,YAAY18H,SAElD1Q,QADA+tE,SAAS20C,YAAc10C,OAAO00C,WAE1BzwH,cAIAA,SAAUu7I,uBACLl8H,QAAQ5oB,aAAe4kJ,UAAUxuH,OAAOivD,SAAS20C,UAA2B,EAAf6qB,cAC1DD,UAAUxuH,OAAOkvD,OAAO00C,UAA2B,EAAf6qB,eAAmBnlJ,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,MAI1F6uF,WAAWnpF,QAAQ,SAAA+pF,WAAS,OAAIwD,SAAS7B,kBAAkB3B,UAAW1nE,iBG7DlDktI,iCAAAC,yBCJP,QDMI79D,yBAFG49D,iCAAAC,yBCFP,QDKIp9D,yBAHGo9D,gNEE5B,IAAMM,qBAAuB,SAAvBA,qBAAwBn3E,QAASxvB,KAAMjpC,UACzC,IAAI5L,YAEAq7I,UAEAxmG,KAFAwmG,UACA5qB,SACA57E,KADA47E,SAGA30C,SAKAlwE,SALAkwE,SACAC,OAIAnwE,SAJAmwE,OACA0/D,oBAGA7vI,SAHA6vI,oBACAC,kBAEA9vI,SAFA8vI,kBACA91G,OACAh6B,SADAg6B,OAEE+1G,kBAAoBt3E,QAAQosD,UAalC,OAVIzwH,SADA87E,SAAS20C,YAAc10C,OAAO00C,aAEvBkrB,kBAAoBF,qBAAuBC,kBAAoB91G,QAC1Dy1G,UAAUxuH,OAAO6uH,kBAAoB91G,OAAS61G,qBACtDJ,UAAUxuH,OAAO6uH,kBAAoB91G,SAClC+1G,kBAAoB/1G,OAASA,QACxBy1G,UAAUxuH,OAAgB,EAAT+Y,QAAay1G,UAAUxuH,OAAO4uH,oBAA+B,EAAT71G,UAErEy1G,UAAUxuH,OAAO8uH,mBAAoBN,UAAUxuH,OAAO8uH,kBAAoBF,sBAE7E,MAAbhrB,UAA8BzwH,SAASmH,UAChCnH,y5CC6CIy/E,4zBAlEuCP,mWAmBhB5M,aAAcvkE,SAC5C,IAAI+S,EACA16B,EACAo4B,MACAC,OACEw6D,SAAWr2F,KAAKq2F,SAChB55D,QAAU45D,SAAS55D,QACnB7vB,OAAS5M,KAAK4M,SACdqlD,KAAOx1B,QAAQw1B,OAAOvtC,SACtBuc,UAAS,GAAAtlB,OAAM/O,OAAOgwF,YAAb,KAAAjhF,OAA4B/O,OAAOq0B,WAE5ClqB,OAASoU,QAAQ/N,SAASi5E,SAAS55D,QAAQ5oB,aAC3C4kJ,UAAYxmG,KAAKhpB,QACjB1nC,MAAQwV,QAAUk7C,KAAKqsC,cAAcvnF,OAAO,IAAKk7C,KAAKqsC,cAAcvnF,OAAO,QAE3E82H,STjBY,eSiBDpxG,QAAQ7vB,SAAS48B,MAAuB,IAAM,IAEzDwvH,kBAAoB3iE,SAAS55D,QAAQyjE,cAAcs4D,mBAAgC,MAAb3qB,STxC9D,SAFD,SS6CP6qB,aAAeD,UAAUl3J,QAAqB,MAAbssI,SAAmB,EAAI,GACxDorB,oBAAsBx8H,QAAQ49D,oBAAoBO,aAClDs+D,eAAiBtwE,YAAYqwE,oBAAqB,KAAM,GAA5B,GAAAt9I,OAAmC/O,OAAOgwF,YAA1C,yBTxBhB,eS0BdvG,SAAS55D,QAAQ7vB,SAAS48B,OAC1BtL,EAAI38B,MAAM,GAAKm3J,cAAgB,EAC/Bl1J,EAAI,EACJo4B,MAAQr6B,MAAM,GAAKA,MAAM,IAAM,EAC/Bs6B,OAASm9H,oBAET96H,EAAI,EACJ16B,EAAIjC,MAAM,GAAKm3J,cAAgB,EAC/B78H,OAASt6B,MAAM,GAAKA,MAAM,IAAM,EAChCq6B,MAAQo9H,mBAKGpwE,YAAYswE,eTjCf,SSiCwCniJ,cAAQmnB,IAAG16B,IAAGo4B,YAAOC,gBAAWoF,WAC9EkyB,MAJU,SAAVgmG,QAAoBv3D,KD9BF,SAAnB5C,iBAAmB3I,UAAQ,OAAI,SAAC4D,SAAUhI,YACnD,IACI9mE,QADA+tE,YAEEC,UACAiB,OAASjQ,2BACT1tD,QAAU45D,SAAS55D,QACnBg8H,UAAYh8H,QAAQw1B,OAAOvtC,SAASukB,QACpC4kG,SRdgB,eQcLpxG,QAAQ7vB,SAAS48B,MAAuB,IAAM,IAIzDxgB,UACF8vI,kBAJsBr8H,QAAQyjE,cAAcs4D,mBAAgC,MAAb3qB,SRtClD,QAEC,UQyCd7qF,OAHWy1G,UAAUl3J,QAAqB,MAAbssI,SAAmB,EAAI,IAKpDpsD,WAEJwY,SAAS/hG,KAAKkiG,SAAS1sB,GAAG,QAAS,WAC/B,IAAM6M,MAAQ0P,0BACdiP,ShL6LY,SAAdkgE,YAAejhF,QAASoC,OAC1B,IAAM8+E,mBAAqBlhF,QAAQgI,wBACnC,OACIjiD,EAAGq8C,MAAMr8C,EAAIm7H,mBAAmBn7H,EAChC16B,EAAG+2E,MAAM/2E,EAAI61J,mBAAmB71J,GgLjMrB41J,CAAYp5J,KAAMu6E,MAAMmB,aACnC+F,QAAUlH,MAAMkH,UACjB/T,GAAG,OAAQ,WACV,IAAM6M,MAAQ0P,0BACR4uE,oBAAsBp3E,QAAqB,MAAbosD,SRrDvB,QAEC,UQqDdpsD,QAAQvjD,GAAKq8C,MAAM1kB,GACnB4rB,QAAQj+E,GAAK+2E,MAAMzkB,GAEnB9sC,SAAS6vI,oBAAsBA,oBAC/B7vI,SAASkwE,SAAWA,SACpBlwE,SAASmwE,OAASA,OAClB,IAAM/7E,SAAWw7I,qBAAqBn3E,SAAWg3E,oBAAW5qB,mBAAY7kH,UAExEmC,SACI/N,SAAUk8I,qCACL78H,QAAQ5oB,YAAcuJ,UAE3Bm8I,SAAS,GAEbljE,SAAS7B,kBAAkBvC,WAAW,GAAI9mE,WAC3CuiD,GAAG,MAAO,WACT,IAAM6M,MAAQ0P,0BACR4uE,oBAAsBp3E,QAAqB,MAAbosD,SRxEvB,QAEC,UQuEd7kH,SAAS6vI,oBAAsBA,oBAC/B7vI,SAASkwE,SAAWA,SACpBlwE,SAASmwE,OAASA,OAClB,IAAM/7E,SAAWw7I,qBAAqBr+E,OAASk+E,oBAAW5qB,mBAAY7kH,UACtEmC,SACI/N,SAAUk8I,qCACL78H,QAAQ5oB,YAAcuJ,UAE3Bm8I,SAAS,EACT3sJ,QACI2mD,YACI4yB,SAAU,OAItBkQ,SAAS7B,kBAAkBvC,WAAW,GAAI9mE,aC3BtC6zE,CAAiB3I,SAAjB2I,CAA2B4C,IAAK,aAI7BxuC,KAAK,IAAK5vD,GACA4vD,KAAK,IAAKl1B,GACVk1B,KTnEJ,QSmEgBx3B,OACZw3B,KTlEH,SSkEgBv3B,0DA5D9B,MVdoB,qEUsBpB,OACIoF,UAAW,uBACX27D,YTxBe,4BUEd6J,yCAAa,SAAbA,WAAcpQ,UACvB,IAAM55D,QAAU45D,SAAS55D,QACnB+hD,QAAU,SAAVA,QAAWhsE,IAAKyuB,UAAW0tD,QAC7B,IAAMiO,YAAcngE,QAAQ7vB,SAASgwF,YACrCjU,6BAAclsD,QAAQ5I,SACLi/B,UADjB,IAAAn3C,OAC+BihF,YAD/B,oBAEiB7oF,OAAO,SAAA1b,GAAC,OAAgC,IAA5Bma,IAAI8U,KAAKrhB,QAAQ5N,EAAEwgC,MAC/Bi6B,UAAU,OACV0rB,QAAQv9C,UAAW0tD,SAGxC,OACIuc,KAAM,SAAAA,KAAC14F,KAAqB,IAAhB5F,OAAgBxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAClBw3F,YAAcngE,QAAQ7vB,SAASgwF,YAChCpqF,IAAI48E,YAAY1tF,QAAW8Q,IAAI+8E,WAAW7tF,QAG3C88E,QAAQhsE,IAAI+8E,WAAY3iF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,qBAAsD,GAC9Epe,QAAQhsE,IAAI+8E,WAAY3iF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,oBAAqD,GAC7Epe,QAAQhsE,IAAI48E,YAAaxiF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,oBAAqD,IAJ9Epe,QAAQhsE,IAAIm7E,YAAa/gF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,oBAAqD,IAOtF48D,SAAU,SAAAA,SAAChnJ,KAAqB,IAAhB5F,OAAgBxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACtBw3F,YAAcngE,QAAQ7vB,SAASgwF,YAChCpqF,IAAI48E,YAAY1tF,QAAW8Q,IAAI+8E,WAAW7tF,QAG3C88E,QAAQhsE,IAAI48E,YAAaxiF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,qBAAsD,GAC/Epe,QAAQhsE,IAAI+8E,WAAY3iF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,qBAAsD,IAH9Epe,QAAQhsE,IAAIm7E,YAAa/gF,OAAOq0B,WAAP,GAAAtlB,OAAuBihF,YAAvB,qBAAsD,6yCCvB1E68D,kEACjB,SAAAA,oBAAwB,IAAAvyD,iBAAAhyF,uKAAAwkJ,CAAA15J,KAAAy5J,mBAAA,QAAArsF,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAAykJ,6CAAA35J,MAAAknG,iBAAA0yD,kCAAAH,oBAAAvhK,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJi6E,YAAc2K,yCAAWvxF,MAAKmhF,UACnCnhF,MAAK2mF,UAAY,WAHG3mF,yZADmBymF,0TAWpCjM,aAAcvkE,SAAuB,IAAdxkB,QAAcvB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,OAGxCsjG,EAFiB1oG,KAAK87F,YAAYn1F,QAAQ+hG,UAAY1oG,KAAK67F,YAElDnM,aAAc1vF,wDANvB,MZXmB,uCaCdy7F,oBACT7uF,QACI8hE,aAAc,SAAAA,aAACjyC,QAASzjC,OAAV,OAAoBy2E,eAAehzC,QAAQw0D,YAAej4F,SAE5E+R,QACA8I,aACAgmJ,mBACA35D,aACIxxB,aAAc,SAAAA,aAACjyC,QAASzjC,OACpB,IAAMknG,YAAczwB,eAAehzC,QAAQi5F,aAAc18H,OAKzD,OAJC,UAAW,SAAU,UAAU8P,QAAQ,SAACsuE,OACrC8oB,YAAY9oB,OAASvzE,KAAK4Q,IAAIyrF,YAAY9oB,OAAS,EAAI8oB,YAAY9oB,OAAS,EAChD,GAAvB8oB,YAAYljE,SAAwC,GAAxBkjE,YAAYjjE,aAE1CijE,cAGfgY,gBACA48C,YACAvzJ,OACImtE,aAAc,SAAAA,aAACjyC,QAASzjC,OAIpB,OAHAyjC,QAAQwM,QAAQ1nC,MAAMvI,OACtByjC,QAAQq9H,oBACRr9H,QAAQ9zB,QAAQgsH,OAAO,QAAS37H,OACzBA,QAGfiwC,SACA6oE,cACAnpG,SACAoxJ,OACIrrF,aAAc,SAAAA,aAACjyC,QAASzjC,OAAV,OAAoBy2E,eAAehzC,QAAQu9H,WAAchhK,SAE3Eu5G,gBACAyC,mBACAtZ,aACIjvB,aAAc,SAAAA,aAAAvrE,KAAG,OAAIA,OC/BhB+4J,iBACG,aADHA,eAEC,WAGDC,qBACTr+H,OAAQ,GACRD,MAAO,GACPoB,SAAUikB,IACVhkB,UAAWgkB,IACXte,QAAS,EACT08D,OAAQ,EACR01D,OAAQ,GAGCoF,cACT95J,KAAM,GACNijG,YAAa,SAAAA,YAACvZ,KACV,MbCY,SaDRA,KbES,UaFOA,IbCR,OAKE,WaATm+B,gCACTtrB,YAAa,OACbw9D,YAAa,QACbC,YAAa,gBACbj4J,WACIk4J,QACItgF,MAAO,YACPugF,MAAO,cAGfxwJ,MACI1J,MACIijG,YAAa,QACb1nE,MAAO,GACPx5B,UAAW,SAAAA,UAAClB,IAAKnJ,EAAGgT,KAAM0xB,SAAf,OAA2BA,QAAQi/D,aAARj/D,CAAsBv7B,OAEhEwkG,MACIzkE,UAAW,cACXpF,OAAQ,GACRD,MAAO,GACP8Y,MAAO,iBACP75C,KAAM,YAWL2/J,kBAAW,SAAXA,SAAY90D,MACrB,OAAIA,MAA0B,iBAAVA,KACT7zB,uBAAU6zB,MACZA,uLC/CN,IAAM+0D,2BAAe,SAAfA,aAAgBxxH,OACzB,IAAMyxH,UAAYzxH,MAAMpjB,YAAYhrB,OAKpC,OAAS6/J,oBAAW3jJ,OAJLkyB,MAAM4/E,eAIO8xC,MAHd1xH,MAAMr8B,SAASu7G,OAAS,EAGHyyC,QAFnBxD,gBAAgBsD,aAiDvBG,uCAA2B,SAA3BA,yBAA4BC,gBAAiBC,aAEtD,IAGIC,cAGAC,eAGAC,WAAaJ,gBAAgBA,gBAAgBp5J,OAAS,GAGtDw3G,YAAcr1G,KAAKqoB,KAAK4uI,gBAAgB,GAAKA,gBAAgB,IAG3DK,YAAct3J,KAAKqoB,KAAKgvI,WAAaJ,gBAAgB,IAGnDM,UAAcL,YAAdK,UAGFC,eAAiBN,YAAYn7H,WAG7Bg0E,eAAiBmnD,YAAY/xI,SAG7BsyI,gBAAkBP,YAAY/lD,gBA7BkCumD,sBAgCfF,eAAel7H,WAAY+6H,YAAlE/jD,cAhCsDokD,sBAgC9D1/H,OAA8Bu7E,aAhCgCmkD,sBAgCvC3/H,MAwC/B,OApCKpzB,OAAOgzJ,UAAUN,cAClBA,WAAeA,WAAYz7G,QAAQ,IAIvCy5D,YAAcA,YAAc,EAAI,EAAIA,YAGpC8hD,cAAiBn3J,KAAKsoB,IAAIgvI,aAAet3J,KAAKsoB,IAAI+sF,cAAiB9B,aAAgBkkD,gBAAgB1/H,OAEnGo/H,eAAiBn3J,KAAKsoB,IAAIgvI,aAG1BF,eAAkBp3J,KAAKsoB,IAAIgvI,aAAet3J,KAAKsoB,IAAI+sF,aAAgB/B,cAEnE8jD,gBAAkBp3J,KAAKsoB,IAAIgvI,aAU3BL,gBA/FqB,SAAnBW,iBAAoBC,kBAAmBC,gBAAiBC,iBAAkBd,iBAE5E,IAAIe,iBACAC,cACEZ,WAAaJ,gBAAgBA,gBAAgBp5J,OAAS,GACtD0F,MAAQs0J,kBAAkBK,aAC1BV,eAAiBK,kBAAkBL,eAGnCW,aAAgBJ,iBAAiBx0J,OAAS8zJ,WAGhD,GAAIU,iBAAiBx0J,QAAUu0J,gBAAgBv0J,OAC3C,OAAO0zJ,gBAGXe,iBAAoBR,eAAel7H,WAAY26H,gBAAgB,IAAK1zJ,OACpE,IAAK,IAAIrP,EAAI,EAAGA,EAAI+iK,gBAAgBp5J,OAAS,EAAG3J,IAC5C+jK,cAAgBj4J,KAAK6N,MAAOmqJ,iBAAmBG,aAAgBlB,gBAAgB/iK,EAAI,IAC/E+iK,gBAAgB/iK,GAAK+jK,gBACrBhB,gBAAgBxzJ,OAAOvP,EAAG,GAC1BA,GAAK,GAET8jK,iBAAoBR,eAAel7H,WAAY26H,gBAAgB/iK,IAAKqP,OAExE,OAAO0zJ,gBAsEWW,EACdJ,8BACAU,ad9GW,QcqGXX,WdlGc,WckGOA,UdxHR,QAEC,WciIdv/H,OAAQo/H,eACRr/H,MAAOo/H,gBAEPn/H,OAAQ+3E,eAAe32E,UACvBrB,MAAOg4E,eAAe52E,UACvB89H,kBAYMmB,kCAAsB,SAAtBA,oBAAuBllJ,OAAQ4jJ,MAAOI,aAE/C,IAAImB,eAAiB,EAEfC,eAAiBpB,YAAYn7H,WAJ4Bw8H,sBAK/BrB,YAAY/xI,SAApCgU,SALuDo/H,sBAKvDp/H,SAAUC,UAL6Cm/H,sBAK7Cn/H,UACVm+H,UAAcL,YAAdK,UACFN,mBACAuB,eAAiBjsF,kCAAqBr5D,OAAO,GAAIA,OAAO,IAGxDulJ,UAAYH,eAAeh8H,WAAWppB,OAAO,GAAG0oC,QAAQ,IAI9Dk7G,OADAA,MAAQ92J,KAAK2G,MAAMmwJ,QACH,EAAKA,MAAQ,EAAKA,MAI9BuB,edpJW,QcmJXd,WdhJc,WcgJOA,UACJv3J,KAAK6N,MAAMsrB,SAAYs/H,UAAU1gI,OAEjC/3B,KAAK6N,MAAMurB,UAAaq/H,UAAUzgI,QAEvD8+H,MAAQ92J,KAAK4Q,IAAIkmJ,MAAOuB,gBAGxB,IAAK,IAAInkK,EAAI,EAAGA,GAAK4iK,MAAO5iK,IACxB+iK,gBAAgB/iK,GAAKskK,eAAetkK,EAAI4iK,OAE5C,OAAOG,iBAmMEyB,gBAAkB,SAAlBA,gBAAmB1hK,KAAM6wH,UAAWgB,YAAe,IAAAj4F,KAExDmmI,QAGAlvC,UAHAkvC,QACAF,UAEAhvC,UAFAgvC,UACAzxH,MACAyiF,UADAziF,MAGAlyB,OAIA21G,WAJA31G,OACAylJ,aAGA9vC,WAHA8vC,aACAC,UAEA/vC,WAFA+vC,UACA9B,MACAjuC,WADAiuC,MAEE+B,IAAM3lJ,OAAgB,UAATlc,KAAmB,EAAIkc,OAAOrV,OAAS,GACpD6kC,KAAOo0H,MAAe,UAAT9/J,KAAmB,EAAI8/J,MAAMj5J,OAAS,GAEzD,OAAAi7J,6BAAAloI,QACKimI,UAA0B,SAAdA,UAAuBzxH,MAAM2xH,SAAS8B,KAAOzzH,MAAM2zH,iBAAmB3zH,MAAM2xH,SAAS8B,MADtGC,6BAAAloI,KAAA,QAEW+nI,aAAa3hK,OAFxB8hK,6BAAAloI,KAAA,KAGiB,UAAT55B,KAAmB,EAAI4hK,UAAU/6J,OAAS,GAHlDi7J,6BAAAloI,KAAA,SAIYioI,IAAKn2H,OAJjB9R,uWC9WiBooI,sCAOjB,SAAAA,aAAa5hK,0KAAc6hK,CAAA98J,KAAA68J,cACvB78J,KAAKuvH,SACLvvH,KAAK+8J,aACL/8J,KAAKuhG,OAAS,KACdvhG,KAAKg9J,WAAa,KAClBh9J,KAAKg6J,OAASvhK,OAAOoU,UAAWstJ,cAChCn6J,KAAK+8J,UAAY,KACjB/8J,KAAKi9J,cAAgBhiK,aAAas3G,aAClCvyG,KAAKk9J,OAASjiK,aAAawmE,MAC3BzhE,KAAKumF,IAAMj8E,cACXtK,KAAK01H,aAAej9H,OAAOoU,UAAW7M,KAAK6lB,YAAYs3I,sBACvDn9J,KAAKixF,QAAUxhB,kBAAmBzvE,KAAK6lB,YAAYk2E,iBAEnD,IAAMuf,KAAOrgH,aAAas3G,aAAapyE,WAAW,KAClDngC,KAAK20G,kBAAqB/4E,MAAoB,EAAb0/E,KAAK1/E,MAAY,EAAGC,OAAQy/E,KAAKz/E,OAAS,GAE3EkzC,sBAAsB/uE,KAAMy7F,oBAC5Bz7F,KAAKo9J,eAAiB/yE,qCAAsB1B,6BAAc,QAAf,GAAAhtE,OACpC3b,KAAK4M,SAASgwF,YADsB,sBAG3C58F,KAAKgjJ,UAAY,IAAI4U,+BAAe53J,MAChCuwF,YAAa93F,OAAOoU,UAAW6nF,4BAAoB2oE,sCACnD7sE,SAAU0E,kCACVxD,uBAAwBwC,kDACzBxF,sCAAauB,sVAIhB,OAAOjwF,KAAKumF,gDA2CZ,OAAInhF,UAAO1D,OACA1B,KAEJA,KAAKgjJ,sDAUZ,MfrFY,yDeyFZ,OAAI59I,UAAM1D,QACN1B,KAAKs9J,aAALl4J,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKs9J,mDAUZ,OAAIl4J,UAAO1D,QACP1B,KAAKuhG,OAALn8F,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACApF,KAAK8iG,SACE9iG,MAEJA,KAAKuhG,+DAWE,IAAA4I,aAIVnqG,KAAK4M,SAFL7C,KAFUogG,aAEVpgG,KACA6yF,YAHUuN,aAGVvN,YAIJ,OAFA58F,KAAKi9J,cAAc9iI,SAASkwD,qCAAsB1B,6BAAc,QAAf,GAAAhtE,OAC1CihF,YAD0C,uBDuF1B,SAAlB2gE,gBAAmB9gI,QAASpI,KAAMjyB,WAC3C,IAAMg1E,SACArsE,KAAO0xB,QAAQ1xB,OACfwnG,aAAe91E,QAAQwgI,cAO7B,OALAlyJ,KAAKjC,QAAQ,SAACiB,KAAM9H,OAChB,IAAMjJ,MAAQq7B,KAAOtqB,KAAKsqB,MAAQtqB,KADRyzJ,sBAEAjrD,aAAapyE,WAAW/9B,UAAUpJ,MAAOiJ,MAAO8I,KAAM0xB,UAAxEZ,OAFkB2hI,sBAElB3hI,OAAQD,MAFU4hI,sBAEV5hI,MAChBw7C,MAAMn1E,QAAW45B,OAAQA,OAAS,EAAGD,MAAOA,MAAQ,KAEjDw7C,MC/FImmF,CAAgBv9J,KAAMq3J,MAAOttJ,KAAK1J,KAAK+B,yEAU7B,IAAAs7H,kBASb19H,KAAKkgG,cAPLtkE,MAFa8hG,kBAEb9hG,MACAC,OAHa6hG,kBAGb7hG,OACAmB,SAJa0gG,kBAIb1gG,SACAC,UALaygG,kBAKbzgG,UACA0F,QANa+6F,kBAMb/6F,QACA08D,OAPaq+B,kBAObr+B,OACA01D,OARar3B,kBAQbq3B,OAGAvrH,MACAxpC,KAAK4M,SADL48B,MAIEi0H,WAAuB,EAAV96H,QACb+6H,UAAqB,EAAT3I,OACZ4I,UAAqB,EAATt+D,OAElBr/F,KAAK+K,KAAK/K,KAAK49J,iBAEf,IAAMC,WAAa79J,KAAK89J,gBAClBC,YAAcF,WAAWhiI,OAAS,EAAIgiI,WAAWhiI,OAAS4hI,WAAa,EACvEO,WAAaH,WAAWjiI,MAAQ6hI,WAGhCQ,YAAcj+J,KAAKk+J,eAAeT,WAAYj0H,OA1BnC20H,mBDiGQ,SAApBC,kBAAqBxxJ,OAAQoc,SAAUje,MAChD,IAAI48F,YAAc,EACdC,WAAa,EACby2D,eACAziI,MAAO,EAAGC,OAAQ,GAGlB4hI,WAKAz0I,SALAy0I,WACAO,WAIAh1I,SAJAg1I,WACAC,YAGAj1I,SAHAi1I,YACAF,YAEA/0I,SAFA+0I,YACA/gI,SACAhU,SADAgU,SAGAjzB,KAEA6C,OAFA7C,KACAy/B,MACA58B,OADA48B,MAGAk8D,KAEA37F,KAFA27F,KAGE44D,gBADFv0J,KADA1J,KAEyBijG,YACvBi7D,cACAC,cACFC,aAAe,EA6EnB,OA5EAR,YAAYn1J,QAAQ,SAAC41J,WAAY3mK,GAC7B,IAAM4mK,WAAc/iI,MAAO,EAAGC,OAAQ,GAChC+iI,WAAchjI,MAAO,EAAGC,OAAQ,GAChCxpB,MAAQtH,KAAKhT,Od5QP,Sc8QRumK,iBd7QS,Uc6QmBA,iBAE5BI,WAAW9iI,OAAS6hI,WACpBmB,UAAUhjI,OAASvpB,MAAMooB,KAAO,EAAI52B,KAAK8Q,KAAKtC,MAAMooB,KAAO52B,KAAKkyC,IAAM2vD,KAAK9pE,OAAS6hI,WACpFgB,aAAe56J,KAAK6Q,IAAIkqJ,UAAUhjI,MAAO6iI,cACzCE,UAAU/iI,MAAQ8iI,WAAW9iI,MAAQ6iI,aAGrCC,WAAW7iI,OAASh4B,KAAK6Q,IAAIgqJ,WAAW7iI,OAAQ6pE,KAAK7pE,QAAU4hI,WAC/DmB,UAAU/iI,OAAS6iI,WAAW7iI,OAC9B8iI,UAAU9iI,OAAS6iI,WAAW7iI,SAG9B6iI,WAAW9iI,MAAQ/3B,KAAK6Q,IAAIgqJ,WAAW9iI,MAAOvpB,MAAMooB,KAAO,EAAI52B,KAAK8Q,KAAKtC,MAAMooB,KAAO52B,KAAKkyC,IACzF2vD,KAAK9pE,OAAS6hI,WAChBmB,UAAUhjI,MAAQ8iI,WAAW9iI,MAC7B+iI,UAAU/iI,MAAQ8iI,WAAW9iI,MAC7B6iI,aAAe56J,KAAK6Q,IAAIkqJ,UAAUhjI,MAAO6iI,cAGzCC,WAAW7iI,QAAU4hI,WACrBmB,UAAU/iI,OAAS6pE,KAAK7pE,OAAS4hI,WACjCkB,UAAU9iI,OAAS6iI,WAAW7iI,OAAS+iI,UAAU/iI,QAGvC,eAAV2N,MACAm+D,YAAc9jG,KAAK6Q,IAAIizF,YAAag3D,UAAU9iI,SAE9C8rE,aAAeg3D,UAAU9iI,OACzB+rE,WAAa/jG,KAAK6Q,IAAIkzF,WAAY+2D,UAAU/iI,MAAOoiI,aAEvDK,eACIziI,MAAO/3B,KAAK6Q,IAAIiqJ,UAAU/iI,MAAOyiI,cAAcziI,OAC/CC,OAAQh4B,KAAK6Q,IAAIiqJ,UAAU9iI,OAAQwiI,cAAcxiI,SAErD0iI,WAAWr4J,KAAKy4J,WAChBH,WAAWt4J,KAAK04J,aAEpBL,WAAWz1J,QAAQ,SAAC61J,UAAW5mK,GAC3B,GAAc,eAAVyxC,MACAm1H,UAAU9iI,OAAS8rE,YACnB62D,WAAWzmK,GAAG6jC,MAAQ6iI,advTd,ScwTJH,iBdvTK,UcuTuBA,iBAC5BL,YAAYlmK,GAAG8jC,OAAS8rE,YACxB62D,WAAWzmK,GAAG8jC,OAAS8rE,YACvB42D,WAAWxmK,GAAG6jC,MAAQqiI,YAAYlmK,GAAG6jC,MAAQ6iI,eAE7CR,YAAYlmK,GAAG6jC,MAAQ6iI,aACvBF,WAAWxmK,GAAG6jC,MAAQ6iI,aACtBR,YAAYlmK,GAAG6jC,MAAQ6iI,cAE3B72D,WAAa/jG,KAAK6Q,IAAIkzF,WAAa22D,WAAWxmK,GAAG6jC,YAGjD,GADA+iI,UAAU/iI,MAAQ/3B,KAAK6Q,IAAIkzF,WAAY5qE,UdpUhC,QcqUHshI,iBdlUM,WckUqBA,gBAC3BL,YAAYlmK,GAAG6jC,MAAQgsE,WACvB42D,WAAWzmK,GAAG6jC,MAAQgsE,WACtB62D,aAAe72D,eACZ,CACH,IAAMqU,WAAagiD,YAAYlmK,GAAG6jC,MAC5BijI,cAAiBR,cAAcziI,MAAQ6iI,aAC7CD,WAAWzmK,GAAG6jC,MAAQ6iI,aACtBF,WAAWxmK,GAAG6jC,MAAQqiI,YAAYlmK,GAAG6jC,MAAQ6iI,aAC7CR,YAAYlmK,GAAG6jC,MAAQ/3B,KAAK6Q,IAAIunG,WAAY4iD,eAC5Cj3D,WAAa/jG,KAAK6Q,IAAIkzF,WAAY+2D,UAAU/iI,UAIxDgsE,WAAa/jG,KAAKqoB,KAAKroB,KAAK6Q,IAAIkzF,WAAYo2D,aAAeP,WAC3D91D,aAAeo2D,YAAcN,YAEpB91D,YADTA,YAAc9jG,KAAKqoB,KAAKy7E,aACFC,sBAAY22D,sBAAYC,sBAAYH,4BAAeI,2BCzKjEL,CAAkBp+J,KAAK4M,UACzB6wJ,sBAAYO,sBAAYC,wBAAaF,wBAAa/gI,kBAAUC,qBAAaj9B,KAAK+K,QAF5E48F,YA5Baw2D,mBA4Bbx2D,YAAaC,WA5BAu2D,mBA4BAv2D,WAAY22D,WA5BZJ,mBA4BYI,WAAYC,WA5BxBL,mBA4BwBK,WAAYH,cA5BpCF,mBA4BoCE,cAAeI,aA5BnDN,mBA4BmDM,aAiBpE,OAbAz+J,KAAKkgG,aACDtkE,MAAO/3B,KAAK6Q,IAAIkzF,WAAYhsE,OAAS+hI,UAAYD,UACjD7hI,OAAQh4B,KAAK6Q,IAAIizF,YAAa9rE,QAAU8hI,UAAYD,UACpDO,wBACAO,sBACAD,sBACAF,4BACAI,0BACAK,aACIljI,MAAO/3B,KAAK4Q,IAAIuoB,SAAUh9B,KAAKkgG,cAActkE,OAAS+hI,UAAYD,UAClE7hI,OAAQkiI,eAGT/9J,2DAYP,OAFAA,KAAKi9J,cAAc9iI,SAASkwD,qCAAsB1B,6BAAc,QAAf,GAAAhtE,OACN3b,KAAK4M,SAASgwF,YADR,mBAE1C58F,KAAKi9J,cAAc98H,WAAWngC,KAAK+5J,QAAQ15J,KAAOL,KAAK+5J,QAAQ15J,KAAO,oDAUpEy4B,WAAW,IAAAimI,mBACsC/+J,KAAKkgG,cAAvD4+D,YADYC,mBACZD,YAAa/J,OADDgK,mBACChK,OAAQpyH,QADTo8H,mBACSp8H,QAAS/G,MADlBmjI,mBACkBnjI,MAAOoB,SADzB+hI,mBACyB/hI,SADzBgiI,cAEiBh/J,KAAK4M,SAAlCwtJ,YAFY4E,cAEZ5E,YAAaC,YAFD2E,cAEC3E,YACrB,OD7CoB,SAAf4E,aAAgBnmI,UAAWihI,MAAO75D,YAAatzF,QACxD,IAAMoxJ,WAAan6J,KAAK4Q,IAAIyrF,YAAYljE,SAAUkjE,YAAYtkE,OAExDsjI,eAAiBt2E,YAAY9vD,UAAW,SAAU,GAAtB,GAAAnd,OAA6B/O,OAAOgwF,YAApC,kBACzB9iE,MdhMQ,Qc+LM,GAAAne,OACEqiJ,WADF,OAEdlkI,Md/LS,Sc6LK,GAAAne,OAEGukF,YAAYrkE,OAFf,OAGd/B,MAAM,gBAHQ,GAAAne,OAGYukF,YAAY60D,OAHxB,OAAAp5I,OAGoC/O,OAAOwtJ,YAH3C,KAAAz+I,OAG0D/O,OAAOytJ,cAC/EvgI,MAAM,aAAcigI,MAAMz2D,uBAAuB9tF,SAClDukJ,MAAMz2D,YAAY12F,OAAO41B,UAAYu3H,MAAMz2D,aACnD,OAAO1a,YAAYs2E,eAAgB,MAAO,GAAxB,GAAAvjJ,OAA+B/O,OAAOgwF,YAAtC,uBACD9iE,MdtMA,QcqMV,GAAAne,OAC0BqiJ,WAD1B,OAEUlkI,MdtMG,YcoMb,GAAAne,OAE6BqiJ,WAF7B,OAGUlkI,MdtMC,ScsMa,QACdA,MAAM,cAAe,GACrBA,MAAM,UALhB,GAAAne,OAK8BukF,YAAYv9D,QAL1C,OAMUtiC,KAAK05J,MAAM15J,MACXy5B,MAAM,aAAc,UACpBlJ,OC4BNquI,CAAanmI,UAAW94B,KAAK+5J,SAChCl+H,OAAQijI,YAAYjjI,OACpBD,YACAoB,kBACA+3H,cACApyH,gBACAy3H,wBACAC,yBACDr6J,KAAK4M,kDAWR,IAgBIuyJ,eAhBE9oE,SAAWr2F,KAAKq2F,WADhB+oE,cAOFp/J,KAAK4M,SAJLgwF,YAHEwiE,cAGFxiE,YACAw9D,YAJEgF,cAIFhF,YACAC,YALE+E,cAKF/E,YACA73H,SANE48H,cAMF58H,SANE68H,mBAeFr/J,KAAKkgG,cANLljE,SATEqiI,mBASFriI,SACAC,UAVEoiI,mBAUFpiI,UACArB,MAXEyjI,mBAWFzjI,MACAC,OAZEwjI,mBAYFxjI,OACAwjE,OAbEggE,mBAaFhgE,OACA01D,OAdEsK,mBAcFtK,OAEE8E,gBAAkBjxE,YAAYD,6BAAc3oF,KAAK6zB,SAAU,OAAQ,GAAtC,GAAAlY,OAA6CihF,YAA7C,gBAEnC,OAAQp6D,UACR,If3PW,Me4PP28H,eAAc,UAAAxjJ,OfzPJ,Ue0PV,MACJ,If7PY,Oe8PRwjJ,eAAc,UAAAxjJ,Of7PL,Se8PT,MACJ,If9Pc,Se+PVwjJ,eAAc,UAAAxjJ,OflQP,OemQP,MACJ,QACIwjJ,eAAc,UAAAxjJ,OfpQN,QekRZ,OAZAk+I,gBAAgBr7E,QAAhB,GAAA7iE,OAA2BihF,YAA3B,gBAAAjhF,OAAqD3b,KAAKumF,MAAO,GACjEszE,gBAAgB//H,MAAM,QAAS,QAE/B+/H,gBAAgB//H,MAAM,QAAtB,GAAAne,OAAkC9X,KAAK4Q,IAAIuoB,SAAUpB,OAAkB,EAATyjE,OAA9D,OACiBvlE,MAAM,SADvB,GAAAne,OACoC9X,KAAK4Q,IAAIwoB,UAAWpB,QAAmB,EAATwjE,OADlE,OAEiBvlE,MAFjB,GAAAne,OAE0BwjJ,gBAF1B,GAAAxjJ,OAE+C0jF,OAF/C,OAGiBvlE,MAAM,SAHvB,GAAAne,OAGoCo5I,OAHpC,OAAAp5I,OAGgDy+I,YAHhD,KAAAz+I,OAG+D0+I,cAC/Dr6J,KAAK65J,gBAAgBA,gBAAgBjpI,QAGrC5wB,KAAKs/J,YAAYzF,iBACjBxjE,SAASsoD,mBAAmB3+I,KAAK+K,OAAO9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,MAC5CghI,gFASU9uJ,MACjB,IAAM8I,UAAY7T,KAAK6T,YAEvB,MAAa,YADA7T,KAAK80J,WAAWv2I,UAAU7S,OAAO,GAAG7Q,sLAE7C0kK,IACK1rJ,UAAY9I,KAAKxJ,SAGjBsS,YAAa9I,KAAKwsJ,iDArPhBt8J,cACX,OAAO,IAAI4hK,aAAa5hK,oEAWxB,OAAOitH,+FAWP,OAAOgyC,2NCjFf,IAAMsF,mBAAiBC,+BAAAC,sBhBeG,cgBblBC,SAAU,SAAAA,SAAA50J,MAAI,OACVsQ,KAAM,GACNK,OAAQ3Q,OAEZ60J,sBAAuB,SAAAA,sBAAC1/D,aAAgB,IAEhCq+D,WAEAr+D,YAFAq+D,WACA3iI,MACAskE,YADAtkE,MAEJ,OACIvgB,KACIugB,MAAK,GAAAjgB,OAAKigB,MAAL,MACL+G,QAAO,GAAAhnB,OAAK,EAAL,OAEXD,QACIkgB,MAAO,SAAAA,MAACvjC,EAAGN,GAAJ,SAAA4jB,OAAa4iJ,WAAWxmK,GAAG6jC,MAA3B,OACP+G,QAAO,GAAAhnB,OAAK,EAAL,SAInBkkJ,kBAAmB,SAAAA,kBAAC3/D,aAAgB,IACxBm+D,cAA0Bn+D,YAA1Bm+D,cACR,OACIyB,WAF8B5/D,YAAXrkE,OAGnBkkI,UAAW1B,cAAcziI,MACzBokI,aACIC,YAAY,EACZC,UAAU,OA7BPT,+BAAAC,mBhBgBC,YgBmBhBC,SAAU,SAAAA,SAAA50J,MAAI,OACVsQ,IAAKtQ,KACL2Q,OAAQ,SAAAA,OAAArjB,GAAC,OAAKA,MAElBunK,sBAAuB,SAAAA,sBAAC1/D,YAAatzF,QAAW,IAExCgvB,MACAskE,YADAtkE,MAEI+G,QAAY/1B,OAAZ+1B,QAER,OACItnB,KACIugB,MAAK,GAAAjgB,OAAKigB,MAAL,MACL+G,QAAO,GAAAhnB,OAAKgnB,QAAL,OAEXjnB,QACIkgB,MAAK,GAAAjgB,OAAKigB,MAAL,MACL+G,QAAO,GAAAhnB,OAAK,EAAL,SAInBkkJ,kBAAmB,SAAAA,kBAAC3/D,aAAgB,IACxBm+D,cAAyBn+D,YAAzBm+D,cAAeziI,MAAUskE,YAAVtkE,MACvB,OACIkkI,WAAYzB,cAAcxiI,OAC1BkkI,UAAWnkI,MACXokI,aACIC,YAAY,EACZC,UAAU,OA/DPR,oBAsEVS,gBAAcV,+BAAAW,mBhB1DP,OgB2DRZ,kBAAiB,UADFC,+BAAAW,gBhBzDN,QgB2DRZ,kBAAiB,UAFHC,+BAAAW,gBhB3DR,MgB8DRZ,kBAAiB,YAHDC,+BAAAW,gBhBxDL,SgB4DRZ,kBAAiB,YAJJY,iBAOdC,cAAYZ,+BAAAa,iBhBjEL,OAcD,OgBmDMb,+BAAAa,chBhEJ,QAUA,SgBsDIb,+BAAAa,chBlEN,MAMG,UgB4DGb,+BAAAa,chB/DH,SAGA,UgB4DGA,eAgBZC,WAASd,+BAAAe,chBjFF,QgBkFPnJ,MhB1EQ,UgByECoI,+BAAAe,WhBhFD,SAOA,QgB2EAnJ,QAFCoI,+BAAAe,WhBlFH,OgBqFPnJ,MhB5ES,UgByECoI,+BAAAe,WhB/EA,UAMD,QgB6ECnJ,QAJAmJ,YClDTC,8BAAuB,SAAvBA,qBAAwBhkI,QAAS3D,UAAW8jE,YAAa7xF,MAClE,IAAI21J,UACAC,WACAC,cACAC,aACE3gE,YAAczjE,QAAQyjE,cAEpBb,OAOAa,YAPAb,OACA01D,OAMA70D,YANA60D,OACA+J,YAKA5+D,YALA4+D,YACAljI,MAIAskE,YAJAtkE,MACAC,OAGAqkE,YAHArkE,OACAmB,SAEAkjE,YAFAljE,SACAC,UACAijE,YADAjjE,UAGR0jI,WAAa9kI,QAAUijI,YAAYjjI,OAAS,EAAIwjE,OAAS,EAAI01D,QAC7D2L,UAAY9kI,OAAkB,EAATyjE,OAAsB,EAAT01D,QAElC6L,cAAgB3jI,WAAa6hI,YAAYjjI,OAAkB,EAATwjE,OAAsB,EAAT01D,QAC/D8L,aAAe7jI,UAAqB,EAATqiE,OAAsB,EAAT01D,QAExC,IAAI+L,WAAal4E,YAAY9vD,UAAW,OAAQ,GAApB,GAAAnd,OAA2BihF,YAA3B,iBAiB5B,OAhBAkkE,WAAW5hJ,OAAX,IAAAvD,OAAsBihF,YAAtB,qBAAqDl1D,SAEjDm5H,cAAgBA,aAAeH,YAC/BI,WAAaA,WAAWhnI,MjB7EX,QiB6EA,GAAAne,OAA2BklJ,aAA3B,OAA6C/mI,MAAM,aAAc,WAG9E8mI,eAAiBA,cAAgBD,YACjCG,WAAWhnI,MjB/EG,SiB+Ed,GAAAne,OAA4BilJ,cAA5B,OAA+C9mI,MAAM,aAAc,WAGvEgnI,WAAal4E,YAAYk4E,WAAY,OAAQ,GAArB,GAAAnlJ,OAA4BihF,YAA5B,sBAEb9iE,MjBtFM,QiBsFjB,GAAAne,OAA2B+kJ,UAA3B,OACAI,WAAWhnI,MjBrFO,SiBqFlB,GAAAne,OAA4BglJ,WAA5B,QAGSI,WA1EoB,SAApBC,kBAAqBloI,UAAW/tB,KAAMk2J,gBAC/C,IAAM/gE,YAAc+gE,eAAe/gE,cAC7BtzF,OAASq0J,eAAer0J,SAE1B2xJ,WACAr+D,YADAq+D,WAGA3hE,YAEAhwF,OAFAgwF,YACAp6D,SACA51B,OADA41B,SAEE0+H,YAAcf,eAAe39H,UAC7Bm9H,SAAWuB,YAAYvB,SAAS50J,MAChCie,SAAWk4I,YAAYtB,sBAAsB1/D,YAAatzF,QAE1DmO,KAAO6tE,YAAY9vD,UAAW,MAAO6mI,SAAStkJ,IAA5B,GAAAM,OAAoCihF,YAApC,gBACxB7hF,KAAK+e,MjB7Ba,SiB6BC,SAACzhC,EAAGN,GAAJ,SAAA4jB,OAAa4iJ,WAAWxmK,GAAG8jC,OAA3B,QACnB9gB,KAAK+e,MjBhCY,QiBgCC9Q,SAAS3N,IAAIugB,OAC/B7gB,KAAK+e,MAAM,UAAW9Q,SAAS3N,IAAIsnB,SAEnC,IAAM7oB,QAAU8uE,YAAY7tE,KAAM,MAAO4kJ,SAASjkJ,OAAvB,GAAAC,OAAkCihF,YAAlC,oBAI3B,OAHA9iF,QAAQggB,MjBpCS,QiBoCI9Q,SAAStN,OAAOkgB,OACrC9hB,QAAQggB,MAAM,UAAW9Q,SAAStN,OAAOinB,SAElC7oB,QAkDYknJ,CAAkBF,WAAY/1J,KAAM0xB,WAW9C0kI,4BAAqB,SAArBA,mBAAsB1kI,QAAS3D,WAAc,IAAAsoI,gBAIlD3kI,QAAQ7vB,SAFRgwF,YAFkDwkE,gBAElDxkE,YAGE0hE,gBALgD8C,gBAGlDr3J,KAEyB1J,KAAKijG,YAE5B1wB,MAAQ2tF,UAAUjC,iBAClB+C,aAAez4E,YAAY9vD,UAAW,MAAO,SAACzgC,EAAGN,GAAJ,OAAU66E,MAAM3qE,IAAI,SAAAhO,GAAC,OAAKA,EAAG5B,EAAE4B,GAAI5B,EAAEq8C,MAAOr8C,EAAEoiC,KAC7FpiC,EAAEW,MAAOyjC,QAAQ5oB,YAAa9b,MADF,GAAA4jB,OACUihF,YADV,sBAG1B0kE,WAAajB,aAAa/B,iBAGhC,OADA+C,aAAa7iF,QAAQ8iF,YAAY,IACxBD,4BASAE,wBAAiB,SAAjBA,eAAkBx3J,KAAMy3J,YAAaC,eAAgBhlI,SAAY,IAAAilI,qBAMtEjlI,QAAQyjE,cAJRv9D,QAFsE++H,qBAEtE/+H,QACAs7H,YAHsEyD,qBAGtEzD,YACAO,WAJsEkD,qBAItElD,WACAC,aALsEiD,qBAKtEjD,aAEEx5H,KAAOw8H,eAA4B,GAAV9+H,QAAc,EAE7C,OAAI54B,KAAK,KAAOstJ,MACZ,GAAA17I,OAAUsiJ,YAAYl0J,KAAK,IAAIy3J,aAA/B,MAEJ,GAAA7lJ,OAA0B,UAAhB6lJ,aAA4BC,eAAgCjD,WAAWz0J,KAAK,IAAIy3J,aAAev8H,KAAlDw5H,aAAvD,OA+ESkD,oBAAa,SAAbA,WAAcj8D,KAAM5sE,UAAWzmB,MAAOoqB,SAAY,IAEvDmgE,YAMAngE,QANAmgE,YACAkjE,WAKArjI,QALAqjI,WACAC,UAIAtjI,QAJAsjI,UACAtB,aAGAhiI,QAHAgiI,aACA97H,QAEAlG,QAFAkG,QACA+R,MACAjY,QADAiY,MAEEjQ,IAAMmkD,YAAY9vD,UAAW,MAAO,SAAAhe,GAAC,OAAKA,IAAzB,GAAAa,OAAgCihF,YAAhC,qBACtBxpC,KjBhOgB,QiBgOJqrG,cACZrrG,KjB/NiB,SiB+NJ0sG,YACbhmI,MjBlOgB,QiB+NL,GAAAne,OAGK8iJ,aAHL,OAIX3kI,MjBjOiB,SiB6NN,GAAAne,OAIMmkJ,WAJN,OjBjMI,SiBuMZp6D,KAxEY,SAAdg7B,YAAwBroI,EAAG+vB,KAAMw5I,YAAahmI,MAAOC,QACvD,IAAM8kG,aAAev4G,KAEfqS,KAAOpiC,EAAE,IAAMwL,KAAK4Q,IAAImnB,MAAOC,QAAUh4B,KAAKkyC,GAC9C8rD,MAAQxpG,EAAE,IAAMupK,YAEtB,GAAI//D,iBAAiBhW,QACjBgW,MAAM5V,KAAK,SAAC97D,KAER,OADA93B,EAAEwpG,MAAQ1xE,IACHuwG,YAAYroI,EAAG+vB,YAEvB,IAAIy5E,iBAAiB++B,QAAS,CACjC,IAAIC,SAAWh/B,MAAMznB,WAAU,GAE/B,GAAwC,QAApCymD,SAASC,SAASr/H,cAAyB,CAC3C,IAAMs/H,IAAMF,SAASE,KAAOF,SAASG,MACrCH,SAAWxoG,SAASyM,gBAAgB,6BAA8B,UACzDhB,aAAa,OAAQi9F,KAIlC,OAFqBp4C,6BAAck4C,UACtBztE,KAAK,YAAlB,SAAAz3C,OAAwC8e,KAAO,IAA/C,MACOkuD,6BAAcg4C,aAAa/vG,OAAOiT,YAAYg9F,WAErD,IAAIK,QADD,GAAqB,iBAAVr/B,MAOd,OAFIq/B,QAxCM,SAAZC,UAAaj3H,KACf,SAAI,0CAA0C7M,KAAK6M,MAAQ,UAAU7M,KAAK6M,MAAQA,IAAIxI,OAAS,GAoCvFy/H,CAAUt/B,OACAA,MAEA24D,kBAAS34D,OAAOpnE,KAAKA,KAArB+/H,GAEP5xE,YAAY+3C,aAAc,OAAQ,SAAA51H,MAAI,OAAKA,QAAOqoD,KAAK,IAAK8tE,SAGvE,OADA7oI,EAAE,GAAK,SACAqoI,YAAYroI,EAAG+vB,KAAM,UA0CxBs4G,CAAYruH,MADEu2E,YAAYnkD,IAAK,KAAMpyB,MAAM,IAAlB,GAAAsJ,OAA0BihF,YAA1B,iBACCvqF,MAAM,GAAK,SAAW,SAAU0tJ,UAAWD,YACpD1sG,KAAK,YADtB,aAAAz3C,OACgD8iJ,aAAe,EAAI97H,QADnE,KAAAhnB,OAC8EmkJ,WAAa,EAD3F,MAEiB1sG,KAAK,OAAQ/gD,MAAM,IAAMqiC,OAE1Ck0C,YAAYnkD,IjB7MA,QiB6MYpyB,MAAM,IAAnB,GAAAsJ,OAA2BihF,YAA3B,iBACMxpC,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KjB9OJ,QiB8OgBqrG,cACZrrG,KjB7OH,SiB6OgB0sG,YACb1sG,KAAK,OAAQ/gD,MAAM,IAAMqiC,i+ECrO7BmtH,0wBAAuBhF,mVAiCpC,IAAM5zH,MAAQjpC,KAAKipC,QADN64H,cAE0BrH,2BAAaxxH,OAA5CyxH,UAFKoH,cAELpH,UAAW3jJ,OAFN+qJ,cAEM/qJ,OAAQ6jJ,QAFdkH,cAEclH,QACvBE,gBAAkBiH,kCAAI,IAAIjrJ,IAAIC,SAC5BzL,MAAQtL,KAAK80J,WAAWplJ,gBAAgB9G,OAAO,GAJxCo5J,cAKa12J,MAAMI,SAAxB7Q,KALKmnK,cAKLnnK,KAAMyb,QALD0rJ,cAKC1rJ,QA6Bd,OA3BAwkJ,gBAAkBA,gBAAgB7yJ,IAAI,SAACy0J,IAAK3kK,GAAM,IAAA08B,KAC1Cz7B,MAAQ,EACRuI,MAAQ,EACNg2J,OAASuD,gBAAgB/iK,GAC/B,GAAI8C,OAAS+6F,yBAAUj3F,QAAS,CAG5B4C,OAFAvI,QAAU8hK,gBAAgB/iK,IAAI0nD,QAAQ,IACtBq7G,gBAAgB/iK,EAAI,IAAM+iK,gBAAgB/iK,EAAI,IAAMiB,OAC5CymD,QAAQ,QAC7B,CACH,IAAIo8D,UAAY07C,OACZjhJ,UAAYyzD,gCAAiB1rE,WAC7Bw9G,UAAY7lC,4BAAe8kF,gBAAgB/iK,GAAIuT,MAAM2/H,iCAEzDjyI,MAAQ6iH,UACRt6G,OAASs6G,WAEb,OAAAomD,+BAAAxtI,QACKimI,UAAYzxH,MAAM2xH,SAAS8B,MADhCuF,+BAAAxtI,KAAA,QAEIz7B,OAFJipK,+BAAAxtI,KAAA,KAGQ18B,GAHRkqK,+BAAAxtI,KAAA,QAIIlzB,OAJJ0gK,+BAAAxtI,KAAA,SAKI8iI,QALJ9iI,OAOD1gB,OAAO,SAAA1b,GAAC,OAAgB,OAAZA,EAAEW,QAEjB8hK,gBlBxCY,SkBwCMJ,UAAqBI,gBAAgBvnJ,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAEugK,WAAat3J,EAAEs3J,aACjFI,wDAYN,IAAMzkE,SAAWr2F,KAAKq2F,WAChBtrF,KAAO/K,KAAK+K,OACV6xF,YAAgB58F,KAAK4M,SAArBgwF,YACFi9D,gBAAkBqI,oBAAAC,+BAAAN,eAAAhoK,WAAA,SAAAmG,MAAA9H,KAAA8H,KAAaA,KAAK6zB,SAElCktI,WAAeN,8BAAqBzgK,KAAM65J,gBAAiBj9D,YAAa7xF,MAAxEg2J,WAMR,ODuJ0B,SAArBqB,mBAAsB3lI,QAAS3D,WACxC,IAAMy5E,aAAe91E,QAAQwgI,cADyBjkD,iBAKlDv8E,QAAQ7vB,SAFL7C,KAH+CivG,iBAG/CjvG,KACA6yF,YAJ+Coc,iBAI/Cpc,YAJ+CylE,sBASlD5lI,QAAQyjE,cAFRu+D,aAPkD4D,sBAOlD5D,aACA97H,QARkD0/H,sBAQlD1/H,QARkD2/H,WAe9Cv4J,KAAK27F,KAJEq6D,UAXuCuC,WAW9C1mI,MACQkkI,WAZsCwC,WAY9CzmI,OACA6Y,MAb8C4tH,WAa9C5tH,MACAzT,UAd8CqhI,WAc9CrhI,UAGFq9H,gBAAkBv0J,KAAK1J,KAAKijG,YAC5BlhG,UAAY2H,KAAK1J,KAAK+B,UAE5BmwG,aAAaz1E,uBAAsB,GACnCysD,WAAWzwD,WACP8C,MAAO,SAAAA,MAAAvjC,GAAC,OAAIkpK,wBAAelpK,EjBhRd,SiBgRwB,EAAOokC,UAC5CZ,OAAQ,SAAAA,OAAAxjC,GAAC,OAAIkpK,wBAAelpK,EjB/Qd,UiB+QyB,EAAOokC,UAC9C8lI,ajBzPc,SiB0Pd5/H,QAAO,GAAAhnB,OAAKgnB,QAAL,QAGX4vE,aAAap4E,SAASsC,QAAQ2gI,gBAC9B,IAAMrsF,QAAUj4C,UAAU/tB,OAC1B+tB,UAAU2O,KAAK,SAAUpvC,EAAGN,GACpBM,EAAE,KAAOg/J,MACT1uE,6BAAc3oF,MAAMK,KAAK+B,UAAU/J,EAAE,GAAIN,EAAGg5E,QAASt0C,UACpC3C,MADjB,WAAAne,OjBrQS,UiBsQyB2iJ,gBjBvQ1B,OACC,SiBsQqE,QAG9E31E,6BAAc3oF,MAAMw+E,QAApB,GAAA7iE,OAA+BihF,YAA/B,KAAAjhF,OAA8CslB,YAAa,GAC3D0nD,6BAAc3oF,MAAMw+E,QAApB,GAAA7iE,OAA+BihF,YAA/B,KAAAjhF,OAA8CslB,UAA9C,KAAAtlB,OAA2D5jB,IAAK,GAChE4pK,oBAAW,SAAUh5E,6BAAc3oF,MAAO3H,GACtCukG,wBACAmjE,oBAEAD,sBACArB,0BACA97H,gBACA+R,iBCxMR0tH,CAAmBpiK,KADMmhK,4BAAmBnhK,KAAM+gK,YAA1CM,cAERxH,gBAAgB/mG,UAAU,OAAOh5B,MAAM,QlB5E3B,QkB6EZu8D,SAASjC,yBACTiC,SAASsoD,mBAAmB3+I,KAAK+K,OAAO9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,MAC5CghI,wDA9EI5+J,cACX,OAAO,IAAI4mK,eAAe5mK,kDAW1B,MlBGgB,iCmB9BXunK,kBAAoB,SAApBA,kBAAqBz3J,MAC9B,MAA6B,iBAAlBA,KAAK,GAAG/R,MACR+R,KAAK+H,OAAO,SAAC2vJ,YAAaC,cAAd,OACd7+J,KAAK4Q,IAAIiuJ,aAAa1pK,MAAOypK,YAAY,IAAK5+J,KAAK6Q,IAAIguJ,aAAa1pK,MAAOypK,YAAY,OACnFj6J,OAAOm6J,UAAWn6J,OAAOo6J,YAE/B73J,KAAK9C,IAAI,SAAAhO,GAAC,OAAIA,EAAEjB,SA+DrBynK,qCAAuB,SAAvBA,qBAAwB3nI,UAAW8jE,YAAa7xF,MAClD,IAAMgM,OAASyrJ,kBAAkBz3J,MAC3B8uJ,gBAAkBjxE,YAAY9vD,UAAW,OAAQ,GAApB,GAAAnd,OAA2BihF,YAA3B,iBAC7BimE,cAAgBj6E,YAAYixE,gBAAiB,OAAQ,GAA1B,GAAAl+I,OAAiCihF,YAAjC,cAC3BkmE,eAAiBl6E,YAAYi6E,cAAe,KAAM,GAAtB,GAAAlnJ,OAA6BihF,YAA7B,oBAIlC,OACIi9D,gCACAiJ,8BACAD,4BACAE,eAhE0B,SAArBC,mBAAsBlqI,UAAW/tB,KAAMgM,QAChD,IAAMkxH,KAAOr/C,YAAY9vD,UAAW,QAAS,IACvCiqI,eAAiBn6E,YAAYq/C,KAAM,kBAAmB,IAC/C70E,KAAK,KAAM,mBACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MAIxB,OAHAw1B,YAAYm6E,eAAgB,OAAQh4J,KAAM,iBACzBqoD,KAAK,SAAU,SAAA/6D,GAAC,SAAAsjB,OAA+B,KAAvBtjB,EAAEW,MAAQ+d,OAAO,KAAaA,OAAO,GAAKA,OAAO,IAAzD,OAChBq8C,KAAK,aAAc,SAAA/6D,GAAC,OAAIA,EAAEq8C,QACpCquH,eAgDgBC,CAAmBH,cAAe93J,KAAMgM,QAQ3DksJ,WAPer6E,YAAYk6E,eAAgB,QAAS,GAA1B,GAAAnnJ,OAAiCihF,YAAjC,qBAmBrB2f,2BAAa,SAAbA,WAAc9/E,QAAS3D,UAAW+C,OAAQD,OACnD,IAAMq2B,KAAOx1B,QAAQw1B,OAErBA,KAAKy9F,kBAAkB9zH,MAAOC,QAC9Bo2B,KAAK6wC,OAAOhqE,UAAUlI,QACtBqhC,KAAKvtC,SAASo+E,m+ECnGGogE,0wBAAuBrG,iUAiCpC,OAAIz3J,UAAK1D,QACL1B,KAAKw6G,MAALp1G,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKw6G,4DAWZ,IAAIsgD,mBACE7xH,MAAQjpC,KAAKipC,QAFN64H,cAGiCrH,2BAAaxxH,OAAnDyxH,UAHKoH,cAGLpH,UAAW3jJ,OAHN+qJ,cAGM/qJ,OAAQ4jJ,MAHdmH,cAGcnH,MAAOC,QAHrBkH,cAGqBlH,QAG5BG,aACFn7H,WAAY5/B,KAAKuyG,eACjBvpF,SAAUhpB,KAAKkgG,cACfk7D,UAAWp7J,KAAK4M,SAAS41B,SACzBwyE,gBAAiBh1G,KAAKg1G,mBAoB1B,OAjBI2lD,iBAAiB9xJ,OACbkO,OAAO,GAAK4jJ,MAAM,KAClBG,gBAAgB,GAAK/jJ,OAAO,IAEhC+jJ,mBAAen/I,OAAAwnJ,kCAAOrI,iBAAPqI,kCAA2BxI,QACtC5jJ,OAAOA,OAAOrV,OAAS,GAAKi5J,MAAMA,MAAMj5J,OAAS,IACjDo5J,gBAAgB50J,KAAK6Q,OAAO,IAGhC+jJ,gBAAkBqI,kCAAI,IAAIrsJ,IAAIgkJ,kBAAkBvnJ,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,IAEnE03J,gBAAkBD,uCAAyBC,gBAAiBC,cAE5DD,gBAAkBmB,kCAAoBllJ,OAAQ4jJ,MAAQ,EAAGI,cAE7DD,gBAAkBqI,kCAAI,IAAIrsJ,IAAIgkJ,kBAAkBvnJ,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,KAE5C6E,IAAI,SAACy0J,IAAK3kK,GAAM,IAAA08B,KAC7Bz7B,MAAQ8hK,gBAAgB/iK,GAC9B,OAAAqrK,+BAAA3uI,QACKimI,UpBnDG,SoBmDSA,UAAqBzxH,MAAM2xH,SAAS8B,KAAOzzH,MAAM2zH,iBACxD3zH,MAAM2xH,SAAS/2J,KAAK6N,MAAMgrJ,OAFpC0G,+BAAA3uI,KAAA,SAGYz7B,MAAMymD,QAAQ,IAH1B2jH,+BAAA3uI,KAAA,KAIQ18B,GAJR08B,OAMD1gB,OAAO,SAAA1b,GAAC,OAAgB,OAAZA,EAAEW,8DAWLykK,YACZz9J,KAAK4M,QACD7C,MACI1J,MACIijG,YAAatjG,KAAK4M,SAAS41B,aAIvC,IAAMyvB,KDpEY,SAAbwoD,WAAch+E,SACvB,IAAM1xB,KAAO0xB,QAAQ1xB,OACby+B,MAAU/M,QAAQ7vB,SAAlB48B,MACF6/G,SAAW5sH,QAAQygI,OAAO7T,SAC1Bga,QAAU,IAAIjmD,8BAChBvkF,GAAE,UAAAld,OAAY8gB,QAAQ8pD,KACtB+c,YAAa95D,QAAUywH,enB3BV,QACC,SmB2BdngI,MAAO2C,QAAQ2gI,eACf17G,MAAM,EACNswD,cAAc,EACd5/C,WAAYrnD,KAAK9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEW,QAC5B24G,eAAe,EACfC,QACIC,SAAU,KAEbU,aAAc91E,QAAQwgI,gBAI3B,OAFAoG,QAAQtsJ,OAAOyrJ,kBAAkBz3J,OACjCs4J,QAAQ9hK,OAAO,EAAG,KACX,IAAI8nJ,UAAW3kI,OAAO2+I,SAASz2J,QAClCyyF,QAAUt5D,KAAM,EAAG8rB,OAAQ,EAAGpvB,IAAK,EAAGuD,MAAO,KCgDhCy0E,CAAWz6G,MAClBsjK,UAAYrxG,KAAKshG,kBACjBn8E,OAAUx7C,MAAO0nI,UAAU1nI,MAAQ6hI,WAAY5hI,OAAQynI,UAAUznI,OAAS4hI,YAC1E8F,iBAAmBtxG,KAAKvtC,SAAS3N,SAASrV,OAC1Cu8J,YAAc,IAAIp1J,MAAM06J,kBAAkB7kH,KAAK04B,OAGrD,OADAp3E,KAAKiyD,KAAKA,MACHgsG,0EAUP,OACIrjE,aAAc56F,KAAKwjK,4DAYvB,IAAMntE,SAAWr2F,KAAKq2F,WAChBwjE,gBAAkB4J,oBAAAC,+BAAAR,eAAArpK,WAAA,SAAAmG,MAAA9H,KAAA8H,KAAaA,KAAK6zB,SAM1C,ODjCsB,SAAjB8vI,eAAkBlnI,QAAS3D,WACpC,IAAI6nI,WACAD,UAF8C1nD,iBAO9Cv8E,QAAQ7vB,SAHR48B,MAJ8CwvE,iBAI9CxvE,MACAozD,YAL8Coc,iBAK9Cpc,YACA7yF,KAN8CivG,iBAM9CjvG,KAEEgB,KAAO0xB,QAAQ1xB,OAR6B64J,sBAgB9CnD,qCAAqB3nI,UAAW8jE,YAAa7xF,MAL7C8uJ,gBAX8C+J,sBAW9C/J,gBACAgJ,cAZ8Ce,sBAY9Cf,cACAC,eAb8Cc,sBAa9Cd,eACAC,eAd8Ca,sBAc9Cb,eACAE,WAf8CW,sBAe9CX,WAEEjlD,SAAWvhF,QAAQw1B,OAAOvtC,SAASqyF,oBAAoBC,eAjBX0qD,qBA4B9CjlI,QAAQyjE,cATRv9D,QAnB8C++H,qBAmB9C/+H,QACA08D,OApB8CqiE,qBAoB9CriE,OACA01D,OArB8C2M,qBAqB9C3M,OACA+J,YAtB8C4C,qBAsB9C5C,YACAT,cAvB8CqD,qBAuB9CrD,cACAphI,UAxB8CykI,qBAwB9CzkI,UACAD,SAzB8C0kI,qBAyB9C1kI,SACAnB,OA1B8C6lI,qBA0B9C7lI,OACAD,MA3B8C8lI,qBA2B9C9lI,MAEE48H,sBAENmI,WAAa98J,KAAK6N,MAAM7N,KAAK4Q,IAAIonB,OAAQoB,YAAc6hI,YAAYjjI,OAAS,EAAIwjE,OAAS,EAAI01D,SAC7F2L,UAAY78J,KAAK6N,MAAM7N,KAAK4Q,IAAImnB,MAAOoB,WAAsB,EAATqiE,OAAsB,EAAT01D,SAE7DvrH,QAAUywH,kBACVzB,mBAAmB38H,OAAS9xB,KAAK27F,KAAK7pE,OACtC28H,mBAAmB58H,MAAQ8kI,UAAY,EAAI/9H,QAAUq7E,SAASpiF,MAAQ,EACtEmnI,eAAe3vG,KAAK,KAAM,QAAQA,KAAK,KAAM,MAC7C0vG,eAAe1vG,KAAK,YAApB,cAAAz3C,OAA+CqiG,SAASpiF,MAAQ,EAAhE,QACA2gF,2BAAW9/E,QAASo9H,gBAAiB8G,WAAa52J,KAAK27F,KAAK7pE,OAAS8G,QAAS+9H,UAAY,EAAI/9H,QAAU,GAExG4mD,WAAWswE,iBACPh+H,OAAM,GAAAlgB,OAAK0iJ,cAAcxiI,OAASk5H,OAASpyH,QAArC,MACN/G,MAAK,GAAAjgB,OAAK9X,KAAK4Q,IAAImnB,MAAOoB,UAArB,MACL2F,QAAO,GAAAhnB,OAAKgnB,QAAL,QAGXsgI,WAAW7vG,KAAK,SAAUolG,mBAAmB38H,QAC7ConI,WAAW7vG,KAAK,QAASolG,mBAAmB58H,MAAQoiF,SAASpiF,MAAQ,KAErE48H,mBAAmB38H,OAAS8kI,WAAa,EAAIh+H,QAAUq7E,SAASniF,OAAS,EACzE28H,mBAAmB58H,MAAQ7xB,KAAK27F,KAAK9pE,MACrCmnI,eAAe3vG,KAAK,KAAM,MAAMA,KAAK,KAAM,QAC3C0vG,eAAe1vG,KAAK,YAApB,eAAAz3C,OAAgDqiG,SAASniF,OAAS,EAAlE,MACA0gF,2BAAW9/E,QAASo9H,gBAAiB8G,WAAa,EAAIh+H,QAAU,EAAG+9H,UAAY32J,KAAK27F,KAAK9pE,MAAkB,EAAV+G,SAEjG4mD,WAAWswE,iBACPh+H,OAAM,GAAAlgB,OAAK9X,KAAK4Q,IAAIonB,OAAQoB,WAAtB,MACNrB,MAAK,GAAAjgB,OAAKqhB,SAAL,MACL2F,QAAO,GAAAhnB,OAAKgnB,QAAL,QAEXsgI,WAAW7vG,KAAK,SAAUolG,mBAAmB38H,OAASmiF,SAASniF,OAAS,GACxEonI,WAAW7vG,KAAK,QAASolG,mBAAmB58H,QAIhD2tD,WAAWs5E,eACPhnI,OAAM,GAAAlgB,OAAK68I,mBAAmB38H,OAAxB,MACND,MAAK,GAAAjgB,OAAK68I,mBAAmB58H,MAAxB,QAIT2tD,WAAW05E,YACPvkH,KAAM,0BAEVmkH,cAAczvG,KAAK,SAAUolG,mBAAmB38H,QAChDgnI,cAAczvG,KAAK,QAASolG,mBAAmB58H,OAE/Ca,QAAQyjE,aACJs4D,wCAEJ/7H,QAAQ+mI,mBAAqBX,cCpDzBc,CAAe3jK,KAAM65J,iBACrBA,gBAAgB/mG,UAAU,OAAOh5B,MAAM,QpB5H3B,QoB6HZu8D,SAASjC,yBACTiC,SAASsoD,mBAAmB3+I,KAAK+K,OAAO9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,MAC5CghI,gFASU9uJ,MACjB,QAAS/K,KAAK6T,cAAe9I,KAAK/R,gDA7IvBiC,cACX,OAAO,IAAIioK,eAAejoK,kDAW1B,MpBhBgB,+7EqBGH4oK,8tBAAmBhH,mUAiChC,IAAIJ,aACExzH,MAAQjpC,KAAKipC,QAFN64H,cAGiCrH,2BAAaxxH,OAAnDyxH,UAHKoH,cAGLpH,UAAW3jJ,OAHN+qJ,cAGM/qJ,OAAQ4jJ,MAHdmH,cAGcnH,MAAOC,QAHrBkH,cAGqBlH,QAE1Bx4J,UAAcpC,KAAK4M,SAAnBxK,UACFo6J,cACFxiF,MAAO,KAAMugF,MAAO,MAIlBQ,aACFn7H,WAAY5/B,KAAKuyG,eACjBvpF,SAAUhpB,KAAKkgG,cACfk7D,UAAWp7J,KAAK4M,SAAS41B,SACzBwyE,gBAAiBh1G,KAAKg1G,mBA6B1B,GA1BI2lD,iBAAiB9xJ,OACbkO,OAAO,GAAK4jJ,MAAM,KAClB6B,aAAaxiF,OAAQ,GAAAr+D,OAAIvZ,UAAUk4J,OAAOtgF,MAArB,KAAAr+D,OAA8Bg/I,MAAM,MAE7D8B,aAAS9gJ,OAAAmoJ,8BAAOrH,WAAPqH,8BAAqBnJ,QAC1B5jJ,OAAOA,OAAOrV,OAAS,GAAKi5J,MAAMA,MAAMj5J,OAAS,KACjD86J,aAAajC,OAAQ,GAAA5+I,OAAIvZ,UAAUk4J,OAAOC,MAArB,KAAA5+I,OAA8Bg/I,MAAMA,MAAMj5J,OAAS,OAG5E+6J,UAAYR,kCAAoBllJ,OAAQ4jJ,MAAOI,aAInD0B,WADAA,UAAYqH,8BAAI,IAAIhtJ,IAAI2lJ,YAAYlpJ,KAAK,SAACpZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,KACjC6E,IAAI,SAACy0J,IAAK3kK,GAAM,IAAA08B,KAC9Bz7B,MAAQ,KAIZ,OAHIjB,EAAI0kK,UAAU/6J,OAAS,IACvB1I,MAAK,GAAA2iB,OAAO+gJ,IAAIj9G,QAAQ,GAAnB,OAAA9jC,QAA8B8gJ,UAAU1kK,EAAI,GAAG0nD,QAAQ,KAEhEskH,2BAAAtvI,QACKimI,UrBjDG,SqBiDSA,UAAqBzxH,MAAM2xH,SAAS8B,KAAOzzH,MAAM2zH,iBAAmB3zH,MAAM2xH,SAAS8B,MADpGqH,2BAAAtvI,KAAA,QAEIz7B,OAFJ+qK,2BAAAtvI,KAAA,KAGQ18B,EAAI,GAHZgsK,2BAAAtvI,KAAA,SAIYioI,IAAKD,UAAU1kK,EAAI,KAJ/B08B,OAMD1gB,OAAO,SAAA1b,GAAC,OAAgB,OAAZA,EAAEW,QAEbwjK,aAAaxiF,MAAO,CACpB,IAAMgqF,YAAczH,gBrB3DX,SqB2DoCtzH,YAAO2xH,gBAASF,sBACvD3jJ,cAAQ4jJ,YAAO6B,4BACrBC,WAAauH,aAAJroJ,OAAAmoJ,8BAAoBrH,YAEjC,GAAID,aAAajC,MAAO,CACpB,IAAM0J,YAAc1H,gBrBjEX,SqBiEoCtzH,YAAO2xH,gBAASF,sBAC3D3jJ,cAAQ4jJ,YAAO6B,0BAAcC,sBAC/BA,aAAS9gJ,OAAAmoJ,8BAAOrH,YAAWwH,cAE/B,OAAOxH,gEAWKgB,WAAYj0H,OAQxB,OAPAxpC,KAAK4M,QACD7C,MACI1J,MACIijG,YAAatjG,KAAK4M,SAAS41B,aAIvC0hI,gBAAAC,2BAAAN,WAAAhqK,WAAA,iBAAAmG,MAAA9H,KAAA8H,KAA4By9J,WAAYj0H,mDAUxC,MrBpGY,+CqB+GZ,IAAM6sD,SAAWr2F,KAAKq2F,WADhB+tE,cAE4BpkK,KAAK4M,SAA/BgwF,YAFFwnE,cAEExnE,YAAap6D,SAFf4hI,cAEe5hI,SACfz3B,KLlDU,SAAXs5J,SAAWt5J,MAAI,IAAA0pB,KAAA,OAAAgrI,+BAAAhrI,QhBzER,OgB0ER1pB,KAAKwZ,WADWk7I,+BAAAhrI,KhBxEP,QgB0ER1pB,KAAKwZ,WAFUk7I,+BAAAhrI,KhB1ET,MgB6ER1pB,MAHiB00J,+BAAAhrI,KhBvEN,SgB2ER1pB,MAJc0pB,KKkDP4vI,CAASrkK,KAAK+K,QAAQy3B,UAE7Bq3H,gBAAkBqK,gBAAAC,2BAAAN,WAAAhqK,WAAA,SAAAmG,MAAA9H,KAAA8H,KAAaA,KAAK6zB,SAGlCktI,WAAeN,8BAAqBzgK,KAAM65J,gBAAiBj9D,YAAa7xF,MAAxEg2J,WAOR,OJwJsB,SAAjBuD,eAAkB7nI,QAAS3D,WACpC,IAAMy5E,aAAe91E,QAAQwgI,cADqB3jD,iBAM/C78E,QAAQ7vB,SAHT7C,KAHgDuvG,iBAGhDvvG,KACAy4B,SAJgD82E,iBAIhD92E,SACAo6D,YALgD0c,iBAKhD1c,YALgD2nE,sBAW/C9nI,QAAQyjE,cAHTm+D,cARgDkG,sBAQhDlG,cACAI,aATgD8F,sBAShD9F,aACA97H,QAVgD4hI,sBAUhD5hI,QAVgD6hI,YAgB/Cz6J,KAAK27F,KAHL9pE,MAb+C4oI,YAa/C5oI,MACAC,OAd+C2oI,YAc/C3oI,OACA6Y,MAf+C8vH,YAe/C9vH,MAGCtyC,UACD2H,KAAK1J,KADJ+B,UAGJmwG,aAAaz1E,uBAAsB,GArBe,IAAA2nI,sBAsBHtE,eAAe39H,UAAUq9H,mBACpExB,4BAAexiI,cAAQD,cADnBkkI,WAtB0C2E,sBAsB1C3E,WAAYC,UAtB8B0E,sBAsB9B1E,UAAWC,YAtBmByE,sBAsBnBzE,YAI/Bz2E,WAAWzwD,WACP8C,MAAO,SAAAA,MAAAvjC,GAAC,OAAIkpK,wBAAelpK,EjB9Ud,QiB8UwB2nK,YAAYC,WAAYxjI,UAC7DZ,OAAQ,SAAAA,OAAAxjC,GAAC,OAAIkpK,wBAAelpK,EjB7Ud,SiB6UyB2nK,YAAYE,SAAUzjI,UAC7D8lI,aAAc,SACd5/H,QAAO,GAAAhnB,OAAKgnB,QAAL,QAGX4vE,aAAap4E,SAASsC,QAAQ2gI,gBAC9B,IAAMrsF,QAAUj4C,UAAU/tB,OAC1B+tB,UAAU2O,KAAK,SAAUpvC,EAAGN,GACpBM,EAAE,KAAOg/J,MACT1uE,6BAAc3oF,MAAMK,KAAK+B,UAAU/J,EAAE,GAAIN,EAAGg5E,QAASt0C,UAErDklI,oBjB5TQ,OiB4TSh5E,6BAAc3oF,MAAO3H,GAClCukG,wBACAmjE,oBACAD,sBACArB,0BACA/pH,gBIxMR4vH,CAAetkK,KAFUmhK,4BAAmBnhK,KAAM+gK,YAA1CM,cAGRxH,gBAAgB/mG,UAAU,OAAOh5B,MAAM,QrBpI3B,QqBqIZu8D,SAASjC,yBACTiC,SAASsoD,mBAAmB3+I,KAAK+K,OAAO9C,IAAI,SAAA5P,GAAC,OAAIA,EAAEwgC,MAC5CghI,gFAUU9uJ,MAEjB,OAAAg5J,8BADkB/jK,KAAK6T,YAEN9I,KAAKxJ,+CA/IXtG,cACX,OAAO,IAAI4oK,WAAW5oK,kDAWtB,MrB1BY,sMsBZb,IAaMypK,QAAU,UACVC,OAAS,SACTC,OAAS,SAiBTC,iCACT,SACA,SAGSC,iBAAeC,yBAAAC,oBAAA,GAAArpJ,OARL,UAQK,KACT,EADS,KAAAA,OAlCP,SAmCgBkmJ,gCADTkD,yBAAAC,iBAAA,GAAArpJ,OARL,UAQK,KAET,EAFS,KAAAA,OAhCR,QAkCgBkmJ,gCAFRkD,yBAAAC,iBAAA,GAAArpJ,OARL,UAQK,KAGT,EAHS,KAAAA,OAjCP,SAoCgBkmJ,gCAHTkD,yBAAAC,iBAAA,GAAArpJ,OARL,UAQK,KAIT,EAJS,KAAAA,OAlCP,SAsCiBkmJ,gCAJVkD,yBAAAC,iBAAA,GAAArpJ,OARL,UAQK,KAKT,EALS,KAAAA,OAjCP,SAsCiBkmJ,gCALVkD,yBAAAC,iBAAA,GAAArpJ,OARL,UAQK,KAMT,EANS,KAAAA,OAhCR,QAsCiBkmJ,gCANTkD,yBAAAC,iBAAA,GAAArpJ,OATN,SASM,KAOV,EAPU,KAAAA,OAhCR,QAuCgBkmJ,gCAPRkD,yBAAAC,iBAAA,GAAArpJ,OATN,SASM,KAQV,EARU,KAAAA,OAhCR,QAwCekmJ,gCARPkD,yBAAAC,iBAAA,GAAArpJ,OATN,SASM,KASV,EATU,KAAAA,OAjCP,SA0CgBkmJ,gCATTkD,yBAAAC,iBAAA,GAAArpJ,OATN,SASM,KAUV,EAVU,KAAAA,OAlCP,SA4CekoJ,wBAVRkB,yBAAAC,iBAAA,GAAArpJ,OATN,SASM,KAWV,EAXU,KAAAA,OAlCP,SA6CgBunJ,gCAXT8B,kBAcf71D,mBAAO,OACPC,oBAAQ,QACRH,qBAAS,SACTC,kBAAM,MAQN+1D,kBAAoB,WACpBC,gBAAkB,+tCC/CxB,IAAMC,gBAAQ,SAARA,QAAQ,QAAA/3F,KAAAhoE,UAAA1D,OAAI2oI,KAAJ,IAAAxhI,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAIg9D,KAAJh9D,MAAAjoE,UAAAioE,MAAA,OAAA+3F,oBAAiBn7B,cAAjBo7B,4BAAiCh7B,KAAKpiI,IAAI,SAAA+tJ,UAAQ,OAAI,IAAIvrB,0BAAeurB,eAqCvF,SAASl3E,eAAMwmF,SAKlB,IAJA,IAAIC,SAAW,GACTC,MAAKpgK,UAAA1D,QAAA,IAAA0D,UAAA1D,OAAA,EACP3J,EAAI,EAEDA,EAAIytK,QAASztK,EAChBwtK,UAAYD,QAAQvtK,IAAUA,EAAlB,KAAAqN,UAAA1D,QAAkB3J,EAAlB,OAAAuV,EAAAlI,UAAkBrN,EAAlB,IAEhBwtK,UAAYD,QAAQvtK,GAEpB,IAAM0tK,KAAOptI,SAASqtI,yBAChB1sI,QAAUX,SAASmJ,cAAc,OAEvCikI,KAAK5hI,YAAY7K,SACjBA,QAAQO,UAAYgsI,SA3CxB,SAASI,cAAe/0I,MACpB,GAAIA,KAAKg1I,WAAaC,KAAKC,aAE3B,IAA6E,IAAzEjB,gCAAgC5+J,QAAQ2qB,KAAKm1I,QAAQtkK,eACrDmvB,KAAK0Q,WAAWlb,YAAYwK,UACzB,KAAA3Q,2BAAA,EAAA+lJ,mBAAA,EAAAC,oBAAA34J,EAAA,IACH,QAAA44J,MAAAC,UAAwBv1I,KAAKw1I,WAA7BttK,OAAA2U,cAAAwS,2BAAAimJ,MAAAC,UAAAx4J,QAAAC,MAAAqS,2BAAA,EACI0lJ,cADqCO,MAAAltK,OADtC,MAAAqtK,KAAAL,mBAAA,EAAAC,eAAAI,IAAA,YAAApmJ,2BAAA,MAAAkmJ,UAAAt4J,QAAAs4J,UAAAt4J,SAAA,WAAAm4J,kBAAA,MAAAC,kBAwCPN,CAAc3sI,SAhBsB,IAiB5BO,UAAcP,QAAdO,UAER,OAAO,kBAAMA,2SC3EjB,iCAiBM+sI,4BAAiB,SAAjBA,eAAkBC,SAAUC,WAAYC,KAC1CF,SAASz9J,QAAQ,SAAC49J,QACCA,OAAO17E,cAAc27E,YAAYjzB,iBAAiB16I,MAC1DyuC,KAAK,SAAAi7B,MAAI,OAAI8jG,WAAW9jG,KAAK1jD,UAAUq3E,cAC9CowE,KAAOA,IAAIC,QAEOA,OAAOE,WAEfr5D,2BAA2B/7C,aAAYG,gBAbtC,SAAb+f,WAAcg1F,OAAQvnJ,IAAT,OAAgB,WACXunJ,OAAO17E,cAAc27E,YAAYjzB,iBAAiB16I,MAC1DyuC,KAAK,SAAAi7B,MAAI,OAAIvjD,GAAGujD,KAAK1jD,UAAUq3E,eAYnC3kB,CAAWg1F,OAAQF,gBAsWlBK,YAAqB,eArV9B,SAAAC,yKAAeC,CAAA/mK,KAAA8mK,aACX9mK,KAAKgnK,yTAWW,QAAA55F,KAAAhoE,UAAA1D,OAAZsiJ,WAAY,IAAAn7I,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAZ22E,WAAY32E,MAAAjoE,UAAAioE,MAEhB,OADArtE,KAAKgnK,uBAAyBhjB,WACvBhkJ,6EAsCcsjB,QAOrB,OANAgjJ,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCA,SAAS1E,wBAAwBruE,SAClC,SAACojJ,QACAA,OAAOrwE,WAAW1E,wBAAwBruE,UAGvCtjB,qFAuC6B,QAAAquE,MAAAjpE,UAAA1D,OAATsuF,QAAS,IAAAnnF,MAAAwlE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAT0hB,QAAS1hB,OAAAlpE,UAAAkpE,OAOpC,OANAg4F,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCA,SAAS9E,2BAA2BvB,UACrC,SAAC02E,QACAA,OAAOrwE,WAAW9E,2BAA2BvB,WAG1ChwF,2FAiCqBiI,KAM5B,OALAq+J,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCA,SAAS5E,+BAA+BxpF,MACzC,SAACy+J,QACAA,OAAOrwE,WAAW5E,+BAA+BxpF,OAE9CjI,6FAqBsBiI,KAO7B,OANAq+J,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCA,SAAS4wE,gCAAgCh/J,MAC1C,SAACy+J,QACAA,OAAOrwE,WAAW4wE,gCAAgCh/J,OAG/CjI,2DA+BKiI,KAMZ,OALAq+J,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCA,SAAS/E,eAAerpF,MACzB,SAACy+J,QACAA,OAAOrwE,WAAW/E,eAAerpF,OAE9BjI,uEAyB0B,QAAAoxE,MAAAhsE,UAAA1D,OAAbgtF,YAAa,IAAA7lF,MAAAuoE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAbqd,YAAard,OAAAjsE,UAAAisE,OAMjC,OALAi1F,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCA,SAAS7E,oBAAoB9C,cAC9B,SAACg4E,QACAA,OAAOrwE,WAAW7E,oBAAoB9C,eAEnC1uF,uEAgBmB,QAAAq2E,MAAAjxE,UAAA1D,OAANkvJ,KAAM,IAAA/nJ,MAAAwtE,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAANq6E,KAAMr6E,OAAAnxE,UAAAmxE,OAM1B,OALA+vF,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCu6D,KAAK9nJ,QAAQ,SAAA5H,KAAG,OAAIm1F,SAAS6wE,oBAAoBhmK,IAAI,GAAIA,IAAI,OAC9D,SAACwlK,QACA9V,KAAK9nJ,QAAQ,SAAA5H,KAAG,OAAIwlK,OAAOrwE,WAAW6wE,oBAAoBhmK,IAAI,GAAIA,IAAI,QAEnElB,yEAgBoB,QAAAmnK,MAAA/hK,UAAA1D,OAANkvJ,KAAM,IAAA/nJ,MAAAs+J,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAANxW,KAAMwW,OAAAhiK,UAAAgiK,OAM3B,OALAd,4BAAetmK,KAAKgnK,uBAAwB,SAAC3wE,UACzCu6D,KAAK9nJ,QAAQ,SAAA5H,KAAG,OAAIm1F,SAASgxE,qBAAqBnmK,IAAI,GAAIA,IAAI,OAC/D,SAACwlK,QACA9V,KAAK9nJ,QAAQ,SAAA5H,KAAG,OAAIwlK,OAAOrwE,WAAWgxE,qBAAqBnmK,IAAI,GAAIA,IAAI,QAEpElB,iFA6C4B,IAAbsnK,OAAaliK,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAC7BmiK,sBAAwBvnK,KAAKgnK,uBAC7BQ,aAAe/3F,eAAeA,kBAtXtB,SAAhBulD,cAAiBuyC,uBACnB,IAAME,QAAUF,sBAAsBt/J,IAAI,SAAAy/J,MAAI,OAAIA,KAAKlyC,UACvD,OACIvjC,YACI01E,IAAK,SAAAxmJ,EAACymJ,oBACF,IAAMC,kBAAoBD,mBAAmB3nB,aAC7C,OAAO4nB,oBAA4D,IAAxCJ,QAAQxhK,QAAQ4hK,sBAgXI7yC,CAAcuyC,wBAAyBD,QAM9F,OAJAC,sBAAsBz+J,QAAQ,SAAC49J,QAC3BA,OAAOrwE,WAAWyxE,uBAAuBN,gBAGtCxnK,yBC5XF+nK,cACTvlI,SAAU,MACVgH,MAAO,OACP7G,QAAS,EACT1B,UAAS,GAAAtlB,OH6Bc,OG7Bd,qBAGAqsJ,kBACTxlI,SAAU,MACVgH,MAAO,OACP7G,QAAS,GACTslI,SAAU,EACVhnI,UAAS,GAAAtlB,OHqBc,OGrBd,wBAOAusJ,kBAEH,+LCWH,IAAMnlB,cAAYolB,oCAAAC,iBJ7BL,QI+BZpvK,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,WALDu5F,oCAAAC,cJ5BF,WIqCfpvK,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,WAZDu5F,oCAAAC,cJ1BJ,SI0CbpvK,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC9hE,QACX,MAAsB,iBAAXA,QAAwBA,OAK5BA,QAHCtB,MAAOsB,YAvBNu7J,oCAAAC,cJzBJ,SIwDbpvK,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC9hE,QACX,MAAsB,iBAAXA,QAAwBA,OAK5BA,QAHCtB,MAAOsB,YAtCNu7J,oCAAAC,cJxBL,QIsEZpvK,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC9hE,QACX,MAAsB,iBAAXA,QAAwBA,OAK5BA,QAHCtB,MAAOsB,YArDNu7J,oCAAAC,cJvBH,UIoFdpvK,SACAmkB,MACIwxD,UAAW,cACXC,aAAc,WAhEDu5F,oCAAAC,cJtBH,UI2FdpvK,SACAmkB,MACIwxD,UAAW,cACXC,aAAc,WAxEDu5F,oCAAAC,cJrBA,aIiGjBpvK,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,YA/EDw5F,eAoFZC,eAAaF,oCAAAG,kBJ3FL,SI6FbtvK,OAAQ,KAAM,MACdmkB,MACIwxD,WAAY,cAAe,eAC3BC,cAAe,WAAY,UAC3BH,cAAc,EACdC,cAAe,SAACqrF,OACZ,GAAqB,iBAAVA,QAAuBA,MAAO,CAErC,OADU,SAAJ9gK,IAAI,OAAM8gK,OAGpB,OAAOA,OACR,SAACwO,aACA,IAAM5iJ,UAAY8pD,kBAAmBs4F,cACrC,OAAOt4F,eAAe9pD,UAAW4iJ,kBAfvBJ,oCAAAG,eJ1FD,YI8GjBtvK,OAAQ,KAAM,MACdmkB,MACIwxD,WAAY,cAAe,eAC3BC,cAAe,WAAY,UAC3BH,cAAc,EACdC,cAAe,SAAC85F,UACZ,GAAwB,iBAAbA,WAA0BA,SAAU,CAE3C,OADY,SAANC,MAAM,OAAMD,UAGtB,OAAOA,UACR,SAACE,gBACA,IAAM/iJ,UAAY8pD,kBAAmBu4F,kBACrC,OAAOv4F,eAAe9pD,UAAW+iJ,qBAjCvBJ,uTCtHLK,2BACjB,SAAAA,gBAAarwK,KAAMwwB,WAAYiI,oKAAM63I,CAAA5oK,KAAA2oK,iBACjC3oK,KAAKmyB,MAAQpB,KACb/wB,KAAK6oK,WACDhtI,OAAQ/S,WAAW+S,OACnBD,MAAO9S,WAAW8S,MAClB6G,IAAK,KACLsD,KAAM,MAEV/lC,KAAK8oK,UAAY,KACjB9oK,KAAK+oK,WAAa,KAClB/oK,KAAKgpK,WAAa,KAClBhpK,KAAK+iG,QAAU,KACf/iG,KAAKkkG,UAAY,KACjBlkG,KAAKipK,eAAiB3wK,KACtB0H,KAAKkpK,WAAa,wUAIlB,MAAM,IAAIn5J,MAAM,8FAIhB,MAAM,IAAIA,MAAM,oEAGd3I,OAIF,OAHIA,QACApH,KAAKipK,eAAiB7hK,OAEnBpH,KAAKipK,qDAGR7hK,OAIJ,OAHIA,QACApH,KAAK+iG,QAAU37F,OAEZpH,KAAK+iG,kDAGN37F,OAIN,OAHIA,QACApH,KAAKkkG,UAAY98F,OAEdpH,KAAKkkG,sDAGL98F,OAIP,OAHIA,QACApH,KAAKgpK,WAAa5hK,OAEfpH,KAAKgpK,uDAGL5hK,OAIP,OAHIA,QACApH,KAAK+oK,WAAa3hK,OAEfpH,KAAK+oK,qDAGN3hK,OAIN,OAHIA,QACApH,KAAK8oK,UAAY1hK,OAEdpH,KAAK8oK,oDAGN1hK,OAIN,OAHIA,OACA3O,OAAOoU,OAAO7M,KAAK6oK,UAAWzhK,OAE3BpH,KAAK6oK,sDAGLzhK,OAIP,OAHIA,QACApH,KAAKkpK,WAAa9hK,OAEfpH,KAAKkpK,+CAIZ,MAAM,IAAIn5J,MAAM,uzCCtDTo5J,8vBA3BcR,4UAErB,OACI/sI,MAAO57B,KAAK+nG,WAAWnsE,MACvBC,OAAQ77B,KAAK+nG,WAAWlsE,kEAIdkyC,MAOd,OANA/tE,KAAK+nG,UAAWtlE,IAAKsrC,KAAKvqE,EAAGuiC,KAAMgoC,KAAK7vC,IACxCl+B,KAAKopK,eACDxtI,MAAOmyC,KAAKnyC,MACZC,OAAQkyC,KAAKlyC,QAEjB77B,KAAKqpK,SAASt7F,KAAKs7F,UACZrpK,yCAIP,IAAKA,KAAKspK,UACN,MAAM,IAAIv5J,MAAJ,yBAAA4L,OAAmC3b,KAAKupK,gBAGlD,OADAvpK,KAAKspK,UAAUz1I,MAAMwE,SAASgB,eAAer5B,KAAKqpK,WAC3CrpK,2BCzBFkoH,6BACTtrB,YAAa,OACblC,aACIhI,WAAY,cAEhB82E,WAAY,SACZC,WACIC,UAAW,GACXC,MAAO,EACPzJ,UACI12H,MAAO,SAEXy2H,YACIz2H,MAAO,WAGfogI,QACIpnI,SAAU,QACVkS,OACIqqD,MAAM,EACNp8D,QAAS,EACT08D,OAAQ,EACR01D,OAAQ,EACRl5H,OAAQ,GACRD,MAAO,IAEXimE,OACI9C,MAAM,EACNp8D,QAAS,EACT08D,OAAQ,EACR01D,OAAQ,EACRl5H,OAAQ,GACRD,MAAO,IAEXnB,MACIskE,MAAM,EACNp8D,QAAS,EACT08D,OAAQ,EACR01D,OAAQ,EACRl5H,OAAQ,GACRD,MAAO,KAGfw2H,aAAa,EACbj0H,SAAU,IACV0rI,UAAW,IACXt4B,OACIx2H,MACI+uJ,cAAe,GAEnBhwJ,SACImuJ,SAAU,EACV8B,cAAe,SACfD,cAAe,IAGvB/U,QACIj7H,MAAO,QACP4a,MAAO,UACP9Y,MAAO,EACPouI,UAAU,EACVv3G,QAAS,GAEbm5F,aACI7rD,UAAU,GAEdkqE,kBChEEC,cAAgB,IAChBC,eAAiB,IACjBC,mBAAkB,GAAAzuJ,OAAMusG,4BAAetrB,YAArB,+BAClBytE,YAAW,GAAA1uJ,OAAMusG,4BAAetrB,YAArB,4TCLI0tE,2BACjB,SAAAA,gBAAa19J,sKAAQ29J,CAAAvqK,KAAAsqK,iBACjBtqK,KAAKwqK,MAAQ59J,OAAO69J,MAAQ,KAC5BzqK,KAAK0qK,KAAO99J,OAAO+9J,KAAO,KAC1B3qK,KAAK4qK,aAAsC,IAAvBh+J,OAAOi+J,YAAoB,EAAIj+J,OAAOi+J,aAAe,EACzE7qK,KAAK8qK,WAAal+J,OAAOm+J,YAAa,EACtC/qK,KAAKgrK,OAASp+J,OAAOq+J,UACrBjrK,KAAKkrK,iBAAmB,EACxBlrK,KAAKmrK,gBAAkB,6SAGrBV,OAIF,OAHIA,QACAzqK,KAAKwqK,MAAQC,OAEVzqK,KAAKwqK,kDAGLO,YAIP,OAHIA,aACA/qK,KAAK8qK,WAAaC,YAEf/qK,KAAK8qK,2CAGXH,MAID,OAHIA,OACA3qK,KAAK0qK,KAAOC,MAET3qK,KAAK0qK,qDAGHG,cAIT,OAHIA,eACA7qK,KAAK4qK,aAAeC,cAEjB7qK,KAAK4qK,iDAGTK,QAIH,OAHIA,SACAjrK,KAAKgrK,OAASC,QAEXjrK,KAAKgrK,+DAGCI,kBAIb,OAHIA,mBACAprK,KAAKkrK,iBAAmBE,kBAErBprK,KAAKkrK,uEAGAG,iBAIZ,OAHIA,kBACArrK,KAAKmrK,gBAAkBE,iBAEpBrrK,KAAKmrK,uCCvCb,IAAMG,UAAa,WACtB,IAAIC,KAAO,EACX,OAAO,oBAAA5vJ,OAAS0uJ,YAAT,KAAA1uJ,SAA0B4vJ,OAFX,GAKnB,SAASC,YAAa56I,MACzB,IAAI66I,eAAiB,EACrB,GAA0B,MAAtB76I,KAAK86I,aACLD,eAmBD,SAASE,gCAAiC/6I,MAC7C,IAAI66I,eAAiBjjK,OAAOojK,iBAO5B,OANAh7I,KAAKiH,WAAW/uB,QAAQ,SAACwZ,OACrB,IAAMwI,EAAI0gJ,YAAYlpJ,OAClBwI,EAAI2gJ,iBACJA,eAAiB3gJ,KAGlB2gJ,eA3BcE,CAAgC/6I,WAC9C,GAA0B,MAAtBA,KAAK86I,aACZ96I,KAAKiH,WAAW/uB,QAAQ,SAACwZ,OACrBmpJ,gBAAkBD,YAAYlpJ,cAE/B,GAAIsO,KAAK/T,QAAQ4tJ,QAAU75I,KAAK/T,QAAQ4tJ,OAAOlX,gBAAiB,CACnE,IAAMsY,gBAAkBj7I,KAAKm3E,WAAWlsE,OAClCiwI,WAAal7I,KAAK/T,QAAQ4tJ,OAAOlX,kBAAkB13H,QAEzD4vI,eAAiBI,gBAAkBC,YACd,IACjBL,eAAiB,QAGrBA,eAAiB,EAErB,OAAOA,eAcJ,SAASM,YAAan7I,MACzB,IAAIo7I,cAAgB,EACpB,GAA0B,MAAtBp7I,KAAK86I,aACLM,cAkBD,SAASC,6BAA8Br7I,MAC1C,IAAIo7I,cAAgBxjK,OAAOojK,iBAO3B,OANAh7I,KAAKiH,WAAW/uB,QAAQ,SAACwZ,OACrB,IAAM4kC,EAAI6kH,YAAYzpJ,OAClB4kC,EAAI8kH,gBACJA,cAAgB9kH,KAGjB8kH,cA1BaC,CAA6Br7I,WAC1C,GAA0B,MAAtBA,KAAK86I,aACZ96I,KAAKiH,WAAW/uB,QAAQ,SAACwZ,OACrB0pJ,eAAiBD,YAAYzpJ,cAE9B,GAAIsO,KAAK/T,QAAQ4tJ,QAAU75I,KAAK/T,QAAQ4tJ,OAAOlX,gBAAiB,CACnE,IAAM2Y,eAAiBt7I,KAAKm3E,WAAWnsE,MACjCuwI,UAAYv7I,KAAK/T,QAAQ4tJ,OAAOlX,kBAAkB33H,OACxDowI,cAAgBE,eAAiBC,WACb,IAChBH,cAAgB,QAGpBA,cAAgB,EAEpB,OAAOA,cA0DJ,SAASI,2BAA4BvwI,OAAQD,MAAO4G,UACvD,IAAMklI,KAAO,IAAIyB,gBAAe,GAAKttI,cAAQD,cAG7C,OAFA8rI,KAAKpvK,KAAK,eACVovK,KAAKllI,SAASA,UACPklI,KAGJ,SAAS2E,eAAgBC,gBAAiBhD,WAAyD,IAGlGiD,6BAHoDC,YAA8CpnK,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,IAAAA,UAAA,GAAzBqnK,gBAAyBrnK,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,IAAAA,UAAA,GAClGulK,IAAM,GACN+B,oBAAsB,EAEtBC,WAAa,EACbC,UAAY,EAEhB,IAAKtD,UACD,OAAS5kI,MAAO4nI,gBAAiBjpH,OAAQipH,iBARyD,IAAAO,sBAW3CvD,UAAU/V,kBAArDuZ,gBAXsFD,sBAW9FhxI,OAAgCkxI,eAX8DF,sBAWrEjxI,MAC3B4G,SAAW8mI,UAAU9mI,WACV,QAAbA,UAAmC,WAAbA,UACtBmoI,IAAM,IACN+B,oBAAsBI,gBAAkBR,gBAAgBlB,kBACxDuB,WAAaL,gBAAgBlB,kBAAoB0B,gBACjDF,UAAYN,gBAAgBjB,mBAE5BV,IAAM,IACN+B,oBAAsBK,eAAiBT,gBAAgBjB,iBACvDuB,UAAYN,gBAAgBjB,iBAAmB0B,eAC/CJ,WAAaL,gBAAgBlB,mBAEjCmB,6BAA+B,EAAIG,oBAGnCJ,gBAAgB3B,IAAIA,KACpB,IAAMqC,iBACFvC,KAAMnB,UAAUhxK,OAChBqyK,IAAK,KACLE,YAAa6B,oBACb3B,WAAW0B,iBAA0BD,YACrCvB,UAEEgC,UAAY,IAAI3C,gBAAgB0C,iBACtCC,UAAU7B,gBAAgB0B,iBAC1BG,UAAU5B,eAAe0B,gBAEzB,IAOMG,WAAa,IAAI5C,iBANnBG,KAAM,KACNE,IAAK,KACLE,YAAa0B,6BACbxB,WAAW0B,kBAA2BD,YACtCvB,WAYJ,OATAiC,WAAW9B,gBAAgBuB,YAC3BO,WAAW7B,eAAeuB,WACtBJ,YACAF,gBAAgBrB,OAAOgC,YACH,QAAbzqI,UAAmC,SAAbA,SAC7B8pI,gBAAgBrB,OAAOgC,UAAWC,aAElCZ,gBAAgBrB,OAAOiC,WAAYD,aAE9BvoI,MAAOuoI,UAAW5pH,OAAQ6pH,0vBChDxBrH,kCA/IX,SAAAA,KAAa96J,yJAAMoiK,CAAAntK,KAAA6lK,MACf7lK,KAAKohG,OAASr2F,KACd/K,KAAK6jB,QAAU,KACf7jB,KAAKqiB,aACLriB,KAAKotK,WAAa,KAClBptK,KAAK6oK,WACDpmI,IAAK,KACLsD,KAAM,KACNlK,OAAQ,KACRD,MAAO,MAGX57B,KAAKumF,IAAMvmF,KAAKohG,OAAOqpE,iBAAkB9B,iBAAmB3oK,KAAKohG,OAAOqpE,OAAOpB,WACnErpK,KAAKohG,OAAOqpE,OAAOpB,WACnBiC,yRAGHr2J,SAAS,IAAAo4J,gBAAAn4J,MAAAlV,MAClBqtK,gBAAArtK,KAAKqiB,WAAUnc,KAAfqB,MAAA8lK,gBAAAC,uBAAuBr4J,UACvBA,QAAQnM,QAAQ,SAAC7O,GAAQA,EAAEssB,OAAOrR,iDAIlC,OAAwB,OAAjBlV,KAAK6jB,gDAIZ,OAAQ7jB,KAAKqiB,UAAU3gB,uDAIvB,OAAO1B,KAAKohG,OAAOupE,wDAInB,QAAS3qK,KAAKohG,OAAO2pE,sDAGflzI,WAIN,OAHIA,YACA73B,KAAKqiB,UAAYwV,WAEd73B,KAAKqiB,gDAGRkE,SAIJ,OAHIA,UACAvmB,KAAK6jB,QAAU0C,SAEZvmB,KAAK6jB,oDAGL0pJ,YAIP,OAHIA,aACAvtK,KAAKotK,WAAaG,YAEfvtK,KAAKotK,yCAGZv0I,KAIA,OAHIA,MACA74B,KAAKumF,IAAM1tD,KAER74B,KAAKumF,wCAGT1pE,QAIH,OAHIA,SACA7c,KAAKohG,OAASvkF,QAEX7c,KAAKohG,iDAGNosE,OASN,OARIA,QACAxtK,KAAK6oK,WACDpmI,IAAK+qI,MAAM/qI,IACXsD,KAAMynI,MAAMznI,KACZlK,OAAQ2xI,MAAM3xI,OACdD,MAAO4xI,MAAM5xI,QAGd57B,KAAK6oK,wDAMJ4E,YAAY,IAAAp4J,OAAArV,KAChBA,KAAKumF,MAAQknF,WAAWlnF,KACxBvmF,KAAKohG,OAAOupE,IAAI8C,WAAW9C,KAC3B3qK,KAAKohG,OAAOypE,YAAY4C,WAAW5C,cAEnC7qK,KAAKqiB,UAAUvZ,QAAQ,SAAC8nB,MACpB,GAAIA,KAAK21D,MAAQknF,WAAWlnF,IAGxB,OAFA31D,KAAK/T,MAAM8tJ,IAAI8C,WAAW9C,UAC1B/5I,KAAK/T,MAAMguJ,YAAY4C,WAAW5C,aAGtCx1J,OAAKq4J,WAAW98I,KAAM68I,4DAMtB78I,KAAM68I,YAAY,IAAA91J,OAAA3X,KAC1B4wB,KAAKiH,WAAW/uB,QAAQ,SAAC6kK,WACjBA,UAAU90I,OAAS40I,WAAWlnF,KAC9BonF,UAAU9wJ,QAAQ8tJ,IAAI8C,WAAW9C,KACjCgD,UAAU9wJ,QAAQguJ,YAAY4C,WAAW5C,cAEzClzJ,OAAK+1J,WAAWC,UAAWF,qDAS/BG,QAAQ,IAAAp4I,OAAAx1B,KACZA,KAAKqiB,UAAUvZ,QAAQ,SAAC8nB,MACpB,GAAIA,KAAKiI,OAAS+0I,OAAQ,CACtB,IAAM3rK,MAAQuzB,OAAKnT,UAAUpc,QAAQ2qB,MACrC4E,OAAK4rE,OAAO6pE,QAAQ3jK,OAAOrF,MAAO,GAEtCuzB,OAAKq4I,iBAAiBj9I,KAAMg9I,oEAKlBh9I,KAAMg9I,QAAQ,IAAA3c,OAAAjxJ,KAC5B4wB,KAAKiH,WAAW/uB,QAAQ,SAAC6kK,WACrB,GAAIA,UAAU90I,OAAS+0I,OAAQ,CAC3B,IAAM3rK,MAAQ2uB,KAAKiH,WAAW5xB,QAAQ0nK,WACtC/8I,KAAK/T,QAAQouJ,QAAQ3jK,OAAOrF,MAAO,QAEnCgvJ,OAAK4c,iBAAiBF,UAAWC,0TCtI5BE,oCACjB,SAAAA,YAAaC,aAAcnhK,mKAAQohK,CAAAhuK,KAAA8tK,aAC/B9tK,KAAKiuK,cAAgBF,aACrB/tK,KAAKixF,QAAUrkF,OACf5M,KAAKkuK,MAAQluK,KAAKmuK,WAAWnuK,KAAKixF,QAAS,MAC3CjxF,KAAKouK,wTAGGxhK,OAAQ2Z,QAChB,IAAMqK,KAAO,IAAIi1I,uBAAKj5J,QAClB2Z,QACAqK,KAAK28I,UAAUhnJ,OAAOmlJ,cACtBnlJ,OAAO8nJ,aAAaz9I,QAEpB5wB,KAAKkuK,MAAQt9I,KANO,IAAA3Q,2BAAA,EAAA+lJ,mBAAA,EAAAC,oBAAA34J,EAAA,IAQxB,QAAA44J,MAAAC,UAAmBv5J,OAAOq+J,QAA1BnyK,OAAA2U,cAAAwS,2BAAAimJ,MAAAC,UAAAx4J,QAAAC,MAAAqS,2BAAA,EAAmC,KAAxBquJ,KAAwBpI,MAAAltK,MAC/BgH,KAAKmuK,WAAWG,KAAM19I,OATF,MAAAy1I,KAAAL,mBAAA,EAAAC,eAAAI,IAAA,YAAApmJ,2BAAA,MAAAkmJ,UAAAt4J,QAAAs4J,UAAAt4J,SAAA,WAAAm4J,kBAAA,MAAAC,gBAYxB,OAAOjmK,KAAKkuK,wDAIZluK,KAAKkuK,MAAMnmE,UACPtlE,IAAK,EACLsD,KAAM,EACNnK,MAAO57B,KAAKiuK,cAAcryI,MAC1BC,OAAQ77B,KAAKiuK,cAAcpyI,SF8OhC,SAAS0yI,oBAAqB39I,MACjC,IAAM49I,YAAc59I,KAAKiH,WACA5vB,IAAI,SAAAqa,OAAK,OAAIA,MAAMzF,QAAQguJ,gBAC3B/3J,OAAO,SAAC27J,MAAOvtK,KAAR,OAAgButK,MAAQvtK,KAAK,GAE7D0vB,KAAKiH,WAAW/uB,QAAQ,SAACwZ,MAAOvqB,EAAG8/B,UAC/B,IAAM62I,YAAc72I,SAAS9/B,EAAI,GAC3B42K,MAAQrsJ,MAAMzF,QAAQguJ,cAAgB2D,YAElB,MAAtBlsJ,MAAMirJ,YACNjrJ,MAAMylF,UACFtlE,IAAK1qC,EAAI22K,YAAY3mE,WAAWtlE,IAAMisI,YAAY3mE,WAAWlsE,OAAS,EACtEkK,KAAMzjB,MAAMiE,SAASwhF,WAAWhiE,KAChClK,OAAQvZ,MAAMiE,SAASwhF,WAAWlsE,OAAS8yI,MAC3C/yI,MAAOtZ,MAAMiE,SAASwhF,WAAWnsE,QAGrCtZ,MAAMylF,UACFtlE,IAAKngB,MAAMiE,SAASwhF,WAAWtlE,IAC/BsD,KAAMhuC,EAAI22K,YAAY3mE,WAAWhiE,KAAO2oI,YAAY3mE,WAAWnsE,MAAQ,EACvEC,OAAQvZ,MAAMiE,SAASwhF,WAAWlsE,OAClCD,MAAOtZ,MAAMiE,SAASwhF,WAAWnsE,MAAQ+yI,QAGjDJ,oBAAoBjsJ,SEpQpBisJ,CAAoBvuK,KAAKkuK,+DAGZt9I,MAAM,IAAA1b,MAAAlV,KACnB4wB,KAAKiH,WAAW/uB,QAAQ,SAACwZ,OACrBwrJ,YAAYc,qBAAqBtsJ,OACjCpN,MAAK25J,gBAAgBvsJ,uDAsBzB,OF0JD,SAASwsJ,mBAAoBl+I,MAQhC,IAPA,IAAIm6I,UAEAgE,WACAC,cAFAC,uBAAyB,EAIvBC,eAAiBt+I,KAAKiH,WAAWn2B,OAE9BO,MAAQ,EAAGA,MAAQitK,eAAgBjtK,QAAS,CACjD,IACIktK,cADAhwJ,QAAE,EAEAmD,MAAQsO,KAAKiH,WAAW51B,OAEJ,MAAtBqgB,MAAMirJ,aACNpuJ,GAAKqsJ,YACLuD,WAAa,SACbC,cAAgB,UAEhB7vJ,GAAK4sJ,YACLgD,WAAa,QACbC,cAAgB,UAIhB1sJ,MAAMkqJ,cAENzB,UAAYzoJ,OAKhB2sJ,wBAA2BE,cAAgBhwJ,GAAGmD,OAC9CA,MAAMylF,WAAWgnE,aAAeI,cAEhC7sJ,MAAMylF,WAAWinE,eAAiB1sJ,MAAMiE,SAASwhF,WAAWinE,eAE5DF,mBAAmBxsJ,QAGnByoJ,YACAA,UAAUhjE,WAAWgnE,aAAeE,uBACpClE,UAAUhjE,WAAWinE,eAAiBjE,UAAUxkJ,SAASwhF,WAAWinE,eACpEF,mBAAmB/D,YEtMnB+D,CAAmB9uK,KAAKkuK,OF0MzB,SAASkB,gBAAiBx+I,MAC7BA,KAAKiH,WAAW/uB,QAAQ,SAACwZ,MAAOvqB,EAAG8/B,UAC/B,IAAMkwE,SAnLP,SAASsnE,kBAAmBC,GAAIv3K,EAAGqZ,IAAKihG,UAC3C,GAAIt6G,EAAG,CAEH,IAFGw3K,sBAEiBn+J,IAAIrZ,EAAI,GACmDgwG,WAAlEynE,MAHVD,sBAGK9sI,IAAiBgtI,OAHtBF,sBAGgBxpI,KAAqB2pI,QAHrCH,sBAG6B1zI,OAAwB8zI,OAHrDJ,sBAG8C3zI,MACjD,OACIA,MAAO0zI,GAAG1zI,MACVC,OAAQyzI,GAAGzzI,OAEX4G,IAA8B,MAAzB4vE,SAASk7D,YAChBiC,MAAOE,QAAUF,MAEfzpI,KAA+B,MAAzBssE,SAASk7D,YACjBkC,OAAQA,OAAQE,QAb+B,IAAAC,sBAiBlBv9D,SAAS9rF,SAASwhF,WAAxCynE,KAjBwCI,sBAiB7CntI,IAAiBgtI,MAjB4BG,sBAiBlC7pI,KACnB,OACInK,MAAO0zI,GAAG1zI,MACVC,OAAQyzI,GAAGzzI,OACX4G,IAAK+sI,KACLzpI,KAAM0pI,OA6JWJ,CAAkB/sJ,MAAMylF,WAAYhwG,EAAG8/B,SAAUvV,OAClEA,MAAMylF,SAASA,UACfqnE,gBAAgB9sJ,SE7MhB8sJ,CAAgBpvK,KAAKkuK,OACdluK,mDAKP,OADAA,KAAK6uK,gBAAgB7uK,KAAKkuK,OACnBluK,yCAIP,OAAOA,KAAKkuK,0EA3Bat9I,MACzB,IAAM0+I,GAAK1+I,KAAKm3E,WACV0iE,KAAO75I,KAAK/T,QAAQ4tJ,OAC1B,GAAIA,MAAQA,KAAKoF,iBAAkB,CAC/B,IAAM9hG,MACF7vC,EAAGoxI,GAAGvpI,KACNviC,EAAG8rK,GAAG7sI,IACN7G,MAAO0zI,GAAG1zI,MACVC,OAAQyzI,GAAGzzI,OACXwtI,SAAUz4I,KAAKiI,MAEnB4xI,KAAKoF,iBAAiB9hG,mTCxD3B,IAAM+hG,MAAb,oBAAAA,4JAAAh+I,CAAA9xB,KAAA8vK,OAAA,2NAAAC,CAAAD,MAAA,OAAAx2K,IAAA,eAAAN,MAAA,SAAAg3K,aACyB73F,SACjB,OAAOA,mBAAmByoD,WAFlCtnI,IAAA,QAAAN,MAAA,SAAAi3K,MAKkB93F,SACV,OAAOA,QAAQt/C,MANvBv/B,IAAA,aAAAN,MAAA,SAAAk3K,WASuBr3I,IACf,OAAOR,SAASgB,eAAeR,OAVvCv/B,IAAA,gBAAAN,MAAA,SAAAm3K,cAa0BplK,MAClB,OAAOA,KAAKgJ,OAAO,SAAAq8J,YAAU,OAAyB,MAArBA,WAAW7pJ,SAAgB,MAdpEjtB,IAAA,YAAAN,MAAA,SAAAq3K,UAoBsBC,OACyB,OAAnCj4I,SAASgB,eAAei3I,QAAmBj4I,SAASgB,eAAei3I,OAAO5oI,aArBtFooI,MAAA,qSCCqBS,gCACjB,SAAAA,UAAa3/I,+JAAM4/I,CAAAxwK,KAAAuwK,WACfvwK,KAAKk0B,MAAQtD,KACb5wB,KAAKkpK,WAAat4I,KAAK/T,QAAQ4tJ,iBAAkB9B,gBAC7B/3I,KAAK/T,QAAQ4tJ,OAAOxpI,YAAcmpI,2SAItD,OAAOpqK,KAAKk0B,gDAIZ,OAAOl0B,KAAKk0B,MAAMrX,QAAQ4tJ,iBAAkB9B,8DAI5C,OAAO3oK,KAAKkpK,YAAckB,mUCjB3B,IAAMqG,uBAAb,WACI,SAAAA,WAAa1lK,gKAAM2lK,CAAA1wK,KAAAywK,YACfzwK,KAAKuvH,MAAQxkH,KAFrB,6OAAA4lK,CAAAF,aAAAn3K,IAAA,wBAAAN,MAAA,SAAA43K,wBAMQ,IAAMC,cAEN,OCRqB,SAAhBC,cAAiBlgJ,KAAMigJ,YAChC,IAAME,UAAY,IAAIR,qBAAU3/I,MAChCigJ,WAAW3qK,KAAK6qK,WAChBngJ,KAAKiH,WAAW/uB,QAAQ,SAACwZ,OACrBwuJ,cAAcxuJ,MAAOuuJ,cDGrBC,CAAc9wK,KAAKuvH,MAAOshD,YACnBA,eARfJ,WAAA,mtDEAO,IAAMO,gBAAb,SAAAC,aAAA,SAAAD,kBAAA,8JAAAE,CAAAlxK,KAAAgxK,iBAAAG,oCAAAnxK,KAAAoxK,yBAAAJ,iBAAAzpK,MAAAvH,KAAAoF,YAAA,8WAAAisK,CAAAL,gBAAqCP,wPAArCa,CAAAN,kBAAA13K,IAAA,iBAAAN,MAAA,SAAAu4K,iBAEQ,OAAAC,cAAAJ,yBAAAJ,gBAAAn3K,WAAA,wBAAAmG,MAAA9H,KAAA8H,UAFRgxK,gBAAA,+RCFO,IAAMS,SAAb,oBAAAA,kKAAAC,CAAA1xK,KAAAyxK,UAAA,oOAAAE,CAAAF,WAAAn4K,IAAA,eAAAN,MAAA,SAAA44K,aAEkBhhJ,KAAMqwC,MAChBrwC,KAAKihJ,cAAgB5wG,SAH7BwwG,SAAA,83ECIO,IAAMK,2BAAb,SAAAC,WACI,SAAAD,aAAa/mK,MAAM,IAAAmK,MAAA,kKAAA88J,CAAAhyK,KAAA8xK,eACf58J,MAAA+8J,wCAAAjyK,KAAAkyK,6BAAAJ,cAAA55K,KAAA8H,QACKuvH,MAAQxkH,KACbmK,MAAKi9J,aAAe,IAAInB,gBAAgB97J,MAAKq6G,OAAOgiD,iBAHrCr8J,MADvB,sXAAAk9J,CAAAN,aAAkCL,sPAAlCY,CAAAP,eAAAx4K,IAAA,aAAAN,MAAA,SAAAs5K,WAOgBz+I,MAAOoN,WAAW,IAAA5rB,OAAArV,KACpBuyK,QAAU1+I,MAChB2+I,kBAAAN,6BAAAJ,aAAAj4K,WAAA,eAAAmG,MAAA9H,KAAA8H,KAAmBuyK,QAASvyK,KAAKuvH,OACjCvvH,KAAKyyK,UAAYzyK,KAAK0yK,yBAAyBzxI,WAC/CjhC,KAAKmyK,aAAarpK,QAAQ,SAAC8nB,MACvB,GAAIA,KAAK+hJ,UAAW,CAChB,IAAMlI,KAAO75I,KAAKA,OAClBvb,OAAKo9J,UAAU5uI,YAAYxuB,OAAKu9J,qBAALC,8BAA+BpI,KAAK1iE,YAC3DlvE,GAAI4xI,KAAK5xI,KACToI,UAAWrQ,KAAKqQ,mBAG5BsxI,QAAQ1uI,YAAY7jC,KAAKyyK,cAnBjCn5K,IAAA,uBAAAN,MAAA,SAAA45K,qBAsB0BhmK,QAAQ,IAClB61B,IAA4C71B,OAA5C61B,IAAKsD,KAAuCn5B,OAAvCm5B,KAAMlK,OAAiCjvB,OAAjCivB,OAAQD,MAAyBhvB,OAAzBgvB,MAAOqF,UAAkBr0B,OAAlBq0B,UAAWpI,GAAOjsB,OAAPisB,GAEvCi6I,IADcz6I,SAASgB,eAAeR,KACjBR,SAASmJ,cAAc,OAQlD,OAPAsxI,IAAIh5I,MAAM0I,SAAW,WACrBswI,IAAIh5I,MAAMiM,KAAV,GAAApqB,OAAoBoqB,KAApB,MACA+sI,IAAIh5I,MAAM2I,IAAV,GAAA9mB,OAAmB8mB,IAAnB,MACAqwI,IAAIh5I,MAAM+B,OAAV,GAAAlgB,OAAsBkgB,OAAtB,MACAi3I,IAAIh5I,MAAM8B,MAAV,GAAAjgB,OAAqBigB,MAArB,MACAk3I,IAAIj6I,GAAKA,GACTi6I,IAAI7xI,UAAYA,UACT6xI,OAjCfx5K,IAAA,2BAAAN,MAAA,SAAA05K,yBAoC8BzxI,WACtB,IAAMnI,UAAYg3I,MAAMK,cAAcnwK,KAAKmyK,cACrC1H,KAAO3xI,UAAUlI,OACjB6hJ,UAAYzyK,KAAK4yK,qBAALC,8BAA+BpI,KAAK1iE,YAClDlvE,GAAI4xI,KAAK5xI,KACToI,UAAWnI,UAAUmI,eAGzB,OAFAwxI,UAAUxxI,UAAYA,UACtBwxI,UAAU34I,MAAM0I,SAAW,WACpBiwI,aA5Cfn5K,IAAA,cAAAN,MAAA,SAAA+5K,cAgDQ,OAAO/yK,KAAKmyK,iBAhDpBL,aAAA,GCGakB,SAAW,SAAXA,SAAYv2I,QAASw2I,QAAV,OACAx2I,QAAQy2I,WAAWH,cAAc3nJ,KAAK,SAAAutC,OAAK,OAAIA,MAAM/nC,OAAOiI,OAASo6I,UAEhFE,kBAAa,SAAbA,WAAc12I,SACvBA,QAAQy2I,SAAS,IAAIpB,2BAAar1I,QAAQ1xB,SAC1C0xB,QAAQy2I,WAAWZ,WAAW71I,QAAQ5I,QAAS4I,QAAQwE,iTCTpD,IAAMmyI,+BAAb,WACI,SAAAA,eAAaroK,KAAMmoK,SAAUp6I,yKAAWu6I,CAAArzK,KAAAozK,gBACpCpzK,KAAKuvH,MAAQxkH,KAAKk2D,KAClBjhE,KAAKszK,cAAgBvoK,KAAKwoK,aAC1BvzK,KAAKwzK,iBAAmBzoK,KAAK0oK,gBAC7BzzK,KAAK0zK,UAAYR,SACjBlzK,KAAKuhG,OAASuuE,MAAME,aAAal3I,WAAaA,UAAYg3I,MAAMI,WAAWp3I,WANnF,yPAAA66I,CAAAP,iBAAA95K,IAAA,OAAAN,MAAA,SAAAqhE,OAaQ,ODDkB,SAAbu5G,WAAcn3I,SACvB,OAAQA,QAAQy2I,YAChB,IAAK,OACDC,kBAAW12I,SACX,MACJ,QACI02I,kBAAW12I,UCRXm3I,CAAW5zK,MD4BY,SAAlB6zK,gBAAmBp3I,QAASq3I,eACrCA,cAAcj8I,WAAW/uB,QAAQ,SAACwgK,WAC9B,IAAMmB,KAAOnB,UAAUzsJ,QAAQ4tJ,OAC/B,GAAIA,gBAAgB9B,iBAAmB8B,KAAKsJ,YAAa,CACrD,IAAIC,iBACEr7G,MAAQq6G,SAASv2I,QAAS6sI,UAAUzwI,MAAMjI,OAC1CA,KAAO+nC,MAAMovC,WACbksE,QAAUjB,SAASv2I,QAASA,QAAQ82I,eAAe36K,IAAI6xK,KAAKsJ,aAAa1K,YAC1Dz4I,OACAm3E,WACrB,OAAQ0iE,KAAKrP,aACb,IAAK,OACD4Y,eACIvxI,IAAK7R,KAAK6R,IACVsD,KAAMkuI,QAAQluI,KACdlK,OAAQjL,KAAKiL,OACbD,MAAO/3B,KAAKsoB,IAAIyE,KAAKgL,MAAQ/3B,KAAKsoB,IAAI8nJ,QAAQluI,KAAOnV,KAAKmV,QAE9D,MAEJ,IAAK,QACDiuI,eACIvxI,IAAK7R,KAAK6R,IACVsD,KAAMnV,KAAKmV,KACXlK,OAAQjL,KAAKiL,OACbD,MAAO/3B,KAAKsoB,IAAIyE,KAAKgL,MAAQ/3B,KAAKsoB,IAAIyE,KAAKmV,KAAOnV,KAAKgL,OAASq4I,QAAQluI,KAAOkuI,QAAQr4I,UAE3F,MAEJ,IAAK,MACDo4I,eACIvxI,IAAKwxI,QAAQxxI,IACbsD,KAAMnV,KAAKmV,KACXlK,OAAQh4B,KAAKsoB,IAAIyE,KAAKiL,OAASh4B,KAAKsoB,IAAI8nJ,QAAQxxI,IAAM7R,KAAK6R,MAC3D7G,MAAOhL,KAAKgL,OAEhB,MAEJ,IAAK,SACDo4I,eACIvxI,IAAK7R,KAAK6R,IACVsD,KAAMnV,KAAKmV,KACXlK,OAAQh4B,KAAKsoB,IAAIyE,KAAK6R,IAAMwxI,QAAQxxI,IAAMwxI,QAAQp4I,QAClDD,MAAOhL,KAAKgL,OAEhB,MAEJ,IAAK,WACDo4I,eACIvxI,IAAK7R,KAAK6R,IACVsD,KAAMkuI,QAAQluI,KACdlK,OAAQjL,KAAKiL,OACbD,MAAOq4I,QAAQr4I,OAEnB,MAEJ,IAAK,WACDo4I,eACIvxI,IAAKwxI,QAAQxxI,IACbsD,KAAMnV,KAAKmV,KACXlK,OAAQo4I,QAAQxxI,IAChB7G,MAAOhL,KAAKgL,OAOpBnjC,OAAOoU,OAAOmnK,eAAiBn7I,GAAI8/B,MAAM9/B,KAAMoI,UAAWwpI,KAAKxpI,cAC/DxE,QAAQy2I,WAAWN,qBAAqBoB,eACxCv3I,QAAQ82I,eAAe36K,IAAI6xK,KAAKnyK,QAAQu3K,kBACpC3xI,EAAG81I,cAAcjuI,KACjBviC,EAAGwwK,cAAcvxI,IACjB5G,OAAQm4I,cAAcn4I,OACtBD,MAAOo4I,cAAcp4I,QAI7Bi4I,gBAAgBp3I,QAAS6sI,aCzGzBuK,CAAgB7zK,KAAMA,KAAKuvH,ODWN,SAAhB2kD,cAAiBJ,eAC1BA,cAAcj8I,WAAW/uB,QAAQ,SAAC8nB,MAC9B,IAAM65I,KAAO75I,KAAK/T,QAAQ4tJ,OACtBA,gBAAgB9B,iBAChB8B,KAAKpwG,OAET65G,cAActjJ,QChBdsjJ,CAAcl0K,KAAKuvH,OACZvvH,QAbf1G,IAAA,OAAAN,MAAA,SAAA+R,KAgBUA,OAIF,OAHIA,QACA/K,KAAKuvH,MAAQxkH,OAEV/K,KAAKuvH,SApBpBj2H,IAAA,eAAAN,MAAA,SAAAu6K,aAuBkBnsK,OAIV,OAHIA,QACApH,KAAKszK,cAAgBlsK,OAElBpH,KAAKszK,iBA3BpBh6K,IAAA,YAAAN,MAAA,SAAAioC,UA8Be75B,OAIP,OAHIA,QACApH,KAAKwzK,iBAAmBpsK,OAErBpH,KAAKwzK,oBAlCpBl6K,IAAA,WAAAN,MAAA,SAAAk6K,SAqCc9rK,OAIN,OAHIA,QACApH,KAAK0zK,UAAYtsK,OAEdpH,KAAK0zK,aAzCpBp6K,IAAA,QAAAN,MAAA,SAAA66B,MA4CWzsB,OAIH,OAHIA,QACApH,KAAKuhG,OAASn6F,OAEXpH,KAAKuhG,WAhDpB6xE,eAAA,6SCAqBe,gDACjB,SAAAA,kBAAaZ,aAAc7pI,SAAUi+D,YAAaC,6KAAYwsE,CAAAp0K,KAAAm0K,mBAC1Dn0K,KAAKszK,cAAgBC,aACrBvzK,KAAKq0K,kBAAoB3qI,SACzB1pC,KAAKs0K,aAAe3sE,YACpB3nG,KAAKu0K,YAAc3sE,WACnB5nG,KAAKw0K,oBAAsB,4VZ0G5B,SAASC,0BAA2Bh4I,SACvCA,QAAQi4I,mBAAmB,IAAIviK,KAC/BsqB,QAAQ82I,eAAezqK,QAAQ,SAAC9P,OAC5B,GAAIyjC,QAAQi4I,qBAAqBniK,IAAIvZ,MAAM0kD,UACvCjhB,QAAQi4I,qBAAqB97K,IAAII,MAAM0kD,UAAUx3C,KAAKlN,WACnD,CACH,IAAM0+J,QACNA,KAAKxxJ,KAAKlN,OACVyjC,QAAQi4I,qBAAqBliK,IAAIxZ,MAAM0kD,SAAUg6G,SY7GrD+c,CAA0Bz0K,MAC1B,IAAM20K,gBAAkB30K,KAAKw0K,oBAAoB57K,IAAI,UAC/C0zK,gBAAkB,IAAIhC,oBACxBsK,aAAetI,gBACnBA,gBAAgBlB,gBAAgBprK,KAAKs0K,cACrChI,gBAAgBjB,eAAerrK,KAAKu0K,aAEpC,IAAIM,aAAe,KAUnB,OARA70K,KAAKq0K,kBAAkBvrK,QAAQ,SAACxQ,MAC5Bu8K,aZwGL,SAASC,aAAcH,gBAAiBpL,eAC3C,IAAM7B,KAAOiN,gBAAgBvpJ,KAAK,SAAAk+I,WAAS,OAAIA,UAAUhxK,SAAWixK,gBACpE,OAAQ7B,OAAkB,IAAVA,KAAeA,KAAO,KY1GfoN,CAAaH,gBAAiBr8K,MAEzCs8K,aADS,SAATt8K,KACe+zK,eAAeuI,aAAcC,cAAcxxH,OZ4KnE,SAAS0xH,mBAAoBzI,gBAAiB0I,gBAMjD,IALA,IAAIJ,aAAetI,gBACbvxJ,KAAOi6J,eAAetzK,OACtBga,OAASX,KAAOi6J,eAAe,GAAGtzK,OAAS,EAC3Cm6B,OAASm5I,eAAeliK,OAAO,SAACC,IAAK7R,KAAN,OAAe6R,IAAM7R,IAAI,GAAGqyJ,kBAAkB13H,QAAS,GAEnF9jC,EAAI,EAAGA,EAAI2jB,OAAQ3jB,IAAK,CAC7B,IAAMk9K,kBAAoBl9K,IAAM2jB,OAAS,EADZw5J,gBAIH7I,eAAeuI,aAFNxI,2BAA2BvwI,OAClBm5I,eAAe,GAAGj9K,GAAGw7J,kBAAkB33H,MAAO,QACPq5I,mBAA3EvwI,MAJqBwwI,gBAIrBxwI,MAAO2e,OAJc6xH,gBAId7xH,OACfuxH,aAAelwI,MACf,IAAK,IAAIvpB,EAAI,EAAGA,EAAIJ,KAAMI,IAAK,CAC3B,IAAMg6J,YAAch6J,IAAOJ,KAAO,EAClC65J,aAAevI,eAAeuI,aAAcI,eAAe75J,GAAGpjB,GAAIo9K,aAAa,GAAM9xH,OAEzFuxH,aAAevxH,OAEnB,OAAOuxH,aY5LoBG,CAAmBH,aAAcC,aAAavL,aAG9DgD,kEAGGllK,OAIV,OAHIA,QACApH,KAAKszK,cAAgBlsK,OAElBpH,KAAKszK,4EAGIlsK,OAIhB,OAHIA,QACApH,KAAKw0K,oBAAsBptK,OAExBpH,KAAKw0K,2UC3Cb,IAAMY,qBAAb,WACI,SAAAA,qKAAeC,CAAAr1K,KAAAo1K,WACXp1K,KAAKszK,cAAgB,IAAInhK,IACzBnS,KAAKs1K,kBAAoB,KAHjC,0OAAAC,CAAAH,YAAA97K,IAAA,eAAAN,MAAA,SAAAw8K,aAMkBlM,WACVtpK,KAAKszK,cAAc9gK,IAAI82J,UAAUhxK,OAAQgxK,cAPjDhwK,IAAA,mBAAAN,MAAA,SAAAy8K,iBAUsB72J,KAId,OAHIA,MACA5e,KAAKs1K,kBAAoB12J,KAEtB5e,KAAKs1K,qBAdpBh8K,IAAA,uBAAAN,MAAA,SAAA08K,qBAiB0BC,gBAAgB,IAAAzgK,MAAAlV,KAClC21K,eAAe7sK,QAAQ,SAAC4+J,MACpBxyJ,MAAKsgK,aAAa9N,WAnB9BpuK,IAAA,sBAAAN,MAAA,SAAA48K,sBAyBQ,OCzBD,SAASruE,sBAAgB9qE,QAASo5I,SACrC,IAAMC,OAASD,QAAQpL,OACnBoL,QAAQ5K,SAAW4K,QAAQ5K,QAAQvpK,QACnCm0K,QAAQ5K,QAAQniK,QAAQ,SAAAitK,WAAS,OAAIxuE,sBAAe9qE,QAASs5I,aAEnD,MAAVD,QAAsC,iBAAZA,aACiBxoK,IAAvCmvB,QAAQ82I,eAAe36K,IAAIk9K,SAC3BD,QAAQpL,KAAKhuI,QAAQ82I,eAAe36K,IAAIk9K,SDiB5CvuE,CAAevnG,KAAMA,KAAKs1K,mBACnBt1K,KAAKy1K,sBAzBpBn8K,IAAA,eAAAN,MAAA,SAAAu6K,eA6BQ,OAAOvzK,KAAKszK,iBA7BpBh6K,IAAA,oBAAAN,MAAA,SAAAg9K,oBAgCQh2K,KAAKszK,cAAc3rI,YAhC3BytI,UAAA,ySEaqBa,wCACjB,SAAAA,cAAaloG,mKAAMmoG,CAAAl2K,KAAAi2K,eACfj2K,KAAK8oK,UAAY/6F,KAAKs7F,SACtBrpK,KAAKwzK,iBAAmBzlG,KAAK9sC,UAC7BjhC,KAAKm2K,YACDv6I,MAAOmyC,KAAKnyC,OAASsuI,cACrBruI,OAAQkyC,KAAKlyC,QAAUsuI,gBAG3BnqK,KAAKo2K,cAAgBroG,KAAKsoG,cAAgB,OAC1Cr2K,KAAKs1K,kBAAoB,KACzBt1K,KAAKs2K,WAAa,IAAIlB,qBACtBp1K,KAAKu2K,gBAAkB,KACvBv2K,KAAKq0K,qBACLr0K,KAAKihE,KAAO,KACZjhE,KAAKw2K,YAAc,qTAGZpvK,OAIP,OAHIA,QACApH,KAAKs2K,WAAalvK,OAEfpH,KAAKs2K,qEAGElvK,OAId,OAHIA,QACApH,KAAKq0K,kBAAoBjtK,OAEtBpH,KAAKq0K,8DAGLjtK,OAIP,OAHIA,OACA3O,OAAOoU,OAAO7M,KAAKm2K,WAAY/uK,OAE5BpH,KAAKm2K,6DAGF7M,WACVtpK,KAAKs2K,WAAWd,aAAalM,6EAGXqM,gBAClB31K,KAAKs2K,WAAWZ,qBAAqBC,4DAG9B/kJ,MACH5wB,KAAKy2K,KACLz2K,KAAKy2K,IAAIC,UAAU9lJ,oDAQfhkB,QACR5M,KAAKihE,KAAK01G,WAAW/pK,QACrB5M,KAAKs1K,kBAAoBt1K,KAAKihE,KAAKpkD,MACnC7c,KAAK42K,oDAKD9G,MAAME,aAAahwK,KAAK8oK,WACxB9oK,KAAK8oK,UAAU+N,QAAU72K,KAEzBq4B,SAASgB,eAAer5B,KAAK8oK,WAAW+N,QAAU72K,KAGtDA,KAAKs1K,kBDxEN,SAASwB,aAAcr6I,SAAS,IAAAs6I,mBACTt6I,QAAQhmB,YAA1BolB,OAD2Bk7I,mBAC3Bl7I,OAAQD,MADmBm7I,mBACnBn7I,MAMhB,OALmB,IAAIu4I,qCAAkB13I,QAAQu6I,YAAYzD,eACnB92I,QAAQw6I,mBACRp7I,OACAD,OACVs7I,sBCkEHJ,CAAa92K,MACtCA,KAAKs2K,WAAWb,iBAAiBz1K,KAAKs1K,mBACtCt1K,KAAKs1K,kBAAoBt1K,KAAKs2K,WAAWV,sBACzC51K,KAAK62K,QAAU,IAAI/I,0BACflyI,MAAO57B,KAAKm2K,WAAWv6I,MACvBC,OAAQ77B,KAAKm2K,WAAWt6I,QAExB77B,KAAKs1K,mBACTt1K,KAAKihE,KAAOjhE,KAAK62K,QAAQM,YAAYl2G,OACrCjhE,KAAK62K,QAAQO,YACbp3K,KAAKu2K,gBAAkB,IAAInD,gCACvBnyG,KAAMjhE,KAAKihE,KACXsyG,aAAcvzK,KAAKs2K,WAAW/C,eAC9BE,gBAAiBzzK,KAAKwzK,kBACvBxzK,KAAKo2K,cAAep2K,KAAK8oK,WAExB9oK,KAAKw2K,YACLx2K,KAAKihE,KAAKpoC,GAAG74B,KAAKw2K,aAElBx2K,KAAKw2K,YAAcx2K,KAAKihE,KAAKpoC,KAGjC74B,KAAKu2K,gBAAgBl8G,6DAIrB,OAAOr6D,KAAKw2K,0EAOIa,kBAAkB,IAAAniK,MAAAlV,KAgBlC,OAfAA,KAAKq0K,kBAAkB3yK,OAAS,EAChC1B,KAAKs2K,WAAWN,oBAChBqB,iBAAiBvuK,QAAQ,SAACgwB,WAClBA,YACA5jB,MAAKm/J,kBAAkBnuK,KAAK4yB,UAAUxgC,QACtC4c,MAAKsgK,aAAa18I,WACO,SAArBA,UAAUxgC,QACVwgC,UAAUwwI,UAAUxgK,QAAQ,SAACwuK,cACzBA,aAAaxuK,QAAQ,SAACyuK,OAClBriK,MAAKsgK,aAAa+B,cAM/Bv3K,uDAGGupK,eACV,OAAOvpK,KAAKs2K,WAAW/C,eAAe36K,IAAI2wK,uEAG7B1wI,IACb,OL5GqB,SAAhB2+I,cAAiBC,QACtBA,QACA9uF,6BAAa,IAAAhtE,OAAK87J,SAAU/vI,SK0GrB8vI,CAAc3+I,8CAGfhF,OAIN,OAHIA,QACA7zB,KAAK8oK,UAAYj1I,OAEd7zB,KAAK8oK,glCCvIb,IAyIM4O,2BAAsB,SAAtBA,oBAAuBj7I,SAChC,IAAM9zB,MAAQ8zB,QAAQk5F,OAEhBgiD,WAAal/K,OAAOqN,KAAK22B,QAAQm7I,aACjCtjJ,SAAK3Y,OAAAk8J,gCAAOF,YAAPE,gCAAsBp/K,OAAOqN,KAAKuiK,iBACvCyP,kBAAiBn8J,OAAAk8J,gCAAIF,YAAJE,gCAAmBp/K,OAAOqN,KAAKuiK,iBAAgBpgK,IAAI,SAAAosB,MAAI,SAAA1Y,OACvE6xF,0BAAiBp8C,uBADsD,KAAAz1C,OAC5B0Y,QAClD1rB,MAAM6rH,uBAAuBsjD,eAAgB,WAAe,QAAA1qG,KAAAhoE,UAAA1D,OAAXmgB,OAAW,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAXxrD,OAAWwrD,MAAAjoE,UAAAioE,OA5FxC,SAAlB0qG,gBAAmBzjJ,MAAOzS,QAC5B,IAAI3B,QAAU,SAAAA,UAAA,OAAM,GACZoU,MAAMxV,MAAM,SAACk5J,OAAQjgL,GACzB,OAAQigL,QACR,I1BlEY,O0BmEZ,I1BlEe,U0BmEf,I1B9Dc,S0B+DV93J,QAAUgvD,qBAAQ,SAClB,MAEJ,I1BpEa,Q0BqEb,I1BpEY,O0BqEZ,I1BvEa,Q0BwEb,I1BzEY,O0B0EZ,I1B5Dc,S0B6DVhvD,QAAUgvD,qBAAQ,UAClB,MACJ,QACIhvD,QAAU,SAAAA,UAAA,OAAM,GAGpB,IAAMivD,OAASttD,OAAO9pB,GAAG,GACnBq3E,OAASvtD,OAAO9pB,GAAG,GAEzB,OAAOmoB,QAAQivD,OAAQC,UAqEL2oG,CAAgBzjJ,MAAOzS,SAjE3B,SAAhBo2J,cAAiB3jJ,MAAOzS,QAAR,OAAmByS,MAAMxV,MAAM,SAACk5J,OAAQjgL,GAC1D,IAAMmJ,IAAM2gB,OAAO9pB,GAAG,GACtB,OAAQigL,QACR,I1B7FgB,O0B8FhB,I1B7FmB,U0B8Ff,OAAe,OAAR92K,IAEX,I1B/FgB,O0BgGZ,OAAOA,MAAQA,IAAI2mG,UAEvB,QACI,OAAO,MAuDOowE,CAAc3jJ,MAAOzS,SAGhB4a,QAAQ5I,WAtHN,SAAhBqkJ,cAAiBz7I,SAC1B,IAAMimH,iBAAmBjmH,QAAQxhC,eAAeynJ,iBAChDA,iBAAiBtK,QAAShsD,OAAQ3vD,QAASnZ,OAAQ,iBACnD,IAAMqjJ,YAAclqI,QAAQuuD,cAAc27E,YAEpCgR,WAAal7I,QAAQm7I,YAC3B,IAAK,IAAMt+K,OAAOq+K,WAAY,CAC1B,IAAM3+K,MAAQyjC,QAAQnjC,OACR,OAAVN,OACA2tK,YAAYrtK,MAAQqtK,YAAYrtK,KAAKN,OATP,IAY9BixK,cAAkBxtI,QAAQ7vB,SAA1Bq9J,cAERtD,YAAYjrE,YAAYvlB,eAAe8zF,gBACvCtD,YAAY/S,iBACZn3H,QAAQ07I,gBACRz1B,iBAAiBtK,QAAShsD,OAAQ3vD,QAASnZ,OAAQ,gBACnDo/H,iBAAiBtK,QAAShsD,OAAQ3vD,QAASnZ,OAAQ,YAqG3C40J,CAAcz7I,SACdA,QAAQqmE,UAvDc,SAArBs1E,mBAAsB37I,SAC/B,IAAM47I,aAAe57I,QAAQ67I,SAASC,WAAWC,iBAAiBhiC,SAAS5jF,OAAO,OAC5E6lH,YACNJ,aAAavvK,QAAQ,SAAC4vK,SAClBA,QAAQ5vK,QAAQ,SAAC45D,MACb+1G,SAASvyK,KAAKw8D,KAAK1jD,UAAUpR,YAGrC,IAAM80I,iBAAmBjmH,QAAQk8I,YAC7BF,SAAS/2K,OACTmqF,QAAQgxB,IAAI47D,UAAUxsF,KAAK,WAEvBy2D,iBAAiBtK,QAAShsD,OAAQ3vD,QAASnZ,OAAQ,UACnD,IAAMs1J,oBAENP,aAAavvK,QAAQ,SAAC4vK,SAClBA,QAAQ5vK,QAAQ,SAAC45D,MACbA,KAAK1jD,UAAUk9E,SAASpzF,QAAQ,SAACqzF,OAC7By8E,iBAAiB1yK,KAAKi2F,MAAM08E,wBAKvCp8I,QAAQ+yG,QAAS/yG,QAAQgzG,SAAS3mI,QAAQ,SAACgwK,UACxCA,QAAUA,aACFhwK,QAAQ,SAAC0vF,MACbA,KAAK1vF,QAAQ,SAACqgJ,UACVyvB,iBAAiB1yK,KAAKijJ,SAAS0vB,uBAK3ChtF,QAAQgxB,IAAI+7D,kBAAkB3sF,KAAK,WAC/By2D,iBAAiBtK,QAAShsD,OAAQ3vD,QAASnZ,OAAQ,qBAI3Do/H,iBAAiBtK,QAAShsD,OAAQ3vD,QAASnZ,OAAQ,iBAoBnD80J,CAAmB37I,WACpB,IAGMs8I,uBAAyB,SAAzBA,uBAA0B1iF,UACnC,IACMswE,YADStwE,SAAS55D,QACGuuD,cAAc27E,YACzC,GAAIA,YAAa,CACb,IAAM/vB,YAAc+vB,YAAYjzB,iBAAiB16I,OAEjDggL,EAD0B3iF,SAAS4iF,oBACjBriC,YAAavgD,UAC/B,IAAMyxE,uBAAyBzxE,SAAS6iF,wBAClCjnF,WAAa61E,uBAAuB71E,WACpCvD,YAAco5E,uBAAuBp5E,YAC3CkoD,YAAYnvG,KAAK,SAACi7B,MACd,IAAMy2G,aAAez2G,KAAK1jD,UAAUq3E,WACpC,IAAK,IAAM/8F,OAAO24F,WACdknF,aAAaC,kCAAkC9/K,IAAK24F,WAAW34F,MAEnE,IAAK,IAAMA,SAAOo1F,YACdyqF,aAAaE,mCAAmC//K,MAAKo1F,YAAYp1F,YAoDpEggL,2BAAsB,SAAtBA,sBAIT,OAHsB,IAAIrD,8BACtBh1I,UAAW,0BC9NJs4I,aACXxuK,MACI/R,MAAO,KACPmkB,MACIwxD,UAAW,SAAAA,UAAAt2E,GAAC,OAAIA,aAAawF,uBAGrC+9B,OACI5iC,MAAO,EACPmkB,MACIuxD,aAAcd,aACde,UAAWnmE,OAAOgzJ,YAG1B3/H,QACI7iC,MAAO,EACPmkB,MACIuxD,aAAcd,aACde,UAAWnmE,OAAOgzJ,YAG1Bge,cACIxgL,MAAO,GACPmkB,MACIuxD,aAAcd,aACde,UAAWnmE,OAAOgzJ,YAG1Bie,eACIzgL,MAAO,GACPmkB,MACIuxD,aAAcd,aACde,UAAWnmE,OAAOgzJ,YAG1B5uJ,QACI5T,MAAO,KACPmkB,MACIwxD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAAC9hE,OAAQotG,WAEnB,IAAM0/D,QAAUjqG,kBAA8B,OAAX7iE,UAAuBotG,WACpDr0F,UAAY8pD,eAAeiqG,QAASxxD,6BACtC6M,QAAUtlD,eAAe9pD,UAAW/Y,QAGxC,OAFAmoH,QD1CkB,SAArB4kD,mBAAsB/sK,QAE/B,OADAA,OAAO68J,UAAUC,UAAY7lK,KAAK4Q,IAAI,GAAI5Q,KAAK6Q,IAAI,GAAI9H,OAAO68J,UAAUC,YACjE98J,OCwCe+sK,CAAmB5kD,aC1DhC6kD,YACTn3I,IAAK,EACLmwB,OAAQ,EACRf,OAAQ,GAGCgoH,kBACTpzH,EAAG,MACHqpF,EAAG,SACHgqC,EAAG,UAGMC,qBACTtzH,EAAG,OACHqpF,EAAG,SACHgqC,EAAG,SAiNME,uBAAS,SAgBTC,SAAW,UACXC,YAAc,aAGdC,yBAAW,WACXC,2BAAa,kXC7OLC,wCAYjB,SAAAA,cAAajkJ,WAAY8pE,YAAatzF,OAAQ3R,2KAAcq/K,CAAAt6K,KAAAq6K,eACxDr6K,KAAKixF,WACLjxF,KAAK01H,gBACL11H,KAAKu6K,aAGLv6K,KAAK60G,cAAgB55G,aAErB+E,KAAKkgG,YAAYA,aACjBlgG,KAAKo2B,WAAWA,YAChBp2B,KAAK4M,OAAOA,0TAQZ,OACIszF,YAAalgG,KAAKkgG,cAClBtzF,OAAQ5M,KAAK4M,SACb4pI,SAAUx2I,KAAKw2I,kDASf5pI,SACJ,OAAIA,SACA5M,KAAKixF,QAAUxhB,eAAezvE,KAAKixF,YAAerkF,SAClD5M,KAAKixF,QAAQ8jE,OAAOn5H,MAAQ/3B,KAAK6Q,IAAI,EAAG1U,KAAKixF,QAAQ8jE,OAAOn5H,OACrD57B,MAEJA,KAAKixF,wDAQHiP,cACT,OAAIA,cACAlgG,KAAK01H,aAAejmD,eAAezvE,KAAK01H,iBAAoBx1B,cAErDlgG,MAEJA,KAAK01H,uDAQN8gB,WACN,OAAIA,WACAx2I,KAAKu6K,UAAYlxG,oBDmJV,MAIG,SADA,UCtJiDmtE,WAEpDx2I,MAEJA,KAAKu6K,sDAQLh+H,QACP,OAAIA,QACAv8C,KAAKmwJ,WAAa5zG,OACXv8C,MAEJA,KAAKmwJ,6DAQF5zG,QACV,OAAIA,QACAv8C,KAAKowJ,cAAgB7zG,OACdv8C,MAEJA,KAAKowJ,gEAQF7zG,QACV,OAAIA,QACAv8C,KAAKw6K,cAAgBj+H,OACdv8C,MAEJA,KAAKw6K,4DAQJpkJ,aACR,OAAIA,aACAp2B,KAAKy6K,YAAcrkJ,YAEZp2B,MAEJA,KAAKy6K,yNC1Ib,IAAMC,uBAAqBC,oCAAAC,yBFgCZ,UEhCYD,oCAAAE,sBF6Kb,QE3KO,SAFMF,oCAAAE,mBFkLb,QE/KO,WAHMF,oCAAAE,mBFuLb,QEnLO,GAJMF,oCAAAE,mBF4LV,YEvLO,GALGF,oCAAAE,mBFiMX,UE3LO,GANIA,qBAAAF,oCAAAC,sBF0PR,aElPG,UARKD,oCAAAC,sBF2PZ,SElPG,IATSD,oCAAAC,sBF2MP,eEjMK7/J,QAAUjB,aAVR6gK,oCAAAC,sBFsMN,gBE3LK7/J,QAAUjB,aAXT6gK,oCAAAC,sBFgNR,aEpMK7/J,QAAUjB,aAZP6gK,oCAAAC,sBF+CD,kBElCG,GAbFD,oCAAAC,sBFoDE,qBEtCG,GAdLD,oCAAAC,sBF0CJ,gBE3BG,GAfCD,oCAAAC,sBFqCP,aErBG,GAhBIA,uBAuBrBE,sBAAoBH,oCAAAI,yBFDP,QEEG,KADIJ,oCAAAI,sBFIN,SEFG,KAFGJ,oCAAAI,sBF4IP,YEzIG,KAHIJ,oCAAAI,sBFiJN,aE7IG,KAJGA,spBCvBjC,IAAM/yI,WAAO0rC,QAAQ1rC,KA2BfgzI,WAAa,SAAbA,WAAcjjL,EAAGkjL,MACnB,IAAIr0I,MAAQ,EACZ,IAAK,IAAM1I,KAAK+8I,KACZ,GAAIljL,EAAIkjL,KAAK/8I,GAAI,CACb0I,MAAQ1I,EACR,MAGR,OAAO0I,OAUEs0I,gBAAkB,SAAlBA,gBAAmB3+H,OAAQ3vC,QAAW,IACvCuuK,aAAiBvuK,OAAjBuuK,aACJC,aAAe7+H,OAAO,GAAG76C,OAAS,EAAI66C,OAAO,GAAKA,OAAO,GAgB7D,OAfI4+H,cACAC,aAAe7+H,OAAO,GAAG76C,OAAS,EAAnB25K,wBAA2B9+H,OAAO,OACjD6+H,aAAe7+H,OAAO,GAAG76C,OAAS,KAAnBia,OAAA0/J,wBAA2BD,cAA3BC,wBAA4C9+H,OAAO,KAAM6+H,cAExEA,aAAeA,aAAanzK,IAAI,SAACoT,IAAKqzH,UAClC,IAAI4sC,WAOJ,OANI/+H,OAAO,GAAG76C,OAAS,IACnB45K,QAAUD,wBAAI9+H,OAAO,GAAGmyF,YAExBnyF,OAAO,GAAG76C,OAAS,IACnB45K,WAAO3/J,OAAA0/J,wBAAOC,SAAPD,wBAAmB9+H,OAAO,GAAGmyF,aAEjC4sC,UAGRF,cA0KEG,0BAAsB,SAAtBA,sBAA0D,IAAnCxxK,KAAmC3E,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAAxBwH,OAAwBxH,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAhBkuK,YAAgBp2K,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAAmuK,qBACpB7uK,OAAvCuuK,+BAD2D,IAAAM,2CACrCC,aAAiB9uK,OAAjB8uK,aADqCC,gBAlOhD,SAAjBC,eAAkBT,cACpB,OAAIA,cAEIU,aAAc7B,uBACd8B,cH4KS,UGxKbD,aHwKa,QGvKbC,cAAe9B,wBA2NqB4B,CAAeT,cAA/CU,aAF2DF,gBAE3DE,aAAcC,cAF6CH,gBAE7CG,cACdn9J,OAAW5U,KAAX4U,OACFo9J,YAhEoB,SAAjBC,eAAkBb,aAAcO,cACzC,OAAKP,cAODt/I,OAAQ,EACRD,MAAO8/I,aAAa9/I,QANhBC,OAAQ6/I,aAAa7/I,OACrBD,MAAO,GA4DKogJ,CAAeb,aAAcO,cAEjD,GAAI/8J,OAAO,GAAGrlB,IAAK,KAAA2iL,cACT/jE,cAAYgkE,qBAAAD,iBAAMJ,aAAe,GAArBK,qBAAAD,cAAyBH,cAAgB,GAAzCG,eAalB,OAXAt9J,OAAO7V,QAAQ,SAACqzK,WAEZ,IAAM/kG,MAAQmkG,oBAAoBY,UAAWvvK,OAAQ4uK,aAErDtjE,aAAa2jE,cAAgBh4K,KAAK6Q,IAAIwjG,aAAa2jE,cAAezkG,MAAMykG,cACpEE,YAAYF,eAGhB3jE,aAAa4jE,iBAAmB1kG,MAAM0kG,iBAE1C/xK,KAAKqtE,MAAQ8gC,aACNA,aAGX,OA7D2B,SAAlBq7C,gBAAmBxpJ,KAAMif,SAAU+yJ,aAAiC,IAAAtnJ,KAApB2nJ,WAAoBh3K,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MACrEy2K,aAAgC7yJ,SAAhC6yJ,aAAcC,cAAkB9yJ,SAAlB8yJ,cAClBO,kBAAoB,EACpBC,mBAAqB,EAoBzB,OAnBAvyK,KAAK4U,OAAO7V,QAAQ,SAACyzK,YAAe,IAAAC,YAC5BC,SAAW,EACXC,SAAW,EACfH,WAAWzzK,QAAQ,SAACqlJ,YAAajS,UAC7BiS,YAAYuB,oBACZ,IAAMt4E,MAAQ+2E,YAAYoF,kBACpBopB,iBAAmBxuB,YAAY6tB,eAAeD,YAAYD,gBAEhEY,SAAW74K,KAAK6Q,IAAIgoK,UAAWtlG,MAAM0kG,eAAgBa,kBACrDP,WAAWlgC,UAAYr4I,KAAK6Q,IAAI0nK,WAAWlgC,WAAa,EAAG9kE,MAAMykG,eACjEY,WAAaL,WAAWlgC,YAE5BogC,oBAAsBI,SACtBL,kBAAoBx4K,KAAK6Q,IAAI2nK,kBAAmBI,UAChD1yK,KAAKqtE,OAAL8kG,qBAAAM,eACKV,cAAgBj4K,KAAKqoB,KAAKowJ,qBAD/BJ,qBAAAM,YAEKX,aAAeh4K,KAAKqoB,KAAKmwJ,oBAF9BG,eAKJN,qBAAAznJ,QACKqnJ,cAAgBQ,oBADrBJ,qBAAAznJ,KAEKonJ,aAAeQ,mBAFpB5nJ,KAsCO8+H,CAAgBxpJ,MAAQ8xK,0BAAcC,6BAAiBC,YAAaP,cAoDlEoB,sBAAwB,SAAxBA,sBAAyB7yK,KAAMoxK,cACxC,GAAIpxK,KAAK4U,OAAO,GAAGrlB,IAAK,CACpB,IAAM8X,OAaN,OAZArH,KAAK4U,OAAO7V,QAAQ,SAACwZ,OACZ64J,aAGiByB,sBAAsBt6J,MAAO64J,cACrCryK,QAAQ,SAAC7O,EAAGlC,GAAM,IAAA8kL,OACxBzrK,IAAIrZ,GAAKqZ,IAAIrZ,QACb8kL,OAAAzrK,IAAIrZ,IAAGmO,KAAPqB,MAAAs1K,OAAAxB,wBAAephL,MALnBmX,IAAIlL,KAAJqB,MAAA6J,IAAGiqK,wBAASuB,sBAAsBt6J,MAAO64J,kBASjDpxK,KAAKwyC,OAASnrC,IACPA,IAOX,OAFIrH,KAAKwyC,OAHJ4+H,aAGapxK,KAAK4U,OAAO,GAAG1W,IAAI,SAACwoE,IAAKyrE,UAAN,OAAmBnyI,KAAK4U,OAAO1W,IAAI,SAAAoT,KAAG,OAAIA,IAAI6gI,cAFjEnyI,KAAK4U,OAIhB5U,KAAKwyC,QAwIHugI,kBAAoB,SAApBA,kBAAqB1rK,IAAK2rK,IAAKtwK,KAAX,OAAmB2E,IAAIgK,MAAM2hK,KAAMtwK,MCtdvDgvF,2BACT7uF,QACI8hE,aAAc,SAAAA,aAACjyC,QAASzjC,OAAV,OAAoBy2E,eAAehzC,QAAQw0D,YAAej4F,SAE5EwiL,eACA5nE,kBACAsE,iBCHSnc,4CACTihF,gBACApgF,YAAa,OACbi4C,qBAAqB,EACrB6mC,cACI7/I,OAAQ,IACRD,MAAO,IACPm5H,OAAQ,GAEZomB,cAAc,EACd5pC,ML0OmB,UKzOnB0rC,0TCDiBC,sCAQjB,SAAAA,aAAa3gI,QAAqB,IAAb3vC,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,kKAAA+3K,CAAAn9K,KAAAk9K,cAE9Bl9K,KAAKo9K,cAAgB,EACrBp9K,KAAKq9K,eAAiB9gI,OAAO,OAC7Bv8C,KAAKs9K,iBAAmB/gI,OAAO,OAC/Bv8C,KAAKu9K,gBACLv9K,KAAKw9K,mBAGLzuG,sBAAsB/uE,KAAMy7F,2BAC5B,IAAM0f,OAAS1iH,OAAOoU,UAAW7M,KAAK6lB,YAAYk2E,iBAClD/7F,KAAK4M,OAAO6iE,eAAe0rC,OAAQvuG,SAEnC5M,KAAKy9K,cAAgBvC,iBAAiB3+H,OAAO,OAAUA,OAAO,QAAWv8C,KAAK4M,4UAU9E,MAAM,IAAImD,MAAMw/D,UAAUC,sFAI1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,4EAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,0FAI1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wEAY1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,gFAa1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wFAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8EAW1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,sEAW1B,OAAIpqE,UAAO1D,OACA1B,KAEJA,KAAKq9K,yEAIZ,OAAIj4K,UAAO1D,OACA1B,KAEJA,KAAKs9K,qDAIZ,OAAIl4K,UAAO1D,OACA1B,KAEJA,KAAK09K,sDAOF,IAAAC,aHnEQ,SAAbxP,WAAc1xI,SACvB,IAAImhJ,cACAC,aAAe,EACftsC,MHwKe,UGvKb7jB,OAAS1lF,aACTliC,QACAg4K,aAAerhJ,QAAQghJ,cACvBM,cAAgBthJ,QAAQshJ,gBACxBC,gBAAkBvhJ,QAAQuhJ,kBARG5c,gBASC3kI,QAAQ7vB,SAApCuuK,aAT2B/Z,gBAS3B+Z,aAAc8C,UATa7c,gBASb6c,UAEtB,GAAK9C,aAsCE,CAQH,GANI5pC,MADyB,IAAzBwsC,cAAcr8K,OHyHH,UGvHuB,IAA3Bs8K,gBAAgBt8K,OHwHV,YGrHLq8K,cAAcr8K,QAAUs8K,gBAAgBt8K,OHoHrC,UACE,YGnHbq8K,cAAcr8K,OAAS,EAAG,CAC1B,IAAK,IAAI3J,IAAI,EAAGA,IAAIgmL,cAAcr8K,OAAS,EAAG3J,MAC1C+N,KAAKI,KAAKnO,KAGd+N,KAAKI,KAAK63K,cAAcr8K,OAAS,GH8GpB,cG5GT6vI,QACAssC,aAAeE,cAAcr8K,OAAS,GAG9C,GAAIs8K,gBAAgBt8K,OAAS,EAAG,CAE5B,IADA,IAAMw8K,oBAAsBH,cAAcr8K,OACjC3J,IAAIimL,gBAAgBt8K,OAAS,EAAG3J,IAAI,EAAGA,MAC5C+N,KAAKI,KAAKnO,IAAImmL,qBAGlBp4K,KAAKI,KAAKg4K,qBHiGC,YG/FP3sC,QACAssC,aAAeK,qBAUvB,IAAIC,UAPJr4K,KAAKgD,QAAQ,SAACxP,KACV,IAAIu3I,SAAW,EACf,OAAOnjB,OAAOp0H,IAAI,SAACjB,GAEf,OADAw4I,UACA,GAAAl1H,OAAUtjB,EAAEiB,KAAK0lB,UAAjB,KAAArD,OAA8Bq/J,WAAWnqC,QAASotC,gBAI1DE,UAAYL,aAAa,GAAG71K,IAAI,SAACwoE,IAAKyrE,UAAN,OAAmB4hC,aAAa71K,IAAI,SAAAoT,KAAG,OAAIA,IAAI6gI,cAC/E0hC,WAAalwD,OAAOz4G,QAAQkpK,eA9Eb,CAQf,GANI5sC,MADyB,IAAzBwsC,cAAcr8K,OH+JH,UG7JuB,IAA3Bs8K,gBAAgBt8K,OH8JV,YG3JLq8K,cAAcr8K,QAAUs8K,gBAAgBt8K,OH0JrC,UACE,YGzJbq8K,cAAcr8K,OAAS,EAAG,CAC1B,IAAK,IAAI3J,EAAI,EAAGA,EAAIgmL,cAAc,GAAGr8K,OAAS,EAAG3J,IAC7C+N,KAAKI,KAAKnO,GAEd+N,KAAKI,KAAK63K,cAAc,GAAGr8K,OAAS,GHqJvB,cGpJT6vI,OAAkD,IAA3BysC,gBAAgBt8K,SACvCm8K,aAAeE,cAAc,GAAGr8K,OAAS,GAGjD,GAAIs8K,gBAAgBt8K,OAAS,EAAG,CAE5B,IADA,IAAM08K,UAAYL,cAAcr8K,OAAS,EAAIq8K,cAAc,GAAGr8K,OAAS,EAC9D3J,GAAIimL,gBAAgB,GAAGt8K,OAAS,EAAG3J,GAAI,EAAGA,KAC/C+N,KAAKI,KAAKnO,GAAIqmL,WAElBt4K,KAAKI,KAAKk4K,WH0IC,YGxIP7sC,QACAssC,aAAeO,gBAGnBP,aAAeE,cAAcr8K,OAAS,EAAIq8K,cAAc,GAAGr8K,OAAS,EAAI,EAE5EoE,KAAKgD,QAAQ,SAACxP,KACV,IAAIu3I,SAAW,EACf,OAAOnjB,OAAOp0H,IAAI,SAACjB,GAEf,OADAw4I,UACA,GAAAl1H,OAAUtjB,EAAEiB,KAAK0lB,UAAjB,KAAArD,OAA8Bq/J,WAAWnqC,QAASotC,gBAG1DL,WAAalwD,OAAOz4G,QAAQ6oK,cA2ChC,OAAS78G,KAAM28G,WAAYC,2BGvBQ1P,CAAWnuK,MAAlCihE,KADE08G,aACF18G,KAAM48G,aADJF,aACIE,aAEd,OADA79K,KAAKo9K,cAAgBS,aACd58G,+DAUP,OAAOjhE,KAAKk4G,2EAUGt8E,MAAOC,QACtB77B,KAAK4zG,gBAAiBh4E,YAAOC,gBAC7B,IAAMolC,KAAOjhE,KAAKihE,OACZo9G,eAAiBr+K,KAAKs+K,oBAAoBtE,uBAAQ/4G,MAClDs9G,cAAgBv+K,KAAKs+K,oBNiBd,QMjByCr9G,MAChD/4B,MAAQloC,KAAKw+K,eAAeD,cAAeF,gBAIjD,OAFAr+K,KAAKy+K,eAAiBz+K,KAAK0+K,qBAAqBx2I,OAChDloC,KAAK2+K,iBAAmB3+K,KAAK4+K,mBAAmBhjJ,MAAOC,QAChD77B,qEAYUnF,KAAM+iL,YAAsC,IAAA1oK,MAAAlV,KAA1BkoC,MAA0B9iC,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAAlB,EAAG4jB,SAAe5jB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAE7D,GADA4jB,SAASkf,OAASrkC,KAAK6Q,IAAIsU,SAASkf,QAAU,EAAG01I,WAAWxmG,MAAMv8E,OAC9D+iL,WAAWj/J,OAAQ,CACnB,IAAMkgK,WAAa32I,MAAQ,EAC3B01I,WAAWj/J,OAAO7V,QAAQ,SAACwZ,OACnBA,MAAM80D,QACNpuD,SAAW9T,MAAKopK,oBAAoBzjL,KAAMynB,MAAOu8J,WAAY71J,aAIzE,OAAOA,uEAUP,OAAOhpB,KAAK2+K,mFAUZ,OAAO3+K,KAAKy+K,iFAUMv2I,OAClB,IAAM92B,OAEN,OH0P6B,SAAxB0tK,wBAAiE,IAAxC1tK,IAAwChM,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAA9B8iC,MAA8B9iC,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAvByxK,WAAuB35K,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAXgrK,OAAWlzK,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACpE0xK,aAAe1G,OAAO2G,cAGxB9D,aAFW7C,OAAO1rK,SAElBuuK,aAGAl6G,KAEA89G,WAFA99G,KACA68G,aACAiB,WADAjB,aAGJ,GAAc,IAAV51I,MAAa,CACb,IAAMg3I,aAnJa,SAAdC,YAAe5iI,OAAQ4+H,aAAc6D,cAC9C,IAAMjB,iBACAC,mBAsBN,OArBI7C,aACA5+H,OAAOzzC,QAAQ,SAACuS,IAAKqzH,UACbA,UAAYswC,aACZhB,gBAAgB93K,KAAKmV,KAErB0iK,cAAc73K,KAAKmV,OAI3BkhC,OAAOzzC,QAAQ,SAACuS,IAAKqzH,UACjBrzH,IAAIvS,QAAQ,SAAC4S,OAAQizH,aACbA,aAAeqwC,cACfhB,gBAAgBtvC,UAAYsvC,gBAAgBtvC,cAC5CsvC,gBAAgBtvC,UAAUxoI,KAAKwV,UAE/BqiK,cAAcrvC,UAAYqvC,cAAcrvC,cACxCqvC,cAAcrvC,UAAUxoI,KAAKwV,cAKrCqiK,cAAeC,iBA2HEmB,CAAYl+G,KAAK1kB,OAAQ4+H,aAAc6D,cAO5D,OANA5tK,IAAIlL,MACAq2C,OAAQ0kB,KAAK1kB,OACbwhI,cAAemB,aAAa,GAC5BlB,gBAAiBkB,aAAa,GAC9B9nG,MAAOnW,KAAKmW,QAEThmE,IAEX,IAAMguK,UAAYl3I,MAAQ,EAO1B,OANA+4B,KAAKtiD,OAAO7V,QAAQ,SAAC7O,GACjB6kL,sBAAsB1tK,IAAKguK,WACvBn+G,KAAMhnE,EACN6jL,2BACDxF,UAEAlnK,IGvRH0tK,CAAsB1tK,IAAK82B,MAAOloC,KAAKq/K,mBAAoBr/K,MACpDoR,4DA1FP,OAAO2qF,sxCC7HMujF,mDAQjB,SAAAA,gBAAa/iI,QAAqB,IAAArnC,MAAbtI,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,qKAAAm6K,CAAAv/K,KAAAs/K,kBAC9BpqK,MAAAsqK,qCAAAx/K,KAAAy/K,0BAAAH,iBAAApnL,KAAA8H,KAAMu8C,OAAQ3vC,UAETqyK,cAAiB1iI,OAAO,GAAG76C,OAAS,EAAI66C,OAAO,GAAG,GAAG76C,OAAS,EACnEwT,MAAKuoK,cAAgBvC,iBAAiB3+H,OAAO,OAAUA,OAAO,QAAWrnC,MAAKtI,UAG9EsI,MAAKwoK,OACDpkL,IAAK2gL,SACLt7J,OAAQzJ,MAAKi5J,cAEjBj5J,MAAK+mK,cAAgB/mK,MAAKqmK,sBAXIrmK,uYAROgoK,iVA6BrC,IAAMU,WAAa59K,KAAKihE,OAExB,OADA27G,sBAAsBgB,YAAY,GAC3BrC,0BAAoBqC,WAAY59K,KAAK4M,SAAU5M,KAAKw7K,mFAGxCxyJ,UAAU,IAAA3T,OAAArV,KAEzB0/K,WAGA12J,SAHA02J,WACAC,UAEA32J,SAFA22J,UACA9jJ,OACA7S,SADA6S,OAEJ,OAAO77B,KAAKy+K,eAAex2K,IAAI,SAAC23K,WAAY7nL,GACxC,IAAM8nL,gBAAmBD,sBAAYD,oBAAWD,sBAAYI,YAAa/nL,GAD3BgoL,sBAED1qK,OAAK2qK,kBAAkBH,gBAA5DI,OAFsCF,sBAEtCE,OAAQC,WAF8BH,sBAE9BG,WAAYC,aAFkBJ,sBAElBI,aACtB9B,gBAAkBxiJ,OAAQA,QAC1B2wG,eAAiByzC,OAEvB,OACIC,YACIE,QAASF,WAAW,GACpBG,UAAWH,WAAW,IAE1BC,cACIC,QAASD,aAAa,GACtBE,UAAWF,aAAa,IAE5BtkJ,QACIukJ,QAAS/B,eAAe,GACxBgC,UAAWhC,eAAe,IAE9BziJ,OACIwkJ,QAAS5zC,eAAe,GACxB6zC,UAAW7zC,eAAe,mEAYtB,IAAAriC,aAIZnqG,KAAK4M,SAFLuuK,aAFYhxE,aAEZgxE,aACA8B,iBAHY9yE,aAGZ8yE,iBAEE1gI,OAASv8C,KAAKy9K,cACdx8G,KAAOwO,kBAAmBzvE,KAAKihE,QAC/Bq/G,WAAarD,iBAAiB,GAC9BsD,WAAatD,iBAAiB,IAAMz0K,OAAO4P,kBAC3C0lK,aAAgB3C,aACtB5+H,OAAOnhC,MAAM,GAAGnT,IAAI,SAAAhO,GAAC,OAAI6iL,kBAAkB7iL,EAAGqmL,WAAYC,cADrBzD,kBAAkBvgI,OAAQ+jI,WAAYC,YAM3E,OAHAt/G,KAAKtiD,OAASm+J,kBAAkB77G,KAAKtiD,OAAQ2hK,WAAYC,YACzDt/G,KAAK1kB,OAASugI,kBAAkB77G,KAAK1kB,OAAQ+jI,WAAYC,aAGrDt/G,UACA68G,mGAIiB90J,UACrB,IAAIw3J,oBACAnV,eACAoV,WACAC,cACAC,iBAAmB,EAEnBpkI,OAKAvzB,SALAuzB,OACOqkI,eAIP53J,SAJA4S,MACa+jJ,UAGb32J,SAHAwyJ,YACUqF,aAEV73J,SAFAgU,SACAnB,OACA7S,SADA6S,OAEEkiD,SAAW/9E,KAAK4M,SAASmxE,SACzBmgG,oBAAsBl+K,KAAK+9K,gBAAgBr8K,OAAS1B,KAAK+9K,gBAAgB,GAAGr8K,OAAS,EAErF45G,QAENklE,oBAAsBI,eACtBvV,eAAiBwV,cAGbH,WADa,IAAb3iG,UACcmgG,oBAAsB,EAAGA,qBAGb,IAAbngG,UAAkBmgG,oBAAsB,IAAMA,sBAGpDp1K,QAAQ,SAAC/Q,GAChBujH,KAAKvjH,GAAK4nL,UAAU5nL,GACpB4oL,kBAAoBhB,UAAU5nL,GAC9ByoL,qBAAuBllE,KAAKvjH,GAC5BszK,gBAAkB/vD,KAAKvjH,KAE3BwkD,OAAO,GAAGzzC,QAAQ,SAAC7O,EAAGlC,IACa,IAA3B2oL,WAAWz6K,QAAQlO,KACnBujH,KAAKvjH,GAAKyoL,qBAAuBb,UAAU5nL,GAAKszK,mBAGxD9uH,OAAOzzC,QAAQ,SAAAuS,KAAG,OAAIA,IAAIvS,QAAQ,SAAC2nE,IAAKy/D,OACF,IAA9BwwC,WAAWz6K,QAAQiqI,OACnBz/D,IAAIi/E,kBAAkBp0C,KAAK40B,MAAOr0G,QAElC4kJ,QAAQvwC,MAAQrsI,KAAK6Q,IAAI+rK,QAAQvwC,OAAS,EAAGrsI,KAAK6N,MAAM++D,IAAI8iF,kBAAkB33H,SAE9E6kJ,QAAQvwC,MAAQ,MAIxB,IAAM4wC,cAAgBF,eAAiBH,QAAQ3tK,OAAO,SAAC7Z,EAAGO,GAAJ,OAAUP,EAAIO,IAQpE,OAPIsnL,cAAgB,EAChBL,QAAUA,QAAQx4K,IAAI,kBAAM,IAE5By4K,WAAW53K,QAAQ,SAAC/Q,GAChB0oL,QAAQ1oL,GAAK8L,KAAK6N,MAAMovK,eAAiBxlE,KAAKvjH,GAAK4oL,kBAAoB,MAGxEF,8DAWKlC,cAAeF,gBAC3B,IAAItmL,EACI8jC,OAAW77B,KAAK4zG,iBAAhB/3E,OAER,IAAK9jC,EAAI,EAAGA,EAAIsmL,eAAe38K,UACvB28K,eAAetmL,IAAM8jC,QADU9jC,KAIvC,OAAO8L,KAAK4Q,IAAI8pK,cAAc78K,OAAS,EAAG3J,iEAY1B6jC,MAAOC,QAAQ,IAAAlkB,OAAA3X,KAC3B0/K,cACAC,aACEnE,YAAcx7K,KAAKw7K,cAEnBx+I,SAAWw+I,YAAY1oK,OAAO,SAAC7Z,EAAGO,GAEpC,OADAP,GAAKO,IAGHunL,cAAgB/gL,KAAKghL,yBACvBzkI,OAAQv8C,KAAKy9K,cACbzgJ,kBACAw+I,wBACA5/I,YACAC,gBAYJ,OATA77B,KAAKy+K,eAAe31K,QAAQ,SAAC82K,YACzB,IAGMj5K,SAAYs6K,OAFH,EAEWC,QADV,EACmB3kI,OAHpBqjI,WAAWrjI,OAGiB3gB,YAAOC,cAAQ6jJ,sBAAYC,oBAAWoB,6BAC3E/3J,SAAWrR,OAAKwpK,uBAAuBx6K,SAC7Cg5K,UAAY32J,SAAS22J,UACrBD,WAAa12J,SAAS02J,aAEnB1/K,KAAKohL,uBAAwBvlJ,cAAQD,YAAO8jJ,sBAAYC,4FAS3C32J,UACpB,IACIq4J,SACAH,QAFAT,WAGEjF,YAAcx7K,KAAKw7K,cAJKpX,cAW1BpkK,KAAK4M,SAJLioI,oBAP0BuvB,cAO1BvvB,oBACAmoC,aAR0B5Y,cAQ1B4Y,aACA7B,aAT0B/W,cAS1B+W,aACAmG,OAV0Bld,cAU1Bkd,OAEI/kI,OAAyDvzB,SAAzDuzB,OAAQ1gB,OAAiD7S,SAAjD6S,OAAQ6jJ,WAAyC12J,SAAzC02J,WAAYC,UAA6B32J,SAA7B22J,UAAWoB,cAAkB/3J,SAAlB+3J,cAC/CG,QJ6C0B,SAArBK,mBAAsBhlI,OAAQ2/F,UACvC,IAAIrgH,OAAS,EACTD,MAAQ,EAOZ,OANA2gB,OAAOzzC,QAAQ,SAACuS,KACZ,IACMmmK,OADMnmK,IAAI6gI,UACGqX,kBACnB33H,MAAQ/3B,KAAK6Q,IAAIknB,MAAO4lJ,OAAO5lJ,OAC/BC,QAAU2lJ,OAAO3lJ,UAGjBD,YACAC,eIxDU0lJ,CAAmBhlI,OAAQv8C,KAAKo9K,eAAevhJ,OAEzD,IAAMmB,SAAWw+I,YAAY1oK,OAAO,SAAC7Z,EAAGO,GAEpC,OADAP,GAAKO,IAGTwvB,SAASwyJ,YAAcA,YACvBxyJ,SAASgU,SAAWA,SAEhByjJ,QADAzjJ,SAAW,EACD+jJ,cAEAvF,YAAYvzK,IAAI,kBAAM,IAEpCo5K,SJ+J4B,SAAvBI,qBAAwBhlJ,SACjC,IAEIilJ,oBAFAC,QAAU,EACVC,UAAY,EAGZzG,aAQA1+I,QARA0+I,aACA6B,aAOAvgJ,QAPAugJ,aACA6E,gBAMAplJ,QANAolJ,gBACAhmJ,OAKAY,QALAZ,OACAg5G,oBAIAp4G,QAJAo4G,oBACAysC,OAGA7kJ,QAHA6kJ,OACA/kI,OAEA9f,QAFA8f,OACA2zF,KACAzzG,QADAyzG,KAGA8sC,mBAAoC1vK,IAApB0vK,aAAa,KAC7B2E,QAAU3E,aAAalqK,OAAO,SAAC7Z,EAAGO,GAE9B,OADAP,GAAKO,KAIT8nL,aAAwBh0K,IAAdg0K,OAAO,KACjBM,UAAYN,OAAOxuK,OAAO,SAAC7Z,EAAGO,GAE1B,OADAP,GAAKO,KAIbkoL,oBAAsBG,gBAAkBh+K,KAAK6N,MAAMmwK,gBAAkBD,WAErE,IAAME,OAASvlI,OAAO76C,OACtB,OAAO66C,OAAOt0C,IAAI,SAACoT,IAAK00H,MACpB,IACM34D,MADM/7D,IAAI60H,MACEqjB,kBAAkB13H,OAChCkmJ,WAAc3qG,MAA0CA,MAAQv7C,QAAzC6lJ,oBAAsB7lJ,QASjD,OAPKs/I,eACG6B,aAAat7K,OAAS,GAAKogL,SAAW9E,aAAat7K,OACnDqgL,WAAcL,oBAAsB1E,aAAajtC,MAAQ4xC,SAClD9sC,qBAA0C,IAAnBp4G,QAAQZ,UACtCkmJ,WAAcL,oBAAsBI,SAGrCj+K,KAAK6N,MAAMqwK,cIzMPN,EACPllI,cACA2zF,KAAMlwI,KAAKo9K,cACXvhJ,OAAQqlJ,QACRW,gBAAiBhmJ,OACjBg5G,wCACAmoC,0BACA7B,0BACAmG,gBAEA3B,UAAUj+K,OAAS,IACnB++K,QAAUA,QAAQx4K,IAAI,SAAChO,EAAGlC,GAAJ,OAAU8L,KAAK6Q,IAAIza,EAAG0lL,UAAU,GAAG5nL,IAAM,MAEnE4nL,UAAUz5K,KAAKu6K,SACf,IAAK,IAAIviJ,EAAI,EAAGA,EAAIyhJ,UAAUj+K,OAAQw8B,IAClCyhJ,UAAUzhJ,GAAKuiJ,QAGnB,OADAf,WAAWx5K,KAAKm7K,WACP1B,oBAAWD,mFAUL12J,UAAU,IAAAwM,OAAAx1B,KAInBgiL,YADFhiL,KAAK4M,SADL8uK,aAE6B3mB,OACzB6qB,WAAmD52J,SAAnD42J,WAAYD,UAAuC32J,SAAvC22J,UAAWD,WAA4B12J,SAA5B02J,WAAYI,YAAgB92J,SAAhB82J,YACrCvjI,OAASqjI,WAAWrjI,OACpB2jI,aAAe,IAAK,IACpBC,eAAiB,IAAK,IAEtBF,QAAU,EAAG,GACbjB,aAAeh/K,KAAKi/K,cAsB1B,OApBA1iI,OAAOzzC,QAAQ,SAACuS,IAAK00H,MACjB10H,IAAIvS,QAAQ,SAAC45D,KAAMwtE,MACf,IAAM+xC,UAAYvC,WAAWI,aAAa/vC,OAAS,EAC7CmyC,SAAWvC,UAAUG,aAAa5vC,MAExCxtE,KAAKgtF,kBAAkBwyB,SAAUD,UAAYD,aAEhC,IAATjyC,MAAcG,KAAO8uC,cACrBmB,aAAa,GAAGjwC,MAAQgyC,SACxBjC,OAAO,IAAMA,OAAO,IAAM,GAAKiC,UACf,IAATnyC,MAAcG,MAAQ8uC,eAC7BmB,aAAa,GAAGjwC,KAAO8uC,cAAgBkD,SACvCjC,OAAO,IAAMA,OAAO,IAAM,GAAKiC,UAE/BhyC,OAAS16G,OAAK4nJ,gBACd8C,WAAW,GAAGnwC,MAAQkyC,UACtB/B,WAAW,GAAGnwC,MAAQkyC,gBAK9BE,SAzBa,EAAG,GA0BhBlC,cACAC,sBACAC,uyCCrTSiC,yDAQjB,SAAAA,mBAAa7lI,QAAqB,IAAArnC,MAAbtI,OAAaxH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,wKAAAi9K,CAAAriL,KAAAoiL,qBAC9BltK,MAAAotK,wCAAAtiL,KAAAuiL,6BAAAH,oBAAAlqL,KAAA8H,KAAMu8C,OAAQ3vC,UAETqyK,cAAgB1iI,OAAO,GAAG76C,OAG/BwT,MAAKwoK,OACDpkL,IAAK4gL,YACLv7J,OAAQzJ,MAAKi5J,cAEjBj5J,MAAK+mK,cAAgB/mK,MAAKqmK,sBAVIrmK,gZARUgoK,6VA4BxC,IAAMU,WAAa59K,KAAKihE,OAExB,OADA27G,sBAAsBgB,YAAY,GAC3BrC,0BAAoBqC,WAAY59K,KAAK4M,SAAU5M,KAAKw7K,mFAGxCxyJ,UAAU,IAAA3T,OAAArV,KAEzB0/K,WAIA12J,SAJA02J,WACAC,UAGA32J,SAHA22J,UACA9jJ,OAEA7S,SAFA6S,OACAD,MACA5S,SADA4S,MAGJ,OAAO57B,KAAKy+K,eAAex2K,IAAI,SAAC23K,WAAY7nL,GACxC,IAAM8nL,gBAAmBD,sBAAYD,oBAAWD,sBAAYI,YAAa/nL,EAAG8jC,eAD9BkkJ,sBAM1C1qK,OAAK2qK,kBAAkBH,gBAHvBsC,QAH0CpC,sBAG1CoC,QACAjC,WAJ0CH,sBAI1CG,WACAC,aAL0CJ,sBAK1CI,aAEE9B,eAAiB8D,QACjB31C,gBAAkB5wG,MAAOA,OAE/B,OACIskJ,YACIE,QAASF,WAAW,GACpBG,UAAWH,WAAW,IAE1BC,cACIC,QAASD,aAAa,GACtBE,UAAWF,aAAa,IAE5BtkJ,QACIukJ,QAAS/B,eAAe,GACxBgC,UAAWhC,eAAe,IAE9BziJ,OACIwkJ,QAAS5zC,eAAe,GACxB6zC,UAAW7zC,eAAe,mEAYtB,IAAAriC,aAIZnqG,KAAK4M,SAFLuuK,aAFYhxE,aAEZgxE,aACA8B,iBAHY9yE,aAGZ8yE,iBAEE1gI,OAASv8C,KAAKy9K,cACdx8G,KAAOwO,kBAAmBzvE,KAAKihE,QAC/Bq/G,WAAarD,iBAAiB,GAC9BsD,WAAatD,iBAAiB,IAAMz0K,OAAO4P,kBAC3C0lK,aAAgB3C,aACtB5+H,OAAOnhC,MAAM,GAAGnT,IAAI,SAAAhO,GAAC,OAAI6iL,kBAAkB7iL,EAAGqmL,WAAYC,cADrBzD,kBAAkBvgI,OAAQ+jI,WAAYC,YAO3E,OAJAt/G,KAAKtiD,OAASm+J,kBAAkB77G,KAAKtiD,OAAQ2hK,WAAYC,YAEzDt/G,KAAK1kB,OAAS0kB,KAAK1kB,OAAOt0C,IAAI,SAAAhO,GAAC,OAAI6iL,kBAAkB7iL,EAAGqmL,WAAYC,eAGhEt/G,UACA68G,mGAIiB90J,UAAU,IAE3B6S,OAEA7S,SAFA6S,OACA6jJ,WACA12J,SADA02J,WAEAtU,gBAAkBvvI,OAClB2mJ,cACA9B,cACA+B,QAAU,EACR1kG,SAAW/9E,KAAK4M,SAASmxE,SACzBmgG,oBAAsBl+K,KAAK+9K,gBAAgBr8K,OAsBjD,OApBiB,IAAbq8E,UACA2iG,YAAcxC,oBAAsB,EAAGA,qBACvCuE,QAAU,IAEV/B,WAA0B,IAAb3iG,UAAkBmgG,oBAAsB,IAAMA,qBAC3DuE,QAAU,GAEd/C,WAAW52K,QAAQ,SAACq5K,QAASlgL,QACU,IAA/By+K,WAAWz6K,QAAQhE,SACnBugL,WAAWvgL,OAASkgL,QACpB/W,iBAAmB+W,WAGvB/W,gBAAkB,EAClBoX,WAAaA,WAAWv6K,IAAI,kBAAM,IAElCy4K,WAAW53K,QAAQ,SAACgnF,WAChB0yF,WAAW1yF,WAAajsF,KAAK4Q,IAAIirK,WAAW5vF,WAAas7E,gBAAmBqX,WAG7ED,iEAWKjE,eACZ,IAAIpjK,EACIygB,MAAU57B,KAAK4zG,iBAAfh4E,MAER,IAAKzgB,EAAI,EAAGA,EAAIojK,cAAc78K,UACtB68K,cAAcpjK,IAAMygB,OADUzgB,KAGtC,OAAOtX,KAAK4Q,IAAI8pK,cAAc78K,OAAS,EAAGyZ,iEAY1BygB,MAAOC,QAAQ,IAAAlkB,OAAA3X,KAC3B0/K,cACAC,aAYJ,OAVA3/K,KAAKy+K,eAAe31K,QAAQ,SAAC82K,YACzB,IAGMj5K,SAAYs6K,OAFH,EAEWC,QADV,EACmB3kI,OAHpBqjI,WAAWrjI,OAGiB3gB,YAAOC,cAAQ6jJ,sBAAYC,qBAChEnE,YAAc7jK,OAAKwpK,uBAAuBx6K,SAChDg5K,UAAYnE,YAAYmE,UACxBD,WAAalE,YAAYkE,aAGtB1/K,KAAKohL,uBAAwBvlJ,cAAQD,YAAO8jJ,sBAAYC,4FAS3C32J,UACpB,IAAIq4J,YAEA9kI,OAIAvzB,SAJAuzB,OACA3gB,MAGA5S,SAHA4S,MACA8jJ,WAEA12J,SAFA02J,WACAC,UACA32J,SADA22J,UAEEqC,YAAchiL,KAAK4M,SAAS8uK,aAAa3mB,OAEzCksB,OL4DiB,SAAlByB,gBAAmBrnK,KAC5B,IAAIwgB,OAAS,EACTD,MAAQ,EAMZ,OALAvgB,IAAIvS,QAAQ,SAAC2nE,KACT,IAAM+wG,OAAS/wG,IAAI8iF,kBACnB13H,OAASh4B,KAAK6Q,IAAImnB,OAAQ2lJ,OAAO3lJ,QACjCD,OAAS4lJ,OAAO5lJ,SAGhBA,YACAC,eKtEe6mJ,CAAgBnmI,OAAOv8C,KAAKo9K,gBAAgBxhJ,MACrD6kJ,QLwKqB,SAAtBkC,oBAAuBlmJ,QAASmmJ,cAAiB,IAEtDhC,eAGAnkJ,QAHAmkJ,eACAhlJ,MAEAa,QAFAb,MACAvgB,IACAohB,QADAphB,IAGAw5H,oBAGA+tC,aAHA/tC,oBACAsmC,aAEAyH,aAFAzH,aACA6B,aACA4F,aADA5F,aAEA2E,QAAU,EAOd,OANI3E,cAAgBA,aAAa,KAC7B2E,QAAU3E,aAAalqK,OAAO,SAAC7Z,EAAGO,GAE9B,OADAP,GAAKO,KAIN6hB,IAAIpT,IAAI,SAACwoE,IAAKyrE,UACjB,IAAM9kE,MAAQ3G,IAAI8iF,kBAAkB33H,MAChCinJ,UAAazrG,MAAoCA,MAAQx7C,OAAnCglJ,eAAiBhlJ,OAC3C,GAAIu/I,aACA,GAAI6B,aAAat7K,OAAS,EACtBmhL,UAAajC,eAAiB5D,aAAa9gC,UAAYylC,aACpD,GAAI9sC,qBAAiC,IAAVj5G,MAAa,CAC3C,IAAMknJ,OAASznK,IAAI3Z,OACnBmhL,UAAajC,eAAiBkC,OAGtC,OAAOj/K,KAAK6N,MAAMmxK,aKrMFF,EACZtnK,IAAKkhC,OAAOv8C,KAAKo9K,eACjBxhJ,MAAOqlJ,OACPL,eAAgBhlJ,OACjB57B,KAAK4M,UAER2vC,OAAOzzC,QAAQ,SAACuS,IAAK00H,MAAN,OAAe10H,IAAIvS,QAAQ,SAAC2nE,IAAKy/D,MAC5C,IAAM6yC,gBAAkBtyG,IAAI8iF,kBAE5B9iF,IAAIi/E,kBAAkB+wB,QAAQvwC,MAAQ8xC,YAAae,gBAAgBlnJ,QACnEwlJ,SAAStxC,MAAQlsI,KAAK6Q,IAAI2sK,SAAStxC,OAAS,EAAGlsI,KAAK6N,MAAM++D,IAAI8iF,kBAAkB13H,aAEhF6jJ,WAAWh+K,OAAS,IACpB2/K,SAAWA,SAASp5K,IAAI,SAAChO,EAAGlC,GAAJ,OAAU8L,KAAK6Q,IAAIza,EAAGylL,WAAW,GAAG3nL,OAEhE2nL,WAAWx5K,KAAKm7K,UAChB,IAAK,IAAInjJ,EAAI,EAAGA,EAAIwhJ,WAAWh+K,OAAQw8B,IACnCwhJ,WAAWxhJ,GAAKmjJ,SAGpB,OADA1B,UAAUz5K,KAAKu6K,UACNf,sBAAYC,iFAUN32J,UAAU,IAAAwM,OAAAx1B,KAInBgiL,YADFhiL,KAAK4M,SADL8uK,aAE6B3mB,OACzB6qB,WAA2D52J,SAA3D42J,WAAY/jJ,OAA+C7S,SAA/C6S,OAAQ8jJ,UAAuC32J,SAAvC22J,UAAWD,WAA4B12J,SAA5B02J,WAAYI,YAAgB92J,SAAhB82J,YAC7CvjI,OAASqjI,WAAWrjI,OACpB2jI,aAAe,IAAK,IACpBC,eAAiB,IAAK,IACtBgC,SAAW,EAAG,GAEdnD,aAAeh/K,KAAKi/K,cAEpB+D,mBAAqBhjL,KAAKghL,yBAA0BnlJ,cAAQ6jJ,WAAYA,WAAW,SAsBzF,OApBAnjI,OAAOzzC,QAAQ,SAACuS,IAAK00H,MACjB10H,IAAIvS,QAAQ,SAAC45D,KAAMwtE,MACf,IAAM+xC,UAAYe,mBAAmBjzC,OAAS,EACxCmyC,SAAWvC,UAAUG,aAAa5vC,MAExCxtE,KAAKgtF,kBAAkBwyB,SAAWF,YAAaC,WAElC,IAAT/xC,MAAcH,KAAOivC,cACrBkB,WAAW,GAAGnwC,MAAQkyC,UACtBE,QAAQ,IAAMA,QAAQ,IAAM,GAAKF,WACjB,IAAT/xC,MAAcH,MAAQivC,eAC7BkB,WAAW,GAAGnwC,KAAOivC,cAAgBiD,UACrCE,QAAQ,IAAMA,QAAQ,IAAM,GAAKF,WAEjClyC,OAASv6G,OAAK4nJ,gBACd+C,aAAa,GAAGjwC,MAAQgyC,SACxB/B,aAAa,GAAGjwC,MAAQgyC,eAKhCC,gBACAlC,QA3BY,EAAG,GA4BfC,sBACAC,+zEC7QL,SAAS8C,qBAAsB1mI,OAAQ1hD,MAC1C,OAAI0hD,OACOA,OAAOg3G,kBAAkB14J,MAE7B,EAoBX,IAAM60J,+BAAoB,SAApBA,kBAAqBnzG,OAAQ0jI,OAAQkC,SACvC5lI,OAAOzzC,QAAQ,SAACuS,IAAK00H,MACjB10H,IAAIvS,QAAQ,SAACqlJ,YAAaje,MACtBie,YAAYuB,kBAAkBuwB,OAAO/vC,MAAOiyC,QAAQpyC,YAK1DmzC,cAAgB,SAAhBA,cAAiB5K,OAAQ6K,YAAaC,YACxC,IAAIC,QAAU/K,OAAO1rK,SAAP,GAAA+O,OAAmBwnK,YAAnB,YAKd,OAJIC,WAAW1hL,OAAS,EAAI2hL,UACxBA,QAAU,EACV/K,OAAO1rK,OAAP02K,+BAAA,GAAA3nK,OAAoBwnK,YAApB,WAA2CE,WAExCA,SAGLE,sBACF7nK,QACI0gK,WTgNsC,mCS/MtC7/H,OTgNqB,eS/MrBilH,YToIa,QSnIbgiB,WAAYpJ,4BAEhB/+J,KACI+gK,WT4MuC,iCS3MvC7/H,OT4MkB,YS3MlBilH,YAAawY,uBACbwJ,WAAYrJ,2BAkDdsJ,wBAA0B,SAA1BA,wBAA2BnL,OAAQtnB,WAAY0yB,kBAAmBvqH,QAAxC,OAlCM,SAAhCwqH,8BAAiCrL,OAAQsL,eAAgBxH,WAAYjjH,QAAW,IAE9EqwG,WACA8O,OAAO1rK,SADP48J,WAGAjtH,OAGAqnI,eAHArnI,OACAilH,YAEAoiB,eAFApiB,YACAgiB,WACAI,eADAJ,WAGJ,OAAQha,YACR,ITuKoB,WStKhB,OAAO4S,WACX,QACI,IAAMyH,cAAgBZ,qBAAqB3K,OAAO/7H,UAAWilH,aAAeroG,OAK5E,OAHI0qH,cAAgBzH,YAChB9D,OAAOwL,WAAPR,+BAAqBE,YAAa,IAE/B3/K,KAAK6Q,IAAI0nK,WAAYyH,gBAgBhCF,CAA8BrL,OAAQiL,qBAAqBvyB,YAAa0yB,kBAAmBvqH,SA+DzF4qH,oCAAyB,SAAzBA,uBAA0BzL,OAAQ0L,mBAAsB,IAEtDnoJ,OACAy8I,OAAOp4E,cADPrkE,OAGAs9B,OACAm/G,OAAO1rK,SADPusD,OALsD8qH,sBA5BzB,SAA/BC,6BAAgC5L,OAAQ0L,mBAAsB,IAE5DnoJ,OACAy8I,OAAOp4E,cADPrkE,OAEE+zH,aAAe0oB,OAAO1oB,eAGtBu0B,sBAAwBtgL,KAAK4Q,IAAIm7I,aAAa2D,kBAAkB13H,OAAQA,OAAS,GAIvF+zH,aAAaF,kBAAkBs0B,kBAAmBG,uBAGlD,IAGMC,gBAHkBx0B,aAAay0B,oBAGG/L,OAAO1rK,SAAS03K,eAKxD,OACIC,mBAHuBH,gBAAgBvoJ,OAAOukJ,QAAUgE,gBAAgBvoJ,OAAOwkJ,UAI/E8D,6CAakDD,CAA6B5L,OAAQ0L,mBAAnFO,mBATkDN,sBASlDM,mBAAoBJ,sBAT8BF,sBAS9BE,sBAGtBK,+BAAiC3oJ,OAASh4B,KAAK4Q,IAAI0vK,sBAAuBI,oBAKhF,OACIA,sCACAJ,4CACAM,gBALoBhB,wBAAwBnL,OTwCjC,MSxC8CkM,+BAAgCrrH,QAMzFqrH,gEAoDFE,iBACFC,UAAU,EACVnb,WTMkB,USWhBob,uCAA4B,SAA5BA,0BAA6BtM,QAAW,IAEtCn/G,OACAm/G,OAAO1rK,SADPusD,OAFsCo3D,MAAAs0D,4BAIEzK,2BAAYD,0BAAUlyK,IAAI,SAACpN,MACnE,OAnBuB,SAAzBiqL,uBAA0BxM,OAAQz9K,MACpC,IAAMipL,WAAaxL,OAAOwL,aAKpBiB,mBACFvb,WAHA8O,OAAO1rK,SADP48J,WAKAmb,SAAUb,WAAWjpL,OAGzB,OAAOpC,OAAOqN,KAAK4+K,iBAAiB5lK,MAAM,SAAA7kB,GAAC,OAAIyqL,gBAAgBzqL,KAAO8qL,kBAAkB9qL,KAQhF6qL,CAAuBxM,OAAQz9K,MACxBs+D,OAEJ,IAR+B,GAW1C,OACI6rH,iBAZsCz0D,MAAA,GAatC00D,eAbsC10D,MAAA,KAuBjC20D,uCAA4B,SAA5BA,0BAA6B5M,QACtC,IAAM3oB,UAAY2oB,OAAO3oB,YACnBC,aAAe0oB,OAAO1oB,eAFqBu1B,sBAhLvB,SAAxBC,sBAAyB9M,QAC3B,IAAM3oB,UAAY2oB,OAAO3oB,YAErB/zH,MACA08I,OAAOp4E,cADPtkE,MAHkCypJ,gBAQlC/M,OAAO1rK,SAFPmoJ,OANkCswB,gBAMlCtwB,OACA57F,OAPkCksH,gBAOlClsH,OAIE6oH,YAAcjtB,OAAOn5H,MAGrB0pJ,eAAiBrC,qBAAqBtzB,UT0D3B,SSvDX41B,kBAAoB1hL,KAAK4Q,IAAI6wK,eAAiBnsH,OAAQv9B,MAAQ,GAG9D4pJ,iCAAmC5pJ,MAAQ2pJ,kBAAoBvD,YAKrE,OACIsD,8BACAC,oCACAvB,kBALsBP,wBAAwBnL,OT4FhC,SS5FgDkN,iCAAkC,GAMhGA,mEA6JAJ,CAAsB9M,QAJtBgN,eAN6CH,sBAM7CG,eACAC,kBAP6CJ,sBAO7CI,kBACAC,iCAR6CL,sBAQ7CK,iCACAxB,kBAT6CmB,sBAS7CnB,kBAT6CyB,sBAiB7C1B,oCAAuBzL,OAAQ0L,mBAH/BO,mBAd6CkB,sBAc7ClB,mBACAE,gBAf6CgB,sBAe7ChB,gBACAD,+BAhB6CiB,sBAgB7CjB,+BAhB6CkB,sBAsB7Cd,uCAA0BtM,QAF1B0M,iBApB6CU,sBAoB7CV,iBACAC,eArB6CS,sBAqB7CT,eAEJt1B,UAAUD,kBAAkB61B,kBAAoBN,eAAgBR,gBAAkBO,kBAGlF,IAAMW,kBAAoBh2B,UAAU00B,oBAC9BuB,qBAAuBh2B,aAAay0B,oBAS1C,OANAnB,cAAc5K,OT1FC,MS0FYqN,mBAC3BzC,cAAc5K,OT5FI,SS4FYsN,sBAzHC,SAA7BC,2BAA8BvN,OAAQqN,kBAAmBC,sBAAyB,IAAAnxJ,KAAAm2C,MAAA9mD,MAAAssG,MAAAW,MAC9EsnD,aAAeC,OAAOD,eAGxBtjB,OACAujB,OAAO1rK,SADPmoJ,OAEEve,SAAW8hC,OAAO9hC,WAEpB/zG,IAEA+zG,SAFA/zG,IACAovB,OACA2kF,SADA3kF,OAIEmwH,YAAcjtB,OAAOn5H,MAGrBskJ,YAAazrJ,SAAG9Y,OAAHpU,MAAAktB,KAAAqxJ,+BAAaH,kBAAkB19K,IAAI,SAAAhO,GAAC,OAAIA,EAAEimL,WAAWE,YAGlE2F,kBAAmBn7G,UAAGjvD,OAAHpU,MAAAqjE,MAAAk7G,+BAAaH,kBAAkB19K,IAAI,SAAAhO,GAAC,OAAIA,EAAEkmL,aAAaC,YAC1E4F,oBAAqBliK,UAAGnI,OAAHpU,MAAAuc,MAAAgiK,+BAAaH,kBAAkB19K,IAAI,SAAAhO,GAAC,OAAIA,EAAEkmL,aAAaE,cAG5EF,cAAe/vD,UAAGz0G,OAAHpU,MAAA6oH,MAAA01D,+BAAaF,qBAAqB39K,IAAI,SAAAhO,GAAC,OAAIA,EAAEkmL,aAAaC,YAGzE6F,qBAAuBL,qBAAqB,GAAG1F,WAAWE,QAC1D8F,wBAAyBn1D,UAAGp1G,OAAHpU,MAAAwpH,MAAA+0D,+BAAaF,qBAAqB39K,IAAI,SAAAhO,GAAC,OAAIA,EAAEimL,WAAWG,cAIvFhI,aAAavvK,QAAQ,SAACyzC,OAAQwzF,MAC1BxzF,OAAOzzC,QAAQ,SAACqlJ,YAAaje,MACzBie,YAAYuB,kBAAkBywB,aAAajwC,MAAQ8xC,YAAa9B,WAAWnwC,MAAQiyC,iBAM3FtyB,+BAAkBjtH,IAAI,GAAIsjJ,iBAAkBE,sBAE5Cv2B,+BAAkBjtH,IAAI,GAAIujJ,mBAAoBC,sBAE9Cv2B,+BAAkB79F,OAAO,GAAIk0H,iBAAkBG,wBAE/Cx2B,+BAAkB79F,OAAO,GAAIm0H,mBAAoBE,wBA+EjDL,CAA2BvN,OAAQqN,kBAAmBC,uBAGlDnB,gBAAiBA,gBAAkBO,iBACnCM,eAAgBA,eAAiBL,eACjCT,+BAAgCA,+BAAiCQ,iBAEjET,sCACAP,oCACAwB,oEC1RFW,WAAa,SAAbA,WAAa18J,YAAU,OAAIA,WAAW3W,OAAO,SAACszK,MAAOruK,SAAR,OAAoBquK,MAAQruK,SAAS,yrDCrCnEsuK,2CAUjB,SAAAA,WAAa7vC,SAAUpgH,WAAY8pE,YAAatzF,QAAQ,IAAAsI,MAAA,2JAAAoxK,CAAAtmL,KAAAqmL,aACpDnxK,MAAAqxK,iCAAAvmL,KAAAwmL,sBAAAH,YAAAnuL,KAAA8H,KAAMo2B,WAAY8pE,YAAatzF,UAC1B4pI,SAASA,UACdthI,MAAKtI,OAAOsI,MAAK2Q,YAAYk2E,iBAC7B7mF,MAAKuxK,UAAYn8K,cACjB4K,MAAKwxK,UAAYxxK,MAAK2Q,YAAY8gK,kBAClCzxK,MAAK0xK,aAAgB3mB,YAAY,EAAOC,UAAU,GANEhrJ,0XAVpBmlK,0SA0E1B7jC,WACN,OAAIA,WACAx2I,KAAKu6K,UC1FqB,SAAzBsM,uBAA0BpqJ,QAAS+5G,UAE5C,IAIIswC,YACAC,YALA13B,cACAC,eACAC,aACAC,gBALqD4R,gBAgBrD3kI,QAAQ7vB,SAPRo/I,eATqDoV,gBASrDpV,eACAC,kBAVqDmV,gBAUrDnV,kBACA+6B,YAXqD5lB,gBAWrD4lB,YACAhK,aAZqD5b,gBAYrD4b,aACAjoB,OAbqDqM,gBAarDrM,OACAkpB,UAdqD7c,gBAcrD6c,UACAlgG,SAfqDqjF,gBAerDrjF,SAfqD2jF,qBAoBrDjlI,QAAQyjE,cAFRu5E,cAlBqD/X,qBAkBrD+X,cACAD,aAnBqD9X,qBAmBrD8X,aAEI/2I,IAAwB+zG,SAAxB/zG,IAAKmwB,OAAmB4jF,SAAnB5jF,OAAQf,OAAW2kF,SAAX3kF,OArBoC29G,KAAAyX,4BAsBjBxkJ,IAtBiB,GAsBlDkwH,QAtBkD6c,KAAA,GAsBzCv4B,WAtByCu4B,KAAA,GAsB7B5c,SAtB6B4c,KAAA,GAAA0X,QAAAD,4BAuBdr0H,OAvBc,GAuBlDkkF,SAvBkDowC,QAAA,GAuBxCtwC,YAvBwCswC,QAAA,GAuB3BnwC,UAvB2BmwC,QAAA,GAAAC,QAAAF,4BAwBRp1H,OAxBQ,GAwBlDogG,WAxBkDk1B,QAAA,GAwBtCjwC,cAxBsCiwC,QAAA,GAwBvBj1B,YAxBuBi1B,QAAA,GAqFzD,OA3DIrwC,SAASp1I,OAAS,IAElB2tJ,cAAU1zI,OAAAyrK,gCAAOz0B,SAAPy0B,gCAAmBtwC,UAAnBswC,gCAAgCn1B,cAE1Clb,UAAUr1I,OAAS,IAEnB4tJ,eAAW3zI,OAAAyrK,gCAAOx0B,UAAPw0B,gCAAoBrwC,WAApBqwC,gCAAkCl1B,eAE7Cjb,WAAWv1I,OAAS,GAAKu1I,WAAW,GAAGv1I,OAAS,IAEhD6tJ,UAAYtY,WAAWhvI,IAAI,SAAC5P,EAAGN,GAAJ,SAAA4jB,OAAAyrK,gCAAcz0B,QAAQ56J,IAAtBqvL,gCAA6B/uL,GAA7B+uL,gCAAmCx0B,SAAS76J,QAEvEm/I,cAAcx1I,OAAS,GAAKw1I,cAAc,GAAGx1I,OAAS,IAEtD8tJ,aAAetY,cAAcjvI,IAAI,SAAC5P,EAAGN,GAAJ,SAAA4jB,OAAAyrK,gCAAcn1B,WAAWl6J,IAAzBqvL,gCAAgC/uL,GAAhC+uL,gCAAsCl1B,YAAYn6J,QAGvF0kC,QAAQkzH,UAAU,IAAI03B,4BAAWh4B,WAAYC,cACzCza,oBAAqBmX,eACrBgxB,aAAcA,aAAajiK,KAC3BumK,OAAQ0F,YAAYjsK,KACpB2gK,cACI9/I,MAAO49I,aACP39I,OAAQ49I,cACR1kB,OAAQA,OAAOn5H,OAEnBmiD,SAAUA,SAAS1iE,IACnB4iK,UAAWA,UAAUljK,KAAK9S,IAAI,SAAAhO,GAAC,OAAIA,EAAI4J,KAAK6Q,IAAIi+I,QAAQjxJ,OAAQkxJ,SAASlxJ,UACzEu7K,kBAAmBtqB,QAAQjxJ,OAAQuwJ,WAAWvwJ,WAI9ColL,YADAn0B,QAAQjxJ,OAAS,EACHixJ,QAAQ,GAAGjxJ,OAEXuwJ,WAAWvwJ,OAAS,EAAIuwJ,WAAW,GAAGvwJ,OAAS,EAI7DqlL,YADAn0B,SAASlxJ,OAAS,EACJkxJ,SAAS,GAAGlxJ,OAEZwwJ,YAAYxwJ,OAAS,EAAIwwJ,YAAY,GAAGxwJ,OAAS,EAGnE+6B,QAAQmzH,aAAa,IAAI03B,kCAAc/3B,UAAWC,eAC9C3a,oBAAqBoX,kBACrB+wB,aAAcA,aAAaljK,QAC3BwnK,OAAQ0F,YAAYltK,QACpBqhK,cAAc,EACdO,cACI9/I,MAAO49I,aACP39I,OAAQ49I,cACR1kB,OAAQA,OAAOn5H,OAEnBmiD,SAAUA,SAAStN,IACnBwtG,UAAWA,UAAUnkK,QACrBmjK,kBAAmB6J,YAAaC,gBAEpCtqJ,QAAQ47I,aAAazhC,aAEdJ,SDKkBqwC,CAAuB7mL,KAAMw2I,WACvCx2I,MAEXunL,WAAAf,sBAAAH,WAAAxsL,WAAA,WAAAmG,MAAA9H,KAAA8H,KAAsBw2I,iEAWtBx2I,KAAK8jL,YAAa7jB,YAAY,EAAOC,UAAU,IADlC,IAAAsnB,sBAKTtC,uCAA0BllL,MAF1BwkL,+BAHSgD,sBAGThD,+BACAgB,iCAJSgC,sBAIThC,iCAIJ,OADAxlL,KAAKynL,mBAAmBjD,+BAAgCgB,kCACjDxlL,+CAGDnF,KAAM6sL,YACZ,IAAMC,SAAW9sL,KAAK4G,cAEhBmmL,WADuB5nL,KAAKu4K,WAA1BC,iBAC2B,GAAA78J,OAAIgsK,SAAJ,UAC7BtE,QAAUx/K,KAAK4Q,IAAI5Q,KAAK6Q,IAAI,EAAGgzK,YAAaE,YAMlD,OALA5nL,KAAK4M,iLAALi7K,IAAA,GAAAlsK,OACQgsK,SADR,WAC4BtE,QAAU,IAEtCrjL,KAAKynL,qBACLznL,KAAK8nL,aACE9nL,yCAGJnF,MAAM,IACD29K,iBAAqBx4K,KAAKu4K,WAA1BC,iBACFmP,SAAW9sL,KAAK4G,cACtB,OACImmL,WAAYpP,iBAAgB,GAAA78J,OAAIgsK,SAAJ,UAC5BI,YAAa/nL,KAAK4M,SAAL,GAAA+O,OAAiBgsK,SAAjB,YAAsC,+CAKvD,OAAIviL,UAAS1D,QACT1B,KAAK0mL,UAALthL,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK0mL,0DAIZ,OAAIthL,UAAW1D,QACX1B,KAAK4mL,YAAcn3G,eAAezvE,KAAK4mL,YAANxhL,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAC1BpF,MAEJA,KAAK4mL,0EASIoB,aAAcC,aAAa,IAAA7jB,cAKvCpkK,KAAK4M,SAHLs7K,WAFuC9jB,cAEvC8jB,WACA5D,cAHuClgB,cAGvCkgB,cACAvvB,OAJuCqP,cAIvCrP,OAEEyjB,iBD/JiB,SAAlB2P,gBAAmB7P,OAAQ4P,WAAY5D,eAYhD,IAXA,IAAM30B,UAAY2oB,OAAO3oB,YACnBC,aAAe0oB,OAAO1oB,eACtByoB,aAAeC,OAAOD,eACtB7hC,SAAW8hC,OAAO9hC,WAClB4xC,YAAcz4B,UAAU04B,sBACxBC,eAAiB14B,aAAay4B,sBAC9BE,sBACFltK,IAAK,EACLK,OAAQ,GAGH3jB,EAAImwL,WAAa,EAAGnwL,GAAK,EAAGA,IAAK,CACtC,IAAM2J,OAASmC,KAAK6Q,IAAI0zK,YAAYrwL,GAAGgmL,cAAcr8K,OACjD0mL,YAAYrwL,GAAGimL,gBAAgBt8K,QACnC6mL,qBAAqBltK,KAAO3Z,OAGhC,IAAK,IAAI3J,GAAIusL,cAAgB,EAAGvsL,IAAK,EAAGA,KAAK,CACzC,IAAMwkD,OAAS+rI,eAAevwL,IACtBgmL,cAAmCxhI,OAAnCwhI,cAAeC,gBAAoBzhI,OAApByhI,gBACjBt8K,QAASmC,KAAK6Q,IAAIqpK,cAAc,GAAKA,cAAc,GAAGr8K,OAAS,EACjEs8K,gBAAgB,GAAKA,gBAAgB,GAAGt8K,OAAS,GACrD6mL,qBAAqB7sK,QAAUha,QAGnC80I,SAAS/zG,IAAI,GAAK6lJ,eAAehE,eAAevG,cAChDvnC,SAAS3kF,OAAO,GAAKy2H,eAAehE,eAAetG,gBAEnDxnC,SAAS5jF,OAAO,GAAKw1H,YAAYF,YAAYnK,cAC7CvnC,SAAS5jF,OAAO,GAAKw1H,YAAYF,YAAYlK,gBAE7C,IAAMwK,aAAe3kL,KAAK6Q,IAAI8hI,SAAS5jF,OAAO,GAAGlxD,OAAQ80I,SAAS5jF,OAAO,GAAGlxD,QAEtE+mL,gBAAkB5kL,KAAK6Q,IAAI8hI,SAAS/zG,IAAI,GAAG,GAAK+zG,SAAS/zG,IAAI,GAAG,GAAG/gC,OAAS,EAAG80I,SAAS3kF,OAAO,GAAG,GAChG2kF,SAAS3kF,OAAO,GAAG,GAAGnwD,OAAS,GAIvC,OAHA80I,SAAS5jF,OAAO,GAAKylH,aAAaj9J,MAAMmtK,qBAAqBltK,IAAKktK,qBAAqBltK,IAAMmtK,cACxFvgL,IAAI,SAAAs0C,QAAM,OAAIA,OAAOnhC,MAAMmtK,qBAAqB7sK,OAAQ6sK,qBAAqB7sK,OAAS+sK,oBAGvFjyC,kBACAkyC,SAAUN,YAAY1mL,OACtBinL,YAAaL,eAAe5mL,QCqHHymL,CAAgBnoL,KAAMkoL,WAAY5D,eACrDsE,iBD3GqB,SAAtBC,oBAAuBvQ,OAAQ0P,aAAcC,aACtD,IAAMt4B,UAAY2oB,OAAO3oB,YACnBC,aAAe0oB,OAAO1oB,eAF0Ck5B,eAMlExQ,OAAO1rK,SAFP03K,cAJkEwE,eAIlExE,cACA4D,WALkEY,eAKlEZ,WAGEa,UAAYp5B,UAAU00B,oBAAoB6D,YAC1Cc,UAAYp5B,aAAay0B,oBAAoBC,eAG/CpE,WAEA6I,UAFA7I,WACOoF,eACPyD,UADAntJ,MAGAukJ,aAEA6I,UAFA7I,aACQoE,mBACRyE,UADAntJ,OAGa+wI,UAAqC0Y,eAA9ClF,QAA+B6I,WAAe3D,eAA1BjF,UACX6I,UAAuC3E,mBAAhDnE,QAA+B+I,aAAiB5E,mBAA5BlE,UAEtB+I,aAAejD,WAAWjG,WAAWE,SACrCiJ,YAAclD,WAAWhG,aAAaC,SACtCkJ,WAAa1c,UAAW/oK,KAAK4Q,IAAI40K,YAAapB,aAAcgB,YAC5DM,YAAcL,UAAWrlL,KAAK4Q,IAAI20K,aAAcpB,cAAemB,cAErE,OACIG,oBACAC,sBACAC,sBACI3tJ,OAAQutJ,aACRxtJ,MAAOytJ,aAEXI,eACI7tJ,MAAOuqJ,WAAWmD,WAClBztJ,OAAQsqJ,WAAWoD,aAEvBG,YAAaxJ,WACbyJ,WAAYxJ,cCmEa0I,CAAoB7oL,KAAMgoL,aAAcC,aAMjE,OALAW,iBAAiB7zB,OAASA,OAC1B/0J,KAAKu4K,UACDC,kCACAoQ,oCAEG5oL,iEAzIP,OAAOvH,OAAOoU,WACV+7K,kBACI7zB,OAAQ/0J,KAAK+7F,gBAAgBg5D,OAC7Bw0B,YAAa,EAAG,EAAG,GACnBD,WAAY,EAAG,EAAG,IAEtB9Q,kBACImQ,YAAa,EACbD,SAAU,EACVlyC,UAAY/zG,OAASmwB,UAAYf,8EAazC,OAAOipH,2EAWP,OAAOJ,8DAWP,OAAO,IAAI2L,WAAW,KAAM,KAAMrmL,KAAKm9J,qBAAsBn9J,KAAK+7F,oNE5E1E,0CAAM6tF,WAASC,6BAAAC,cAAA,GAAAnuK,ObqOI,MarOJ,KAAAA,ObsOK,QA0BM,MahQXkuK,6BAAAC,WAAA,GAAAnuK,ObqOI,MarOJ,KAAAA,Ob+PO,UA5BA,UanOPkuK,6BAAAC,WAAA,GAAAnuK,ObqOI,MarOJ,KAAAA,ObuOM,SAyBK,MahQXkuK,6BAAAC,WAAA,GAAAnuK,ObyOO,SazOP,KAAAA,ObsOK,QAFD,OapOJkuK,6BAAAC,WAAA,GAAAnuK,ObyOO,SazOP,KAAAA,Ob+PO,UAtBA,UazOPkuK,6BAAAC,WAAA,GAAAnuK,ObyOO,SazOP,KAAAA,ObuOM,SAHF,OapOJkuK,6BAAAC,WAAA,GAAAnuK,ObwOO,SaxOP,KAAAA,ObsOK,QA0BM,MahQXkuK,6BAAAC,WAAA,GAAAnuK,ObwOO,SaxOP,KAAAA,Ob+PO,UA5BA,UanOPkuK,6BAAAC,WAAA,GAAAnuK,ObwOO,SaxOP,KAAAA,ObuOM,SAyBK,MahQXmuK,YAgBTC,oCAAwB,SAAxBA,sBAAyBC,YAAaC,YAAaxoH,MAAOyoH,YAAe,IAEvEx1I,MAGAw1I,WAHAx1I,MACA9Y,MAEAsuJ,WAFAtuJ,MACA9B,MACAowJ,WADApwJ,MAEEsgI,YAAW,GAAAz+I,OAAMigB,MAAN,OAAAjgB,OAAiBme,OAElCkwJ,YAAYlhL,QAAQ,SAACqhL,aAZG,SAAtBC,oBAAuB3oH,MAAO/sB,MAAO75C,KAAMi/B,OAC7C2nC,MAAM3nC,MAAN,UAAAne,OAAsB9gB,MAAtB,GAAA8gB,OAAiCme,MAAjC,KAAAne,OAA0C+4B,QAYtC01I,CAAoB3oH,MAAOwoH,YAAYE,YAAcz1I,MbgOhC,gBahOuDy1I,WAAY/vB,gBAiBnFiwB,2BAAe,SAAfA,aAAgB5oH,MAAOszF,OAAQ15I,IAAKK,QAC7C,IAAM4uK,gBAdY,SAAhBC,cAAiB9oH,MAAOyoH,YAAe,IAEtCzzC,eAGDyzC,WAHCzzC,eACDC,eAEAwzC,WAFAxzC,eACAC,iBACAuzC,WADAvzC,iBAEF,OACIt7H,IAAK,SAAAA,MAAA,OAAM0uK,qCbiMA,MAGG,UapMkCtzC,eAAgBh1E,MAAOyoH,aACvExuK,OAAQ,SAAAA,SAAA,OAAMquK,qCbiMF,OACC,SalMsCrzC,eAAgBj1E,MAAOyoH,aAC1Et3H,OAAQ,SAAAA,SAAA,OAAMm3H,qCbgMF,OACC,QAFF,MAGG,UalMkDpzC,iBAAkBl1E,MAAOyoH,cAKrEK,CAAc9oH,MAAOszF,QACvCy1B,aAAeZ,UAAS,GAAAjuK,OAAIk+J,iBAAiBD,WAAWv+J,MAAhC,KAAAM,OAAyCo+J,oBAAoBr+J,UACvF8uK,cACAF,gBAAgBE,+LC9CxB,IAAMC,WAAa,SAAbA,WAAar5K,KAAG,OAAIvI,MAAMG,KAAKH,MAAMuI,IAAI1P,QAAQoE,SAEjD4kL,YAAc,SAAdA,YAAe93G,MAAO+3G,WAAmC,IAAxBC,eAAwBxlL,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,MAEvD0hB,MAEA8jK,eAFA9jK,MACAiiE,MACA6hG,eADA7hG,MAEE33E,IAAMu5K,UAAUvvK,QAChByvK,UAAYj4G,MAAMx3D,QAClB0vK,UAAYD,UAAUzvK,QAS5B,GANA0L,MAAQA,OAASje,MAAMG,KAAKH,MAAMuI,IAAI1P,QAAQoE,QAG9CijF,MAAQA,OAAU,SAAArgF,GAAC,OAAIA,GAGE,IAArBmiL,UAAUnpL,OAAc,CACxB,IAAMitH,WAIN,OAHA7nG,MAAMhe,QAAQ,SAAC7O,GACX00H,QAAOzoH,KAAKkL,IAAInX,OAEX6wL,oBAAWD,UAAWz5K,IAAKA,IAAKu9G,SAQ7C,IALA,IAAIo8D,OAAS,GACTC,SAAW,GACTr8D,UAGG52H,EAAI+uB,MAAMplB,OAAS,EAAG3J,GAAK,EAAGA,IAAK,CAExC,IAAMkzL,cAAgBnkK,MAAM/uB,GAO5B,IAJAgzL,QAAUhiG,MAAM33E,IAAI65K,oBACpBD,UAAYjiG,MAAM8hG,UAAUI,iBAIxBt8D,OAAOs8D,eAAiB,SACrB,CACHD,SAAW,GAGX,IAAK,IAAI7vK,EAAIpjB,EAAGojB,EAAI2L,MAAMplB,OAAQyZ,IAAK,CACnC,IAAM+vK,QAAUpkK,MAAM3L,GAChBgwK,QAAU/5K,IAAI85K,SAEpBv8D,OAAOu8D,SAAWC,QAGlBN,UAAUK,SAAWC,QACrBH,SAAWD,SAIvB,IAAMK,aAIN,OAHAtkK,MAAMhe,QAAQ,SAAC7O,GACXmxL,UAAUllL,KAAKyoH,OAAO10H,OAEjB6wL,oBAAWD,oBAAWz5K,IAAKg6K,YAGlCC,eAAiB,SAAjBA,eAAkBvhK,QAASI,OAAQqyB,OAAQwzF,MAG7C,IAAKjmH,QACD,OAAO,kBAAM,GAGjB,IAAM42J,YACFrlK,IAAK,SAAAA,IAAAurB,OAAK,OAAI2V,OAAOwzF,KAAOnpG,QAAU2V,OAAOwzF,KAAOnpG,OAAO1c,SAC3DxO,OAAQ,SAAAA,OAAAkrB,OAAK,OAAI2V,OAAOwzF,MAAM7lH,OAAS0c,SAG3C,OAAO,SAAC/rC,MAIJ,IAHA,IAAI+rC,MAAQ,EACR0kJ,QAAS,GAELA,QAC4B,OAA5B5K,WAAW7lL,MAAM+rC,OACjBA,OAAS,EAET0kJ,QAAS,EAGjB,OAAO1kJ,QAIT2kJ,YAAc,SAAdA,YAAehvI,OAAQz1B,OAAT,OAChBzL,IAAK,SAAAA,MACD,IAAIu3D,SACJ,OAAOr2B,OAAOt0C,IAAI,SAAChO,GAAM,IAAAuxL,aAIbd,YAAY93G,MAAO34E,GAAK8uF,MAAO,SAAAA,MAAA7nF,KAAG,OAAIA,IAAI8d,WAAW8H,cAFrD+jK,UAFaW,aAEbX,UACAz5K,IAHao6K,aAGbp6K,IAIR,OADAwhE,MAAQi4G,UACDz5K,OAGfsK,OAAQ,SAAAA,SACJ,IAAIk3D,SACE64G,cAiBN,OAhBAlvI,OAAO76C,QAAU66C,OAAO,GAAGzzC,QAAQ,SAAC45D,KAAMw5E,UACtC,IAAMwvC,aACNnvI,OAAOzzC,QAAQ,SAACuS,KACZqwK,UAAUxlL,KAAKmV,IAAI6gI,aAH4B,IAAAyvC,cAQ3CjB,YAAY93G,MAAO84G,WAAa3iG,MAAO,SAAAA,MAAA7nF,KAAG,OAAIA,IAAI8d,WAAW8H,cAF7D+jK,UAN2Cc,cAM3Cd,UACAz5K,IAP2Cu6K,cAO3Cv6K,IAERwhE,MAAQi4G,UAERtuI,OAAOzzC,QAAQ,SAACuS,IAAKqzH,UACjB+8C,WAAW/8C,UAAY+8C,WAAW/8C,cAClC+8C,WAAW/8C,UAAUwN,UAAY9qI,IAAIs9H,cAGtC+8C,cAITG,cAAgB,SAAhBA,cAAgBH,YAAU,OAC5BpwK,IAAK,SAAAA,MACD,IAAMwwK,SAUN,OATAJ,WAAW3iL,QAAQ,SAACuS,IAAKywK,MACrBD,MAAMC,MAAQD,MAAMC,UACpBzwK,IAAIvS,QAAQ,SAAC2nE,IAAK14E,GACd,GAAI0zL,WAAWK,MAAM/zL,GAAI,CACrB,IAAMg0L,SAAWV,eAAe56G,IAAK14E,EAAG0zL,WAAYK,KAAnCT,CAAyC,OAC1DU,UAAYF,MAAMC,MAAM5lL,KAAK6lL,eAIlCF,OAEXnwK,OAAQ,SAAAA,SAAA,OAAM+vK,WAAWxjL,IAAI,SAACoT,IAAKywK,MAAN,OAAezwK,IAAIpT,IAAI,SAACwoE,IAAK14E,GAAN,OAAYszL,eAAe56G,IAAK14E,EAAG0zL,WAAYK,KAAnCT,CAAyC,YACxFt3K,OAAO,SAAA08D,KAAG,OAAY,IAARA,WAG7Bu7G,SAAW,SAAXA,SAAWC,WAAS,OACtB5wK,IAAK,SAAAA,IAACkhC,QACF,OAAI0vI,UACOxB,WAAWluI,OAAO,IAAIh4B,UAE1BkmK,WAAWluI,OAAO,KAE7B7gC,OAAQ,SAAAA,OAAC6gC,QACL,OAAI0vI,UACOxB,WAAWluI,QAAQh4B,UAEvBkmK,WAAWluI,WAIpB2vI,wBAAsBC,0BAAAC,yBAAA,GAAAzwK,OdoET,McpES,OAEpB0wK,YAAaL,UAAS,GAAT,OACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAWhkL,WAAX,EAAAnC,WAAA,QAChCmnL,UAAW,SAAAA,YAAA,OAAeX,cAAarkL,WAAb,EAAAnC,WAAA,UAJN+mL,0BAAAC,sBAAA,GAAAzwK,OduEN,ScvEM,OAOpB0wK,YAAaL,UAAS,GAAT,OACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAWhkL,WAAX,EAAAnC,WAAA,QAChCmnL,UAAW,SAAAA,YAAA,OAAeX,cAAarkL,WAAb,EAAAnC,WAAA,UATN+mL,0BAAAC,sBAAA,GAAAzwK,OdwEN,ScxEM,OAYpB0wK,YAAaL,UAAS,GAAT,IACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAWhkL,WAAX,EAAAnC,WAAA,KAChCmnL,UAAW,SAAAA,YAAA,OAAeX,cAAarkL,WAAb,EAAAnC,WAAA,OAdN+mL,0BAAAC,sBAAA,GAAAzwK,OdwEN,ScxEM,OAiBpB0wK,YAAaL,UAAS,GAAT,IACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAWhkL,WAAX,EAAAnC,WAAA,KAChCmnL,UAAW,SAAAA,YAAA,OAAeX,cAAarkL,WAAb,EAAAnC,WAAA,OAnBNgnL,uBAuBtBI,oBAAsB,SAAtBA,oBAAuB3xL,MACzB,IAAM+xH,UAAYs/D,uBAAuBrxL,MACzC,OAAI+xH,YAIAy/D,YAAa,SAAAA,cAAA,OAAM,MACnBC,gBAAiB,SAAAA,gBAAA/vI,QAAM,OAAI,kBAAMA,SACjCgwI,UAAW,SAAAA,YAAA,OAAM,kBAAM,SA+B/B,IA4BME,YAAc,SAAdA,YAAehrH,MAAOoqH,MAAOj/K,OAAQ/R,MACvC,IAAI6xL,YAAc,EAClBjrH,MAAMrO,KAAKv4D,KAAM,SAAU6nE,KAAMw5E,UAC7B,IAAMvqB,KAAOk6D,MAAMnpH,KAAKgsE,UAAUwN,UAC5BiS,YAAczrF,KAAKyrF,YACnBlsJ,OACFoZ,IAAKqnD,KAAKgsE,SACVj+D,IAAKi8G,aAKT,OAxCyB,SAA3BC,2BAAqE,IAAAl4J,KAAzCk9F,KAAyCvsH,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAAlC,EAAG+oJ,YAA+B/oJ,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAlBV,OAAkBxH,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EAAVrL,MAAUmD,UAAA1D,OAAA,EAAA0D,UAAA,QAAAkI,EACjEuuB,OAASsyH,YAAYx3C,cACrB/6E,MAAQuyH,YAAYz3C,aACpBsrE,YAAcp1K,OAAOmoJ,OAAOn5H,MAC1B+tJ,WAAe/8K,OAAOkc,WAAtB6gK,WACAl5G,IAAQxuE,MAARwuE,IAER,OAAA07G,0BAAA13J,QdUoB,UcVpB,WAKQ05H,YAAYuB,kBAAkB9zH,MAAOC,OAAS81F,QALtDw6D,0BAAA13J,KdWoB,UcXpB,WASQ,GAAIk9F,KAAO,EAAG,CAEV,IADA,IAAIi7D,gBAAkB,EACb70L,EAAI04E,IAAK14E,EAAI04E,IAAMkhD,KAAM55H,IAC9B60L,iBAAmBjD,WAAWvJ,QAAQroL,GAAKiqL,YAE/C7zB,YAAYuB,kBAAkBk9B,gBAAkB5K,YAAanmJ,QAEjE8sD,6BAAc3oF,MAAM85B,MAAM,SAA1B,GAAAne,OAAuCkgB,OAAvC,SAhBRpH,KA+BIk4J,CAAyBh7D,KAAMw8B,YAAavhJ,OAAQ3K,OAAOpH,MAAMtB,KAAKyG,KAAtE2sL,GACAD,aAAe/6D,KACRA,QAITk7D,gBAAcV,0BAAAW,mBAAA,GAAAnxK,OdtCD,McsCC,MACF,MADEwwK,0BAAAW,gBAAA,GAAAnxK,OdtCD,McsCC,MAEF,SAAAwF,IAAA,QAAAisD,KAAAhoE,UAAA1D,OAAImgB,OAAJ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAIxrD,OAAJwrD,MAAAjoE,UAAAioE,MAAA,OAAeo/G,YAAWllL,WAAX,EAAesa,OAAflG,Qd5BT,ec0BJwwK,0BAAAW,gBAAA,GAAAnxK,OdtCD,McsCC,MAGF,MAHEwwK,0BAAAW,gBAAA,GAAAnxK,OdlCE,SckCF,MAIC,SAAAwF,IAAA,QAAAktD,MAAAjpE,UAAA1D,OAAImgB,OAAJ,IAAAhZ,MAAAwlE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAIzsD,OAAJysD,OAAAlpE,UAAAkpE,OAAA,OAAem+G,YAAWllL,WAAX,EAAesa,OAAflG,Qd/BZ,ec2BJwwK,0BAAAW,gBAAA,GAAAnxK,OdlCE,SckCF,MAKC,MALDwwK,0BAAAW,gBAAA,GAAAnxK,OdlCE,SckCF,MAMC,SAAAwF,IAAA,QAAAiwD,MAAAhsE,UAAA1D,OAAImgB,OAAJ,IAAAhZ,MAAAuoE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAIxvD,OAAJwvD,OAAAjsE,UAAAisE,OAAA,OAAeo7G,YAAWllL,WAAX,EAAesa,OAAflG,QdjCZ,ec2BJwwK,0BAAAW,gBAAA,GAAAnxK,OdnCE,ScmCF,MAOC,MAPDwwK,0BAAAW,gBAAA,GAAAnxK,OdnCE,ScmCF,MAQC,SAAAwF,IAAA,QAAAk1D,MAAAjxE,UAAA1D,OAAImgB,OAAJ,IAAAhZ,MAAAwtE,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAI10D,OAAJ00D,OAAAnxE,UAAAmxE,OAAA,OAAek2G,YAAWllL,WAAX,EAAesa,OAAflG,QdlCZ,ec0BJwwK,0BAAAW,gBAAA,GAAAnxK,OdnCE,ScmCF,MASC,MATDmxK,4TC3QCC,wkBAKb,MAAM,IAAIh9K,MAAMw/D,UAAUy9G,sDAO1B,MAAM,IAAIj9K,MAAMw/D,UAAUy9G,wDAO1B,MAAM,IAAIj9K,MAAMw/D,UAAUy9G,wDAO1B,MAAM,IAAIj9K,MAAMw/D,UAAUy9G,gOCvB3B,ICJM79E,qCAAO,OACPC,sCAAQ,QACRH,uCAAS,SACTC,oCAAM,MAEN+9E,4CAAc,OASdC,iBAAS,SAGTC,qBAAO,OACPC,qBAAO,OACPC,0BAAkB,gBAClBC,iBAAS,SACTC,0BAAY,YACZC,UAAY,WACZC,2BAAS,SACTC,cAAgB,eCzBhBC,eAAO,OAEPC,eAAO,OAEPC,KAAO,OAEPC,MAAQ,6UC0HNC,uBAzGX,SAAAA,WAAanhL,kKAAQohL,CAAAhuL,KAAA+tL,YACjB/tL,KAAKumF,IAAMj8E,cAEX,IAAMqb,UAAY8pD,kBAAmBzvE,KAAK6lB,YAAYk2E,iBACtD/7F,KAAKixF,QAAUxhB,eAAe9pD,UAAW/Y,YAEzC5M,KAAKuhG,OAAS,uSA8Bd,MAAM,IAAIxxF,MAAMw/D,UAAUC,gDAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8DAS1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,0EAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,8EAW1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wDAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wDAU1B,MAAM,IAAIz/D,MAAMw/D,UAAUC,wEAI1B,OADoCpqE,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAAH,mCAnFjC,MDzCc,iECoDd,6MC3CD,gCAAM8iH,+BAAc+lE,8BAAAC,mBHPL,UGOKD,8BAAAE,qBAElBC,qCAAiB,GAFCH,8BAAAE,kBAGlBC,sCAAkB,GAHAH,8BAAAE,kBAIlBC,oCAAgB,GAJEH,8BAAAE,kBAKlBC,uCAAmB,GALDD,oBAAAF,8BAAAC,gBHFA,aGSE,GAPFD,8BAAAC,gBHEF,YGME,GARAD,8BAAAC,gBHAG,gBGSE,MATLD,8BAAAC,gBHCD,YAKJ,UGNKD,8BAAAC,gBHKP,QGME,GAXKD,8BAAAC,gBHmBF,WGPE,GAZAD,8BAAAC,gBHoBF,gBGPE,GAbAD,8BAAAC,gBHqBH,WGPE,MAdCA,8LCP3B,IAAMG,eACFx6J,SACA8iF,eACAD,cACA9pG,QACI8hE,aAAc,SAAAA,aAACjyC,QAASzjC,OAAV,OAAoBy2E,eAAehzC,QAAQw0D,QAASj4F,SAEtEk/G,gBACAo2E,cACA5pK,WAoBS+2E,sCAAK8yF,yBAAAC,+BACbX,KAAOp+G,gBAjBR1kE,QACA0jL,WACA7hL,UACA4rF,MACI9pB,aAAc,SAAAA,aAACjyC,QAASzjC,OAAV,OAAoBP,OAAOoU,OAAO4vB,QAAQk0H,MAAO33J,SAEnEqnJ,iBACAz3I,UACAozC,aACAkwD,YACA/F,iBAOkCkoF,gBADpBE,yBAAAC,4BAEbb,eAAOl+G,gBAJRi/G,cAIkCL,gBAFpBE,yBAAAC,4BAGbZ,eAAOS,eAHME,yBAAAC,4BAIbV,MAAQO,eAJKG,0lCCdlB,IA+MenlC,gCAvKX,SAAAA,SAAaz8I,QAAQ,IAAAsI,MAAA,8JAAAy5K,CAAA3uL,KAAAqpJ,WACjBn0I,iLAAA05K,CAAA5uL,KAAA6uL,yBAAAxlC,UAAAnxJ,KAAA8H,KAAM4M,UAED4tG,MAAQ,KACbtlG,MAAK45K,aAAe,KACpB55K,MAAK65K,YAAc,KACnB75K,MAAK+mK,cAAgB,KAErBltG,sBAAsBigH,gEAAA95K,QAAMumF,qCAAMmyF,iBARjB14K,8XARF64K,gSAoCf,OAAO/tL,KAAK0kB,SAASmU,iDAoBrB,OACIh+B,KAAM+yL,eACN37H,KAAMjyD,KAAK0kB,SAASkI,uEAyBxB,OAHK5sB,KAAKk4G,gBACNl4G,KAAKk4G,aAjHQ,SAAnB+2E,iBAAoBxyJ,SACtB,IAAIyyJ,aACAC,cACEl9H,KAAOx1B,QAAQ/X,SAHa08I,gBAO9B3kI,QAAQ7vB,SAFRwiL,WAL8BhuB,gBAK9BguB,WACA/vF,OAN8B+hE,gBAM9B/hE,OAN8BgwF,sBAW9Bp9H,KAAKshG,kBAFL33H,MAT8ByzJ,sBAS9BzzJ,MACAC,OAV8BwzJ,sBAU9BxzJ,OAWJ,OANa,IADLo2B,KAAKrlD,SADLmyF,MAGJowF,cAAgBtrL,KAAK6N,MAAMmqB,OAASwjE,OAAO58D,IAAM48D,OAAOxtC,OAASu9H,YACjEF,aAAerrL,KAAK6N,MAAMkqB,MAAQyjE,OAAOt5D,KAAOs5D,OAAOr5D,MAAQopJ,cAE9DF,aAAgCtzJ,MAAlBuzJ,cAAyBtzJ,SAGxCD,MAAOszJ,aACPrzJ,OAAQszJ,eA0FcF,CAAiBjvL,OAEhCA,KAAKk4G,2EAYGt8E,MAAOC,QACtB77B,KAAK02G,WAAW96E,OAChB57B,KAAK22G,YAAY96E,QAFa,IAAAsuE,aAM1BnqG,KAAK4M,SAFLyyF,OAJ0B8K,aAI1B9K,OACAuX,SAL0BzM,aAK1ByM,SAUJ,OAPIh7E,OAASC,QACT77B,KAAK0kB,SAASgrI,kBAAkB9zH,MAAOC,OAAQwjE,OAAQuX,UACvD52G,KAAK0kB,SAASwzF,aAAa,OAE3Bl4G,KAAK0kB,SAASo1I,oBAElB95J,KAAKk4G,aAAa,MACXl4G,2CAUuB6zB,OAC9B,IAAKA,MACD,OAAO7zB,KAEX,IAAMiyD,KAAOjyD,KAAK0kB,SACZiyF,YAAc32G,KAAK22G,cACnBD,WAAa12G,KAAK02G,aAEpBrX,OACAr/F,KAAK4M,SADLyyF,OAGA58D,IAIA48D,OAJA58D,IACAovB,OAGAwtC,OAHAxtC,OACA9rB,KAEAs5D,OAFAt5D,KACAC,MACAq5D,OADAr5D,MAdiCspJ,cAmBjCr9H,KAAKrlD,SAFLmyF,KAjBiCuwF,cAiBjCvwF,KACAuE,YAlBiCgsF,cAkBjChsF,YAEEisF,WAAa3mG,YAAYD,6BAAc90D,OAAQ,OAAQ7zB,MAA/B,GAAA2b,OAAyCsxK,4CAAzC,KAAAtxK,OL5Jb,cK6JXk3C,UAAY+1B,YAAY2mG,WAAY,OAAQ,GAArB,GAAA5zK,OAA4BsxK,4CAA5B,oBAkB7B,OAjBAp6H,UAAU2rB,QAAV,GAAA7iE,OAAqBsxK,4CAArB,oBAAAtxK,OAAmD2nF,cAAe,GAElEtjG,KAAK6zB,MAAMA,OACN6iF,YACD7jD,UAAUO,KLhLD,QKgLT,GAAAz3C,OAAyB,EAAzB,OAECg7F,aACD9jD,UAAUO,KLpLA,SKoLV,GAAAz3C,OAA0B,EAA1B,OAEJ4zK,WAAWz1J,MLrLE,QKqLb,GAAAne,OAA2BojF,KAAOl7F,KAAK6N,MAAMglG,YAAc,EAA3D,OACiB58E,MLvLH,SKsLd,GAAAne,OACkCojF,KAAOl7F,KAAK6N,MAAMilG,aAAe,EADnE,OAEiB78E,MAAM,aAAc2I,KACpB3I,MAAM,gBAAiB+3B,QACvB/3B,MAAM,cAAeiM,MACrBjM,MAAM,eAAgBkM,OAEvCisB,KAAKp+B,MAAMg/B,UAAUjiC,QACdiiC,kDAYP,OAFA7yD,KAAK0kB,UAAY1kB,KAAK0kB,SAASgjB,SAC/B1nC,KAAK6zB,SAAW7zB,KAAK6zB,QAAQ6T,SACtB1nC,sCAjJP,OAAO4tL,8CAoBP,OAAO5tL,KAAKumF,4DAwBZ,OAAO2hC,unCCyCAohC,iCArIX,SAAAA,UAAa18I,QAAQ,IAAAsI,MAAA,+JAAAs6K,CAAAxvL,KAAAspJ,WACjBp0I,oLAAAu6K,CAAAzvL,KAAA0vL,0BAAApmC,WAAApxJ,KAAA8H,KAAM4M,SAENmiE,sBAAsB4gH,kEAAAz6K,QAAMumF,qCAAMqyF,QAHjB54K,iYAPD64K,oSA8BhB,OAAO/tL,KAAK64B,iDAgCZ,OACIh+B,KAAMizL,iEAYV,OAAK9tL,KAAKk4G,eAMHl4G,KAAKk4G,gBAJJt8E,MAAO57B,KAAK47B,OAAS,EACrBC,OAAQ77B,KAAK67B,QAAU,+DAchBD,MAAOC,QAItB,OAHA77B,KAAK02G,WAAW96E,OAChB57B,KAAK22G,YAAY96E,QACjB77B,KAAKk4G,aAAa,MACXl4G,2CAWuB6zB,OAC9B,GAAIA,MAAO,KACCiG,MAAU95B,KAAK4M,SAAfktB,MAER95B,KAAK6zB,MAAMA,OACX,IAAMiF,UAAY6vD,6BAAc90D,OAC1BzL,KAAOwgE,YAAY9vD,UAAW,OAAQ94B,KAAK64B,KACjDzQ,KAAKo2D,QAAL,GAAA7iE,OAAgBsxK,4CAAhB,KAAAtxK,ONnGc,eMmG+B,GAC7CyM,KAAK0R,MAAM,QAAX,GAAAne,OAAuB3b,KAAK02G,aAA5B,OACAtuF,KAAK0R,MAAM,SAAX,GAAAne,OAAwB3b,KAAK22G,cAA7B,OACAvuF,KAAK02D,KAAK,IAENhlD,OACAyvD,WAAWnhE,KAAM0R,OAEvB,OAAO95B,6CAWT,OADAA,KAAK6zB,SAAW7zB,KAAK6zB,QAAQ6T,SACtB1nC,6DAIP,OAAO,mCArHP,OAAO8tL,qCAgCP,OAAO9tL,KAAKumF,4DAXZ,OAAO2hC,ooCC5Cf,IAAM0nE,aAAe,SAAfA,aAAgBnzJ,SAClB,IAAM/X,OAAS+X,QAAQ/X,SADOmrK,oBAK1BpzJ,QAAQ6xJ,aAFAwB,eAHkBD,oBAG1Bh0J,OACOk0J,cAJmBF,oBAI1Bj0J,MAJ0BwlI,gBAS3B3kI,QAAQ7vB,SAFRyyF,OAP2B+hE,gBAO3B/hE,OACAwS,SAR2BuvD,gBAQ3BvvD,SAGC9rE,KAICs5D,OAJDt5D,KACAC,MAGCq5D,OAHDr5D,MAIEgqJ,aADD3wF,OAFD58D,IAEC48D,OADDxtC,OAEgCi+H,eAC9BG,YAAclqJ,KAAOC,MAAQ+pJ,cAC7Bp5E,YAAcl6E,QAAQk6E,cAAgBq5E,aACtCt5E,WAAaj6E,QAAQi6E,aAAeu5E,YACpC19E,aAAe91E,QAAQxhC,eAAes3G,aAO5C,OALAA,aAAap4E,SAASsC,QAAQ2gI,iBAE7BvrD,UAAYp1E,QAAQiyJ,UAAUn8E,aAAax1E,aAAarY,OAAQgyF,WAAYC,aAAa,IAC1F9E,UAAYp1E,QAAQiyJ,UAAUn8E,aAAax1E,aAAarY,OAAQiyF,YAAaD,YAAY,IAElFj6E,SAiQI+4G,oCArLX,SAAAA,SAAa5oI,OAAQ3R,cAAc,IAAAia,8JAAAg7K,CAAAlwL,KAAAw1I,WAC/BtgI,iLAAAi7K,CAAAnwL,KAAAowL,yBAAA56C,UAAAt9I,KAAA8H,KAAM4M,UAEDioG,cAAgB55G,aACrBia,MAAKg0J,WAAah0J,MAAK+7E,QAAQhwD,YAClB/rB,MAAK+7E,QAAQp2F,OAASqyL,iBAAtB,GAAAvxK,OAAkCsxK,4CAAlC,KAAAtxK,OAAiDuxK,iBAAjD,YAAAvxK,OAAoEsxK,4CAApE,KAAAtxK,OAAmFgyK,eAAnF,UACbz4K,MAAKkoJ,eAAiB/yE,qCAAsB1B,6BAAc,QAASzzE,MAAKg0J,YACxEh0J,MAAK2/F,cAActC,aAAap4E,SAASjlB,MAAKkoJ,gBAC9CruF,sBAAsBshH,gEAAAn7K,QAAMumF,qCAAMkyF,iBAClC,IAAMv2G,MAAQliE,MAAK2/F,cAActC,aAAapyE,WAAW,KAT1B,OAU/BjrB,MAAKo5K,YAAa1yJ,MAAO/3B,KAAK6N,MAAoB,EAAd0lE,MAAMx7C,MAAY,GAAIC,OAAQh4B,KAAK6N,MAAM0lE,MAAMv7C,OAAS,KAC5F+zJ,aAAaS,gEAAAn7K,SAXkBA,8XARhB64K,gSAuCf,OAAO/tL,KAAK0kB,6DAqBZ,OAAO1kB,KAAK60G,4DAUZ,OACIx0G,KAAML,KAAK0kB,SACX7pB,KAAM8yL,0EA0BV,OAHK3tL,KAAKk4G,gBACNl4G,KAAKk4G,aA1JQ,SAAnBo4E,iBAAoB7zJ,SAAY,IAC1B81E,aAAiB91E,QAAQxhC,eAAzBs3G,aAD0Bg+E,qBAK9B9zJ,QAAQ6xJ,aAFAwB,eAHsBS,qBAG9B10J,OACOk0J,cAJuBQ,qBAI9B30J,MAJ8Bo9E,iBAW/Bv8E,QAAQ7vB,SAJRyyF,OAP+B2Z,iBAO/B3Z,OACAN,KAR+Bia,iBAQ/Bja,KACAkpE,SAT+BjvD,iBAS/BivD,SACA6B,cAV+B9wD,iBAU/B8wD,cAGA/jI,KAICs5D,OAJDt5D,KACAC,MAGCq5D,OAHDr5D,MAIGgqJ,aADF3wF,OAFD58D,IAEC48D,OADDxtC,OAEiCi+H,eAC9BG,YAAclqJ,KAAOC,MAAQ+pJ,cAC7Bp5E,YAAcl6E,QAAQk6E,cAAgBq5E,aACtCt5E,WAAaj6E,QAAQi6E,aAAeu5E,YACpCvrK,OAAS+X,QAAQ/X,SACjB0yD,MAAQ36C,QAAQiyJ,YAChB8B,QAAU,IAAI3nL,MAAMihK,eAAeprH,KAAK,KAAK37C,KAAK,IAClD0tL,cAAgBl+E,aAAapyE,WAAWqwJ,SAS9C,GAPA/zJ,QAAQ7vB,QAASilG,UAAU,IACvBz6B,MAAMx7C,OAAS86E,YAAc,IAAMuxD,WACnC7wF,MAAMv7C,OAASu7C,MAAMt3C,cAAgBmoI,UAErCvxD,YAAcA,WAAat/B,MAAMx7C,QACjCw7C,MAAMx7C,MAAQ60J,cAAc70J,OAE5B86E,YAAcA,WAAa7yG,KAAK4Q,IAAIg8K,cAAc70J,MAAOw7C,MAAMv3C,cAAe,CAC9E,IAAM6wJ,WAAan+E,aAAax1E,aAAarY,OAAQiyF,YAAa85E,cAAc50J,QAAQ,GACxFu7C,MAAMx7C,MAAQ80J,WAAW70J,OACzBu7C,MAAMv7C,OAAS60J,WAAW90J,MAC1Ba,QAAQ7vB,QAASilG,UAAU,IAC3Bp1E,QAAQiyJ,UAAUgC,YAGtB,OAAI3xF,MAEInjE,MAAO/3B,KAAKqoB,KAAKkrD,MAAMx7C,OAASq0J,YAChCp0J,OAAQh4B,KAAKqoB,KAAKkrD,MAAMv7C,QAAUm0J,eAGtCp0J,MAAO,EACPC,OAAQ,GAyGcy0J,CAAiBtwL,OAEhCA,KAAKk4G,2EAWGt8E,MAAOC,QAKtB,OAJA77B,KAAK02G,WAAW96E,OAChB57B,KAAK22G,YAAY96E,QACjB+zJ,aAAa5vL,MACbA,KAAKk4G,aAAa,MACXl4G,2CAWH6zB,OACJ,IAAM6iF,WAAa12G,KAAK02G,aAClBC,YAAc32G,KAAK22G,cAFdxM,aASPnqG,KAAK4M,SALLyyF,OAJO8K,aAIP9K,OACAN,KALOoL,aAKPpL,KACAgrE,cANO5/D,aAMP4/D,cACA4mB,UAPOxmF,aAOPwmF,UACA9+E,SARO1H,aAQP0H,SAIJ,GADA7xG,KAAK6zB,MAAMA,OACPkrE,KAAM,CACN,IAAMjmE,UAAY6vD,6BAAc90D,OAC1BzL,KAAOwgE,YAAY9vD,UAAW,OAAQ94B,KAAK64B,IAAzB,GAAAld,OAAiCsxK,4CAAjC,KAAAtxK,OP3NX,cO4NPi1K,OAAS7mB,eAAiBl4D,SAAW,SAAW,MAHhDg/E,gBAOF7wL,KAAK0uL,YAFL9yJ,MALEi1J,gBAKFj1J,MACAC,OANEg1J,gBAMFh1J,OAGQi0J,eACR9vL,KAAKsuL,aADLzyJ,OAEEi1J,aACFruJ,IAAK7G,MAAQk0J,eAAiB,EAC9BiB,OAAQn1J,MAAQ,EAAIk0J,eACpBj+H,OAAQi+H,gBAGZh3J,UAAUgB,MAAM,iBAAkB82J,QAGlCxoK,KAAKo2D,QAAQx+E,KAAKkpK,YAAY,GAG9B9gJ,KAAK0R,MAAM,aAAc62J,WACzBvoK,KAAK0R,MAAM,UAAW,UACtB1R,KAAK0R,MAAM,YAAa+3E,SAAQ,aAAAl2F,OAAgBkgB,OAAS,EAAzB,yBAAAlgB,OAC1Bm1K,YAAYF,QADc,sBACgB,IAChDxoK,KAAK0R,MPjQI,QOiQS48E,WAAU,GAAA/6F,OAAM+6F,WAAN,MAAuB,SAClDxH,oCAAKD,uCAAQE,qCAAMC,uCAAOtmG,QAAQ,SAACjO,MAChCi+B,UAAUgB,MAAV,UAAAne,OAA0B9gB,MAA1B,GAAA8gB,OAAqC0jF,OAAOxkG,MAA5C,SAEJutB,KAAK0R,MAAM,aAAc62J,WACzBvoK,KAAK0R,MAAM,UAAW,UAEtB95B,KAAK60G,cAActC,aAAap4E,SAASn6B,KAAKo9J,gBAC9Ch1I,KAAK02D,KAAK9+E,KAAK60G,cAActC,aAAax1E,aAAa/8B,KAAK0kB,SAAUgyF,WAAYC,aAAa,GAAMt2G,MAEzG,OAAOL,6CAWP,OADAA,KAAK6zB,SAAW7zB,KAAK6zB,QAAQ6T,SACtB1nC,sCA5JP,OAAO2tL,8CAqBP,OAAO3tL,KAAKumF,4DAkCZ,OAAO2hC,2mCC9Kf,0BAyMe2/B,gCApLX,SAAAA,SAAaj7I,QAAQ,IAAAsI,MAAA,8JAAA87K,CAAAhxL,KAAA6nJ,WACjB3yI,iLAAA+7K,CAAAjxL,KAAAkxL,yBAAArpC,UAAA3vJ,KAAA8H,KAAM4M,UAEDukL,MAAQ,KACbj8K,MAAKw4F,QAAU,KACfx4F,MAAKy7I,SACLz7I,MAAKk8K,cACLl8K,MAAKm8K,kBACLn8K,MAAK+0D,QAAU,KACf/0D,MAAKo8K,WAAa,KAClBp8K,MAAKq8K,SAAW,KAEhBxiH,sBAAsByiH,gEAAAt8K,QAAMumF,qCAAMoyF,OAZjB34K,8XAPF64K,gSAuCf,OAAO/tL,KAAK0kB,uDAsBZ,OACI7pB,KAAMgzL,KACN71K,KAAMhY,KAAK0kB,SAASkI,YACpB6hK,QAASzuL,KAAKyuL,6DAqBP,IAAAp5K,OAAArV,KACLgY,KAAOhY,KAAK0kB,SAOlB,OANA1M,KAAKy5K,YACLz5K,KAAK4zF,gBACJ4hF,UAAWD,0BAAWH,qBAAME,iBAAQG,2BAAQN,qBAAMC,qBAAMC,0BAAiBK,eAAe5kL,QAAQ,SAACurB,MAC9Fhf,OAAKgf,SAAWrc,KAAKqc,MAAMhf,OAAKgf,WAEpCrc,KAAK05K,cACE1xL,+DAUP,IAAMyuL,QAAUzuL,KAAKyuL,UAEjBkD,cAAiB/1J,MAAO,EAAGC,OAAQ,GAIvC,OAHI4yJ,UACAkD,aAAelD,QAAQl7B,mBAEpBo+B,uEAaP,OAHK3xL,KAAKk4G,gBACNl4G,KAAKk4G,aAtIQ,SAAnB05E,iBAAoBn1J,SACtB,IAAM7vB,OAAS6vB,QAAQ/X,SAAS9X,SACxBgvB,MAAkBhvB,OAAlBgvB,MAAOC,OAAWjvB,OAAXivB,OACf,OACID,MAAO/3B,KAAKqoB,KAAK0P,OACjBC,OAAQh4B,KAAKqoB,KAAK2P,OAASY,QAAQo1J,kBAAkBh2J,SAiI/B+1J,CAAiB5xL,OAEhCA,KAAKk4G,2EAYGt8E,MAAOC,QACtB,IAAM7jB,KAAOhY,KAAK0kB,SAQlB,OANA1kB,KAAK02G,WAAW96E,OAChB57B,KAAK22G,YAAY96E,QACjB7jB,KAAKy5K,YACLz5K,KAAK4jB,MAAMA,OAAOC,OAAOA,OAAS77B,KAAK6xL,kBAAkBh2J,QACzD7jB,KAAK05K,cACL1xL,KAAKk4G,aAAa,MACXl4G,2CAUH6zB,OACJ,GAAIA,MAAO,CACP7zB,KAAK6zB,MAAMA,OACX,IAAM8iF,YAAc32G,KAAK22G,cACnBD,WAAa12G,KAAK02G,aAClB+3E,QAAUzuL,KAAKyuL,UACfc,WAAa3mG,YAAYD,6BAAc90D,OAAQ,OAAQ,GAA/B,GAAAlY,OAAsCsxK,4CAAtC,KAAAtxK,ORjKjB,cQmKb,GAAI8yK,QAAS,CACT,IAAMqD,WAAalpG,YAAY2mG,WAAY,OAAQd,SAArB,GAAA9yK,OAAkCsxK,4CAAlC,kBAA8Dr8J,OAC5F69J,QAAQ3rF,OAAOgvF,YAEnB,IAAMj/H,UAAY+1B,YAAY2mG,WAAY,OAAQ,GAArB,GAAA5zK,OAA4BsxK,4CAA5B,UAC7BsC,WAAWz1J,MRvLF,QQuLT,GAAAne,OAA2B+6F,WAA3B,OAA2C58E,MRxLjC,SQwLV,GAAAne,OAA4Dg7F,YAA5D,OACA9jD,UAAU/4B,MRxLD,QQwLT,GAAAne,OAA0B+6F,WAA1B,OACiB58E,MR1LP,SQyLV,GAAAne,OACkCg7F,YAAc32G,KAAK6xL,kBAAkBh2J,OADvE,OAEA77B,KAAK0kB,SAASmP,MAAMg/B,UAAUjiC,QAElC,OAAO5wB,6CAYP,OAFAA,KAAK6zB,SAAW7zB,KAAK6zB,QAAQ6T,SAC7B1nC,KAAK0kB,SAASgjB,SACP1nC,sCA1JP,OAAO6tL,oCAqBP,OAAO7tL,KAAK0kB,SAASmU,6DA0BrB,OAAOqvF,8NCzGR,IAAM6pE,sBAAoBC,4BAAAC,yBCRN,aDSElE,aADIiE,4BAAAC,sBCPR,WDSEz8C,eAFMw8C,4BAAAC,sBCNR,WDSE5oC,WAHM2oC,4BAAAC,sBCJR,WDQEpqC,WAJMmqC,4BAAAC,sBCLP,YDUE3oC,YALK2oC,uBEYlB78B,cAZM,SAAfA,eACF,IAAMvtB,IAAMkqD,qBACZ,OACIv/K,IAAK,SAAAA,IAAClZ,IAAKslB,KAIP,OAHItlB,OAAOuuI,MACPA,IAAIvuI,KAAOslB,KAERw2I,cAEXx8J,IAAK,SAAAA,MAAA,OAAMivI,OCPbqqD,wCAA8B,SAA9BA,4BAA+BC,YACjC,MAA0B,mBAAfA,YAA8BA,WAAW/4K,U/UwyCrC,SAAbg5K,WAAcloL,KAChB,IAAMmoL,aACFC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAGT,MAAO,GAAAh3K,OAAIzR,KAAO5J,QADE,YACmB,SAAA+H,OAAK,OAAIgqL,YAAYhqL,S+U/yCrD+pL,CAAWD,cAFPA,cAuDTS,cAAgB,SAAhBA,cAAiBhmL,OAAQ/R,KAAM03G,aAAcsgF,UAC/C,OAAKjmL,OA1Ca,SAAhB0oI,cAAiB1oI,OAAQkmL,SAAUvgF,aAAcsgF,UACnD,IAAIxzF,UAEAC,QAGA1yF,OAHA0yF,QACA1C,YAEAhwF,OAFAgwF,YACAqrE,SACAr7J,OADAq7J,SAEEvlG,KAAOmwH,UAAY,IAAIr9C,eAErB36I,KAAmB,UAAbi4L,SAAuB,SAAW,OACxC7xJ,UAAS,GAAAtlB,OAAKihF,YAAL,KAAAjhF,OAAoBm3K,SAApB,WAETvgF,4BAEN3lG,QAASq7J,oBAAYqmB,YAAa1yJ,MAAO,EAAGC,OAAQ,IAYtD,OAVA6mC,KAAKh+C,OAAO46E,SACZ58B,KAAKqwH,cAAiBl3J,OAAQ,EAAGD,MAAO,GAGpCyjE,OADAzyF,OAAO41B,WAAa0sE,mBACTzsE,IAAK,EAAGovB,OAAQjlD,OAAO+1B,UAEvBF,IAAK71B,OAAO+1B,QAASkvB,OAAQ,GAE5C6Q,KAAK91D,QAASyyF,iBAGVxjE,OAAQ6mC,KAAK6wF,kBAAkB13H,OAC/B6mC,WAgBG4yE,CACH1oI,OACA/R,KACA03G,aACAsgF,UANkB,ICdbG,+BAAoB,SAApBA,kBAAqBC,aAAcvsB,OAAQxmE,YAAagzF,aACjE,IAAMC,WAEFt3J,OAGAqkE,YAHArkE,OACAD,MAEAskE,YAFAtkE,MACAw3J,aACAlzF,YADAkzF,aAGA5wJ,SAEAywJ,aAFAzwJ,SACAgH,MACAypJ,aADAzpJ,MAGE6pJ,WArDmB,SAAhBC,cAAiB5sB,QAC1B,IAAI6sB,UACEC,WACAh7F,KAAOkuE,OAAOpQ,iBA0BpB,OAxBA79J,OAAOwc,QAAQujF,MAAM1vF,QAAQ,SAAC0lI,UAC1B,IAAMvlG,MAAQulG,SAAS,GAAG,GACpBksB,UAAYlsB,SAAS,GACrBilD,WAAa/sB,OAAOhM,aAE1B,GAAI+4B,WAAWnoL,OAAS29B,MAAO,KAAAyqJ,cAIvBzqJ,MAAMr8B,SAFN/R,KAFuB64L,cAEvB74L,KACA0rC,KAHuBmtJ,cAGvBntJ,KAGEotJ,WAA6B,kBAATptJ,MAAqBA,KAC/CgtJ,UAAYzuB,gBAAe,GAAAnpJ,OAAI9gB,KAAJ,KAAA8gB,OAAYg4K,WAAZ,KAAAh4K,OAA0B++I,YACrD84B,QAAQttL,MACJ+iC,YACAy9H,cACA7yJ,UAAW4/K,WAAWnoL,MACtByuJ,MAAOnjF,yBAAyB8vF,OAAO37J,OAAQ0oL,WAAWnoL,OAC1DioL,oBACA74B,yBAKL84B,QAwBYF,CAAc5sB,QACzBuD,cAAkBvD,OAAO95J,SAAzBq9J,cAEF9nK,OAASg0E,eAAe8zF,eAmD9B,OAlDAopB,WAAWvqL,QAAQ,SAAC8qL,SAAU3xL,OAC1B,IAAI2nK,UAEEiqB,kBAEEN,UAKAK,SALAL,UACAtqJ,MAIA2qJ,SAJA3qJ,MACAp1B,UAGA+/K,SAHA//K,UACOigL,UAEPF,SAFA75B,MACAW,UACAk5B,SADAl5B,UAEF9tJ,OAASqmL,aAAav4B,eACtBX,MAAQntJ,OAAOmtJ,UACrBA,MAAM15J,KAAO05J,MAAM15J,MAAQyzL,UACvBlnL,OAAOmyF,OACPnyF,OAAO41B,SAAWA,SAClB51B,OAAO48B,MAAQA,MAGXogI,OADAspB,YAAYjxL,OACHixL,YAAYjxL,OAAO2nK,OAEnB2pB,UAAUl6L,QACfk5G,aAAcm0D,OAAO7xD,cAAcx6E,WACnConC,OACI4nF,mBAAU7T,0BAItBq+C,eAAe52J,U1DjCH,a0DiCeuM,MAAsB3N,OAASu3J,aAAyB,GAATv3J,OAC1Eg4J,eAAe72J,S1DjCD,e0DiCYwM,MAAuB5N,MAAgB,GAARA,MACzDi4J,eAAej4J,MAAQ/3B,KAAK4Q,IAAIo/K,eAAe72J,SAAUpwB,OAAOgvB,OAChEi4J,eAAeh4J,OAASh4B,KAAK4Q,IAAIo/K,eAAe52J,UAAWrwB,OAAOivB,SAEjE6oI,QAASC,OAAQC,QAAQ97J,QAAQ,SAAC7O,GAC/B45L,eAAe55L,GAAK2S,OAAO3S,KAG/B2vK,OAAO3gI,MAAMA,OACIyyD,YAAYv5F,QACZ43J,MAAMA,OACNlmJ,UAAUA,WACVjH,OAAOA,QACPkoJ,SAAS4R,OAAO17E,cAAc27E,YAAYotB,iBAAiBjmK,SAASja,aACpEqsF,YAAY2zF,gBACZv8B,YAAYoP,OAAOlxC,SACnBw+D,oBAEjBb,QAAQjtL,MAAOwgK,cAAQkD,cAAQlP,yBAGhCy4B,o0CCtHUc,ixBAAsBtrB,0VACpB,IAAAurB,eACWl0L,KAAK+nG,WAC/B,OAASnsE,MAFMs4J,eACPt4J,MACQC,OAFDq4J,eACAr4J,kEAIDkyC,MACd/tE,KAAK+nG,UAAWtlE,IAAKsrC,KAAKvqE,EAAGuiC,KAAMgoC,KAAK7vC,IACxCl+B,KAAKopK,eACDxtI,MAAOmyC,KAAKnyC,MACZC,OAAQkyC,KAAKlyC,QAEjB77B,KAAKqpK,SAASt7F,KAAKs7F,4DAInB,OAAOrpK,KAAK+nG,iEAIZ,MAAMh4F,MAAM,2EAIZ,MAAMA,MAAM,+zCCtBCokL,yDACjB,SAAAA,gBAAatyK,QAAQ,IAAA3M,MAAA,oKAAAk/K,CAAAp0L,KAAAm0L,kBACjBj/K,MAAAm/K,0CAAAr0L,KAAAs0L,+BAAAH,iBAAAj8L,KAAA8H,KAAM6hB,OAAOvpB,KAAMupB,OAAOynJ,UAAU/V,kBAAmB,KAClDghC,UAAU1yK,QAFE3M,iZADoB++K,mUAM3Bn7J,WACV,IAAM8pJ,aAAe5iL,KAAK6hB,OAAOjV,OACjCksB,UAAY6vD,6BAAc7vD,WAFL,IAGb0Q,MAAUo5I,aAAVp5I,MACFomC,IAAM92C,UACTg6B,UADS,IAAAn3C,OACKinK,aAAahmF,YADlB,qBAET7xF,MAAM/K,KAAK1H,OACds3E,IAAI3c,OAAOvrB,SACX,IAEM8sJ,KAFW5kH,IAAIzc,QAAQn+B,OAAO,OAEdprB,MAAMgmE,KAC5B4kH,KAAKh2G,QAAL,GAAA7iE,OAAgBinK,aAAahmF,YAA7B,qBAA4D,GAXvC,IAAAs3F,eAYKl0L,KAAK+nG,WAAvBlsE,OAZaq4J,eAYbr4J,OAAQD,MAZKs4J,eAYLt4J,MAChB57B,KAAKspK,UAAU5Z,kBAAkB9zH,MAAOC,QAExC77B,KAAKspK,WAAatpK,KAAKspK,UAAUxmE,OAAO0xF,KAAK5jK,QAE7C4jK,KAAK1hI,UAAU,OAAO0rB,QAAtB,GAAA7iE,OAAiCinK,aAAahmF,YAA9C,mBAA2E,GAC3E43F,KAAK16J,MAAM,QAAX,GAAAne,OAAuB,IAAvB,MAEIinK,cAAgB5iL,KAAKspK,WACrBkrB,KAAK16J,MAAM,QAASq1E,oBACHr1E,MAAM,aAAc0P,yCAKvC1Q,WACF94B,KAAKy0L,aAAa37J,WAAaT,SAASgB,eAAer5B,KAAKqpK,iEAGjDxnJ,QAIX,OAHA7hB,KAAKu0L,UAAU1yK,QACf7hB,KAAK1H,KAAKupB,OAAOvpB,MACjB0H,KAAK+nG,SAASlmF,OAAOynJ,UAAU/V,mBACxBvzJ,iDAGA6hB,QACP7hB,KAAKspK,UAAYznJ,OAAOynJ,UACxBtpK,KAAK6hB,OAASA,OACd7hB,KAAK09C,OAAO77B,OAAOjV,OAAO8wC,QAC1B19C,KAAKwiC,SAAS3gB,OAAOjV,OAAO41B,UAC5BxiC,KAAKihC,UAAUpf,OAAOjV,OAAOq0B,WAC7BjhC,KAAK+zK,UAAUlyJ,OAAOjV,OAAOmnK,WAC7B/zK,KAAKo7J,UAAUv5I,OAAOjV,OAAOwuJ,qEAGfrtF,MACd/tE,KAAK+nG,UAAWtlE,IAAKsrC,KAAKvqE,EACtBuiC,KAAMgoC,KAAK7vC,EACXtC,MAAOmyC,KAAKnyC,MACZC,OAAQkyC,KAAKlyC,SACjB77B,KAAKqpK,SAASt7F,KAAKs7F,0yCCvCNqrB,yDACjB,SAAAA,gBAAa7yK,QAAQ,IAAA3M,MAAA,oKAAAy/K,CAAA30L,KAAA00L,kBACjBx/K,MAAA0/K,0CAAA50L,KAAA60L,+BAAAH,iBAAAx8L,KAAA8H,KAAM6hB,OAAOvpB,KAAMupB,OAAOjV,OAAOszF,YAAY40F,YAAa,KACrDP,UAAU1yK,QAFE3M,iZADoB++K,mUAM3Bn7J,WACVA,UAAY6vD,6BAAc7vD,WAC1B,IAAMi8J,qBAFeC,oBAGah1L,KAAK6hB,OAAOjV,OAAtC41B,SAHawyJ,oBAGbxyJ,SAAUo6D,YAHGo4F,oBAGHp4F,YACZq4F,YAAcrsG,YAAY9vD,UAAW,OAAQ94B,KAAKgkJ,YAAzB,GAAAroI,OACIihF,YADJ,qBACqC,SAAAvkG,GAAC,OAAIA,IACzE48L,YAAYz2G,QAAZ,GAAA7iE,OAAuBihF,YAAvB,YAA6C,GAC7C,IAAMpzD,MAAShH,WAAa2sE,oBAAQ3sE,WAAa4sE,oB7D4BjC,WACE,a6D5BZ8lF,SAAWl1L,KAAKopK,cAAcxtI,MAC9Bu5J,UAAYn1L,KAAKopK,cAAcvtI,OAQrC,IANC/C,UAAWm8J,aAAansL,QAAQ,SAACsf,MAC9BA,KAAK0R,MAAM,QAAX,GAAAne,OAAuB9X,KAAK6N,MAAMwjL,UAAlC,OACiBp7J,MAAM,SADvB,GAAAne,OACoCw5K,UADpC,OAEiBr7J,MAAM,QAASq1E,sB7DqBpB,a6DlBZ3lE,MAAoB,CACpB,IAAI4rJ,UAAY,EACZC,WAAaF,UACbG,UAAY,EAEhBt1L,KAAKgkJ,WAAWl7I,QAAQ,SAACuqL,YACrB,IAAMkC,IAAMlC,WAAWzpB,OACnB2rB,IAAIr1F,cAAcrkE,OAASw5J,YAC3BD,WACAE,UAAY,EACZD,WAAaF,WAEbC,SAAW,GAAKA,WAEpBL,kBAAkBK,UAAYL,kBAAkBK,cAChDC,YAAcxxL,KAAK4Q,IAAI8gL,IAAIr1F,cAAcrkE,OAAQw5J,YACjDC,UAAYzxL,KAAK6Q,IAAI7Q,KAAK4Q,IAAI8gL,IAAIr1F,cAActkE,MAAO25J,IAAIr1F,cAAcljE,UAAWs4J,WACpFP,kBAAkBK,UAAUlvL,MACxB0jK,OAAQ2rB,IACRC,aAAcL,UACdM,YAAaH,cAIrB,IAAMzhK,MAAQ+0D,YAAYqsG,aAAc,OAAQF,kBAAvB,GAAAp5K,OAA6CihF,YAA7C,oBAEzB/oE,MAAM2qD,QAAN,GAAA7iE,OAAiBihF,YAAjB,6BAAwD,GACvC9iE,MAAM,QAAS,SAAAzhC,GAAC,SAAAsjB,OAAOtjB,EAAE,GAAGo9L,YAAZ,QACjC7sG,YAAY/0D,OAAQ,OAAQ,SAAAx7B,GAAC,OAAIA,GAAtB,GAAAsjB,OAA4BihF,YAA5B,yBAAiE,SAAAvkG,GAAC,OAAIA,EAAEuxK,OAAO/wI,OACzE4O,KAAK,SAAUpvC,GACZA,EAAEuxK,OAAO/1I,MAAM7zB,QAElB85B,MAAM,QAAS,SAAAzhC,GAAC,SAAAsjB,OAAOtjB,EAAEo9L,YAAT,YAC9B,CACH,IAAM5hK,OAAQ+0D,YAAYqsG,YAAa,OAAQ,GAAtB,GAAAt5K,OAA6BihF,YAA7B,oBACzB/oE,OAAM2qD,QAAN,GAAA7iE,OAAiBihF,YAAjB,+BAA0D,GAC1D/oE,OAAM2qD,QAAN,GAAA7iE,OAAiBihF,YAAjB,mBAA+C,IAAK,GACnC9iE,MAAM,QADvB,GAAAne,OACmCu5K,SADnC,OAGAtsG,YAAY/0D,OAAO,MAAO7zB,KAAKgkJ,WAApB,GAAAroI,OAAmCihF,YAAnC,yBAAwE,SAAAvkG,GAAC,OAAIA,EAAEuxK,OAAO/wI,OAChF4O,KAAK,SAAUpvC,GAAKA,EAAEuxK,OAAO/1I,MAAM7zB,QACnC85B,MAAM,QAAS,SAAAzhC,GAAC,SAAAsjB,OAAOtjB,EAAEuxK,OAAO1pE,cAActkE,MAA9B,2CAInC9C,WACF94B,KAAK01L,aAAa58J,WAAaT,SAASgB,eAAer5B,KAAKqpK,iEAGjDxnJ,QAIX,OAHA7hB,KAAK1H,KAAKupB,OAAOvpB,MACjB0H,KAAK+nG,SAASlmF,OAAOjV,OAAOszF,YAAY40F,aACxC90L,KAAKu0L,UAAU1yK,QACR7hB,iDAGA6hB,QACP7hB,KAAKgkJ,WAAaniI,OAAOynJ,UACzBtpK,KAAK6hB,OAASA,OACd7hB,KAAK09C,OAAO77B,OAAOjV,OAAO8wC,QAC1B19C,KAAKwiC,SAAS3gB,OAAOjV,OAAO41B,UAJb,IAAAmzJ,sBAhGvB,SAASC,uBAAwBpzJ,UAC7B,IAAI44H,UAAY,KACV2Y,UAAS,GAAAp4J,OAAMk+J,iBAAiB,GAAvB,KAAAl+J,OAA6Bo+J,oBAAoB,IAChE,OAAQv3I,UACR,KAAK0sE,kBACL,KAAKD,qBACDmsD,UAAY6J,kBACZ,MACJ,KAAK91D,mBACL,KAAKC,oBACDgsD,UAAY8J,gBACZ,MACJ,QACI9J,UAAY8J,gBAEhB,OAAS9J,oBAAW2Y,qBAsFiB6hB,CAAuB/zK,OAAOjV,OAAO41B,UAA9DuxI,UALO4hB,sBAKP5hB,UAAW3Y,UALJu6B,sBAKIv6B,UACnBp7J,KAAKihC,UAAUpf,OAAOjV,OAAOq0B,WAC7BjhC,KAAK+zK,UAAUlyJ,OAAOjV,OAAOmnK,WAAaA,WAC1C/zK,KAAKo7J,UAAUv5I,OAAOjV,OAAOwuJ,WAAaA,kCCpG5ChhE,uCAASjQ,4BAET0rG,cACF9vJ,K9DEiB,Q8DDjBC,M9DCiB,Q8DAjBvD,I9DCkB,S8DAlBovB,O9DAkB,U8DGTikI,iBAAmB,SAAnBA,iBAAoBpa,aAAcqa,YAAaC,YACxD,IAAIC,WAAa,EAIjB,OAHiBva,aAAa0E,SAAW1E,aAAa0E,QAAQ1+K,OAC1Dg6K,aAAa0E,QAAU1E,aAAa2E,WAExBp4K,IAAI,SAAChO,GACjB,IAAMi8L,aAA4B,IAAbD,YAAoBF,YAAcC,YAEvD,OADAC,YAAch8L,EACPi8L,gBAIFC,4BAAuB,SAAvBA,qBAAwBtiK,MAAOh5B,KAAM+R,QAAW,IAErDgwF,YAEAhwF,OAFAgwF,YACA8sE,UACA98J,OADA88J,UAEE5pE,MAAQlX,YAAY/0D,MAAO,OAAQh5B,MAAhB,GAAA8gB,OAA0BihF,YAA1B,kBAAAjhF,OAAsD9gB,OAS/E,OAPAilG,MAAMthB,QAAN,GAAA7iE,OAAiBihF,YAAjB,kBAA6C,GAC7CkD,MAAMhmE,MAAM+7J,aAAah7L,MAAzB,GAAA8gB,OAAmC+tJ,UAAnC,OAEgB9gF,YAAYkX,MAAO,OAAQ,GAAhB,GAAAnkF,OAAuBihF,YAAvB,0BAEnBxpC,KAAK,KAAb,GAAAz3C,OAAsBihF,YAAtB,0BAAAjhF,OAA0D9gB,OAEnDilG,OAGEs2F,2BAAsB,SAAtBA,oBAAuBviK,MAAOjnB,QAAW,IAE9CgwF,YACAhwF,OADAgwF,YAEE3mC,KAAO2yB,YAAY/0D,MAAO,OAAQ,GAAhB,GAAAlY,OAAuBihF,YAAvB,iBAGxB,OAAS3mC,UAAMogI,MAFDztG,YAAY3yB,KAAM,OAAQ,GAAf,GAAAt6C,OAAsBihF,YAAtB,oBA0DvB05F,2BAA6B,SAA7BA,2BAA8BC,UAAWC,YAAa7sB,OAAU,IAE9D0sB,MAEAE,UAFAF,MACApgI,KACAsgI,UADAtgI,KAH8DwgI,sBAKjDJ,MAAMzlK,OAAOuvD,wBAAtBjiD,EAL0Du4J,sBAK1Dv4J,EAAG16B,EALuDizL,sBAKvDjzL,EALuDkzL,sBAMnCzgI,KAAKrlC,OAAOuvD,wBAAhCw2G,MANuDD,sBAM1Dx4J,EAAa04J,MAN6CF,sBAMhDlzL,EAElBgzL,YAAYK,qBAAsB34J,EAAGA,EAAIy4J,MAAQhtB,MAAOnmK,EAAGA,EAAIozL,MAAQjtB,SAGrEmtB,+BAA0B,SAA1BA,wBAA2BN,YAAaD,UAAWQ,UAAWptB,OAChE,IAAIplF,MAAQ,GACNub,MAAQ02F,YAAYQ,YAAYD,WAChCE,cAAgBpsG,WAEtBiV,MAAMpyB,GAAGupH,cAAgB,aAAe,YAAa,WACnChtG,0BAER/I,iBAENqD,MAAQS,YAAY,WAChBsxG,2BAA2BC,UAAWC,YAAa7sB,QACpD,OACJj8F,GAAGupH,cAAgB,WAAa,UAAW,WAC5BhtG,0BAER/I,iBAEN6D,cAAcR,SACf7W,GAAG,QAAS,WACX4oH,2BAA2BC,UAAWC,YAAa7sB,UAI9Cz4F,0CAAoB,SAApBA,kBAAqBslH,aAAgB,IAE1CD,UACAC,YAAYQ,YADZT,UAGE5sB,MAAQ6sB,YAAY5pL,SAAS+8J,MAEnCmtB,+BAAwBN,YAAaD,UAAW,aAAc5sB,OApF3C,SAAjButB,eAAkBV,YAAaD,WACjC,IAAIr9F,YACAi+F,cAAgB,EAChBC,aAAe,EACfj+F,UAEAk9F,MAEAE,UAFAF,MACApgI,KACAsgI,UADAtgI,KAGJogI,MAAMn+L,KAAKkiG,gBACM1sB,GAAG,QAAS,WACT,IAAM6M,MAAQ0P,0BAEdktG,cAAgBd,MAAMzlK,OAAOuvD,wBAC7Bi3G,aAAenhI,KAAKrlC,OAAOuvD,wBAC3B+Y,UACIh7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,KAGhBkqE,GAAG,OAAQ,WACR,IAAM6M,MAAQ0P,0BACRtyF,OAAS00E,YAMTgrH,iBAJNl+F,QACIj7D,EAAGq8C,MAAMr8C,EACT16B,EAAG+2E,MAAM/2E,IAGC06B,EAAIg7D,SAASh7D,EADrBm5J,gBAECl+F,OAAO31F,EAAI01F,SAAS11F,EAErB8zL,gBACFp5J,EAAGi5J,cAAcj5J,EAAIm5J,gBAAkBD,aAAal5J,EAAIvmC,OAAO4/L,YAC/D/zL,EAAG2zL,cAAc3zL,EAAI6zL,gBAAkBD,aAAa5zL,EAAI7L,OAAO6/L,aAGnEhB,YAAYK,oBAAoBS,mBA+CpDJ,CAAeV,YAAaD,WAhGF,SAAjBkB,eAAkBjB,YAAaD,WAGpCA,UADAtgI,KAGCyX,GAAG,QAAS,WACb,IAAM6M,MAAQ0P,0BACdusG,YAAYkB,qBAAqBn9G,SA0FrCk9G,CAAejB,YAAaD,WAC5BO,+BAAwBN,YAAaD,UAAW,YAAa5sB,QC3JpDluE,8BAET7uF,QACI8hE,aAAc,SAAAA,aAACjyC,QAASzjC,OAEpB,OADAA,MAAQy2E,eAAehzC,QAAQw0D,QAASj4F,SAIhD2+L,WACAC,iBACA1/E,iTCLG,IAAM2/E,yBAAb,WAEI,SAAAA,yKAAeC,CAAA93L,KAAA63L,aACX73L,KAAKg3L,eACLh3L,KAAKi8K,iBACLj8K,KAAK+3L,sBAAwB,aAC7B/3L,KAAKixF,SACDy4E,UAAW,GACXC,MAAO,GAEX3pK,KAAKg4L,eAAiB,KAEtBjpH,sBAAsB/uE,KAAMy7F,8BAZpC,gPAAAw8F,CAAAJ,cAAAv+L,IAAA,uBAAAN,MAAA,SAAA0+L,uBAoBQ,MAAM,IAAInoH,UAAU,6BApB5Bj2E,IAAA,sBAAAN,MAAA,SAAA69L,sBAwBQ,MAAM,IAAItnH,UAAU,6BAxB5Bj2E,IAAA,WAAAN,MAAA,SAAAk/L,WA4BQ,MAAM,IAAI3oH,UAAU,6BA5B5Bj2E,IAAA,gBAAAN,MAAA,SAAAm/L,gBAgCQ,MAAM,IAAI5oH,UAAU,6BAhC5Bj2E,IAAA,eAAAN,MAAA,SAAAo/L,aAmCkBhiK,YAGV,OACIiiK,mBFkHyB,SAAxBC,sBAAyBliK,WAAYxpB,OAAQkc,WAAYjuB,MAAS,IAEvE+hG,YACAhwF,OADAgwF,YAEEy7F,mBAAqBzvG,YAAYD,6BAAcvyD,YAAa,OAAQ,GAApC,IAAAza,OAA4CihF,YAA5C,gBAAAjhF,OAAsE9gB,OAK5G,OAHAw9L,mBAAmB75G,QAAnB,GAAA7iE,OAA8BihF,YAA9B,gBAAwD,GACxDy7F,mBAAmBv+J,M9DvJF,Q8DuJjB,GAAAne,OAAmCmN,WAAW8S,MAA9C,OACAy8J,mBAAmBv+J,M9DvJD,S8DuJlB,GAAAne,OAAoCmN,WAAW+S,OAA/C,OACOw8J,mBE3HqBC,CAAsBliK,WAH/Bp2B,KAAK4M,SAG8C5M,KAAKk4G,eAAgBl4G,KAAK6lB,YAAYhrB,YAvChHvB,IAAA,qBAAAN,MAAA,SAAAu/L,mBA2CwBC,sBAEhB,OADAx4L,KAAK+3L,sBAAwBS,qBACtBx4L,QA7Cf1G,IAAA,qBAAAN,MAAA,SAAAy/L,qBAkDQ,OADAz4L,KAAK+3L,sBAAwB,aACtB/3L,QAlDf1G,IAAA,kBAAAN,MAAA,SAAAu6J,kBAsDQ,OAAOvzJ,KAAKk4G,kBAtDpB5+G,IAAA,oBAAAN,MAAA,SAAAk4E,oBA2DQ,OADAA,0CAAkBlxE,MACXA,QA3Df1G,IAAA,SAAAN,MAAA,SAAA0uC,SAgEQ,OADA1nC,KAAKg3L,YAAYqB,mBAAmB3wJ,SAC7B1nC,UAhEf1G,IAAA,OAAAN,MAAA,SAAA6B,OAgBQ,MAAM,IAAI00E,UAAU,8BAhB5BsoH,YAAA,8hKCHA,IAAMa,gBACFz4B,WCDJ,SAAA04B,cAAA,SAAAC,wBAAA,4KAAAC,CAAA74L,KAAA44L,uBAAAE,kDAAA94L,KAAA+4L,uCAAAH,uBAAArxL,MAAAvH,KAAAoF,YAAA,0YAAA4zL,CAAAJ,sBAA2Cf,oSAA3CoB,CAAAL,wBAAAt/L,IAAA,eAAAN,MAAA,SAAAo/L,aAakBhiK,YAA8C,IAAlCtN,WAAkC1jB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAArBpF,KAAKk4G,eAClCtrG,OAAS5M,KAAK4M,SACZyrL,mBAFgDa,4BAAAH,uCAAAH,sBAAA/+L,WAAA,eAAAmG,MAAA9H,KAAA8H,KAENo2B,WAAYxpB,OAAQkc,YAA9DuvK,mBACFc,UAAYhD,4BAAqBkC,mBAAoB,OAAQzrL,QAC7D2pL,UAAYH,2BAAoBiC,mBAAoBzrL,QACpDwsL,UAAYjD,4BAAqBkC,mBAAoB,QAASzrL,QAEhEypL,MAEAE,UAFAF,MACApgI,KACAsgI,UADAtgI,KARoDojI,mBAWOr5L,KAAKk4G,eAA5Dr8E,OAXgDw9J,mBAWhDx9J,OAAQD,MAXwCy9J,mBAWxCz9J,MAAOm6J,YAXiCsD,mBAWjCtD,YAAaC,WAXoBqD,mBAWpBrD,WAAYrM,WAXQ0P,mBAWR1P,WAC1C2P,2BAA6B19J,MAAiB,EAATC,OAE3Co6B,KAAKn8B,MlEfQ,QkEeb,GAAAne,OAAqBmN,WAAW8S,MAAiB,EAATC,OAAxC,OACAo6B,KAAKn8B,MlEfS,SkEed,GAAAne,OAAsB,IAAtB,MACA06K,MAAMv8J,MlEjBO,QkEiBb,GAAAne,OAAuBq6K,WAAasD,2BAA8BvD,YAAlE,OACAM,MAAMv8J,MlEjBQ,SkEiBd,GAAAne,OAAuB,IAAvB,MACA06K,MAAMv8J,MAAMq1E,mBAAZ,GAAAxzF,OAAqB,EAArB,OAEA3b,KAAKg3L,aACDmC,oBACAC,oBACA7C,oBACA8B,uCAEJr4L,KAAKu5L,4BAA8BD,2BACnCt5L,KAAK43L,cAAc9B,iBAAiBnM,WAAYoM,YAAaC,aAC7Dh2L,KAAKkxE,uBAzCb53E,IAAA,uBAAAN,MAAA,SAAA0+L,qBA4C0Bn9G,OAAO,IAAAi/G,sBAIrBx5L,KAAKg3L,YAAYT,UAFjBF,MAFqBmD,sBAErBnD,MACApgI,KAHqBujI,sBAGrBvjI,KAEE0zG,MAAQ3pK,KAAK4M,SAAS+8J,MALH8sB,sBAMRJ,MAAMzlK,OAAOuvD,wBAAtBjiD,EANiBu4J,sBAMjBv4J,EAAG16B,EANcizL,sBAMdjzL,EANckzL,sBAOMzgI,KAAKrlC,OAAOuvD,wBAAhCw2G,MAPcD,sBAOjBx4J,EAAa04J,MAPIF,sBAOPlzL,EACdi2L,iBAA2B,GAAR9vB,MACnBpvF,MAAMr8C,EAAIA,IACVu7J,iBAA4B,IAAR9vB,OAExB3pK,KAAK62L,qBAAsB34J,EAAGA,EAAIy4J,MAAQ8C,iBAAkBj2L,EAAGA,EAAIozL,MAAQ6C,sBAxDnFngM,IAAA,sBAAAN,MAAA,SAAA69L,oBA2DyB6C,aACjB,IAAIC,WAD0BC,uBAK1B55L,KAAKg3L,YAAYT,UAFjBF,MAH0BuD,uBAG1BvD,MAGEe,aANwBwC,uBAI1B3jI,KAEsBrlC,OAAOuvD,wBAC3B05G,SAAWxD,MAAMzlK,OAAOuvD,wBAE1B41G,YACC/1L,KAAKk4G,eADN69E,YAIA4D,WADAD,YAAYx7J,EAAI,EACH,EACNw7J,YAAYx7J,EAAI27J,SAASj+J,MAAQw7J,aAAax7J,MACxCw7J,aAAax7J,MAAQi+J,SAASj+J,MAE9B89J,YAAYx7J,EAG7Bm4J,MAAMv8J,MAAMq1E,mBAAZ,GAAAxzF,OAAqBg+K,WAArB,OACA,IACMG,gBAAmBH,WAAa5D,YADhB/1L,KAAKu5L,4BAG3Bv5L,KAAK23L,UAAUoC,8BAA8B/5L,KAAK6lB,YAAYhrB,OAAQi/L,oBAnF9ExgM,IAAA,gBAAAN,MAAA,SAAAm/L,cAsFmB6B,OAAO,IAAAC,uBAIdj6L,KAAKg3L,YAAYT,UAFjBF,MAFc4D,uBAEd5D,MACApgI,KAHcgkI,uBAGdhkI,KAEE4jI,SAAWxD,MAAMzlK,OAAOuvD,wBACxBi3G,aAAenhI,KAAKrlC,OAAOuvD,wBAGjC,OADAngF,KAAK62L,qBAAsBrzL,EAAG,EAAG06B,EAAG27J,SAAS37J,EAAIk5J,aAAal5J,EAAI87J,QAC3Dh6L,QA/Ff1G,IAAA,WAAAN,MAAA,SAAAk/L,SA0GcgC,kBAAkB,IAIlBL,SADF75L,KAAKg3L,YAAYT,UADjBF,MAEmBzlK,OAAOuvD,wBACxBg6G,SAAYD,kBAAoBl6L,KAAKu5L,4BAA8BM,SAASj+J,OAAU,IAG5F,OADA57B,KAAK62L,qBAAsBrzL,EAAG,EAAG06B,EAAGi8J,WAC7Bn6L,UAlHf1G,IAAA,OAAAN,MAAA,SAAA6B,OAUQ,MlEoDkB,iBkE9D1B+9L,sBAAA,GDEI14B,SEFJ,SAAAy4B,cAAA,SAAAyB,sBAAA,0KAAAC,CAAAr6L,KAAAo6L,qBAAAE,gDAAAt6L,KAAAu6L,qCAAAH,qBAAA7yL,MAAAvH,KAAAoF,YAAA,sYAAAo1L,CAAAJ,oBAAyCvC,8RAAzC4C,CAAAL,sBAAA9gM,IAAA,eAAAN,MAAA,SAAAo/L,aAakBhiK,YAA8C,IAAlCtN,WAAkC1jB,UAAA1D,OAAA,QAAA4L,IAAAlI,UAAA,GAAAA,UAAA,GAArBpF,KAAKk4G,eAClCtrG,OAAS5M,KAAK4M,SACZyrL,mBAFgDqC,0BAAAH,qCAAAH,oBAAAvgM,WAAA,eAAAmG,MAAA9H,KAAA8H,KAENo2B,WAAYtN,YAAtDuvK,mBACFc,UAAYhD,4BAAqBkC,mBAAoB,MAAOzrL,QAC5D2pL,UAAYH,2BAAoBiC,mBAAoBzrL,QACpDwsL,UAAYjD,4BAAqBkC,mBAAoB,SAAUzrL,QAEjEypL,MAEAE,UAFAF,MACApgI,KACAsgI,UADAtgI,KARoDojI,mBAUQr5L,KAAKk4G,eAA7Dr8E,OAVgDw9J,mBAUhDx9J,OAAQD,MAVwCy9J,mBAUxCz9J,MAAOm6J,YAViCsD,mBAUjCtD,YAAaC,WAVoBqD,mBAUpBrD,WAAYtM,YAVQ2P,mBAUR3P,YAC1C4P,2BAA6Bz9J,OAAiB,EAARD,MAE5Cq6B,KAAKn8B,MnEbS,SmEad,GAAAne,OAAsB29K,2BAAtB,OACArjI,KAAKn8B,MnEfQ,QmEeb,GAAAne,OAAqB,IAArB,MACA06K,MAAMv8J,MnEhBO,QmEgBb,GAAAne,OAAsB,IAAtB,MACA06K,MAAMv8J,MnEhBQ,SmEgBd,GAAAne,OAAwBq6K,WAAasD,2BAA8BvD,YAAnE,OACAM,MAAMv8J,MAAMo1E,kBAAZ,GAAAvzF,OAAoB,EAApB,OAEA3b,KAAKg3L,aACDmC,oBACAC,oBACA7C,oBACA8B,uCAEJr4L,KAAKu5L,4BAA8BD,2BAEnCt5L,KAAK43L,cAAc9B,iBAAiBpM,YAAaqM,YAAaC,aAC9Dh2L,KAAKkxE,uBAzCb53E,IAAA,uBAAAN,MAAA,SAAA0+L,qBA4C0Bn9G,OAAO,IAAAi/G,sBAIrBx5L,KAAKg3L,YAAYT,UAFjBF,MAFqBmD,sBAErBnD,MACApgI,KAHqBujI,sBAGrBvjI,KAEE0zG,MAAQ3pK,KAAK4M,SAAS+8J,MALH8sB,sBAMRJ,MAAMzlK,OAAOuvD,wBAAtBjiD,EANiBu4J,sBAMjBv4J,EAAG16B,EANcizL,sBAMdjzL,EANckzL,sBAOMzgI,KAAKrlC,OAAOuvD,wBAAhCw2G,MAPcD,sBAOjBx4J,EAAa04J,MAPIF,sBAOPlzL,EAEdi2L,iBAA2B,GAAR9vB,MACnBpvF,MAAM/2E,EAAIA,IACVi2L,iBAA4B,IAAR9vB,OAExB3pK,KAAK62L,qBAAsB34J,EAAGA,EAAIy4J,MAAQ8C,iBAAkBj2L,EAAGA,EAAIozL,MAAQ6C,sBAzDnFngM,IAAA,sBAAAN,MAAA,SAAA69L,oBA4DyB6C,aACjB,IAAIC,WAD0BC,uBAK1B55L,KAAKg3L,YAAYT,UAFjBF,MAH0BuD,uBAG1BvD,MACApgI,KAJ0B2jI,uBAI1B3jI,KAGA8/H,YACC/1L,KAAKk4G,eADN69E,YAEEqB,aAAenhI,KAAKrlC,OAAOuvD,wBAC3B05G,SAAWxD,MAAMzlK,OAAOuvD,wBAG1Bw5G,WADAD,YAAYl2L,EAAI,EACH,EACNk2L,YAAYl2L,EAAIq2L,SAASh+J,OAASu7J,aAAav7J,OACzCu7J,aAAav7J,OAASg+J,SAASh+J,OAE/B69J,YAAYl2L,EAE7B6yL,MAAMv8J,MAAMo1E,kBAAZ,GAAAvzF,OAAoBg+K,WAApB,OACA,IACMG,gBAAmBH,WAAa5D,YADhB/1L,KAAKu5L,4BAG3Bv5L,KAAK23L,UAAUoC,8BAA8B/5L,KAAK6lB,YAAYhrB,OAAQi/L,oBAnF9ExgM,IAAA,gBAAAN,MAAA,SAAAm/L,cAgGmB6B,OAAO,IAAAC,uBAIdj6L,KAAKg3L,YAAYT,UAFjBF,MAFc4D,uBAEd5D,MACApgI,KAHcgkI,uBAGdhkI,KAEE4jI,SAAWxD,MAAMzlK,OAAOuvD,wBACxBi3G,aAAenhI,KAAKrlC,OAAOuvD,wBAGjC,OADAngF,KAAK62L,qBAAsBrzL,EAAGq2L,SAASr2L,EAAI4zL,aAAa5zL,EAAIw2L,MAAO97J,EAAG,IAC/Dl+B,QAzGf1G,IAAA,WAAAN,MAAA,SAAAk/L,SAoHcgC,kBAAkB,IAIlBL,SADF75L,KAAKg3L,YAAYT,UADjBF,MAEmBzlK,OAAOuvD,wBACxBg6G,SAAYD,kBAAoBl6L,KAAKu5L,4BAA8BM,SAASh+J,QAAW,IAG7F,OADA77B,KAAK62L,qBAAsB34J,EAAG,EAAG16B,EAAG22L,WAC7Bn6L,UA5Hf1G,IAAA,OAAAN,MAAA,SAAA6B,OAUQ,MnEmDgB,emE7DxBu/L,oBAAA,IFcqBO,yCAEjB,SAAAA,gBAAa94K,QAAQ,IAAA3M,qKAAA0lL,CAAA56L,KAAA26L,iBACjB,IAAM9C,YAAca,eAAe72K,OAAOjV,OAAO/R,MADhC,OAGjBgnB,OAAOynJ,UAAY,IAAIuuB,YACvBh2K,OAAOynJ,UAAU18J,OAAOiV,OAAOjV,OAAOiuL,0BACtCh5K,OAAOynJ,UAAUpxD,aAAar2F,OAAOiH,aACrC5T,MAAA4lL,2CAAA96L,KAAA+6L,gCAAAJ,iBAAAziM,KAAA8H,KAAM6hB,OAAOvpB,KAAMupB,OAAOynJ,UAAU/V,kBAAmB,KAClDghC,UAAU1yK,QAPE3M,mZAFoB++K,8TAarC,OAAI7uL,UAAQ1D,QACR1B,KAAKspK,UAAUquB,QAAfvyL,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IACOpF,MAEJA,KAAKspK,UAAUquB,8DAaXqC,OAEX,OADAh6L,KAAKspK,UAAU6uB,cAAc6B,OACtBh6L,+CAWDk6L,kBAEN,OADAl6L,KAAKspK,UAAU4uB,SAASgC,kBACjBl6L,iEAcQg7L,WACf,IAAMpD,cAAgB53L,KAAKspK,UAAUsuB,gBAC/BqD,mBAAqBp3L,KAAK4Q,IAAI5Q,KAAK6Q,IAAI,EAAGsmL,WAAYpD,cAAcl2L,OAAS,GAEnF,OADA1B,KAAKspK,UAAU4uB,SAASN,cAAcqD,qBAC/Bj7L,qFAaP,OAAOA,KAAKspK,UAAUsuB,kDAGpB9+J,WAEF,OADA94B,KAAKspK,UAAU8uB,aAAat/J,WAAaT,SAASgB,eAAer5B,KAAKqpK,aAC/DrpK,mEAUSk7L,gBAEhB,OADAl7L,KAAKspK,UAAUivB,mBAAmB2C,gBAC3Bl7L,qEAWP,OADAA,KAAKspK,UAAUmvB,qBACRz4L,yDAGI6hB,QAMX,OALA7hB,KAAK1H,KAAKupB,OAAOvpB,MACjB0H,KAAKspK,UAAU18J,OAAOiV,OAAOjV,OAAOiuL,0BACpC76L,KAAKspK,UAAUpxD,aAAar2F,OAAOiH,YACnC9oB,KAAK+nG,SAAS/nG,KAAKspK,UAAU/V,mBAC7BvzJ,KAAKu0L,UAAU1yK,QACR7hB,iDAGA6hB,QACP7hB,KAAKspK,UAAYznJ,OAAOynJ,WAAatpK,KAAKspK,UAC1CtpK,KAAK6hB,OAASA,OACd7hB,KAAK09C,OAAO77B,OAAOjV,OAAO8wC,QAC1B19C,KAAKwiC,SAAS3gB,OAAOjV,OAAO41B,UAC5BxiC,KAAKihC,UAAUpf,OAAOjV,OAAOq0B,WAC7BjhC,KAAK+zK,UAAUlyJ,OAAOjV,OAAOmnK,WAC7B/zK,KAAKo7J,UAAUv5I,OAAOjV,OAAOwuJ,mDAI7Bp7J,KAAKspK,UAAU5hI,+yCGvIvB,IAOqByzJ,0DAEjB,SAAAA,gBAAat5K,QAAQ,IAAA3M,MAAA,qKAAAkmL,CAAAp7L,KAAAm7L,kBACjBjmL,MAAAmmL,2CAAAr7L,KAAAs7L,gCAAAH,iBAAAjjM,KAAA8H,KAAM6hB,OAAOvpB,KAAMupB,OAAOjV,OAAOkc,WAAY,KACxCyrK,UAAU1yK,QACf3M,MAAK+rB,UAAUpf,OAAOjV,OAAOq0B,WAHZ/rB,mZAFoB++K,oUAQ5Bn7J,WACT,IAAMzd,IAAMrb,KAAK6hB,OAAOjV,OAAOyO,IACzBK,OAAS1b,KAAK6hB,OAAOjV,OAAO8O,OAFd6/K,sBAGav7L,KAAK6hB,OAAOjV,OAAOk3K,WAA5C7jB,WAHYs7B,sBAGZt7B,WAAYC,SAHAq7B,sBAGAr7B,SACpBpnI,UAAUgB,MpEyCM,WAID,WoE5CfhB,UAAUgB,MpEdG,QAyDD,QoE1CZhB,UAAUgB,MpEdI,SAwDF,QoExCRmmI,YAAyB,IAAXvkJ,SACdod,UAAUgB,MpEoCE,WADF,UoElCVhB,UAAUgB,MpEnBD,QoEmBc,SAGvBomI,UxCwMU,WwCxME7kJ,MACZyd,UAAUgB,MpE+BE,WADF,UoE7BVhB,UAAUgB,MpEvBA,SoEuBc,2DAIlB1D,YAEV,IAAMwmE,YAAc58F,KAAK6hB,OAAOjV,OAAOgwF,YACjCvhF,IAAMrb,KAAK6hB,OAAOjV,OAAOyO,IACzBK,OAAS1b,KAAK6hB,OAAOjV,OAAO8O,OAC5BoN,WAAa9oB,KAAK6hB,OAAOjV,OAAOkc,WAChCisI,OAAS/0J,KAAK6hB,OAAOjV,OAAOmoJ,OAG5BymC,mBAAqB5yG,YAAYxyD,WAAY,OAAQ,GAArB,GAAAza,OAA4BihF,YAA5B,UAAAjhF,OAAgDN,IAAhD,KAAAM,OAAuDD,OAAS,IACjG8iE,QADsB,GAAA7iE,OACXihF,YADW,UAAAjhF,OACSN,MAAO,GACtCmjE,QAFsB,GAAA7iE,OAEXihF,YAFW,UAES,GAEpC58F,KAAKy7L,YAAYD,oBAbK,IAAAE,e1BuKvB,SAASC,cAAep/I,OAAQ1hD,KAAMoH,OACzC,IAAI4pL,MAAQ,KACRJ,WAAalvI,OAF+Bq/I,qBAO5CpP,oBAAmB,GAAA7wK,OAAI9gB,KAAJ,KAAA8gB,OAAY1Z,QAH/BoqL,YAJ4CuP,qBAI5CvP,YACAC,gBAL4CsP,qBAK5CtP,gBACAC,UAN4CqP,qBAM5CrP,UAQJ,OALIhwI,OAAO76C,SAGPmqL,MAAQU,UADRd,WAAaa,gBAAgB/vI,OADf8vI,YAAY9vI,QACb+vI,GACLC,KAEHd,sBAAYI,a0BnKb8P,CAAc37L,KAAKspK,UAAWjuJ,IAAKK,QAFnC+vK,WAhBkBiQ,eAgBlBjQ,WACAI,MAjBkB6P,eAiBlB7P,MAIIpqH,MAAUzhE,KAAK67L,YAAYL,mBAAjB,GAAA7/K,OAAwCihF,YAAxC,SAA4D6uF,YAAtEhqH,O1B2NU,SAAbq6H,WAAcr6H,MAAOoqH,MAAOj/K,OAAQ/R,MAC7C,IAAMkhM,QAAUlP,eAAehyL,MAC3BkhM,SACAA,QAAQt6H,MAAOoqH,MAAOj/K,Q0B5NtBkvL,CAAWr6H,MAAOoqH,OAAS/iK,sBAAYisI,eAA7B,GAAAp5I,OAA0CN,IAA1C,KAAAM,OAAiDD,SAzDxC,SAArBsgL,mBAAsBv6H,OAExBA,MAAMh6B,KAAK,SAAUi7B,MACjBA,KAAKyrF,YAAYrrD,OAAO9iG,QAuDxBg8L,CAAmBv6H,OAEnBA,MAAMxO,OAAOxrB,KAAK,SAACi7B,MACfA,KAAKyrF,YAAYzmH,WAGrB2iJ,2BAAa5oH,MAAOszF,OAAQ15I,IAAKK,wDAGxBmY,MAAOoN,UAAWq6I,SAC3B,IAAM75E,MAAQ7Y,YAAY/0D,MAAO,SAAU,UAAlB,GAAAlY,OAAgCslB,UAAhC,WACnB2C,KAAOglD,YAAY6Y,MAAO,SAAU,UAAlB,GAAA9lF,OAAgCslB,UAAhC,UAClBlmB,KAAO6tE,YAAYhlD,KAAM,KAAM03I,QAAb,GAAA3/J,OAAyBslB,UAAzB,QAIxB,OAASwgE,YAAO79D,UAAM7oB,UAAM0mD,MAHdmnB,YAAY7tE,KAAM,KAAM,SAAC1iB,EAAGN,GAAJ,OAAUM,EAAE0b,OAAO,SAAA9Z,GAAC,OAAU,OAANA,IAAYgO,IAAI,SAAAhO,GAAC,OAClDk0J,YAAal0J,EAAGy0I,SAAU32I,MAD9B,GAAA4jB,OACwCslB,UADxC,UAC4D,SAAA3nC,KAAG,OAAIA,IAAI60J,YAAYt1H,wCAK1GC,WACF94B,KAAKi8L,aAAanjK,WAAaT,SAASgB,eAAer5B,KAAKqpK,iEAGjDxnJ,QAIX,OAHA7hB,KAAK1H,KAAKupB,OAAOvpB,MACjB0H,KAAK+nG,SAASlmF,OAAOjV,OAAOkc,YAC5B9oB,KAAKu0L,UAAU1yK,QACR7hB,iDAGA6hB,QACP7hB,KAAKspK,UAAYznJ,OAAOynJ,UACxBtpK,KAAK6hB,OAASA,OACd7hB,KAAK09C,OAAO77B,OAAOjV,OAAO8wC,QAC1B19C,KAAKwiC,SxCoIM,OwCnIXxiC,KAAKihC,UAAUpf,OAAOjV,OAAOq0B,6xCC3FrC,IAAMi7J,iCAAoB,SAApBA,kBAAqB9zK,KAAMw0E,YAAau/F,cAAethM,MACzD8tF,6BAAcvgE,MACG0qC,UADjB,IAAAn3C,OAC+BihF,YAD/B,UAEiBhjG,SAASiB,KAAMshM,gBAwBfC,sDAEjB,SAAAA,cAAav6K,QAAQ,IAAA3M,MAAA,mKAAAmnL,CAAAr8L,KAAAo8L,gBACjBlnL,MAAAonL,yCAAAt8L,KAAAu8L,8BAAAH,eAAAlkM,KAAA8H,KAAM6hB,OAAOvpB,KAAMupB,OAAOjV,OAAOkc,WAAY,KACxCksJ,kBACL9/J,MAAKq/K,UAAU1yK,QAHE3M,6YAFkB++K,gUAoBnC,IAXA,IAAIp4J,OAAS,EACTD,MAAQ,EAFA4gK,sBAGmCx8L,KAAKspK,UAAUiP,WAAtDC,iBAHIgkB,sBAGJhkB,iBAAkBoQ,iBAHd4T,sBAGc5T,iBACpB9E,WAAa9jL,KAAKspK,UAAUwa,aAE9ByF,WAIAX,iBAJAW,WACAD,UAGAV,iBAHAU,UACAI,YAEAd,iBAFAc,YACAC,WACAf,iBADAe,WAGK5xL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAClBiI,KAAKg1K,eAAetzK,QAAU1B,KAAKg1K,eAAej9K,aAAc8Q,QAClE7I,KAAKg1K,eAAej9K,OAExB,IAAK,IAAIojB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMshL,WACF5gK,OAAQ0tJ,WAAWxxL,GACnB6jC,MAAO0tJ,UAAUnuK,GACjBuuK,wBACAC,uBAEEptI,OAASi8H,iBAAiBhiC,SAAjB,GAAA76H,OAA6Bk+J,iBAAiB9hL,KAAMojB,GAC7DuhL,WAAU,GAAA/gL,OAAMk+J,iBAAiB9hL,GAAvB,KAAA4jB,OAA6Bo+J,oBAAoB5+J,IAC3D04I,cACF/qI,WAAY2zK,UACZ1nC,OAAQ6zB,iBAAiB7zB,OACzBn4D,YAAa58F,KAAK6hB,OAAOjV,OAAOgwF,YAChCknF,sBACAzoK,IAAKw+J,iBAAiB9hL,GACtB2jB,OAAQP,GAEZ,GAAInb,KAAKg1K,eAAej9K,GAAGojB,aAAc84K,cACrCj0L,KAAKg1K,eAAej9K,GAAGojB,GAAGwhL,eACtBrkM,KAAMokM,WACNpzB,UAAW/sH,OACX3vC,OAAQinJ,mBAET,CACH,IAAM+oC,cAAgB,IAAIzB,kCACtB7iM,KAAMokM,WACNpzB,UAAW/sH,OACX3vC,OAAQinJ,eAEZ7zJ,KAAKg1K,eAAej9K,GAAGmO,KAAK02L,eAEtB,IAAN7kM,IACA6jC,OAAS6gK,UAAU7gK,OAEb,IAANzgB,IACA0gB,QAAU4gK,UAAU5gK,SAIhC77B,KAAK+nG,UAAWlsE,cAAQD,cAExB57B,KAAKspK,UAAYtpK,KAAKg1K,eACtBh1K,KAAK68L,cAAgB78L,KAAKg1K,2EAI1B,OAAI5vK,UAAQ1D,QACR1B,KAAK88L,kBAAL13L,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAK88L,sFAUQ,IAAAznL,OAAArV,KAyBpB,OAxBA2oF,6BAAa,IAAAhtE,OAAK3b,KAAKspK,UAAU,GAAG,GAAGD,aACtB37F,GAAG,QAAS,WACT,IAAM6M,MAAQ0P,0BAEV8yG,YAEAxiH,MAFAwiH,YACAC,YACAziH,MADAyiH,YAIJziH,MAAM2G,iBACN3G,MAAMtjD,kBAGc,IAAhB8lK,aAAqBl5L,KAAKsoB,IAAI4wK,aAAel5L,KAAKsoB,IAAI6wK,cACtD3nL,OAAK4nL,mBACAC,uBAAuB,aAAcH,YCvItC,ID2IY,IAAhBC,aAAqBn5L,KAAKsoB,IAAI4wK,aAAel5L,KAAKsoB,IAAI6wK,cACtD3nL,OAAK4nL,mBACAC,uBAAuB,WAAYF,YC7IpC,MDgJrBh9L,qEAGUw9F,UAAW2/F,WAE5B,OAjIoB,SAAtBC,oBAAuBjD,SAAU19J,SACnC,IAAMmgE,YAAcngE,QAAQ5a,OAAOjV,OAAOgwF,YAE1C,OACIqjE,WAAY,SAAAA,cACP,EAAG,EAAG,GAAGn3J,QAAQ,SAAA7O,GAAC,OACfiiM,iCAAiB,IAAAvgL,OAAK8gB,QAAQ6sI,UAAUrvK,GAAG,GAAGovK,YAAczsE,YAAau9F,SAAU,iBAE3Fj6B,SAAU,SAAAA,YACL,EAAG,EAAG,GAAGp3J,QAAQ,SAAA7O,GAAC,OACfiiM,iCAAiB,IAAAvgL,OAAK8gB,QAAQ6sI,UAAU,GAAGrvK,GAAGovK,YAAczsE,YAAau9F,SAAU,iBAsH3FiD,CAAoBD,UAAWn9L,MAAMw9F,aAC9Bx9F,uDAGI,IAAAq9L,sBACWr9L,KAAKspK,UAAU,GAAG,GAAGvhE,WAAnCtlE,IADG46J,sBACH56J,IAAKsD,KADFs3J,sBACEt3J,KADFmuJ,eAEel0L,KAAK+nG,WAE/B,OACItlE,QACAsD,UACAlK,OAPOq4J,eAEHr4J,OAMJD,MAROs4J,eAEKt4J,2DAUL/Z,QAIX,OAHA7hB,KAAK1H,KAAKupB,OAAOvpB,MACjB0H,KAAK+nG,SAASlmF,OAAOjV,OAAOkc,YAC5B9oB,KAAKu0L,UAAU1yK,QACR7hB,iDAGA6hB,QAMP,OALA7hB,KAAKspK,UAAYznJ,OAAOynJ,UACxBtpK,KAAK6hB,OAASA,OACd7hB,KAAK09C,OAAO77B,OAAOjV,OAAO8wC,QAC1B19C,KAAKihC,UAAUpf,OAAOjV,OAAOq0B,WAC7BjhC,KAAKs9L,eACEt9L,2qBE5Kf,IAAMu9L,WACFxjC,OACIyjC,WAAY,YACZC,WAAY11B,cAEhBS,UACIg1B,WAAY,eACZC,WAAYz1B,mBAad01B,4CAAsB,SAAtBA,oBAAuBC,WAAYC,cAAeC,eACpD,IAAI7kK,QAAU,KAENgrH,WAA6B65C,cAA7B75C,WAAY4+B,aAAiBib,cAAjBjb,aAHkDkb,sBAInCP,UAAUI,YAArCH,WAJ8DM,sBAI9DN,WAAYC,WAJkDK,sBAIlDL,WACd//I,QAAWA,OpEfC,UoEiBlB,GAAIsmG,WAAWzqI,SAAWyqI,WAAWzqI,QAAQikL,YAAa,CACtD,IAAIO,aAAenb,aAAa+a,YAC1BlkL,OAASuqI,WAAWzqI,QAAQikL,Y3CwMpB,Y2CtMdO,aAAetlM,OAAOoU,UAAWkxL,aAAlBC,sCACXphG,YAAagmF,aAAahmF,aACvBl/C,QACHq2H,UAAS,GAAAp4J,OAAKk+J,iBAAiB,GAAtB,KAAAl+J,OAA4Bo+J,oBAAoB,IACzD3e,UAAW8M,kBACXjnI,UAAWw8J,WAAWx8J,cAGTuI,QACbu0J,aAAa3iC,UAAY,KACzB2iC,aAAahqB,UAAY,MAEzBgqB,aAAav0J,QAAU4lE,sBACvB2uF,aAAa3iC,UAAYhsD,qBAG7B,IAAM6uF,eACF3lM,KAAMqlM,WACNr0B,UAAW7vJ,OACX7M,OAAQmxL,cAGNG,kBAAoBN,cAAc9oB,aAAa6oB,YAEjD3kK,QADAklK,kBACUA,kBACGvB,cAAcsB,eAEjB,IAAI9J,gCAAgB8J,eAGtC,OAAOjlK,SAuCLmlK,+CAAyB,SAAzBA,uBAA0BC,cAAeR,cAAeC,cAAeQ,MACzE,IACQzb,aAAiBib,cAAjBjb,aACFllI,QAAWA,OpE7FC,UoE8FV+rH,UAAcmZ,aAAdnZ,UACAmf,iBAAqByV,KAAK9lB,WAA1BqQ,iBAEJY,qBAGAZ,iBAHAY,qBACAE,YAEAd,iBAFAc,YACAC,WACAf,iBADAe,WAT8E2U,sBAnCjE,SAAfC,aAAe3xL,QAAM,OACvBszJ,UACIqJ,cAAe,oBACf3tI,MAAO,YACPC,OAAQ,qBACR2iK,mBvE9Dc,SuE+DdC,YAAa,aACbC,SAAU,EACVC,SAA2B,UAAjB/xL,OAAO48B,MAAoB,EAAI,EACzChH,SAAU51B,OAAO48B,MACjB4xH,UAAWlsD,mBAEf+wD,YACIsJ,cAAe,sBACf3tI,MAAO,qBACP4iK,mBvEzEa,QuE0EbC,YAAa,YACb5iK,OAAQ,YACR6iK,SAA2B,QAAjB9xL,OAAO48B,MAAkB,EAAI,EACvCm1J,SAAU,EACVn8J,SAAU51B,OAAO48B,MACjB4xH,UAAWjsD,qBA4BXovF,CAAa90B,UAAU20B,gBAAgBA,eAFvC70B,cAZ8E+0B,sBAY9E/0B,cAAei1B,mBAZ+DF,sBAY/DE,mBAAoB5iK,MAZ2C0iK,sBAY3C1iK,MAAOC,OAZoCyiK,sBAYpCziK,OAAQ6iK,SAZ4BJ,sBAY5BI,SAAUC,SAZkBL,sBAYlBK,SAC5DF,YAb8EH,sBAa9EG,YAAaj8J,SAbiE87J,sBAajE97J,SAAU44H,UAbuDkjC,sBAavDljC,UAErBtyI,YACF4gJ,UAAWD,UAAUC,UACrB80B,mBAAoB5V,iBAAiB6V,aAAa,IAEhD9Z,SAAW0Z,KAAKva,aAAasa,eAC7BrI,YAAcvM,qBAAqBgV,oBACnCxI,WAAapN,iBAAiB6V,aAAa,GAgB3CR,eACF3lM,KAAMixK,cACN38J,OAhBiBnU,OAAOoU,UAAPmxL,sCACjBphG,YAAagmF,aAAahmF,aACvBl/C,QACHm9I,yBAA0BmD,wCACnBv0B,WACH7sE,YAAagmF,aAAahmF,cAG9B/hG,KAAMujM,cACNrqB,UAAS,GAAAp4J,OAAKk+J,iBAAiB6kB,UAAtB,KAAA/iL,OAAmCo+J,oBAAoB4kB,WAChEvjC,oBACA54H,qBAMA1Z,YACI8S,MAAO9S,WAAW8S,OAClBC,OAAQ/S,WAAW+S,QACnBk6J,wBACAC,sBACAtM,wBACAC,wBAIFuU,kBAAoBN,cAAc9oB,aAAavL,eAErD,OAAKob,SAKDuZ,kBACmBA,kBACMvB,cAAcsB,eAEpB,IAAItD,gBAAgBsD,gBARvCC,mBAAqBA,kBAAkBx2J,SAChC,OA4FFk3J,8CAAwB,SAAxBA,sBAAyBhB,cAAeS,KAAMR,eAAtB,OACjC9jC,MAAO2jC,4CvErOU,QuEqOiBE,cAAeC,eACjDr1B,SAAUk1B,4CvErOW,WuEqOoBE,cAAeC,eACxDj0B,OA1EwB,SAAtBi1B,oBAAuBjB,cAAeC,eACxC,IAAIiB,cAAgB,KACZ96C,WAA0C65C,cAA1C75C,WAAY4+B,aAA8Bib,cAA9Bjb,aAAc1iF,YAAgB29F,cAAhB39F,YAC5BxiD,QAAWA,OpExKC,UoE0KlB,GAAIsmG,WAAWmvC,SAAWnvC,WAAWmvC,QAAQzxL,OAAQ,CACjD,IAAMuxL,aAAe+K,wCAAKpb,aAAahZ,OAAWlsH,QAAQwiD,0BACpD+9F,eACF3lM,KvEtKU,SuEuKVgxK,UAAWtlB,WAAWmvC,QACtBvmL,OAAQqmL,cAGNiL,kBAAoBN,cAAc9oB,avE3K1B,UuE8KVgqB,cADAZ,kBACgBA,kBACJvB,cAAcsB,eAEV,IAAIvJ,gCAAgBuJ,eAG5C,OAAOa,cAoDCD,CAAoBjB,cAAeC,eAC3CQ,KAzCsB,SAApBU,kBAAqBnB,cAAeC,cAAeQ,MACrD,IACM3gJ,QAAWA,OpEzMC,UoE0MVklI,aAAiBib,cAAjBjb,aAQFqb,eACF3lM,KpErNY,OoEsNZgxK,UAAW+0B,KACXzxL,OATWoxL,wCACRtgJ,QACH8rH,WAAYoZ,aAAapZ,WACzB5sE,YAAagmF,aAAahmF,YAC1B9zE,YAAc+S,OAAQ,EAAGD,MAAO,MAO9BsiK,kBAAoBN,cAAc9oB,apEzNxB,QoEgOhB,OANIopB,kBACcA,kBACDvB,cAAcsB,eAEb,IAAI7B,6BAAc6B,eAoB9Bc,CAAkBnB,cAAeC,cAAeQ,MACtDW,kBAAmBb,+CvEnMC,WuEmMgCP,cAAeC,cAAeQ,MAClFY,oBAAqBd,+CvEnMC,auEmMkCP,cAAeC,cAAeQ,0SCrQnF,IAAMa,cAAb,WAEI,SAAAA,6KAAeC,CAAAn/L,KAAAk/L,eACXl/L,KAAKo/L,wBACLp/L,KAAKq/L,uBAJb,sPAAAC,CAAAJ,gBAAA5lM,IAAA,sBAAAN,MAAA,SAAAumM,sBAQQ,OAAIn6L,UAAI1D,QACJ1B,KAAKo/L,qBAALh6L,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKo/L,wBAZpB9lM,IAAA,qBAAAN,MAAA,SAAAwmM,qBAgBQ,OAAIp6L,UAAI1D,QACJ1B,KAAKq/L,oBAALj6L,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKq/L,uBApBpB/lM,IAAA,gCAAAN,MAAA,SAAA+gM,8BAuBmCl/L,KAAMi/L,iBACjCrhM,OAAOkmB,OAAO3e,KAAKw/L,sBAAsB12L,QAAQ,SAAC7O,GAC9CA,EAAEwlM,oBAAoB5kM,KAAMi/L,sBAzBxCxgM,IAAA,yBAAAN,MAAA,SAAAkkM,uBA6B4BriM,KAAMm/L,OAC1Bh6L,KAAKu/L,sBAAsB1kM,OAASmF,KAAKu/L,sBAAsB1kM,MAAMs9L,cAAc6B,WA9B3FkF,cAAA,GC0DaQ,8BAAmB,SAAnBA,iBAAoBjjK,QAAS5I,OACtC,IAAI+uJ,aAAenzG,kBAAmBhzC,QAAQ7vB,UADE+yL,sBAGxB9rK,MAAMssD,wBAAxBtkD,OAH0C8jK,sBAG1C9jK,OAAQD,MAHkC+jK,sBAGlC/jK,MACRgkK,WAAanjK,QAAQZ,SACrBgkK,UAAYpjK,QAAQb,QACpBkkK,SAAWrjK,QAAQuuD,cAAc27E,YANSo5B,sBAc5CD,SAASvrC,kBANTtI,kBAR4C8zC,sBAQ5C9zC,kBACAD,eAT4C+zC,sBAS5C/zC,eACAjuE,SAV4CgiH,sBAU5ChiH,SACAhjE,KAX4CglL,sBAW5ChlL,KACAjB,QAZ4CimL,sBAY5CjmL,QACA6E,OAb4CohL,sBAa5CphL,OAb4CyiJ,gBAuB5C3kI,QAAQ7vB,SAPRuxB,SAhB4CijI,gBAgB5CjjI,SACA0rI,UAjB4CzI,gBAiB5CyI,UACAjtE,YAlB4CwkE,gBAkB5CxkE,YACAw1D,YAnB4CgP,gBAmB5ChP,YACAwX,OApB4CxI,gBAoB5CwI,OACAJ,WArB4CpI,gBAqB5CoI,WACAC,UAtB4CrI,gBAsB5CqI,UAIElB,YAAc9rI,QAAQs9H,QAAQ,GAE9B2O,eAAiBjsI,QAAQ+rI,WAAW,GAEpCw3B,eAAiBp2B,OAAOpnI,SAExBy9J,kB7BlFuB,SAApBC,kBAAqBzjK,SAAY,IAAA0jK,cACpClN,aAAex2J,QAAQ7vB,SAASg9J,OAChCrB,YAAc9rI,QAAQs9H,QAAQ,GAC9B2O,eAAiBjsI,QAAQ+rI,WAAW,GACpC43B,cAAYC,kCAAAF,iBAAA,GAAAxkL,OACVuzF,kBADU,KAAAvzF,OACHuzF,oB5CcE,QACI,WAgCJ,U4ChDCmxF,kCAAAF,cAAA,GAAAxkL,OAEVszF,qBAFU,KAAAtzF,OAEAszF,uB5C8CD,QAhCI,WADJ,U4CfCoxF,kCAAAF,cAAA,GAAAxkL,OAGVuzF,kBAHU,KAAAvzF,OAGHszF,uB5CYE,QAiCA,QAhCI,a4ChBHoxF,kCAAAF,cAAA,GAAAxkL,OAIVszF,qBAJU,KAAAtzF,OAIAuzF,oB5CYG,WAgCJ,QAjCA,U4CfCixF,eAMZG,gB5CQY,SAmCA,oBAnCA,W4CJZC,cAAgBh4B,YAAY/lI,UAAY0sE,kBACxCsxF,iBAAmB93B,eAAelmI,UAAY0sE,kBAEpD,OACI31F,QAAS6mL,aAAY,GAAAzkL,OAAI4kL,cAAJ,KAAA5kL,OAAqB6kL,mBAC1CrN,QAASF,aAAazwJ,WAAa2sE,oBAAQ8jF,aAAazwJ,WAAa0sE,kBACrEoxF,cAAc,GAAKA,cAAc,I6B8DXJ,CAAkBzjK,SAE5CZ,OAASh4B,KAAK6N,MAAMmqB,QACpBD,MAAQ/3B,KAAK6N,MAAMkqB,OAEnB,IAAM6kK,yBAA2B58L,KAAK6Q,IAAIkrL,WAAa,EAAIA,WAAa/jK,OAAQguI,WAC1E62B,wBAA0B78L,KAAK6Q,IAAImrL,UAAY,EAAIA,UAAYjkK,MAAOuC,UAtC5BwiK,ehByBvB,SAAhB9rC,cAAiBp4H,QAASmkK,aAAcC,aACjD,IAAIzN,aAAe,EACb75K,WACAivJ,SAAW/rI,QAAQ+rI,WACnBs4B,WAAa5O,wCAA4B1pB,SAAS,IAsBxD,OApBAo4B,cAAgB,KAAOC,aAAe,MAAQ,QAAS,YAAY/3L,QAAQ,SAACjO,MACxE,IAAMkmM,cAAgBtkK,QAAQ5hC,QACxBykG,QAAU4yF,wCAA4B6O,cAAc,IAC1D,GAAIzhG,QAAS,CACT,IAAM1yF,OAASm0L,cAAc,GAE7Bn0L,OAAOgvB,MAAQa,QAAQb,QACvBhvB,OAAOivB,OAASY,QAAQZ,SACxBjvB,OAAOgwF,YAAcngE,QAAQ7vB,SAASgwF,YACtChwF,OAAO0yF,QAAUA,QACjB1yF,OAAO+1B,QAAoB,UAAT9nC,MAAqBimM,WAAWp/L,OAAgCkL,OAAO+1B,QAA7B6lI,SAAS,GAAG7lI,QAP/D,IAAAq+J,eASgBpO,cAAchmL,OAAQ/R,KAAM4hC,QAAQxhC,eAAeo/B,WACxEoC,QAAO,GAAA9gB,OAAI9gB,KAAJ,UADHghC,OATCmlK,eASDnlK,OAAQ6mC,KATPs+H,eASOt+H,KAGhBnpD,QAAO,GAAAoC,OAAI9gB,KAAJ,SAAkB6nE,KACzBjmC,QAAQk3H,aAAa94J,MAAQ6nE,KAC7B0wH,cAAgBv3J,WAGfu3J,0BAAc75K,iBgBVWs7I,CAAcp4H,QAASgkK,yBAA0BC,yBAA3EnnL,QAzCwConL,eAyCxCpnL,QAAS65K,aAzC+BuN,eAyC/BvN,aAGXD,QfqEkB,SAAf8N,aAAgBxkK,QAAS22J,aAAcv3J,OAAQD,OACxD,IAAMskE,aACFrkE,cACAD,YACAw3J,2BAEIxpB,OAAWntI,QAAQ7vB,SAAnBg9J,OACA7qE,KAAmB6qE,OAAnB7qE,KAAMv8D,SAAaonI,OAAbpnI,SAEdonI,OAAOhtE,YAAcngE,QAAQ7vB,SAASgwF,YACtC,IAAMpzD,MAAShH,WAAa2sE,oBAAQ3sE,WAAa4sE,oB1DpH7B,WACE,a0DuHtB,OAFAw6D,OAAO7qE,KAAOA,K1DtHM,a0DsHGv1D,OAAsB5N,MAAQ,K1DrH/B,e0DqHwC4N,OAAwB3N,OAAS,IAAQkjE,KACvG6qE,OAAOpgI,MAAQA,MACRwpJ,+BAAkBppB,OAAQntI,QAASyjE,YAAazjE,QAAQ02J,aenF/C8N,CAAaxkK,QAAS22J,aAAcqN,yBAA0BC,yBAC9EjkK,QAAQk3H,aAAaiW,UACrBupB,QAAQrqL,QAAQ,SAAC7O,GACbwiC,QAAQk3H,aAAaiW,OAAO3vK,EAAEygK,WAAazgK,EAAE2vK,SAGjD,IAAMkrB,YfwBoB,SAAjBoM,eAAkB/N,QAASF,aAAcpR,gBAAiBjB,gBACnE,IACMkU,aAAgBl5J,MAAO,EAAGC,OAAQ,GA2BxC,OA5BuBs3J,QAAQlrL,IAAI,SAAAorL,YAAU,OAAIA,WAAWzpB,OAAO1pE,gBAGpDp3F,QAAQ,SAACsuE,OACpB,IAAIv7C,OACAD,MACJA,MAAQ/3B,KAAK4Q,IAAI2iE,MAAMx7C,MAAOw7C,MAAMp6C,UACpCnB,OAASh4B,KAAK4Q,IAAI2iE,MAAMv7C,OAAQu7C,MAAMn6C,W1D1EpB,e0D4Edg2J,aAAazpJ,MACTsrJ,YAAYl5J,MAAQA,MAAQglJ,gBAC5BkU,YAAYl5J,MAAQglJ,eACpBkU,YAAYj5J,QAAUA,SAEtBi5J,YAAYl5J,OAASA,MACrBk5J,YAAYj5J,OAASh4B,KAAK6Q,IAAIogL,YAAYj5J,OAAQA,SAE/Ci5J,YAAYj5J,OAASA,OAASgmJ,iBACrCiT,YAAYj5J,OAASA,OACrBi5J,YAAYl5J,OAASA,QAErBk5J,YAAYj5J,QAAUA,OACtBi5J,YAAYl5J,MAAQ/3B,KAAK6Q,IAAIogL,YAAYl5J,MAAOA,U1DzFlC,e0D4FlBq3J,aAAazpJ,QACbsrJ,YAAYl5J,MAAQglJ,gBAEjBkU,YerDaoM,CAAe/N,QAASvpB,OAAQ62B,yBAA0BC,yBACxEjL,YAAeuK,iBAAmB7wF,oBAAQ6wF,iBAAmB5wF,oBAAS0lF,YAAYl5J,MAAQ,EAC1F45J,aAAgBwK,iBAAmB9wF,mBAAO8wF,iBAAmB/wF,qBAAU6lF,YAAYj5J,OAAS,EAG5FmoH,YACFzqI,gBACA45K,gBACA5sB,UAAW9pI,SACX1hB,UACAjB,gBACA6E,cACAi2I,eAAgBkrC,SAASlrC,kBAGvB10D,aACFihG,YACItlK,cACAD,aAEJw3J,0BACA0B,wBACA+L,YAAaH,wBACbE,aAAcH,yBACd7kK,MAAO8kK,wBAA0BjL,YACjC55J,OAAQ4kK,yBAA2BrN,aAAeoC,aAClD/b,cAAeh9I,QAAQg9I,gBACvBD,aAAc/8I,QAAQ+8I,gBAiB1B,OACIoJ,aAhBJA,aAAenzG,eAAemzG,cAC1BhmF,wBACAw1D,wBACA2C,OAAQtlF,eAAeqwH,SAAShrC,WAAWC,OAAQt4H,QAAQ7vB,SAASmoJ,QACpEkrC,oCACAr2B,cACAzwG,OAAQswG,UAAUC,UAClBF,sBACAzP,MAAOwO,YACPC,SAAUE,eACVzc,oCACAD,8BACAn4H,YACAkqD,oBAIAimE,sBACA9jD,0BAIFkhG,kBACFrnC,MAAO,EACPyO,SAAU,EACVoB,OAAQ,EACRo1B,kBAAmB,EACnBC,oBAAqB,EACrBZ,KAAM,GAGJgD,gBACF56I,EzE9IiB,QyE+IjBqpF,EzE9IqB,WyE+IrBgqC,EzEjJkB,SyEkJlBwnB,EzEjG+B,oByEkG/BC,EzEjGiC,sByEkGjCC,EzEjGgB,QyE2IPC,0BAAe,SAAfA,aAAgB/6B,OAAQm3B,eACjC,IAAMD,cAAgBl3B,OAAOg7B,eACvBC,WAAaj7B,OAAO4R,SAGtB+lB,KACA+C,iBADA/C,KAIEuD,aAAehD,8CAAsBhB,cAAe+D,WAAY9D,eAChEgE,kBAAoBppM,OAAOqN,KAAKs7L,kBAAkBn5L,IAAI,SAAAhO,GAAC,OAAI2nM,aAAa3nM,KACxE6nM,YAAcD,kBAAkBxD,OA1Cd,SAAtB0D,oBAAuBF,kBAAmBn7B,QAAW,IAGnDs4B,kBAEAoC,iBAFApC,kBACAX,KACA+C,iBADA/C,KAGE2D,wBAA0BH,kBAF5BT,iBAHAnC,qBAMEgD,sBAAwBJ,kBAAkB7C,mBAC1C8C,YAAcD,kBAAkBxD,MAChCpB,iBAAmB,IAAIiC,cACvBK,uBAEN0C,wBAA0B1C,oBAAoBr/B,SAAW+hC,uBACzDD,0BAA4BzC,oBAAoBt/B,WAAa+hC,yBAE7D/E,iBACiBsC,oBAAoBA,qBACpBC,oBACGnB,KAAMyD,cAE1Bp7B,OAAO17E,cAAck3G,WAAaF,wBAClCt7B,OAAO17E,cAAcm3G,WAAaF,uBAEjCD,wBAAyBC,uBAAuBn5L,QAAQ,SAACkwB,SACtDA,SAAWA,QAAQ2+J,QAAQsF,oBAG/B6E,YAAY7E,iBAAiBA,kBAe7B8E,CAAoBF,kBAAmBn7B,QAEvCm7B,kBAAkB/4L,QAAQ,SAACs5L,iBAAkBngM,OACzC,GAAyB,OAArBmgM,iBAA2B,CAC3B,IAAMC,kBAAoBhB,eAAep/L,OACnCqnK,UAAYs0B,cAAc9oB,aAAautB,mBACvCC,gBAAkBh5B,UAAYA,UAAUD,WAAa,KAC3Du0B,cAAc2E,gBAAgBD,oBAGtC1E,cAAc4E,mBAAmBX,mBAAmBjrB,UACpDkrB,YAAYW,6wDCpOhB,IAAMC,0BAA2B,SAA3BA,yBAA4B9rD,YAAavgD,UAAa,IAAA5hE,KAAAm2C,MAClD+3H,UAAY,SAAZA,UAAYr3L,OAAK,OAAIA,MAAMzQ,SAAW+6F,yBAAUj3F,SAEhDgoK,YADStwE,SAAS55D,QACGuuD,cAAc27E,YACnClxE,SAAUhhE,SAAG9Y,OAAHpU,MAAAktB,KAAAmuK,iCAAaj8B,YAAYk8B,qBAAqB,OACxDntG,SAAU9qB,UAAGjvD,OAAHpU,MAAAqjE,MAAAg4H,iCAAaj8B,YAAYk8B,qBAAqB,OACxDC,OAASrtG,QAAQ32E,MAAM,SAAAxT,OAAK,OAAIA,MAAMzQ,SAAW+6F,yBAAUh3F,YAC3D6lG,SAAWkiE,YAAYl1I,WAAWzK,eAClCwhI,UAAY/jD,SAAS+jD,UACrBC,UAAYhkD,SAASgkD,UAC3B7R,YAAYnvG,KAAK,SAACi7B,MACd,IAAMy2G,aAAez2G,KAAK1jD,UAAUq3E,WACpC,IAAMZ,QAAQ32E,MAAM6jL,aAAcjtG,QAAQ52E,MAAM6jL,WAAa,CACzD,IAGIviD,WAHErS,YAAcrrE,KAAK1jD,UAAUqhI,gBAAgB,GAC7C0iD,cAAgBh1D,YAAYh6H,OAAO,SAAA1b,GAAC,OAA+C,IAA3CowJ,UAAUpiI,UAAU,SAAA3d,GAAC,OAAIA,EAAEs6L,OAAO3qM,OAC1E4qM,cAAgBl1D,YAAYh6H,OAAO,SAAA1b,GAAC,OAA+C,IAA3CmwJ,UAAUniI,UAAU,SAAA3d,GAAC,OAAIA,EAAEs6L,OAAO3qM,OAG5E+nJ,WADA0iD,OACaC,cAAc96L,IAAI,SAAA5P,GAAC,SAAAsjB,OAAOtjB,KAE1B4qM,cAAch7L,IAAI,SAAA5P,GAAC,SAAAsjB,OAAOtjB,KAG3C8gL,aAAa+pB,cAAc,IAAK9iD,YAAY,OAKlD+iD,gCACFlxG,YACI01E,IAAK,SAAAxmJ,EAACymJ,mBAAoBnrI,SACtB,IAAM2mK,uBAAyBx7B,mBAAmB3nB,aAC5CqX,YAAc76H,QAAQyjH,cAC5B,OAAOkjD,wBAAyB9rC,cAAgB8rC,yBAGxD10G,aACIiM,QAAS,SAAAA,QAACitE,mBAAoBnrI,SAC1B,IAAM4mK,gBAAkBz7B,mBAAmB5nB,WACrC6nB,kBAAoBD,mBAAmB3nB,aACvCuB,OAAS/kH,QAAQ5D,KACjBy+H,YAAc76H,QAAQyjH,cAC5B,OAAI2nB,oBACOA,oBAAsBvQ,aAAqB9V,SAAW6hD,oBCpD9DC,oCD0EX,SAAAA,gBAAwB,IAAAp8F,iBAAAhyF,mKAAAquL,CAAAvjM,KAAAsjM,eAAA,QAAAl2H,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MAAA,OACpBn4D,MAAAsuL,yCAAAxjM,MAAAknG,iBAAAu8F,8BAAAH,gBAAAprM,KAAAqP,MAAA2/F,kBAAAlnG,MAAA2b,OAASkG,WACJo3J,mBAAqB/jK,MAAK2Q,YAAY68K,2BAC3CxtL,MAAK4yJ,uBAAuB5yJ,MAAK2Q,YAAYs9K,iCAHzBjuL,6YADe66E,8UAgBnC,OAAI3qF,UAAO1D,QACP1B,KAAKi5K,oBAAqB7zK,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,KAAapF,KAAK6lB,YAAY68K,2BACjD1iM,MAEJA,KAAKi5K,2FAGmB,IAAA5jK,OAAArV,KAC/B,GAAIoF,UAAO1D,OAAQ,CACf1B,KAAKk5K,wBAA0BzpG,eAAeA,kBAC1CzvE,KAAK6lB,YAAYs9K,kCAAkC/9L,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,SACvD,IAAMq3B,QAAUz8B,KAAKy8B,QAKrB,OAJAs8I,uBAAuB/4K,MACvBy8B,QAAQmqI,WAAWr5D,2BAA2B/7C,aAAYG,gBAAiB,WACvEonH,uBAAuB1jK,UAEpBrV,KAEX,OAAOA,KAAKk5K,oFA8CGrmF,UAAW1nE,SAC1B,IAAMk0H,YAAc5mJ,OAAOoU,OAAOse,SAC5B/N,SAAWiiI,YAAYjiI,SACvBrS,KAAO/K,KAAKy8B,QAAQuuD,cAAc27E,YAAYotB,iBAC9Cv1K,aAAezT,KAAK0T,kBACpB5B,MAAQg0D,yCAA4B9lE,KAAMqS,UAC1CsmL,kBAAoB1jM,KAAKswF,SAASC,YAAYsC,WAEpD,GAAI6wG,kBAAmB,CACnB,IACMC,aADSr0K,eAAelS,UAAY3kB,OAAOqN,KAAKsX,UAAaA,SAAWA,SAAS,OAC5DrJ,OAAO,SAAAzI,OAAK,OAAIA,SAASkT,eAC9C60E,QAAUqwG,kBAAkB79K,YAAYwtE,UACxCrvE,YACFmH,QAASk0H,YACT/7H,OAAQuvE,UACRz1E,SAAUP,MACViG,SAAU9iB,KAAKy8B,QAAQ+4F,QACvBtqG,gBAAiBmoE,QACjBtwE,4BAA6B4gL,YAAY7kL,MAAM,SAAAxT,OAAK,OAAIkT,aAAalT,OAAOsT,IAAI/jB,OAC5E+6F,yBAAUj3F,WAElBoM,KAAKyoF,UAAU32E,MAAOmH,YAAY,GAEtC,OAAOhkB,qEAGU0uF,aACjB,IAAK,IAAMp1F,OAAOo1F,YACd1uF,KAAKmwF,uBAAuBzB,YAAYp1F,KAAK6yF,cAAgBuC,YAAYp1F,KAE7E,OAAO0G,mFAtGP,OAAO0iM,gHAIP,OAAOS,oDEvFFS,mBACTC,KACI7jJ,SACA6vF,SACA3zC,UACAwqE,WAEJn1F,OACIm1F,UACA1mH,SACA6vF,SACA3zC,olDCsBa4nG,4CAUjB,SAAAA,OAAaC,oBAAoB,IAAA7uL,2JAAA8uL,CAAAhkM,KAAA8jM,SAC7B5uL,wKAAA+uL,CAAAjkM,KAAAkkM,sBAAAJ,QAAA5rM,KAAA8H,QAEK43K,YAAcn/K,OAAOoU,UAAWlG,YAASo8I,cAC9C7tI,MAAK86I,aACL96I,MAAKy+I,gBACLz+I,MAAKijK,gBACLjjK,MAAKqhH,OAAS,KACdrhH,MAAKikI,iBAAmB,KACxBjkI,MAAKgkI,iBAAmB,IAAIrtD,QAAQ,SAACxiE,SACjCnU,MAAKikI,iBAAmB9vH,UAE5BnU,MAAKy+I,aAAa2kB,OAAS,IAAI+N,kBAC/BnxK,MAAKygH,OAAS,IAAIroD,mBAAMs2H,mBAExB1uL,MAAK0xJ,WAAa,IAAIt5F,6LAAJ62H,IACb3yI,aAAYG,gBAAiB,IAIlC,IAAMsb,UAAYugC,0BAAiBp8C,uBAC1BzoD,MArBoBy7L,qBAqBXv2H,wBAAWw2H,0DAAAnvL,QAAMvO,YAASuO,MAAKygH,OAAO94G,OACpDowD,sBAtByB,aAwB7BY,wBAAWw2H,0DAAAnvL,QAAM6tI,aAAcp6I,OAC3BskE,sBAEJY,wBAAWw2H,0DAAAnvL,QAAMmzJ,cAAe1/J,OAC5BskE,sBAGJ/3D,MAAKja,aAAaxC,OAAOoU,UAAWk3L,mBAAoB7uL,MAAK2/F,gBAC7D3/F,MAAKmhF,SAAS,IAAIitG,gBAAJe,0DAAAnvL,SACVq7E,YAAamE,4BACblE,SAAU0E,gBACVxD,2BACDhD,6BAAauB,0CAChB/6E,MAAKsgH,MAAL,UAAA75G,OAAqBrR,gBACrB4K,MAAK6kJ,MAAM,OACX7kJ,MAAKszJ,SAAS,OACdtzJ,MAAK00J,WACL10J,MAAKw/B,UACLx/B,MAAK2sF,UACL3sF,MAAKulB,SACLi9I,2BAAoB2sB,0DAAAnvL,SAEpBA,MAAKwsL,eAAiBpoB,6BA9COpkK,sXAVD63K,8SAoE5B,OAAI3nL,UAAO1D,OACA1B,KAEJA,KAAKgrF,cAAcstF,yDAoB1B,OAAIlzK,UAAO1D,OACA1B,KAEJA,KAAK2zJ,iDAIZ,OAAO3zJ,KAAKk5I,uDAkBZ,GAAI9zI,UAAO1D,OAAQ,CACf,IAAMilK,YAAc3mK,KAAKgrF,cAAc27E,YAGvC,OAFA3mK,KAAKu2H,OAALnxH,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACAuhK,aAAeA,YAAYnxC,MAAMx1H,KAAKw1H,SAC/Bx1H,KAEX,OAAOA,KAAKu2H,mDA4CZ,OAAInxH,UAAS1D,QACT1B,KAAKgjJ,UAAL59I,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAEJA,KAAKgjJ,sDASK,QAAA51E,KAAAhoE,UAAA1D,OAARmgB,OAAQ,IAAAhZ,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAARxrD,OAAQwrD,MAAAjoE,UAAAioE,MACjB,GAAIxrD,OAAOngB,OAAQ,CACf,IAAMsiJ,WAAavrJ,OAAOoU,UAAWgV,OAAO,GAAGmiI,YACzCyR,qBAAuBh9J,OAAOoU,UAAWgV,OAAO,GAAG4zI,sBAEzDz1J,KAAKgwJ,WAAchM,sBAAYyR,2CAC/B,IAAM6uC,iBnD3MQ,SAAbC,WAAc9nK,SAGvB,OAAQ,IAFIA,QAAQuzH,UAAUhM,WAEdqR,YAAY54H,QAAQuzH,UAAWv3J,OAAOoU,QAClD6nH,UAAWj4F,QAAQmqI,YACpBnqI,QAAQxhC,kBmDsMsBspM,CAAWvkM,MAKpC,OAHAA,KAAK2zJ,aAAagT,YAAc29B,iBAAiB,GnDO7B,SAAnBE,iBAAoB/nK,SAAY,IAAAgoK,uBAAAC,4BACPrvC,aAAYt/B,WADL,GAClCD,YADkC2uE,uBAAA,GACrBE,WADqBF,uBAAA,GAEnC97L,MAAQ8zB,QAAQk5F,OACtBhtH,MAAMqsB,OAAO,YAAa8gG,aAC1BntH,MAAMqsB,OAAO,cAAe2vK,YmDVpBH,CAAiBxkM,MACjBA,KAAKgrF,cAAc27E,YAAYnxC,MAAMx1H,KAAKw1H,SAAS7sH,MAAM3I,KAAK21H,QACvD31H,KAEX,OAAOA,KAAKgwJ,8DAOZ,OAAI5qJ,UAAM1D,QACN1B,KAAK60G,cAALzvG,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GACOpF,MAGJA,KAAK60G,0DAULhoB,YACP,IAAM61D,iBAAmB1iJ,KAAK/E,eAAeynJ,iBAC7C,OAAI71D,YACA61D,iBAAiBkiD,SAAS/3G,YACnB7sF,MAEJ0iJ,yDAUP,OAAIt9I,UAAO1D,OACA1B,KAEJA,KAAKgrF,cAAc4+E,yCAmBxBp+I,WAEF,OADyBxrB,KAAK/E,eAAeynJ,iBACrBj2D,SAASjhE,mDASjC,IAAMqI,MAAQ7zB,KAAK6zB,QAEb6uH,iBAAmB1iJ,KAAK/E,eAAeynJ,iBAEvCm7C,cAAgB6B,8BAAiB1/L,KAAM6zB,OAC7C6uH,iBAAiBtK,QAAShsD,OAAQpsF,KAAMsjB,OAAQ,eJpR3B,SAAhBuhL,cAAiBvsB,OAAQulB,eAAkB,IAC5C75C,WAA0C65C,cAA1C75C,WAAY4+B,aAA8Bib,cAA9Bjb,aAAc1iF,YAAgB29F,cAAhB39F,YAE9BnlF,KAIAipI,WAJAjpI,KACAjB,QAGAkqI,WAHAlqI,QACA6E,OAEAqlI,WAFArlI,OACAi2I,eACA5Q,WADA4Q,eAGAjC,QAIAiC,eAJAjC,QACAC,SAGAgC,eAHAhC,SACAX,WAEA2C,eAFA3C,WACAC,YACA0C,eADA1C,YAEAn3I,MAAQjB,SACRw+J,OAAOp4E,YAAYA,aACFtzF,OAAOg2K,cACPpsC,UACG/zG,KAAMkwH,QAAS74I,QAAQ,GAAI84I,UAC3BhgG,QAAS73C,KAAK,GAAI4D,OAAQ5D,KAAK,IAC/B82C,QAASogG,WAAYn4I,QAAQ,GAAIo4I,eAEpC4yC,gBIgQjBD,CAAc7kM,KAAKs4K,SAAUulB,eAE7B79L,KAAK0hM,eAAejrL,WAChBolB,OAAQgiK,cAAc39F,YAAY0gG,aAClChlK,MAAOiiK,cAAc39F,YAAY2gG,cAGrC7gM,KAAK0hM,eAAer4B,SAASx1I,OAG7B4tK,0BAAazhM,KAAM69L,enD7RS,SAAvBkH,qBAAwBtoK,SACjC,IAAMmhK,cAAgBnhK,QAAQilK,eACxB35F,SAAW61F,cAAc9oB,aAAa,QAAQkwB,cAC9CpuD,YAAcn6G,QAAQuuD,cAAc27E,YAAYjzB,iBAAiB16I,MACjE+gC,gBAAkB4uD,6BAAa,IAAAhtE,OAAKiiL,cAAcqH,kBAAmBr0K,OAC3EgmH,YAAYnvG,KAAK,SAACi7B,MACdA,KAAK1jD,UAAU6kI,oBACXjiD,GAAI7nE,gBACJjR,WAAYi/E,amDuRhBg9F,CAAqB/kM,MnDnHU,SAA1BklM,wBAA2BzoK,SACpC,IAAIo1E,SAAW,EAET29B,MAAQ/yG,QAAQ+yG,aAEtB,WACI,IAAK,IAAIz3I,EAAI,EAAGA,EAAIy3I,MAAM9tI,OAAQ3J,IAC9B,IAAK,IAAIojB,EAAI,EAAGA,EAAIq0H,MAAMz3I,GAAG2J,OAAQyZ,IAAK,CACtC,IAAMgqL,YAAc31D,MAAMz3I,GAAGojB,GAAGq3F,eAAeZ,OAAOC,SACtD,GAAIszF,aAA+B,IAAhBA,YAEf,YADAtzF,SAAWszF,cAL3B,GAYItzF,UACA29B,MAAM1mI,QAAQ,SAAC0vF,MACXA,KAAK1vF,QAAQ,SAACmpD,MACVA,KAAKugD,cAAeZ,QAAUC,qBAC9B5/C,KAAK6/C,WAAW7/C,KAAK2pD,qBmDiG7BspF,CAAwBllM,4CAmBxB,OAAOA,KAAKgrF,cAAc27E,YAAYy+B,QAAQ,2CAkB9C,OAAOplM,KAAKgrF,cAAc27E,YAAYy+B,QAAQ,6DAkB9C,OADoBplM,KAAKgrF,cAAc27E,YACpBy+B,Q7EvTJ,iD6E2Tf,GAAIhgM,UAAO1D,OAAQ,CACf,IAAI1I,MAAKoM,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GAKT,MAJyB,iBAArBA,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,MACApM,MAAQ2vF,6BAAavjF,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,IAAYwrB,QAErC5wB,KAAKuhG,OAASvoG,MACPgH,KAEX,OAAOA,KAAKuhG,2DA1NK8jG,gBAAiBC,SAAUvB,oBAC5C,IAAM1xF,SAAW,IAAIyxF,OAAOC,oBAE5B,IAAK,IAAMzqM,OAAO+rM,gBACdhzF,SAAS/4G,KAAK+rM,gBAAgB/rM,MAIlC,OADA+4G,SAAShF,SAASi4F,UACXjzF,yDAWP,MAAO,uBCrLFkzF,YACTlwC,yBACA9S,mCAESijD,eACTpwC,2BACAnpD,cCTW,WACX,IAAM47B,IAAMgB,eACN48D,QACFjzL,IAAK,SAAAA,IAAClZ,IAAKslB,KAEP,OADAipH,IAAIvuI,KAAOslB,IACJ6mL,QAEX7sM,IAAK,SAAAA,MAAA,OAAMivI,MAEf,OAAO49D,wjBCuBX,IAAMC,eACAC,gBAAkBJ,WAElBK,4BAA8B,SAA9BA,4BAA+BC,iBAAkBx4F,UACnD,IAAK,IAAMh5E,QAAQwxK,iBACfx4F,SAAS76F,IAAI6hB,KAAMwxK,iBAAiBxxK,QA+BtCyxK,UAAO,SAAPA,OAAa,IAAAC,aAAAC,mBAEYn4H,2BAAelnE,aAF3B,GAERs/L,IAFQF,aAAA,GAEHG,YAFGH,aAAA,GAGT/hD,WAAavrJ,OAAOoU,UAAW04L,YAC/BY,wBAA0B1tM,OAAOoU,OAAO24L,eACxC/vC,wBAEN,IAAK,IAAMphI,QAAQ8xK,wBACf1wC,qBAAqBphI,MAAQ8xK,wBAAwB9xK,QAgEzD,OA5DA4xK,IAAIv/B,OAAS,WAET,IAAM0/B,SAAWF,YAAYt5K,YACvB85I,OAASo9B,cAAOuC,aAAaD,UAC/BpiD,sBACAyR,2CACDwwC,IAAIlC,sBAKP,OtW8xByB,SAA3BuC,yBAA4BC,iBAAkBC,oBAAqBC,kBACrEA,iBAAiB39L,QAAQ,SAAAiB,MAAI,OAAIw8L,iBAAiB74H,GAAG3jE,KAAM,SAAA+Z,OAAA,IAAIsrD,OAAJlF,eAAApmD,MAAA,aAAgB0iL,oBAAoBz8L,MAAMqlE,YsWjyBjGk3H,CAAyBJ,YAAax/B,OAAQjuK,OAAOqN,KAAKsgM,WAEnD1/B,QAIXu/B,IAAIlC,mBAAqB,WAIrB,OAHK2B,YAAYrrK,aACbqrK,YAAYrrK,WAAa,IAAIqsK,4BAAW,EAAG,UAG3CrsK,WAAYqrK,YAAYrrK,WACxBqoH,iBAAkB,IAAIt3D,oBAM9B66G,IAAIG,SAAW,kBAAMF,YAAYt5K,aAEjCq5K,IAAI54F,SAAW,WAAyB,QAAAjgC,KAAAhoE,UAAA1D,OAArBmkM,iBAAqB,IAAAh9L,MAAAukE,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAArBw4H,iBAAqBx4H,MAAAjoE,UAAAioE,MAEpC,GAAIw4H,iBAAiBnkM,OAAQ,CACzB,IAAK,IAAM2yB,SAAQwxK,iBACXxxK,SAAQsxK,kBACR3hD,WAAW3vH,OAAQwxK,iBAAiBxxK,QAG5C,OAAO4xK,IAEX,OAAOjiD,YAGXiiD,IAAI7wC,aAAe,WACf,IAAMA,aAAeK,qBAAqBL,aAC1C,OAAIhwJ,UAAiB1D,QACjBkkM,4BAA2BxgM,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GAAsBgwJ,cAC1C6wC,KAEJ7wC,aAAax8J,OAGxBqtM,IAAIh6F,cAAgB,WAChB,IAAMA,cAAgBwpD,qBAAqBxpD,cAC3C,OAAI7mG,UAAiB1D,QACjBkkM,4BAA2BxgM,UAAA1D,QAAA,OAAA4L,EAAAlI,UAAA,GAAsB6mG,eAC1Cg6F,KAEJh6F,cAAcrzG,OAGlBqtM,KAGLU,aACFj4G,yCACAk4G,WACI5qG,wCACAM,kDACAX,4BAIFkrG,YACFnyG,+CACAkyG,WACIxwG,0CACA6B,mDACAb,+CAIR0uG,UAAKjoM,UAAYA,oBACjBioM,UAAKvrM,QAAUusM,aAAIvsM,QACnBurM,UAAKa,YAAcA,YACnBb,UAAKh/B,YAAcA,YACnBg/B,UAAKr+D,aAAeA,kBACpBq+D,UAAKv4K,UAAYw5K,0BACjBjB,UAAKe,WAAaA,WAClBf,UAAKkB,OACDl9G,6CACAG,iCACArB,wBACAD,2CACA7oF,mDACAk4B,QtWk0CY,SAAVA,QAAWivK,WAAYC,eAAb,OACZliD,WAAY,SAAAA,WAACr8I,OACT,IAAMw+L,aAAex+L,MAAMs+L,YACrBpiD,OAASqiD,cAAc9rL,MAAM,EAAG8rL,cAAcxlM,OAAS,GACvDyd,GAAK+nL,cAAcA,cAAcxlM,OAAS,GAE1C0lM,KAAOviD,OAAO58I,IAAI,SAAAiC,KAAG,OAAIi9L,aAAaj9L,OAC5C,OACIiV,GAAIA,GAAE5X,WAAF,EAAAmiE,mBAAM09H,OACVviD,mBsWx0CGihD","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","export const GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivation, persistAncestorDerivation } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        persistDerivation(currentDM, DM_DERIVATIVES.COMPOSE, null, derivations);\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistAncestorDerivation(dm, currentDM);\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    persistAncestorDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n        persistAncestorDerivation(this, newDataModel);\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DM_DERIVATIVES } from './constants';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums, { DM_DERIVATIVES });\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n\n        newData.forEach((...params) => {\n            const key = this.idGetter ? this._idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, default as DataModel, DM_DERIVATIVES } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n\n            stateProps[prop] = conf.value;\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        time: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n\n            tickFormat\n        } = this.config();\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n\n        const smartTicks = newTickValues.map((val) => {\n            const text = tickFormat(val);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n\n        const { width, height } = this.smartTicks()[0];\n\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { spaceSetter, applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context, facetFields) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            }, indices, facetFields);\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, GROUP_BY_FUNCTIONS } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = [];\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        context.matrixInstance().value.each(cell => domains.push(cell.valueOf().getDataDomain()));\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        for (const key in domainProps) {\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const name = definition.name;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain.${this.metaInf().namespace}`);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    keys.forEach((rKeys) => {\n        rKeys.forEach((key, idx) => {\n            rKeys[idx] = formatterList[idx](key);\n        });\n    });\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context, facetFields);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    (label) => {\n        const textCell = new cells.TextCell({}, { labelManager });\n        textCell.source(label);\n        return textCell;\n    }, headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`);\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n                                    ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            // selectElement(this).style('height', `${height + borderWidth}px`);\n            // if (span > 1) {\n            // selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n            placeholder.setAvailableSpace(width, height * span);\n            // }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}