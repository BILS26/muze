{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","require","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","DimensionSubtype","CATEGORICAL","TEMPORAL","GEO","BINNED","MeasureSubtype","CONTINUOUS","FieldType","MEASURE","DIMENSION","FilteringMode","NORMAL","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","data","fieldStore","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","Value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","defSortFn","a1","b1","mergeSort","arr","sortFn","sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","next","idx","difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","ReducerStore","TypeError","defReducer","entries","_this","he","reducer","_this2","__unregister","delete","Function","reducerStore","ye","iterator","u","done","return","naturalJoinFilter","commonSchemaArr","retainTuple","union","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","Field","field_classCallCheck","subtype","displayName","Se","Dimension","_cachedDomain","calculateDataDomain","Categorical","hash","Set","domain","add","Temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","Binned","binsArr","bins","Measure","unit","defAggFn","numberFormat","Continuous","NEGATIVE_INFINITY","FieldParser","Ue","CategoricalParser","isInvalid","getInvalidType","trim","TemporalParser","temporal_parser_classCallCheck","_dtf","BinnedParser","matched","parseFloat","ContinuousParser","PartialField","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","qe","dataFormat","DSVArr","firstRowHeader","columns","columnMajor","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","at","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","I","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","dsv","tsv","DSVStr","fieldSeparator","d3Dsv","FlatJSON","insertionIndex","Auto","converters","resp","persistDerivation","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","cloneWithAllFields","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","filterPropagationModel","propModels","filterByMeasure","fns","dataObj","dataModel","propModel","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","select","fn","saveChild","cloneWithSelect","selectFn","selectConfig","cloneConfig","cloned","selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","updateData","relation","defaultConfig","converterFn","converter","lt","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","derivation","_selectionModel","params","groupByString","_rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","getPathToRootModel","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","Relation","relation_classCallCheck","source","_fieldStoreName","_propagationNameSpace","immutableActions","Ft","_fieldspace","updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","Dt","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","first","last","count","sd","std","Operators","compose","operations","currentDM","firstChild","dispose","bin","project","calculateVariable","naturalJoin","fullOuterJoin","Stats","enums","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_len","_key","_this5","_len2","_key2","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","nearestReducers","groupDerivation","getParent","filteredReducers","_len4","measureFieldNames","_key4","nearestSortingDetails","nearestSortDerivation","getAncestorDerivations","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","formatters","strategy_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","buildTooltipData","fieldValues","fieldspace","detailFields","containsDetailField","dataLen","dimensionMeasureMap","timeDiffs","defFormatter","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","formatTickValue","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","getGroupByData","rIdx","unitsArr","_loop2","cIdx","len2","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","newContext","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivation, persistAncestorDerivation } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        persistDerivation(currentDM, DM_DERIVATIVES.COMPOSE, null, derivations);\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistAncestorDerivation(dm, currentDM);\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    persistAncestorDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n        persistAncestorDerivation(this, newDataModel);\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.GROUPBY);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect, DataObject } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport { DimensionSubtype, FieldType, MeasureSubtype, DateTimeFormatter } from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType,\n    DataModel,\n    defaultValue\n} from 'muze-utils';\n\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n            defFormatter);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([icon, `${formattedKey}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value);\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([\n                            icon,\n                            {\n                                value: `${formattedKey}`,\n                                className: `${config.classPrefix}-tooltip-key`\n                            },\n                            {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }\n                        ]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    axis.tickFormat(axisTickFormatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n            this.scale().padding(padding);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp,\n    InvalidAwareTypes\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : yAxis.getScaleValue(0),\n                    y0: invalidY0 ? null : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain, nearestSortingDetails } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            });\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const sortingDetails = nearestSortingDetails(context.getGroupByData());\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        const typeOfField = field.subtype();\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND && !sortingDetails) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    domains[axisType][key].sort();\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, nearestSortingDetails } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR,\n    CATEGORICAL\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facet\n * @param {Array} keys Array of the facet field values\n */\nexport const sortFacetFields = (facet, keys) => {\n    const subtype = facet.subtype();\n    const sortingDetails = nearestSortingDetails(facet.data());\n\n    if (subtype === CATEGORICAL && !sortingDetails) {\n        keys.sort();\n    }\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues.sort()\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(rowFacets[0], firstLevelRowKeys);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(colFacets[0], firstLevelColumnKeys);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}